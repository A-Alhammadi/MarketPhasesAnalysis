2025-01-09 02:10:48,412 - DEBUG - Starting new HTTPS connection (1): en.wikipedia.org:443
2025-01-09 02:10:48,833 - DEBUG - https://en.wikipedia.org:443 "GET /wiki/List_of_S%26P_500_companies HTTP/1.1" 200 100530
2025-01-09 02:10:49,811 - INFO - Checking for missing data in DB, may fetch from Yahoo Finance...
2025-01-09 02:10:49,943 - DEBUG - Entering download()
2025-01-09 02:10:49,943 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:10:49,943 - DEBUG -  Entering history()
2025-01-09 02:10:49,949 - DEBUG - ('CREATE TABLE IF NOT EXISTS "_kv" ("key" VARCHAR(255) NOT NULL PRIMARY KEY, "value" VARCHAR(255)) WITHOUT ROWID', [])
2025-01-09 02:10:49,977 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MMM', 1, 0])
2025-01-09 02:10:51,608 - DEBUG -   Entering history()
2025-01-09 02:10:51,686 - DEBUG - MMM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:10:51,686 - DEBUG -    Entering get()
2025-01-09 02:10:51,686 - DEBUG -     Entering _make_request()
2025-01-09 02:10:51,686 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MMM
2025-01-09 02:10:51,686 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:10:51,686 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:10:51,686 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:10:51,686 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:10:51,728 - DEBUG - ('CREATE TABLE IF NOT EXISTS "_cookieschema" ("strategy" VARCHAR(255) NOT NULL PRIMARY KEY, "fetch_date" DATETIME NOT NULL, "cookie_bytes" BLOB NOT NULL) WITHOUT ROWID', [])
2025-01-09 02:10:51,754 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['basic', 1, 0])
2025-01-09 02:10:51,758 - DEBUG - loaded persistent cookie
2025-01-09 02:10:51,758 - DEBUG - reusing cookie
2025-01-09 02:10:51,760 - DEBUG - Starting new HTTPS connection (1): query1.finance.yahoo.com:443
2025-01-09 02:10:52,191 - DEBUG - https://query1.finance.yahoo.com:443 "GET /v1/test/getcrumb HTTP/1.1" 200 11
2025-01-09 02:10:52,198 - DEBUG - crumb = 'mbrlfmeSllh'
2025-01-09 02:10:52,199 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:10:52,199 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:10:52,200 - DEBUG - Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2025-01-09 02:10:52,738 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MMM?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1001
2025-01-09 02:10:52,750 - DEBUG - response code=200
2025-01-09 02:10:52,750 - DEBUG -     Exiting _make_request()
2025-01-09 02:10:52,750 - DEBUG -    Exiting get()
2025-01-09 02:10:52,761 - ERROR - 
1 Failed download:
2025-01-09 02:10:52,761 - ERROR - ['MMM']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:10:52,761 - DEBUG - ['MMM']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:10:52,775 - DEBUG - Exiting download()
2025-01-09 02:10:52,973 - ERROR - Error writing data for MMM to DB: schema "np" does not exist
LINE 4:             VALUES ('MMM','2020-01-02'::date,np.float64(121....
                                                     ^

2025-01-09 02:10:52,975 - DEBUG - Entering download()
2025-01-09 02:10:52,976 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:10:52,977 - DEBUG -  Entering history()
2025-01-09 02:10:52,978 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AOS', 1, 0])
2025-01-09 02:10:52,979 - DEBUG -   Entering history()
2025-01-09 02:10:52,980 - DEBUG - AOS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:10:52,980 - DEBUG -    Entering get()
2025-01-09 02:10:52,980 - DEBUG -     Entering _make_request()
2025-01-09 02:10:52,980 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AOS
2025-01-09 02:10:52,980 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:10:52,980 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:10:52,980 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:10:52,980 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:10:52,980 - DEBUG - reusing cookie
2025-01-09 02:10:52,981 - DEBUG - reusing crumb
2025-01-09 02:10:52,981 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:10:52,981 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:10:53,160 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AOS?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1019
2025-01-09 02:10:53,161 - DEBUG - response code=200
2025-01-09 02:10:53,161 - DEBUG -     Exiting _make_request()
2025-01-09 02:10:53,161 - DEBUG -    Exiting get()
2025-01-09 02:10:53,166 - ERROR - 
1 Failed download:
2025-01-09 02:10:53,166 - ERROR - ['AOS']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:10:53,167 - DEBUG - ['AOS']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:10:53,170 - DEBUG - Exiting download()
2025-01-09 02:10:53,170 - WARNING - Ticker AOS is missing 'Close' column. Skipping.
2025-01-09 02:10:53,171 - DEBUG - Entering download()
2025-01-09 02:10:53,171 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:10:53,171 - DEBUG -  Entering history()
2025-01-09 02:10:53,171 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ABT', 1, 0])
2025-01-09 02:10:53,172 - DEBUG -   Entering history()
2025-01-09 02:10:53,173 - DEBUG - ABT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:10:53,173 - DEBUG -    Entering get()
2025-01-09 02:10:53,173 - DEBUG -     Entering _make_request()
2025-01-09 02:10:53,173 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ABT
2025-01-09 02:10:53,174 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:10:53,174 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:10:53,174 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:10:53,174 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:10:53,174 - DEBUG - reusing cookie
2025-01-09 02:10:53,174 - DEBUG - reusing crumb
2025-01-09 02:10:53,174 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:10:53,174 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:10:53,359 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ABT?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1015
2025-01-09 02:10:53,372 - DEBUG - response code=200
2025-01-09 02:10:53,372 - DEBUG -     Exiting _make_request()
2025-01-09 02:10:53,372 - DEBUG -    Exiting get()
2025-01-09 02:10:53,379 - ERROR - 
1 Failed download:
2025-01-09 02:10:53,379 - ERROR - ['ABT']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:10:53,379 - DEBUG - ['ABT']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:10:53,383 - DEBUG - Exiting download()
2025-01-09 02:10:53,606 - ERROR - Error writing data for ABT to DB: schema "np" does not exist
LINE 4:             VALUES ('ABT','2020-01-02'::date,np.float64(78.8...
                                                     ^

2025-01-09 02:10:53,610 - DEBUG - Entering download()
2025-01-09 02:10:53,610 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:10:53,610 - DEBUG -  Entering history()
2025-01-09 02:10:53,610 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ABBV', 1, 0])
2025-01-09 02:10:53,611 - DEBUG -   Entering history()
2025-01-09 02:10:53,612 - DEBUG - ABBV: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:10:53,612 - DEBUG -    Entering get()
2025-01-09 02:10:53,612 - DEBUG -     Entering _make_request()
2025-01-09 02:10:53,613 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ABBV
2025-01-09 02:10:53,613 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:10:53,613 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:10:53,613 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:10:53,613 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:10:53,613 - DEBUG - reusing cookie
2025-01-09 02:10:53,613 - DEBUG - reusing crumb
2025-01-09 02:10:53,613 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:10:53,613 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:10:53,782 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ABBV?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1001
2025-01-09 02:10:53,788 - DEBUG - response code=200
2025-01-09 02:10:53,788 - DEBUG -     Exiting _make_request()
2025-01-09 02:10:53,788 - DEBUG -    Exiting get()
2025-01-09 02:10:53,791 - ERROR - 
1 Failed download:
2025-01-09 02:10:53,791 - ERROR - ['ABBV']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:10:53,791 - DEBUG - ['ABBV']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:10:53,795 - DEBUG - Exiting download()
2025-01-09 02:10:53,795 - WARNING - Ticker ABBV is missing 'Close' column. Skipping.
2025-01-09 02:10:53,795 - DEBUG - Entering download()
2025-01-09 02:10:53,795 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:10:53,795 - DEBUG -  Entering history()
2025-01-09 02:10:53,796 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ACN', 1, 0])
2025-01-09 02:10:53,796 - DEBUG -   Entering history()
2025-01-09 02:10:53,797 - DEBUG - ACN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:10:53,797 - DEBUG -    Entering get()
2025-01-09 02:10:53,797 - DEBUG -     Entering _make_request()
2025-01-09 02:10:53,797 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ACN
2025-01-09 02:10:53,798 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:10:53,798 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:10:53,798 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:10:53,798 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:10:53,798 - DEBUG - reusing cookie
2025-01-09 02:10:53,798 - DEBUG - reusing crumb
2025-01-09 02:10:53,798 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:10:53,798 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:10:53,987 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ACN?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1007
2025-01-09 02:10:53,991 - DEBUG - response code=200
2025-01-09 02:10:53,991 - DEBUG -     Exiting _make_request()
2025-01-09 02:10:53,991 - DEBUG -    Exiting get()
2025-01-09 02:10:53,995 - ERROR - 
1 Failed download:
2025-01-09 02:10:53,995 - ERROR - ['ACN']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:10:53,995 - DEBUG - ['ACN']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:10:53,998 - DEBUG - Exiting download()
2025-01-09 02:10:53,999 - WARNING - Ticker ACN is missing 'Close' column. Skipping.
2025-01-09 02:10:53,999 - DEBUG - Entering download()
2025-01-09 02:10:53,999 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:10:53,999 - DEBUG -  Entering history()
2025-01-09 02:10:54,000 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ADBE', 1, 0])
2025-01-09 02:10:54,000 - DEBUG -   Entering history()
2025-01-09 02:10:54,001 - DEBUG - ADBE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:10:54,001 - DEBUG -    Entering get()
2025-01-09 02:10:54,001 - DEBUG -     Entering _make_request()
2025-01-09 02:10:54,001 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ADBE
2025-01-09 02:10:54,001 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:10:54,002 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:10:54,002 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:10:54,002 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:10:54,002 - DEBUG - reusing cookie
2025-01-09 02:10:54,002 - DEBUG - reusing crumb
2025-01-09 02:10:54,002 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:10:54,002 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:10:54,170 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ADBE?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1004
2025-01-09 02:10:54,175 - DEBUG - response code=200
2025-01-09 02:10:54,176 - DEBUG -     Exiting _make_request()
2025-01-09 02:10:54,176 - DEBUG -    Exiting get()
2025-01-09 02:10:54,178 - ERROR - 
1 Failed download:
2025-01-09 02:10:54,178 - ERROR - ['ADBE']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:10:54,178 - DEBUG - ['ADBE']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:10:54,182 - DEBUG - Exiting download()
2025-01-09 02:10:54,393 - ERROR - Error writing data for ADBE to DB: schema "np" does not exist
LINE 4:             VALUES ('ADBE','2020-01-02'::date,np.float64(330...
                                                      ^

2025-01-09 02:10:54,399 - DEBUG - Entering download()
2025-01-09 02:10:54,399 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:10:54,401 - DEBUG -  Entering history()
2025-01-09 02:10:54,402 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AMD', 1, 0])
2025-01-09 02:10:54,402 - DEBUG -   Entering history()
2025-01-09 02:10:54,403 - DEBUG - AMD: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:10:54,404 - DEBUG -    Entering get()
2025-01-09 02:10:54,404 - DEBUG -     Entering _make_request()
2025-01-09 02:10:54,404 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AMD
2025-01-09 02:10:54,404 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:10:54,404 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:10:54,404 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:10:54,404 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:10:54,404 - DEBUG - reusing cookie
2025-01-09 02:10:54,404 - DEBUG - reusing crumb
2025-01-09 02:10:54,404 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:10:54,404 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:10:54,559 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AMD?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1036
2025-01-09 02:10:54,597 - DEBUG - response code=200
2025-01-09 02:10:54,597 - DEBUG -     Exiting _make_request()
2025-01-09 02:10:54,597 - DEBUG -    Exiting get()
2025-01-09 02:10:54,609 - ERROR - 
1 Failed download:
2025-01-09 02:10:54,609 - ERROR - ['AMD']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:10:54,609 - DEBUG - ['AMD']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:10:54,613 - DEBUG - Exiting download()
2025-01-09 02:10:54,613 - WARNING - Ticker AMD is missing 'Close' column. Skipping.
2025-01-09 02:10:54,614 - DEBUG - Entering download()
2025-01-09 02:10:54,614 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:10:54,614 - DEBUG -  Entering history()
2025-01-09 02:10:54,614 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AES', 1, 0])
2025-01-09 02:10:54,615 - DEBUG -   Entering history()
2025-01-09 02:10:54,616 - DEBUG - AES: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:10:54,616 - DEBUG -    Entering get()
2025-01-09 02:10:54,616 - DEBUG -     Entering _make_request()
2025-01-09 02:10:54,616 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AES
2025-01-09 02:10:54,616 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:10:54,617 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:10:54,617 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:10:54,617 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:10:54,617 - DEBUG - reusing cookie
2025-01-09 02:10:54,617 - DEBUG - reusing crumb
2025-01-09 02:10:54,617 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:10:54,617 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:10:54,787 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AES?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1010
2025-01-09 02:10:54,787 - DEBUG - response code=200
2025-01-09 02:10:54,787 - DEBUG -     Exiting _make_request()
2025-01-09 02:10:54,787 - DEBUG -    Exiting get()
2025-01-09 02:10:54,790 - ERROR - 
1 Failed download:
2025-01-09 02:10:54,790 - ERROR - ['AES']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:10:54,790 - DEBUG - ['AES']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:10:54,793 - DEBUG - Exiting download()
2025-01-09 02:10:54,794 - WARNING - Ticker AES is missing 'Close' column. Skipping.
2025-01-09 02:10:54,794 - DEBUG - Entering download()
2025-01-09 02:10:54,794 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:10:54,794 - DEBUG -  Entering history()
2025-01-09 02:10:54,794 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AFL', 1, 0])
2025-01-09 02:10:54,795 - DEBUG -   Entering history()
2025-01-09 02:10:54,796 - DEBUG - AFL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:10:54,796 - DEBUG -    Entering get()
2025-01-09 02:10:54,796 - DEBUG -     Entering _make_request()
2025-01-09 02:10:54,796 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AFL
2025-01-09 02:10:54,796 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:10:54,796 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:10:54,796 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:10:54,796 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:10:54,796 - DEBUG - reusing cookie
2025-01-09 02:10:54,796 - DEBUG - reusing crumb
2025-01-09 02:10:54,796 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:10:54,797 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:10:55,004 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AFL?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1012
2025-01-09 02:10:55,017 - DEBUG - response code=200
2025-01-09 02:10:55,019 - DEBUG -     Exiting _make_request()
2025-01-09 02:10:55,019 - DEBUG -    Exiting get()
2025-01-09 02:10:55,024 - ERROR - 
1 Failed download:
2025-01-09 02:10:55,025 - ERROR - ['AFL']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:10:55,025 - DEBUG - ['AFL']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:10:55,029 - DEBUG - Exiting download()
2025-01-09 02:10:55,212 - ERROR - Error writing data for AFL to DB: schema "np" does not exist
LINE 4:             VALUES ('AFL','2020-01-02'::date,np.float64(46.9...
                                                     ^

2025-01-09 02:10:55,232 - DEBUG - Entering download()
2025-01-09 02:10:55,234 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:10:55,234 - DEBUG -  Entering history()
2025-01-09 02:10:55,235 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['A', 1, 0])
2025-01-09 02:10:55,235 - DEBUG -   Entering history()
2025-01-09 02:10:55,236 - DEBUG - A: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:10:55,236 - DEBUG -    Entering get()
2025-01-09 02:10:55,236 - DEBUG -     Entering _make_request()
2025-01-09 02:10:55,236 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/A
2025-01-09 02:10:55,236 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:10:55,236 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:10:55,237 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:10:55,237 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:10:55,237 - DEBUG - reusing cookie
2025-01-09 02:10:55,237 - DEBUG - reusing crumb
2025-01-09 02:10:55,237 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:10:55,237 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:10:55,379 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/A?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1027
2025-01-09 02:10:55,380 - DEBUG - response code=200
2025-01-09 02:10:55,380 - DEBUG -     Exiting _make_request()
2025-01-09 02:10:55,380 - DEBUG -    Exiting get()
2025-01-09 02:10:55,405 - ERROR - 
1 Failed download:
2025-01-09 02:10:55,405 - ERROR - ['A']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:10:55,405 - DEBUG - ['A']: Traceback (most recent call last):
  File "C:\Users\haman\%ticker%ppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\%ticker%ppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\%ticker%ppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\%ticker%ppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\%ticker%ppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:10:55,408 - DEBUG - Exiting download()
2025-01-09 02:10:55,409 - WARNING - Ticker A is missing 'Close' column. Skipping.
2025-01-09 02:10:55,409 - DEBUG - Entering download()
2025-01-09 02:10:55,409 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:10:55,409 - DEBUG -  Entering history()
2025-01-09 02:10:55,410 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['APD', 1, 0])
2025-01-09 02:10:55,410 - DEBUG -   Entering history()
2025-01-09 02:10:55,411 - DEBUG - APD: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:10:55,412 - DEBUG -    Entering get()
2025-01-09 02:10:55,413 - DEBUG -     Entering _make_request()
2025-01-09 02:10:55,414 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/APD
2025-01-09 02:10:55,414 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:10:55,414 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:10:55,414 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:10:55,415 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:10:55,415 - DEBUG - reusing cookie
2025-01-09 02:10:55,415 - DEBUG - reusing crumb
2025-01-09 02:10:55,415 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:10:55,415 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:10:55,601 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/APD?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1041
2025-01-09 02:10:55,605 - DEBUG - response code=200
2025-01-09 02:10:55,605 - DEBUG -     Exiting _make_request()
2025-01-09 02:10:55,605 - DEBUG -    Exiting get()
2025-01-09 02:10:55,630 - ERROR - 
1 Failed download:
2025-01-09 02:10:55,631 - ERROR - ['APD']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:10:55,631 - DEBUG - ['APD']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:10:55,634 - DEBUG - Exiting download()
2025-01-09 02:10:55,636 - WARNING - Ticker APD is missing 'Close' column. Skipping.
2025-01-09 02:10:55,636 - DEBUG - Entering download()
2025-01-09 02:10:55,636 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:10:55,637 - DEBUG -  Entering history()
2025-01-09 02:10:55,637 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ABNB', 1, 0])
2025-01-09 02:10:55,637 - DEBUG -   Entering history()
2025-01-09 02:10:55,638 - DEBUG - ABNB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:10:55,638 - DEBUG -    Entering get()
2025-01-09 02:10:55,638 - DEBUG -     Entering _make_request()
2025-01-09 02:10:55,638 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ABNB
2025-01-09 02:10:55,639 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:10:55,639 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:10:55,639 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:10:55,639 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:10:55,639 - DEBUG - reusing cookie
2025-01-09 02:10:55,639 - DEBUG - reusing crumb
2025-01-09 02:10:55,639 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:10:55,640 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:10:55,820 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ABNB?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:10:55,831 - DEBUG - response code=400
2025-01-09 02:10:55,833 - DEBUG - toggling cookie strategy basic -> csrf
2025-01-09 02:10:55,833 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:10:55,834 - DEBUG - cookie_mode = 'csrf'
2025-01-09 02:10:55,834 - DEBUG -       Entering _get_crumb_csrf()
2025-01-09 02:10:55,834 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['csrf', 1, 0])
2025-01-09 02:10:55,835 - DEBUG - Starting new HTTPS connection (1): guce.yahoo.com:443
2025-01-09 02:10:56,588 - DEBUG - https://guce.yahoo.com:443 "GET /consent HTTP/1.1" 302 0
2025-01-09 02:10:56,594 - DEBUG - Starting new HTTPS connection (1): www.yahoo.com:443
2025-01-09 02:10:57,232 - DEBUG - https://www.yahoo.com:443 "GET /?guccounter=1 HTTP/1.1" 200 None
2025-01-09 02:10:57,769 - DEBUG - Failed to find "csrfToken" in response
2025-01-09 02:10:57,770 - DEBUG -       Exiting _get_crumb_csrf()
2025-01-09 02:10:57,770 - DEBUG - toggling cookie strategy csrf -> basic
2025-01-09 02:10:57,770 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:10:57,770 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['basic', 1, 0])
2025-01-09 02:10:57,771 - DEBUG - loaded persistent cookie
2025-01-09 02:10:57,771 - DEBUG - reusing cookie
2025-01-09 02:10:57,932 - DEBUG - https://query1.finance.yahoo.com:443 "GET /v1/test/getcrumb HTTP/1.1" 200 11
2025-01-09 02:10:57,962 - DEBUG - crumb = 'mbrlfmeSllh'
2025-01-09 02:10:57,970 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:10:57,972 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:10:58,116 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ABNB?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:10:58,117 - DEBUG - response code=400
2025-01-09 02:10:58,117 - DEBUG -     Exiting _make_request()
2025-01-09 02:10:58,117 - DEBUG -    Exiting get()
2025-01-09 02:10:58,120 - ERROR - 
1 Failed download:
2025-01-09 02:10:58,120 - ERROR - ['ABNB']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn\'t exist for startDate = 1577854800, endDate = 1577941200")')
2025-01-09 02:10:58,121 - DEBUG - ['ABNB']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn't exist for startDate = 1577854800, endDate = 1577941200")

2025-01-09 02:10:58,124 - DEBUG - Exiting download()
2025-01-09 02:10:58,404 - ERROR - Error writing data for ABNB to DB: schema "np" does not exist
LINE 4:             VALUES ('ABNB','2020-12-10'::date,np.float64(146...
                                                      ^

2025-01-09 02:10:58,406 - DEBUG - Entering download()
2025-01-09 02:10:58,408 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:10:58,409 - DEBUG -  Entering history()
2025-01-09 02:10:58,409 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AKAM', 1, 0])
2025-01-09 02:10:58,410 - DEBUG -   Entering history()
2025-01-09 02:10:58,411 - DEBUG - AKAM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:10:58,411 - DEBUG -    Entering get()
2025-01-09 02:10:58,411 - DEBUG -     Entering _make_request()
2025-01-09 02:10:58,411 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AKAM
2025-01-09 02:10:58,411 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:10:58,411 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:10:58,411 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:10:58,412 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:10:58,412 - DEBUG - reusing cookie
2025-01-09 02:10:58,412 - DEBUG - reusing crumb
2025-01-09 02:10:58,412 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:10:58,412 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:10:58,556 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AKAM?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1027
2025-01-09 02:10:58,586 - DEBUG - response code=200
2025-01-09 02:10:58,588 - DEBUG -     Exiting _make_request()
2025-01-09 02:10:58,589 - DEBUG -    Exiting get()
2025-01-09 02:10:58,592 - ERROR - 
1 Failed download:
2025-01-09 02:10:58,592 - ERROR - ['AKAM']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:10:58,592 - DEBUG - ['AKAM']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:10:58,596 - DEBUG - Exiting download()
2025-01-09 02:10:58,781 - ERROR - Error writing data for AKAM to DB: schema "np" does not exist
LINE 4:             VALUES ('AKAM','2020-01-02'::date,np.float64(86....
                                                      ^

2025-01-09 02:10:58,783 - DEBUG - Entering download()
2025-01-09 02:10:58,784 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:10:58,784 - DEBUG -  Entering history()
2025-01-09 02:10:58,784 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ALB', 1, 0])
2025-01-09 02:10:58,784 - DEBUG -   Entering history()
2025-01-09 02:10:58,785 - DEBUG - ALB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:10:58,785 - DEBUG -    Entering get()
2025-01-09 02:10:58,785 - DEBUG -     Entering _make_request()
2025-01-09 02:10:58,785 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ALB
2025-01-09 02:10:58,785 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:10:58,785 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:10:58,785 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:10:58,785 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:10:58,785 - DEBUG - reusing cookie
2025-01-09 02:10:58,785 - DEBUG - reusing crumb
2025-01-09 02:10:58,786 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:10:58,786 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:10:58,968 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ALB?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1017
2025-01-09 02:10:58,969 - DEBUG - response code=200
2025-01-09 02:10:58,969 - DEBUG -     Exiting _make_request()
2025-01-09 02:10:58,969 - DEBUG -    Exiting get()
2025-01-09 02:10:58,976 - ERROR - 
1 Failed download:
2025-01-09 02:10:58,977 - ERROR - ['ALB']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:10:58,977 - DEBUG - ['ALB']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:10:58,986 - DEBUG - Exiting download()
2025-01-09 02:10:58,986 - WARNING - Ticker ALB is missing 'Close' column. Skipping.
2025-01-09 02:10:58,987 - DEBUG - Entering download()
2025-01-09 02:10:58,987 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:10:58,987 - DEBUG -  Entering history()
2025-01-09 02:10:58,988 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ARE', 1, 0])
2025-01-09 02:10:58,989 - DEBUG -   Entering history()
2025-01-09 02:10:58,991 - DEBUG - ARE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:10:58,992 - DEBUG -    Entering get()
2025-01-09 02:10:58,992 - DEBUG -     Entering _make_request()
2025-01-09 02:10:58,993 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ARE
2025-01-09 02:10:58,993 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:10:58,993 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:10:58,993 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:10:58,993 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:10:58,994 - DEBUG - reusing cookie
2025-01-09 02:10:58,994 - DEBUG - reusing crumb
2025-01-09 02:10:58,994 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:10:58,994 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:10:59,154 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ARE?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1043
2025-01-09 02:10:59,156 - DEBUG - response code=200
2025-01-09 02:10:59,156 - DEBUG -     Exiting _make_request()
2025-01-09 02:10:59,156 - DEBUG -    Exiting get()
2025-01-09 02:10:59,164 - ERROR - 
1 Failed download:
2025-01-09 02:10:59,164 - ERROR - ['ARE']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:10:59,164 - DEBUG - ['ARE']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:10:59,173 - DEBUG - Exiting download()
2025-01-09 02:10:59,416 - ERROR - Error writing data for ARE to DB: schema "np" does not exist
LINE 4:             VALUES ('ARE','2020-01-02'::date,np.float64(136....
                                                     ^

2025-01-09 02:10:59,416 - DEBUG - Entering download()
2025-01-09 02:10:59,416 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:10:59,417 - DEBUG -  Entering history()
2025-01-09 02:10:59,417 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ALGN', 1, 0])
2025-01-09 02:10:59,417 - DEBUG -   Entering history()
2025-01-09 02:10:59,418 - DEBUG - ALGN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:10:59,418 - DEBUG -    Entering get()
2025-01-09 02:10:59,418 - DEBUG -     Entering _make_request()
2025-01-09 02:10:59,418 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ALGN
2025-01-09 02:10:59,418 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:10:59,418 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:10:59,418 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:10:59,418 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:10:59,419 - DEBUG - reusing cookie
2025-01-09 02:10:59,419 - DEBUG - reusing crumb
2025-01-09 02:10:59,419 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:10:59,419 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:10:59,550 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ALGN?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1026
2025-01-09 02:10:59,551 - DEBUG - response code=200
2025-01-09 02:10:59,551 - DEBUG -     Exiting _make_request()
2025-01-09 02:10:59,551 - DEBUG -    Exiting get()
2025-01-09 02:10:59,555 - ERROR - 
1 Failed download:
2025-01-09 02:10:59,555 - ERROR - ['ALGN']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:10:59,556 - DEBUG - ['ALGN']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:10:59,560 - DEBUG - Exiting download()
2025-01-09 02:10:59,560 - WARNING - Ticker ALGN is missing 'Close' column. Skipping.
2025-01-09 02:10:59,561 - DEBUG - Entering download()
2025-01-09 02:10:59,561 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:10:59,561 - DEBUG -  Entering history()
2025-01-09 02:10:59,562 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ALLE', 1, 0])
2025-01-09 02:10:59,562 - DEBUG -   Entering history()
2025-01-09 02:10:59,564 - DEBUG - ALLE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:10:59,564 - DEBUG -    Entering get()
2025-01-09 02:10:59,564 - DEBUG -     Entering _make_request()
2025-01-09 02:10:59,564 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ALLE
2025-01-09 02:10:59,564 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:10:59,564 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:10:59,565 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:10:59,565 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:10:59,565 - DEBUG - reusing cookie
2025-01-09 02:10:59,565 - DEBUG - reusing crumb
2025-01-09 02:10:59,565 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:10:59,565 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:10:59,708 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ALLE?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1003
2025-01-09 02:10:59,709 - DEBUG - response code=200
2025-01-09 02:10:59,709 - DEBUG -     Exiting _make_request()
2025-01-09 02:10:59,709 - DEBUG -    Exiting get()
2025-01-09 02:10:59,716 - ERROR - 
1 Failed download:
2025-01-09 02:10:59,716 - ERROR - ['ALLE']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:10:59,716 - DEBUG - ['ALLE']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:10:59,721 - DEBUG - Exiting download()
2025-01-09 02:10:59,722 - WARNING - Ticker ALLE is missing 'Close' column. Skipping.
2025-01-09 02:10:59,722 - DEBUG - Entering download()
2025-01-09 02:10:59,722 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:10:59,722 - DEBUG -  Entering history()
2025-01-09 02:10:59,723 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LNT', 1, 0])
2025-01-09 02:10:59,723 - DEBUG -   Entering history()
2025-01-09 02:10:59,725 - DEBUG - LNT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:10:59,725 - DEBUG -    Entering get()
2025-01-09 02:10:59,725 - DEBUG -     Entering _make_request()
2025-01-09 02:10:59,725 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LNT
2025-01-09 02:10:59,725 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:10:59,726 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:10:59,726 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:10:59,726 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:10:59,726 - DEBUG - reusing cookie
2025-01-09 02:10:59,726 - DEBUG - reusing crumb
2025-01-09 02:10:59,726 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:10:59,726 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:10:59,909 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LNT?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1026
2025-01-09 02:10:59,910 - DEBUG - response code=200
2025-01-09 02:10:59,910 - DEBUG -     Exiting _make_request()
2025-01-09 02:10:59,910 - DEBUG -    Exiting get()
2025-01-09 02:10:59,912 - ERROR - 
1 Failed download:
2025-01-09 02:10:59,912 - ERROR - ['LNT']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:10:59,912 - DEBUG - ['LNT']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:10:59,914 - DEBUG - Exiting download()
2025-01-09 02:10:59,915 - WARNING - Ticker LNT is missing 'Close' column. Skipping.
2025-01-09 02:10:59,915 - DEBUG - Entering download()
2025-01-09 02:10:59,915 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:10:59,915 - DEBUG -  Entering history()
2025-01-09 02:10:59,915 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ALL', 1, 0])
2025-01-09 02:10:59,915 - DEBUG -   Entering history()
2025-01-09 02:10:59,916 - DEBUG - ALL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:10:59,916 - DEBUG -    Entering get()
2025-01-09 02:10:59,916 - DEBUG -     Entering _make_request()
2025-01-09 02:10:59,916 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ALL
2025-01-09 02:10:59,916 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:10:59,916 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:10:59,916 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:10:59,916 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:10:59,917 - DEBUG - reusing cookie
2025-01-09 02:10:59,917 - DEBUG - reusing crumb
2025-01-09 02:10:59,917 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:10:59,917 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:00,104 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ALL?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1028
2025-01-09 02:11:00,105 - DEBUG - response code=200
2025-01-09 02:11:00,106 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:00,106 - DEBUG -    Exiting get()
2025-01-09 02:11:00,111 - ERROR - 
1 Failed download:
2025-01-09 02:11:00,111 - ERROR - ['ALL']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:00,112 - DEBUG - ['ALL']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:00,118 - DEBUG - Exiting download()
2025-01-09 02:11:00,119 - WARNING - Ticker ALL is missing 'Close' column. Skipping.
2025-01-09 02:11:00,119 - DEBUG - Entering download()
2025-01-09 02:11:00,119 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:00,120 - DEBUG -  Entering history()
2025-01-09 02:11:00,120 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GOOGL', 1, 0])
2025-01-09 02:11:00,121 - DEBUG -   Entering history()
2025-01-09 02:11:00,122 - DEBUG - GOOGL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:00,123 - DEBUG -    Entering get()
2025-01-09 02:11:00,123 - DEBUG -     Entering _make_request()
2025-01-09 02:11:00,123 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GOOGL
2025-01-09 02:11:00,123 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:00,123 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:00,123 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:00,124 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:00,124 - DEBUG - reusing cookie
2025-01-09 02:11:00,124 - DEBUG - reusing crumb
2025-01-09 02:11:00,124 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:00,124 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:00,252 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GOOGL?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1013
2025-01-09 02:11:00,253 - DEBUG - response code=200
2025-01-09 02:11:00,254 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:00,254 - DEBUG -    Exiting get()
2025-01-09 02:11:00,260 - ERROR - 
1 Failed download:
2025-01-09 02:11:00,260 - ERROR - ['GOOGL']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:00,260 - DEBUG - ['GOOGL']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:00,268 - DEBUG - Exiting download()
2025-01-09 02:11:00,530 - ERROR - Error writing data for GOOGL to DB: schema "np" does not exist
LINE 4:             VALUES ('GOOGL','2020-01-02'::date,np.float64(67...
                                                       ^

2025-01-09 02:11:00,531 - DEBUG - Entering download()
2025-01-09 02:11:00,531 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:00,531 - DEBUG -  Entering history()
2025-01-09 02:11:00,531 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GOOG', 1, 0])
2025-01-09 02:11:00,531 - DEBUG -   Entering history()
2025-01-09 02:11:00,532 - DEBUG - GOOG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:00,532 - DEBUG -    Entering get()
2025-01-09 02:11:00,532 - DEBUG -     Entering _make_request()
2025-01-09 02:11:00,532 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GOOG
2025-01-09 02:11:00,532 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:00,532 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:00,532 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:00,532 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:00,532 - DEBUG - reusing cookie
2025-01-09 02:11:00,532 - DEBUG - reusing crumb
2025-01-09 02:11:00,533 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:00,533 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:00,659 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GOOG?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1012
2025-01-09 02:11:00,659 - DEBUG - response code=200
2025-01-09 02:11:00,660 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:00,660 - DEBUG -    Exiting get()
2025-01-09 02:11:00,664 - ERROR - 
1 Failed download:
2025-01-09 02:11:00,664 - ERROR - ['GOOG']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:00,664 - DEBUG - ['GOOG']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:00,669 - DEBUG - Exiting download()
2025-01-09 02:11:00,795 - ERROR - Error writing data for GOOG to DB: schema "np" does not exist
LINE 4:             VALUES ('GOOG','2020-01-02'::date,np.float64(66....
                                                      ^

2025-01-09 02:11:00,795 - DEBUG - Entering download()
2025-01-09 02:11:00,796 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:00,796 - DEBUG -  Entering history()
2025-01-09 02:11:00,796 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MO', 1, 0])
2025-01-09 02:11:00,796 - DEBUG -   Entering history()
2025-01-09 02:11:00,797 - DEBUG - MO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:00,797 - DEBUG -    Entering get()
2025-01-09 02:11:00,797 - DEBUG -     Entering _make_request()
2025-01-09 02:11:00,797 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MO
2025-01-09 02:11:00,797 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:00,797 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:00,797 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:00,797 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:00,797 - DEBUG - reusing cookie
2025-01-09 02:11:00,797 - DEBUG - reusing crumb
2025-01-09 02:11:00,797 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:00,798 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:01,003 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MO?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1010
2025-01-09 02:11:01,004 - DEBUG - response code=200
2025-01-09 02:11:01,005 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:01,005 - DEBUG -    Exiting get()
2025-01-09 02:11:01,011 - ERROR - 
1 Failed download:
2025-01-09 02:11:01,011 - ERROR - ['MO']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:01,011 - DEBUG - ['MO']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:01,018 - DEBUG - Exiting download()
2025-01-09 02:11:01,132 - ERROR - Error writing data for MO to DB: schema "np" does not exist
LINE 4:             VALUES ('MO','2020-01-02'::date,np.float64(33.33...
                                                    ^

2025-01-09 02:11:01,132 - DEBUG - Entering download()
2025-01-09 02:11:01,132 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:01,133 - DEBUG -  Entering history()
2025-01-09 02:11:01,133 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AMZN', 1, 0])
2025-01-09 02:11:01,133 - DEBUG -   Entering history()
2025-01-09 02:11:01,134 - DEBUG - AMZN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:01,134 - DEBUG -    Entering get()
2025-01-09 02:11:01,134 - DEBUG -     Entering _make_request()
2025-01-09 02:11:01,134 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AMZN
2025-01-09 02:11:01,134 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:01,134 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:01,134 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:01,134 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:01,134 - DEBUG - reusing cookie
2025-01-09 02:11:01,134 - DEBUG - reusing crumb
2025-01-09 02:11:01,134 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:01,134 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:01,318 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AMZN?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1015
2025-01-09 02:11:01,319 - DEBUG - response code=200
2025-01-09 02:11:01,319 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:01,320 - DEBUG -    Exiting get()
2025-01-09 02:11:01,325 - ERROR - 
1 Failed download:
2025-01-09 02:11:01,326 - ERROR - ['AMZN']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:01,326 - DEBUG - ['AMZN']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:01,333 - DEBUG - Exiting download()
2025-01-09 02:11:01,333 - WARNING - Ticker AMZN is missing 'Close' column. Skipping.
2025-01-09 02:11:01,334 - DEBUG - Entering download()
2025-01-09 02:11:01,334 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:01,334 - DEBUG -  Entering history()
2025-01-09 02:11:01,335 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AMCR', 1, 0])
2025-01-09 02:11:01,335 - DEBUG -   Entering history()
2025-01-09 02:11:01,336 - DEBUG - AMCR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:01,337 - DEBUG -    Entering get()
2025-01-09 02:11:01,337 - DEBUG -     Entering _make_request()
2025-01-09 02:11:01,337 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AMCR
2025-01-09 02:11:01,337 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:01,337 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:01,337 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:01,337 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:01,338 - DEBUG - reusing cookie
2025-01-09 02:11:01,338 - DEBUG - reusing crumb
2025-01-09 02:11:01,338 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:01,338 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:01,499 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AMCR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 990
2025-01-09 02:11:01,500 - DEBUG - response code=200
2025-01-09 02:11:01,501 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:01,501 - DEBUG -    Exiting get()
2025-01-09 02:11:01,507 - ERROR - 
1 Failed download:
2025-01-09 02:11:01,507 - ERROR - ['AMCR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:01,507 - DEBUG - ['AMCR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:01,514 - DEBUG - Exiting download()
2025-01-09 02:11:01,627 - ERROR - Error writing data for AMCR to DB: schema "np" does not exist
LINE 4:             VALUES ('AMCR','2020-01-02'::date,np.float64(8.7...
                                                      ^

2025-01-09 02:11:01,628 - DEBUG - Entering download()
2025-01-09 02:11:01,628 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:01,628 - DEBUG -  Entering history()
2025-01-09 02:11:01,628 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AEE', 1, 0])
2025-01-09 02:11:01,628 - DEBUG -   Entering history()
2025-01-09 02:11:01,629 - DEBUG - AEE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:01,629 - DEBUG -    Entering get()
2025-01-09 02:11:01,629 - DEBUG -     Entering _make_request()
2025-01-09 02:11:01,629 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AEE
2025-01-09 02:11:01,629 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:01,629 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:01,629 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:01,629 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:01,629 - DEBUG - reusing cookie
2025-01-09 02:11:01,629 - DEBUG - reusing crumb
2025-01-09 02:11:01,629 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:01,629 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:01,855 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AEE?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1009
2025-01-09 02:11:01,856 - DEBUG - response code=200
2025-01-09 02:11:01,856 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:01,856 - DEBUG -    Exiting get()
2025-01-09 02:11:01,862 - ERROR - 
1 Failed download:
2025-01-09 02:11:01,862 - ERROR - ['AEE']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:01,863 - DEBUG - ['AEE']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:01,870 - DEBUG - Exiting download()
2025-01-09 02:11:01,982 - ERROR - Error writing data for AEE to DB: schema "np" does not exist
LINE 4:             VALUES ('AEE','2020-01-02'::date,np.float64(66.6...
                                                     ^

2025-01-09 02:11:01,983 - DEBUG - Entering download()
2025-01-09 02:11:01,983 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:01,983 - DEBUG -  Entering history()
2025-01-09 02:11:01,983 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AEP', 1, 0])
2025-01-09 02:11:01,983 - DEBUG -   Entering history()
2025-01-09 02:11:01,984 - DEBUG - AEP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:01,984 - DEBUG -    Entering get()
2025-01-09 02:11:01,984 - DEBUG -     Entering _make_request()
2025-01-09 02:11:01,984 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AEP
2025-01-09 02:11:01,984 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:01,984 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:01,984 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:01,984 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:01,985 - DEBUG - reusing cookie
2025-01-09 02:11:01,985 - DEBUG - reusing crumb
2025-01-09 02:11:01,985 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:01,985 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:02,202 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AEP?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1048
2025-01-09 02:11:02,203 - DEBUG - response code=200
2025-01-09 02:11:02,204 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:02,204 - DEBUG -    Exiting get()
2025-01-09 02:11:02,210 - ERROR - 
1 Failed download:
2025-01-09 02:11:02,210 - ERROR - ['AEP']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:02,210 - DEBUG - ['AEP']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:02,217 - DEBUG - Exiting download()
2025-01-09 02:11:02,339 - ERROR - Error writing data for AEP to DB: schema "np" does not exist
LINE 4:             VALUES ('AEP','2020-01-02'::date,np.float64(78.8...
                                                     ^

2025-01-09 02:11:02,340 - DEBUG - Entering download()
2025-01-09 02:11:02,340 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:02,340 - DEBUG -  Entering history()
2025-01-09 02:11:02,340 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AXP', 1, 0])
2025-01-09 02:11:02,340 - DEBUG -   Entering history()
2025-01-09 02:11:02,341 - DEBUG - AXP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:02,341 - DEBUG -    Entering get()
2025-01-09 02:11:02,341 - DEBUG -     Entering _make_request()
2025-01-09 02:11:02,341 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AXP
2025-01-09 02:11:02,341 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:02,342 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:02,342 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:02,342 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:02,342 - DEBUG - reusing cookie
2025-01-09 02:11:02,342 - DEBUG - reusing crumb
2025-01-09 02:11:02,342 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:02,342 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:02,530 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AXP?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1052
2025-01-09 02:11:02,531 - DEBUG - response code=200
2025-01-09 02:11:02,531 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:02,532 - DEBUG -    Exiting get()
2025-01-09 02:11:02,535 - ERROR - 
1 Failed download:
2025-01-09 02:11:02,535 - ERROR - ['AXP']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:02,535 - DEBUG - ['AXP']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:02,537 - DEBUG - Exiting download()
2025-01-09 02:11:02,537 - WARNING - Ticker AXP is missing 'Close' column. Skipping.
2025-01-09 02:11:02,537 - DEBUG - Entering download()
2025-01-09 02:11:02,538 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:02,538 - DEBUG -  Entering history()
2025-01-09 02:11:02,538 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AIG', 1, 0])
2025-01-09 02:11:02,538 - DEBUG -   Entering history()
2025-01-09 02:11:02,539 - DEBUG - AIG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:02,539 - DEBUG -    Entering get()
2025-01-09 02:11:02,539 - DEBUG -     Entering _make_request()
2025-01-09 02:11:02,539 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AIG
2025-01-09 02:11:02,539 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:02,539 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:02,539 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:02,539 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:02,539 - DEBUG - reusing cookie
2025-01-09 02:11:02,539 - DEBUG - reusing crumb
2025-01-09 02:11:02,539 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:02,539 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:02,723 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AIG?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1036
2025-01-09 02:11:02,724 - DEBUG - response code=200
2025-01-09 02:11:02,724 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:02,724 - DEBUG -    Exiting get()
2025-01-09 02:11:02,729 - ERROR - 
1 Failed download:
2025-01-09 02:11:02,729 - ERROR - ['AIG']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:02,729 - DEBUG - ['AIG']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:02,731 - DEBUG - Exiting download()
2025-01-09 02:11:02,838 - ERROR - Error writing data for AIG to DB: schema "np" does not exist
LINE 4:             VALUES ('AIG','2020-01-02'::date,np.float64(45.1...
                                                     ^

2025-01-09 02:11:02,838 - DEBUG - Entering download()
2025-01-09 02:11:02,838 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:02,839 - DEBUG -  Entering history()
2025-01-09 02:11:02,839 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AMT', 1, 0])
2025-01-09 02:11:02,839 - DEBUG -   Entering history()
2025-01-09 02:11:02,840 - DEBUG - AMT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:02,840 - DEBUG -    Entering get()
2025-01-09 02:11:02,840 - DEBUG -     Entering _make_request()
2025-01-09 02:11:02,840 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AMT
2025-01-09 02:11:02,840 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:02,840 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:02,840 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:02,840 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:02,840 - DEBUG - reusing cookie
2025-01-09 02:11:02,840 - DEBUG - reusing crumb
2025-01-09 02:11:02,840 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:02,840 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:02,990 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AMT?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1036
2025-01-09 02:11:02,990 - DEBUG - response code=200
2025-01-09 02:11:02,991 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:02,991 - DEBUG -    Exiting get()
2025-01-09 02:11:02,996 - ERROR - 
1 Failed download:
2025-01-09 02:11:02,997 - ERROR - ['AMT']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:02,997 - DEBUG - ['AMT']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:03,003 - DEBUG - Exiting download()
2025-01-09 02:11:03,004 - WARNING - Ticker AMT is missing 'Close' column. Skipping.
2025-01-09 02:11:03,004 - DEBUG - Entering download()
2025-01-09 02:11:03,004 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:03,005 - DEBUG -  Entering history()
2025-01-09 02:11:03,006 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AWK', 1, 0])
2025-01-09 02:11:03,006 - DEBUG -   Entering history()
2025-01-09 02:11:03,007 - DEBUG - AWK: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:03,008 - DEBUG -    Entering get()
2025-01-09 02:11:03,008 - DEBUG -     Entering _make_request()
2025-01-09 02:11:03,008 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AWK
2025-01-09 02:11:03,008 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:03,008 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:03,008 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:03,008 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:03,009 - DEBUG - reusing cookie
2025-01-09 02:11:03,009 - DEBUG - reusing crumb
2025-01-09 02:11:03,009 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:03,009 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:03,170 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AWK?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1044
2025-01-09 02:11:03,171 - DEBUG - response code=200
2025-01-09 02:11:03,171 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:03,171 - DEBUG -    Exiting get()
2025-01-09 02:11:03,175 - ERROR - 
1 Failed download:
2025-01-09 02:11:03,175 - ERROR - ['AWK']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:03,175 - DEBUG - ['AWK']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:03,177 - DEBUG - Exiting download()
2025-01-09 02:11:03,284 - ERROR - Error writing data for AWK to DB: schema "np" does not exist
LINE 4:             VALUES ('AWK','2020-01-02'::date,np.float64(112....
                                                     ^

2025-01-09 02:11:03,285 - DEBUG - Entering download()
2025-01-09 02:11:03,285 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:03,285 - DEBUG -  Entering history()
2025-01-09 02:11:03,285 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AMP', 1, 0])
2025-01-09 02:11:03,285 - DEBUG -   Entering history()
2025-01-09 02:11:03,286 - DEBUG - AMP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:03,286 - DEBUG -    Entering get()
2025-01-09 02:11:03,286 - DEBUG -     Entering _make_request()
2025-01-09 02:11:03,286 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AMP
2025-01-09 02:11:03,286 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:03,287 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:03,287 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:03,287 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:03,287 - DEBUG - reusing cookie
2025-01-09 02:11:03,287 - DEBUG - reusing crumb
2025-01-09 02:11:03,287 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:03,287 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:03,436 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AMP?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1030
2025-01-09 02:11:03,437 - DEBUG - response code=200
2025-01-09 02:11:03,437 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:03,437 - DEBUG -    Exiting get()
2025-01-09 02:11:03,443 - ERROR - 
1 Failed download:
2025-01-09 02:11:03,443 - ERROR - ['AMP']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:03,444 - DEBUG - ['AMP']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:03,451 - DEBUG - Exiting download()
2025-01-09 02:11:03,451 - WARNING - Ticker AMP is missing 'Close' column. Skipping.
2025-01-09 02:11:03,452 - DEBUG - Entering download()
2025-01-09 02:11:03,452 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:03,452 - DEBUG -  Entering history()
2025-01-09 02:11:03,453 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AME', 1, 0])
2025-01-09 02:11:03,454 - DEBUG -   Entering history()
2025-01-09 02:11:03,456 - DEBUG - AME: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:03,456 - DEBUG -    Entering get()
2025-01-09 02:11:03,456 - DEBUG -     Entering _make_request()
2025-01-09 02:11:03,456 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AME
2025-01-09 02:11:03,457 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:03,457 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:03,457 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:03,457 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:03,457 - DEBUG - reusing cookie
2025-01-09 02:11:03,457 - DEBUG - reusing crumb
2025-01-09 02:11:03,457 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:03,457 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:03,646 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AME?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1001
2025-01-09 02:11:03,647 - DEBUG - response code=200
2025-01-09 02:11:03,647 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:03,647 - DEBUG -    Exiting get()
2025-01-09 02:11:03,653 - ERROR - 
1 Failed download:
2025-01-09 02:11:03,653 - ERROR - ['AME']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:03,654 - DEBUG - ['AME']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:03,661 - DEBUG - Exiting download()
2025-01-09 02:11:03,661 - WARNING - Ticker AME is missing 'Close' column. Skipping.
2025-01-09 02:11:03,661 - DEBUG - Entering download()
2025-01-09 02:11:03,662 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:03,662 - DEBUG -  Entering history()
2025-01-09 02:11:03,663 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AMGN', 1, 0])
2025-01-09 02:11:03,663 - DEBUG -   Entering history()
2025-01-09 02:11:03,665 - DEBUG - AMGN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:03,665 - DEBUG -    Entering get()
2025-01-09 02:11:03,665 - DEBUG -     Entering _make_request()
2025-01-09 02:11:03,666 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AMGN
2025-01-09 02:11:03,666 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:03,666 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:03,666 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:03,666 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:03,666 - DEBUG - reusing cookie
2025-01-09 02:11:03,666 - DEBUG - reusing crumb
2025-01-09 02:11:03,666 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:03,667 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:03,828 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AMGN?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1003
2025-01-09 02:11:03,829 - DEBUG - response code=200
2025-01-09 02:11:03,829 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:03,829 - DEBUG -    Exiting get()
2025-01-09 02:11:03,835 - ERROR - 
1 Failed download:
2025-01-09 02:11:03,835 - ERROR - ['AMGN']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:03,836 - DEBUG - ['AMGN']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:03,843 - DEBUG - Exiting download()
2025-01-09 02:11:03,975 - ERROR - Error writing data for AMGN to DB: schema "np" does not exist
LINE 4:             VALUES ('AMGN','2020-01-02'::date,np.float64(208...
                                                      ^

2025-01-09 02:11:03,975 - DEBUG - Entering download()
2025-01-09 02:11:03,975 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:03,975 - DEBUG -  Entering history()
2025-01-09 02:11:03,976 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['APH', 1, 0])
2025-01-09 02:11:03,976 - DEBUG -   Entering history()
2025-01-09 02:11:03,976 - DEBUG - APH: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:03,977 - DEBUG -    Entering get()
2025-01-09 02:11:03,977 - DEBUG -     Entering _make_request()
2025-01-09 02:11:03,977 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/APH
2025-01-09 02:11:03,977 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:03,977 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:03,977 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:03,977 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:03,977 - DEBUG - reusing cookie
2025-01-09 02:11:03,977 - DEBUG - reusing crumb
2025-01-09 02:11:03,977 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:03,977 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:04,130 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/APH?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1016
2025-01-09 02:11:04,130 - DEBUG - response code=200
2025-01-09 02:11:04,131 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:04,131 - DEBUG -    Exiting get()
2025-01-09 02:11:04,134 - ERROR - 
1 Failed download:
2025-01-09 02:11:04,134 - ERROR - ['APH']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:04,134 - DEBUG - ['APH']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:04,138 - DEBUG - Exiting download()
2025-01-09 02:11:04,243 - ERROR - Error writing data for APH to DB: schema "np" does not exist
LINE 4:             VALUES ('APH','2020-01-02'::date,np.float64(25.8...
                                                     ^

2025-01-09 02:11:04,244 - DEBUG - Entering download()
2025-01-09 02:11:04,244 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:04,244 - DEBUG -  Entering history()
2025-01-09 02:11:04,245 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ADI', 1, 0])
2025-01-09 02:11:04,245 - DEBUG -   Entering history()
2025-01-09 02:11:04,245 - DEBUG - ADI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:04,245 - DEBUG -    Entering get()
2025-01-09 02:11:04,245 - DEBUG -     Entering _make_request()
2025-01-09 02:11:04,245 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ADI
2025-01-09 02:11:04,246 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:04,246 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:04,246 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:04,246 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:04,246 - DEBUG - reusing cookie
2025-01-09 02:11:04,246 - DEBUG - reusing crumb
2025-01-09 02:11:04,246 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:04,246 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:04,408 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ADI?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1023
2025-01-09 02:11:04,409 - DEBUG - response code=200
2025-01-09 02:11:04,409 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:04,410 - DEBUG -    Exiting get()
2025-01-09 02:11:04,416 - ERROR - 
1 Failed download:
2025-01-09 02:11:04,416 - ERROR - ['ADI']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:04,416 - DEBUG - ['ADI']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:04,423 - DEBUG - Exiting download()
2025-01-09 02:11:04,553 - ERROR - Error writing data for ADI to DB: schema "np" does not exist
LINE 4:             VALUES ('ADI','2020-01-02'::date,np.float64(109....
                                                     ^

2025-01-09 02:11:04,554 - DEBUG - Entering download()
2025-01-09 02:11:04,554 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:04,554 - DEBUG -  Entering history()
2025-01-09 02:11:04,554 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ANSS', 1, 0])
2025-01-09 02:11:04,554 - DEBUG -   Entering history()
2025-01-09 02:11:04,555 - DEBUG - ANSS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:04,555 - DEBUG -    Entering get()
2025-01-09 02:11:04,555 - DEBUG -     Entering _make_request()
2025-01-09 02:11:04,555 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ANSS
2025-01-09 02:11:04,555 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:04,555 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:04,555 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:04,555 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:04,555 - DEBUG - reusing cookie
2025-01-09 02:11:04,555 - DEBUG - reusing crumb
2025-01-09 02:11:04,555 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:04,555 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:04,682 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ANSS?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1005
2025-01-09 02:11:04,683 - DEBUG - response code=200
2025-01-09 02:11:04,683 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:04,683 - DEBUG -    Exiting get()
2025-01-09 02:11:04,686 - ERROR - 
1 Failed download:
2025-01-09 02:11:04,686 - ERROR - ['ANSS']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:04,686 - DEBUG - ['ANSS']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:04,689 - DEBUG - Exiting download()
2025-01-09 02:11:04,951 - ERROR - Error writing data for ANSS to DB: schema "np" does not exist
LINE 4:             VALUES ('ANSS','2020-01-02'::date,np.float64(257...
                                                      ^

2025-01-09 02:11:04,951 - DEBUG - Entering download()
2025-01-09 02:11:04,952 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:04,952 - DEBUG -  Entering history()
2025-01-09 02:11:04,952 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AON', 1, 0])
2025-01-09 02:11:04,952 - DEBUG -   Entering history()
2025-01-09 02:11:04,953 - DEBUG - AON: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:04,953 - DEBUG -    Entering get()
2025-01-09 02:11:04,953 - DEBUG -     Entering _make_request()
2025-01-09 02:11:04,953 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AON
2025-01-09 02:11:04,953 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:04,953 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:04,953 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:04,953 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:04,954 - DEBUG - reusing cookie
2025-01-09 02:11:04,954 - DEBUG - reusing crumb
2025-01-09 02:11:04,954 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:04,954 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:05,208 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AON?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 994
2025-01-09 02:11:05,209 - DEBUG - response code=200
2025-01-09 02:11:05,210 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:05,210 - DEBUG -    Exiting get()
2025-01-09 02:11:05,216 - ERROR - 
1 Failed download:
2025-01-09 02:11:05,216 - ERROR - ['AON']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:05,216 - DEBUG - ['AON']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:05,224 - DEBUG - Exiting download()
2025-01-09 02:11:05,460 - ERROR - Error writing data for AON to DB: schema "np" does not exist
LINE 4:             VALUES ('AON','2020-01-02'::date,np.float64(200....
                                                     ^

2025-01-09 02:11:05,460 - DEBUG - Entering download()
2025-01-09 02:11:05,460 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:05,461 - DEBUG -  Entering history()
2025-01-09 02:11:05,461 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['APA', 1, 0])
2025-01-09 02:11:05,461 - DEBUG -   Entering history()
2025-01-09 02:11:05,462 - DEBUG - APA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:05,462 - DEBUG -    Entering get()
2025-01-09 02:11:05,462 - DEBUG -     Entering _make_request()
2025-01-09 02:11:05,462 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/APA
2025-01-09 02:11:05,462 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:05,462 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:05,462 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:05,462 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:05,462 - DEBUG - reusing cookie
2025-01-09 02:11:05,462 - DEBUG - reusing crumb
2025-01-09 02:11:05,462 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:05,462 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:05,651 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/APA?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1008
2025-01-09 02:11:05,652 - DEBUG - response code=200
2025-01-09 02:11:05,652 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:05,652 - DEBUG -    Exiting get()
2025-01-09 02:11:05,658 - ERROR - 
1 Failed download:
2025-01-09 02:11:05,658 - ERROR - ['APA']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:05,658 - DEBUG - ['APA']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:05,666 - DEBUG - Exiting download()
2025-01-09 02:11:05,667 - WARNING - Ticker APA is missing 'Close' column. Skipping.
2025-01-09 02:11:05,667 - DEBUG - Entering download()
2025-01-09 02:11:05,667 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:05,668 - DEBUG -  Entering history()
2025-01-09 02:11:05,668 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['APO', 1, 0])
2025-01-09 02:11:05,669 - DEBUG -   Entering history()
2025-01-09 02:11:05,670 - DEBUG - APO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:05,671 - DEBUG -    Entering get()
2025-01-09 02:11:05,671 - DEBUG -     Entering _make_request()
2025-01-09 02:11:05,671 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/APO
2025-01-09 02:11:05,671 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:05,671 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:05,671 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:05,671 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:05,672 - DEBUG - reusing cookie
2025-01-09 02:11:05,672 - DEBUG - reusing crumb
2025-01-09 02:11:05,672 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:05,672 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:05,825 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/APO?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1039
2025-01-09 02:11:05,826 - DEBUG - response code=200
2025-01-09 02:11:05,826 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:05,826 - DEBUG -    Exiting get()
2025-01-09 02:11:05,832 - ERROR - 
1 Failed download:
2025-01-09 02:11:05,832 - ERROR - ['APO']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:05,832 - DEBUG - ['APO']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:05,840 - DEBUG - Exiting download()
2025-01-09 02:11:05,952 - ERROR - Error writing data for APO to DB: schema "np" does not exist
LINE 4:             VALUES ('APO','2020-01-02'::date,np.float64(41.1...
                                                     ^

2025-01-09 02:11:05,952 - DEBUG - Entering download()
2025-01-09 02:11:05,952 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:05,952 - DEBUG -  Entering history()
2025-01-09 02:11:05,953 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AAPL', 1, 0])
2025-01-09 02:11:05,953 - DEBUG -   Entering history()
2025-01-09 02:11:05,953 - DEBUG - AAPL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:05,954 - DEBUG -    Entering get()
2025-01-09 02:11:05,954 - DEBUG -     Entering _make_request()
2025-01-09 02:11:05,954 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AAPL
2025-01-09 02:11:05,954 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:05,954 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:05,954 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:05,954 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:05,954 - DEBUG - reusing cookie
2025-01-09 02:11:05,954 - DEBUG - reusing crumb
2025-01-09 02:11:05,954 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:05,954 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:06,140 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AAPL?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1004
2025-01-09 02:11:06,141 - DEBUG - response code=200
2025-01-09 02:11:06,141 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:06,141 - DEBUG -    Exiting get()
2025-01-09 02:11:06,147 - ERROR - 
1 Failed download:
2025-01-09 02:11:06,147 - ERROR - ['AAPL']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:06,147 - DEBUG - ['AAPL']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:06,155 - DEBUG - Exiting download()
2025-01-09 02:11:06,270 - ERROR - Error writing data for AAPL to DB: schema "np" does not exist
LINE 4:             VALUES ('AAPL','2020-01-02'::date,np.float64(71....
                                                      ^

2025-01-09 02:11:06,271 - DEBUG - Entering download()
2025-01-09 02:11:06,271 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:06,271 - DEBUG -  Entering history()
2025-01-09 02:11:06,271 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AMAT', 1, 0])
2025-01-09 02:11:06,271 - DEBUG -   Entering history()
2025-01-09 02:11:06,272 - DEBUG - AMAT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:06,272 - DEBUG -    Entering get()
2025-01-09 02:11:06,272 - DEBUG -     Entering _make_request()
2025-01-09 02:11:06,272 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AMAT
2025-01-09 02:11:06,272 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:06,272 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:06,272 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:06,273 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:06,273 - DEBUG - reusing cookie
2025-01-09 02:11:06,273 - DEBUG - reusing crumb
2025-01-09 02:11:06,273 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:06,273 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:06,432 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AMAT?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1029
2025-01-09 02:11:06,433 - DEBUG - response code=200
2025-01-09 02:11:06,433 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:06,433 - DEBUG -    Exiting get()
2025-01-09 02:11:06,436 - ERROR - 
1 Failed download:
2025-01-09 02:11:06,437 - ERROR - ['AMAT']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:06,437 - DEBUG - ['AMAT']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:06,441 - DEBUG - Exiting download()
2025-01-09 02:11:06,565 - ERROR - Error writing data for AMAT to DB: schema "np" does not exist
LINE 4:             VALUES ('AMAT','2020-01-02'::date,np.float64(59....
                                                      ^

2025-01-09 02:11:06,565 - DEBUG - Entering download()
2025-01-09 02:11:06,565 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:06,566 - DEBUG -  Entering history()
2025-01-09 02:11:06,566 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['APTV', 1, 0])
2025-01-09 02:11:06,566 - DEBUG -   Entering history()
2025-01-09 02:11:06,567 - DEBUG - APTV: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:06,567 - DEBUG -    Entering get()
2025-01-09 02:11:06,567 - DEBUG -     Entering _make_request()
2025-01-09 02:11:06,567 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/APTV
2025-01-09 02:11:06,567 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:06,567 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:06,567 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:06,567 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:06,567 - DEBUG - reusing cookie
2025-01-09 02:11:06,567 - DEBUG - reusing crumb
2025-01-09 02:11:06,567 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:06,567 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:06,710 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/APTV?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 991
2025-01-09 02:11:06,711 - DEBUG - response code=200
2025-01-09 02:11:06,711 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:06,711 - DEBUG -    Exiting get()
2025-01-09 02:11:06,718 - ERROR - 
1 Failed download:
2025-01-09 02:11:06,718 - ERROR - ['APTV']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:06,718 - DEBUG - ['APTV']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:06,724 - DEBUG - Exiting download()
2025-01-09 02:11:06,838 - ERROR - Error writing data for APTV to DB: schema "np" does not exist
LINE 4:             VALUES ('APTV','2020-01-02'::date,np.float64(95....
                                                      ^

2025-01-09 02:11:06,839 - DEBUG - Entering download()
2025-01-09 02:11:06,839 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:06,839 - DEBUG -  Entering history()
2025-01-09 02:11:06,840 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ACGL', 1, 0])
2025-01-09 02:11:06,840 - DEBUG -   Entering history()
2025-01-09 02:11:06,841 - DEBUG - ACGL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:06,841 - DEBUG -    Entering get()
2025-01-09 02:11:06,841 - DEBUG -     Entering _make_request()
2025-01-09 02:11:06,841 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ACGL
2025-01-09 02:11:06,841 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:06,841 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:06,841 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:06,841 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:06,841 - DEBUG - reusing cookie
2025-01-09 02:11:06,841 - DEBUG - reusing crumb
2025-01-09 02:11:06,841 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:06,841 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:06,974 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ACGL?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1025
2025-01-09 02:11:06,975 - DEBUG - response code=200
2025-01-09 02:11:06,975 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:06,975 - DEBUG -    Exiting get()
2025-01-09 02:11:06,979 - ERROR - 
1 Failed download:
2025-01-09 02:11:06,979 - ERROR - ['ACGL']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:06,979 - DEBUG - ['ACGL']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:06,984 - DEBUG - Exiting download()
2025-01-09 02:11:06,985 - WARNING - Ticker ACGL is missing 'Close' column. Skipping.
2025-01-09 02:11:06,985 - DEBUG - Entering download()
2025-01-09 02:11:06,985 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:06,985 - DEBUG -  Entering history()
2025-01-09 02:11:06,986 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ADM', 1, 0])
2025-01-09 02:11:06,986 - DEBUG -   Entering history()
2025-01-09 02:11:06,988 - DEBUG - ADM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:06,988 - DEBUG -    Entering get()
2025-01-09 02:11:06,988 - DEBUG -     Entering _make_request()
2025-01-09 02:11:06,988 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ADM
2025-01-09 02:11:06,989 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:06,989 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:06,989 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:06,989 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:06,989 - DEBUG - reusing cookie
2025-01-09 02:11:06,989 - DEBUG - reusing crumb
2025-01-09 02:11:06,989 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:06,989 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:07,188 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ADM?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1031
2025-01-09 02:11:07,189 - DEBUG - response code=200
2025-01-09 02:11:07,189 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:07,189 - DEBUG -    Exiting get()
2025-01-09 02:11:07,195 - ERROR - 
1 Failed download:
2025-01-09 02:11:07,195 - ERROR - ['ADM']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:07,196 - DEBUG - ['ADM']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:07,203 - DEBUG - Exiting download()
2025-01-09 02:11:07,315 - ERROR - Error writing data for ADM to DB: schema "np" does not exist
LINE 4:             VALUES ('ADM','2020-01-02'::date,np.float64(40.7...
                                                     ^

2025-01-09 02:11:07,315 - DEBUG - Entering download()
2025-01-09 02:11:07,315 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:07,315 - DEBUG -  Entering history()
2025-01-09 02:11:07,316 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ANET', 1, 0])
2025-01-09 02:11:07,316 - DEBUG -   Entering history()
2025-01-09 02:11:07,316 - DEBUG - ANET: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:07,317 - DEBUG -    Entering get()
2025-01-09 02:11:07,317 - DEBUG -     Entering _make_request()
2025-01-09 02:11:07,317 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ANET
2025-01-09 02:11:07,317 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:07,317 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:07,317 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:07,317 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:07,317 - DEBUG - reusing cookie
2025-01-09 02:11:07,317 - DEBUG - reusing crumb
2025-01-09 02:11:07,317 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:07,317 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:07,449 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ANET?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1020
2025-01-09 02:11:07,450 - DEBUG - response code=200
2025-01-09 02:11:07,450 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:07,450 - DEBUG -    Exiting get()
2025-01-09 02:11:07,455 - ERROR - 
1 Failed download:
2025-01-09 02:11:07,455 - ERROR - ['ANET']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:07,456 - DEBUG - ['ANET']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:07,461 - DEBUG - Exiting download()
2025-01-09 02:11:07,462 - WARNING - Ticker ANET is missing 'Close' column. Skipping.
2025-01-09 02:11:07,462 - DEBUG - Entering download()
2025-01-09 02:11:07,462 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:07,463 - DEBUG -  Entering history()
2025-01-09 02:11:07,463 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AJG', 1, 0])
2025-01-09 02:11:07,464 - DEBUG -   Entering history()
2025-01-09 02:11:07,465 - DEBUG - AJG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:07,466 - DEBUG -    Entering get()
2025-01-09 02:11:07,466 - DEBUG -     Entering _make_request()
2025-01-09 02:11:07,466 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AJG
2025-01-09 02:11:07,466 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:07,466 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:07,467 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:07,467 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:07,467 - DEBUG - reusing cookie
2025-01-09 02:11:07,467 - DEBUG - reusing crumb
2025-01-09 02:11:07,467 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:07,467 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:07,656 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AJG?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1028
2025-01-09 02:11:07,657 - DEBUG - response code=200
2025-01-09 02:11:07,657 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:07,657 - DEBUG -    Exiting get()
2025-01-09 02:11:07,663 - ERROR - 
1 Failed download:
2025-01-09 02:11:07,663 - ERROR - ['AJG']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:07,663 - DEBUG - ['AJG']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:07,671 - DEBUG - Exiting download()
2025-01-09 02:11:07,789 - ERROR - Error writing data for AJG to DB: schema "np" does not exist
LINE 4:             VALUES ('AJG','2020-01-02'::date,np.float64(89.9...
                                                     ^

2025-01-09 02:11:07,790 - DEBUG - Entering download()
2025-01-09 02:11:07,790 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:07,790 - DEBUG -  Entering history()
2025-01-09 02:11:07,790 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AIZ', 1, 0])
2025-01-09 02:11:07,791 - DEBUG -   Entering history()
2025-01-09 02:11:07,791 - DEBUG - AIZ: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:07,791 - DEBUG -    Entering get()
2025-01-09 02:11:07,791 - DEBUG -     Entering _make_request()
2025-01-09 02:11:07,792 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AIZ
2025-01-09 02:11:07,792 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:07,792 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:07,792 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:07,792 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:07,792 - DEBUG - reusing cookie
2025-01-09 02:11:07,792 - DEBUG - reusing crumb
2025-01-09 02:11:07,792 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:07,792 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:07,951 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AIZ?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1007
2025-01-09 02:11:07,952 - DEBUG - response code=200
2025-01-09 02:11:07,952 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:07,952 - DEBUG -    Exiting get()
2025-01-09 02:11:07,958 - ERROR - 
1 Failed download:
2025-01-09 02:11:07,958 - ERROR - ['AIZ']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:07,958 - DEBUG - ['AIZ']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:07,965 - DEBUG - Exiting download()
2025-01-09 02:11:08,239 - ERROR - Error writing data for AIZ to DB: schema "np" does not exist
LINE 4:             VALUES ('AIZ','2020-01-02'::date,np.float64(119....
                                                     ^

2025-01-09 02:11:08,240 - DEBUG - Entering download()
2025-01-09 02:11:08,240 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:08,240 - DEBUG -  Entering history()
2025-01-09 02:11:08,241 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['T', 1, 0])
2025-01-09 02:11:08,241 - DEBUG -   Entering history()
2025-01-09 02:11:08,241 - DEBUG - T: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:08,242 - DEBUG -    Entering get()
2025-01-09 02:11:08,242 - DEBUG -     Entering _make_request()
2025-01-09 02:11:08,242 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/T
2025-01-09 02:11:08,242 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:08,242 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:08,242 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:08,242 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:08,242 - DEBUG - reusing cookie
2025-01-09 02:11:08,242 - DEBUG - reusing crumb
2025-01-09 02:11:08,242 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:08,242 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:08,424 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/T?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 993
2025-01-09 02:11:08,425 - DEBUG - response code=200
2025-01-09 02:11:08,425 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:08,425 - DEBUG -    Exiting get()
2025-01-09 02:11:08,431 - ERROR - 
1 Failed download:
2025-01-09 02:11:08,431 - ERROR - ['T']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:08,432 - DEBUG - ['T']: %ticker%raceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = %ticker%icker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=%ticker%rue
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:08,439 - DEBUG - Exiting download()
2025-01-09 02:11:08,439 - WARNING - Ticker T is missing 'Close' column. Skipping.
2025-01-09 02:11:08,439 - DEBUG - Entering download()
2025-01-09 02:11:08,440 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:08,440 - DEBUG -  Entering history()
2025-01-09 02:11:08,441 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ATO', 1, 0])
2025-01-09 02:11:08,441 - DEBUG -   Entering history()
2025-01-09 02:11:08,443 - DEBUG - ATO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:08,444 - DEBUG -    Entering get()
2025-01-09 02:11:08,444 - DEBUG -     Entering _make_request()
2025-01-09 02:11:08,444 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ATO
2025-01-09 02:11:08,444 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:08,444 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:08,444 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:08,444 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:08,444 - DEBUG - reusing cookie
2025-01-09 02:11:08,445 - DEBUG - reusing crumb
2025-01-09 02:11:08,445 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:08,445 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:08,623 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ATO?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1027
2025-01-09 02:11:08,624 - DEBUG - response code=200
2025-01-09 02:11:08,624 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:08,624 - DEBUG -    Exiting get()
2025-01-09 02:11:08,630 - ERROR - 
1 Failed download:
2025-01-09 02:11:08,630 - ERROR - ['ATO']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:08,630 - DEBUG - ['ATO']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:08,637 - DEBUG - Exiting download()
2025-01-09 02:11:08,638 - WARNING - Ticker ATO is missing 'Close' column. Skipping.
2025-01-09 02:11:08,638 - DEBUG - Entering download()
2025-01-09 02:11:08,638 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:08,639 - DEBUG -  Entering history()
2025-01-09 02:11:08,640 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ADSK', 1, 0])
2025-01-09 02:11:08,640 - DEBUG -   Entering history()
2025-01-09 02:11:08,642 - DEBUG - ADSK: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:08,642 - DEBUG -    Entering get()
2025-01-09 02:11:08,642 - DEBUG -     Entering _make_request()
2025-01-09 02:11:08,642 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ADSK
2025-01-09 02:11:08,642 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:08,642 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:08,643 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:08,643 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:08,643 - DEBUG - reusing cookie
2025-01-09 02:11:08,643 - DEBUG - reusing crumb
2025-01-09 02:11:08,643 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:08,643 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:08,799 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ADSK?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1013
2025-01-09 02:11:08,800 - DEBUG - response code=200
2025-01-09 02:11:08,800 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:08,801 - DEBUG -    Exiting get()
2025-01-09 02:11:08,805 - ERROR - 
1 Failed download:
2025-01-09 02:11:08,805 - ERROR - ['ADSK']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:08,805 - DEBUG - ['ADSK']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:08,807 - DEBUG - Exiting download()
2025-01-09 02:11:08,910 - ERROR - Error writing data for ADSK to DB: schema "np" does not exist
LINE 4:             VALUES ('ADSK','2020-01-02'::date,np.float64(184...
                                                      ^

2025-01-09 02:11:08,910 - DEBUG - Entering download()
2025-01-09 02:11:08,911 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:08,911 - DEBUG -  Entering history()
2025-01-09 02:11:08,911 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ADP', 1, 0])
2025-01-09 02:11:08,911 - DEBUG -   Entering history()
2025-01-09 02:11:08,912 - DEBUG - ADP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:08,912 - DEBUG -    Entering get()
2025-01-09 02:11:08,912 - DEBUG -     Entering _make_request()
2025-01-09 02:11:08,912 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ADP
2025-01-09 02:11:08,912 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:08,912 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:08,912 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:08,912 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:08,912 - DEBUG - reusing cookie
2025-01-09 02:11:08,912 - DEBUG - reusing crumb
2025-01-09 02:11:08,912 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:08,912 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:09,088 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ADP?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1044
2025-01-09 02:11:09,089 - DEBUG - response code=200
2025-01-09 02:11:09,090 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:09,090 - DEBUG -    Exiting get()
2025-01-09 02:11:09,096 - ERROR - 
1 Failed download:
2025-01-09 02:11:09,096 - ERROR - ['ADP']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:09,096 - DEBUG - ['ADP']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:09,103 - DEBUG - Exiting download()
2025-01-09 02:11:09,211 - ERROR - Error writing data for ADP to DB: schema "np" does not exist
LINE 4:             VALUES ('ADP','2020-01-02'::date,np.float64(154....
                                                     ^

2025-01-09 02:11:09,212 - DEBUG - Entering download()
2025-01-09 02:11:09,212 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:09,212 - DEBUG -  Entering history()
2025-01-09 02:11:09,212 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AZO', 1, 0])
2025-01-09 02:11:09,212 - DEBUG -   Entering history()
2025-01-09 02:11:09,213 - DEBUG - AZO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:09,213 - DEBUG -    Entering get()
2025-01-09 02:11:09,214 - DEBUG -     Entering _make_request()
2025-01-09 02:11:09,214 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AZO
2025-01-09 02:11:09,214 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:09,214 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:09,214 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:09,214 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:09,214 - DEBUG - reusing cookie
2025-01-09 02:11:09,214 - DEBUG - reusing crumb
2025-01-09 02:11:09,214 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:09,214 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:09,342 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AZO?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1011
2025-01-09 02:11:09,342 - DEBUG - response code=200
2025-01-09 02:11:09,343 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:09,343 - DEBUG -    Exiting get()
2025-01-09 02:11:09,346 - ERROR - 
1 Failed download:
2025-01-09 02:11:09,346 - ERROR - ['AZO']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:09,346 - DEBUG - ['AZO']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:09,350 - DEBUG - Exiting download()
2025-01-09 02:11:09,571 - ERROR - Error writing data for AZO to DB: schema "np" does not exist
LINE 4:             VALUES ('AZO','2020-01-02'::date,np.float64(1194...
                                                     ^

2025-01-09 02:11:09,571 - DEBUG - Entering download()
2025-01-09 02:11:09,572 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:09,572 - DEBUG -  Entering history()
2025-01-09 02:11:09,572 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AVB', 1, 0])
2025-01-09 02:11:09,572 - DEBUG -   Entering history()
2025-01-09 02:11:09,573 - DEBUG - AVB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:09,573 - DEBUG -    Entering get()
2025-01-09 02:11:09,573 - DEBUG -     Entering _make_request()
2025-01-09 02:11:09,573 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AVB
2025-01-09 02:11:09,573 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:09,573 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:09,574 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:09,574 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:09,574 - DEBUG - reusing cookie
2025-01-09 02:11:09,574 - DEBUG - reusing crumb
2025-01-09 02:11:09,574 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:09,574 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:09,760 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AVB?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1031
2025-01-09 02:11:09,761 - DEBUG - response code=200
2025-01-09 02:11:09,761 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:09,761 - DEBUG -    Exiting get()
2025-01-09 02:11:09,767 - ERROR - 
1 Failed download:
2025-01-09 02:11:09,768 - ERROR - ['AVB']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:09,768 - DEBUG - ['AVB']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:09,775 - DEBUG - Exiting download()
2025-01-09 02:11:09,775 - WARNING - Ticker AVB is missing 'Close' column. Skipping.
2025-01-09 02:11:09,776 - DEBUG - Entering download()
2025-01-09 02:11:09,776 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:09,776 - DEBUG -  Entering history()
2025-01-09 02:11:09,777 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AVY', 1, 0])
2025-01-09 02:11:09,777 - DEBUG -   Entering history()
2025-01-09 02:11:09,779 - DEBUG - AVY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:09,779 - DEBUG -    Entering get()
2025-01-09 02:11:09,779 - DEBUG -     Entering _make_request()
2025-01-09 02:11:09,779 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AVY
2025-01-09 02:11:09,780 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:09,780 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:09,780 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:09,780 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:09,780 - DEBUG - reusing cookie
2025-01-09 02:11:09,780 - DEBUG - reusing crumb
2025-01-09 02:11:09,780 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:09,780 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:09,980 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AVY?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1029
2025-01-09 02:11:09,981 - DEBUG - response code=200
2025-01-09 02:11:09,981 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:09,981 - DEBUG -    Exiting get()
2025-01-09 02:11:09,987 - ERROR - 
1 Failed download:
2025-01-09 02:11:09,988 - ERROR - ['AVY']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:09,988 - DEBUG - ['AVY']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:09,995 - DEBUG - Exiting download()
2025-01-09 02:11:09,995 - WARNING - Ticker AVY is missing 'Close' column. Skipping.
2025-01-09 02:11:09,996 - DEBUG - Entering download()
2025-01-09 02:11:09,996 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:09,996 - DEBUG -  Entering history()
2025-01-09 02:11:09,997 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AXON', 1, 0])
2025-01-09 02:11:09,997 - DEBUG -   Entering history()
2025-01-09 02:11:09,999 - DEBUG - AXON: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:09,999 - DEBUG -    Entering get()
2025-01-09 02:11:09,999 - DEBUG -     Entering _make_request()
2025-01-09 02:11:09,999 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AXON
2025-01-09 02:11:10,000 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:10,000 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:10,000 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:10,000 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:10,000 - DEBUG - reusing cookie
2025-01-09 02:11:10,000 - DEBUG - reusing crumb
2025-01-09 02:11:10,000 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:10,000 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:10,138 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AXON?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1024
2025-01-09 02:11:10,139 - DEBUG - response code=200
2025-01-09 02:11:10,139 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:10,139 - DEBUG -    Exiting get()
2025-01-09 02:11:10,145 - ERROR - 
1 Failed download:
2025-01-09 02:11:10,145 - ERROR - ['AXON']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:10,145 - DEBUG - ['AXON']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:10,152 - DEBUG - Exiting download()
2025-01-09 02:11:10,265 - ERROR - Error writing data for AXON to DB: schema "np" does not exist
LINE 4:             VALUES ('AXON','2020-01-02'::date,np.float64(74....
                                                      ^

2025-01-09 02:11:10,266 - DEBUG - Entering download()
2025-01-09 02:11:10,266 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:10,266 - DEBUG -  Entering history()
2025-01-09 02:11:10,266 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BKR', 1, 0])
2025-01-09 02:11:10,267 - DEBUG -   Entering history()
2025-01-09 02:11:10,267 - DEBUG - BKR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:10,267 - DEBUG -    Entering get()
2025-01-09 02:11:10,267 - DEBUG -     Entering _make_request()
2025-01-09 02:11:10,267 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BKR
2025-01-09 02:11:10,267 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:10,268 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:10,268 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:10,268 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:10,268 - DEBUG - reusing cookie
2025-01-09 02:11:10,268 - DEBUG - reusing crumb
2025-01-09 02:11:10,268 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:10,268 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:10,455 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BKR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1017
2025-01-09 02:11:10,456 - DEBUG - response code=200
2025-01-09 02:11:10,456 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:10,456 - DEBUG -    Exiting get()
2025-01-09 02:11:10,462 - ERROR - 
1 Failed download:
2025-01-09 02:11:10,462 - ERROR - ['BKR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:10,463 - DEBUG - ['BKR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:10,470 - DEBUG - Exiting download()
2025-01-09 02:11:10,580 - ERROR - Error writing data for BKR to DB: schema "np" does not exist
LINE 4:             VALUES ('BKR','2020-01-02'::date,np.float64(22.1...
                                                     ^

2025-01-09 02:11:10,581 - DEBUG - Entering download()
2025-01-09 02:11:10,581 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:10,581 - DEBUG -  Entering history()
2025-01-09 02:11:10,581 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BALL', 1, 0])
2025-01-09 02:11:10,581 - DEBUG -   Entering history()
2025-01-09 02:11:10,582 - DEBUG - BALL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:10,582 - DEBUG -    Entering get()
2025-01-09 02:11:10,582 - DEBUG -     Entering _make_request()
2025-01-09 02:11:10,582 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BALL
2025-01-09 02:11:10,582 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:10,582 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:10,582 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:10,582 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:10,582 - DEBUG - reusing cookie
2025-01-09 02:11:10,583 - DEBUG - reusing crumb
2025-01-09 02:11:10,583 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:10,583 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:10,760 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BALL?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1005
2025-01-09 02:11:10,761 - DEBUG - response code=200
2025-01-09 02:11:10,761 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:10,761 - DEBUG -    Exiting get()
2025-01-09 02:11:10,767 - ERROR - 
1 Failed download:
2025-01-09 02:11:10,768 - ERROR - ['BALL']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:10,768 - DEBUG - ['BALL']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:10,775 - DEBUG - Exiting download()
2025-01-09 02:11:10,894 - ERROR - Error writing data for BALL to DB: schema "np" does not exist
LINE 4:             VALUES ('BALL','2020-01-02'::date,np.float64(61....
                                                      ^

2025-01-09 02:11:10,895 - DEBUG - Entering download()
2025-01-09 02:11:10,895 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:10,895 - DEBUG -  Entering history()
2025-01-09 02:11:10,895 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BAC', 1, 0])
2025-01-09 02:11:10,896 - DEBUG -   Entering history()
2025-01-09 02:11:10,896 - DEBUG - BAC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:10,896 - DEBUG -    Entering get()
2025-01-09 02:11:10,896 - DEBUG -     Entering _make_request()
2025-01-09 02:11:10,896 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BAC
2025-01-09 02:11:10,897 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:10,897 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:10,897 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:10,897 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:10,897 - DEBUG - reusing cookie
2025-01-09 02:11:10,897 - DEBUG - reusing crumb
2025-01-09 02:11:10,897 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:10,897 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:11,073 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BAC?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1028
2025-01-09 02:11:11,074 - DEBUG - response code=200
2025-01-09 02:11:11,075 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:11,075 - DEBUG -    Exiting get()
2025-01-09 02:11:11,081 - ERROR - 
1 Failed download:
2025-01-09 02:11:11,081 - ERROR - ['BAC']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:11,081 - DEBUG - ['BAC']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:11,088 - DEBUG - Exiting download()
2025-01-09 02:11:11,335 - ERROR - Error writing data for BAC to DB: schema "np" does not exist
LINE 4:             VALUES ('BAC','2020-01-02'::date,np.float64(31.2...
                                                     ^

2025-01-09 02:11:11,335 - DEBUG - Entering download()
2025-01-09 02:11:11,336 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:11,336 - DEBUG -  Entering history()
2025-01-09 02:11:11,336 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BAX', 1, 0])
2025-01-09 02:11:11,336 - DEBUG -   Entering history()
2025-01-09 02:11:11,337 - DEBUG - BAX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:11,337 - DEBUG -    Entering get()
2025-01-09 02:11:11,337 - DEBUG -     Entering _make_request()
2025-01-09 02:11:11,337 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BAX
2025-01-09 02:11:11,337 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:11,337 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:11,337 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:11,337 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:11,337 - DEBUG - reusing cookie
2025-01-09 02:11:11,337 - DEBUG - reusing crumb
2025-01-09 02:11:11,337 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:11,337 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:11,542 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BAX?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1024
2025-01-09 02:11:11,543 - DEBUG - response code=200
2025-01-09 02:11:11,544 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:11,544 - DEBUG -    Exiting get()
2025-01-09 02:11:11,550 - ERROR - 
1 Failed download:
2025-01-09 02:11:11,550 - ERROR - ['BAX']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:11,550 - DEBUG - ['BAX']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:11,558 - DEBUG - Exiting download()
2025-01-09 02:11:11,673 - ERROR - Error writing data for BAX to DB: schema "np" does not exist
LINE 4:             VALUES ('BAX','2020-01-02'::date,np.float64(76.8...
                                                     ^

2025-01-09 02:11:11,673 - DEBUG - Entering download()
2025-01-09 02:11:11,673 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:11,673 - DEBUG -  Entering history()
2025-01-09 02:11:11,674 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BDX', 1, 0])
2025-01-09 02:11:11,674 - DEBUG -   Entering history()
2025-01-09 02:11:11,674 - DEBUG - BDX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:11,675 - DEBUG -    Entering get()
2025-01-09 02:11:11,675 - DEBUG -     Entering _make_request()
2025-01-09 02:11:11,675 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BDX
2025-01-09 02:11:11,675 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:11,675 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:11,675 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:11,675 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:11,675 - DEBUG - reusing cookie
2025-01-09 02:11:11,675 - DEBUG - reusing crumb
2025-01-09 02:11:11,675 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:11,675 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:11,912 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BDX?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1036
2025-01-09 02:11:11,914 - DEBUG - response code=200
2025-01-09 02:11:11,914 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:11,914 - DEBUG -    Exiting get()
2025-01-09 02:11:11,920 - ERROR - 
1 Failed download:
2025-01-09 02:11:11,920 - ERROR - ['BDX']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:11,920 - DEBUG - ['BDX']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:11,928 - DEBUG - Exiting download()
2025-01-09 02:11:11,928 - WARNING - Ticker BDX is missing 'Close' column. Skipping.
2025-01-09 02:11:11,928 - DEBUG - Entering download()
2025-01-09 02:11:11,929 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:11,929 - DEBUG -  Entering history()
2025-01-09 02:11:11,930 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BRK-B', 1, 0])
2025-01-09 02:11:11,930 - DEBUG -   Entering history()
2025-01-09 02:11:11,932 - DEBUG - BRK-B: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:11,932 - DEBUG -    Entering get()
2025-01-09 02:11:11,932 - DEBUG -     Entering _make_request()
2025-01-09 02:11:11,932 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BRK-B
2025-01-09 02:11:11,932 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:11,933 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:11,933 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:11,933 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:11,933 - DEBUG - reusing cookie
2025-01-09 02:11:11,933 - DEBUG - reusing crumb
2025-01-09 02:11:11,933 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:11,933 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:12,072 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BRK-B?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1030
2025-01-09 02:11:12,073 - DEBUG - response code=200
2025-01-09 02:11:12,074 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:12,074 - DEBUG -    Exiting get()
2025-01-09 02:11:12,077 - ERROR - 
1 Failed download:
2025-01-09 02:11:12,078 - ERROR - ['BRK-B']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:12,078 - DEBUG - ['BRK-B']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:12,080 - DEBUG - Exiting download()
2025-01-09 02:11:12,184 - ERROR - Error writing data for BRK-B to DB: schema "np" does not exist
LINE 4:             VALUES ('BRK-B','2020-01-02'::date,np.float64(22...
                                                       ^

2025-01-09 02:11:12,185 - DEBUG - Entering download()
2025-01-09 02:11:12,185 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:12,185 - DEBUG -  Entering history()
2025-01-09 02:11:12,185 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BBY', 1, 0])
2025-01-09 02:11:12,185 - DEBUG -   Entering history()
2025-01-09 02:11:12,186 - DEBUG - BBY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:12,186 - DEBUG -    Entering get()
2025-01-09 02:11:12,186 - DEBUG -     Entering _make_request()
2025-01-09 02:11:12,186 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BBY
2025-01-09 02:11:12,186 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:12,186 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:12,186 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:12,186 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:12,186 - DEBUG - reusing cookie
2025-01-09 02:11:12,187 - DEBUG - reusing crumb
2025-01-09 02:11:12,187 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:12,187 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:12,367 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BBY?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1009
2025-01-09 02:11:12,368 - DEBUG - response code=200
2025-01-09 02:11:12,369 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:12,369 - DEBUG -    Exiting get()
2025-01-09 02:11:12,375 - ERROR - 
1 Failed download:
2025-01-09 02:11:12,375 - ERROR - ['BBY']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:12,376 - DEBUG - ['BBY']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:12,382 - DEBUG - Exiting download()
2025-01-09 02:11:12,494 - ERROR - Error writing data for BBY to DB: schema "np" does not exist
LINE 4:             VALUES ('BBY','2020-01-02'::date,np.float64(73.2...
                                                     ^

2025-01-09 02:11:12,494 - DEBUG - Entering download()
2025-01-09 02:11:12,494 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:12,494 - DEBUG -  Entering history()
2025-01-09 02:11:12,495 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TECH', 1, 0])
2025-01-09 02:11:12,495 - DEBUG -   Entering history()
2025-01-09 02:11:12,496 - DEBUG - TECH: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:12,496 - DEBUG -    Entering get()
2025-01-09 02:11:12,496 - DEBUG -     Entering _make_request()
2025-01-09 02:11:12,496 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TECH
2025-01-09 02:11:12,496 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:12,496 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:12,496 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:12,496 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:12,496 - DEBUG - reusing cookie
2025-01-09 02:11:12,496 - DEBUG - reusing crumb
2025-01-09 02:11:12,496 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:12,496 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:12,650 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TECH?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1015
2025-01-09 02:11:12,651 - DEBUG - response code=200
2025-01-09 02:11:12,651 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:12,651 - DEBUG -    Exiting get()
2025-01-09 02:11:12,658 - ERROR - 
1 Failed download:
2025-01-09 02:11:12,658 - ERROR - ['TECH']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:12,658 - DEBUG - ['TECH']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:12,665 - DEBUG - Exiting download()
2025-01-09 02:11:12,790 - ERROR - Error writing data for TECH to DB: schema "np" does not exist
LINE 4:             VALUES ('TECH','2020-01-02'::date,np.float64(54....
                                                      ^

2025-01-09 02:11:12,791 - DEBUG - Entering download()
2025-01-09 02:11:12,791 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:12,791 - DEBUG -  Entering history()
2025-01-09 02:11:12,791 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BIIB', 1, 0])
2025-01-09 02:11:12,791 - DEBUG -   Entering history()
2025-01-09 02:11:12,792 - DEBUG - BIIB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:12,792 - DEBUG -    Entering get()
2025-01-09 02:11:12,792 - DEBUG -     Entering _make_request()
2025-01-09 02:11:12,792 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BIIB
2025-01-09 02:11:12,792 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:12,792 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:12,792 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:12,792 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:12,793 - DEBUG - reusing cookie
2025-01-09 02:11:12,793 - DEBUG - reusing crumb
2025-01-09 02:11:12,793 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:12,793 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:12,918 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BIIB?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1005
2025-01-09 02:11:12,919 - DEBUG - response code=200
2025-01-09 02:11:12,919 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:12,919 - DEBUG -    Exiting get()
2025-01-09 02:11:12,925 - ERROR - 
1 Failed download:
2025-01-09 02:11:12,925 - ERROR - ['BIIB']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:12,926 - DEBUG - ['BIIB']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:12,933 - DEBUG - Exiting download()
2025-01-09 02:11:13,055 - ERROR - Error writing data for BIIB to DB: schema "np" does not exist
LINE 4:             VALUES ('BIIB','2020-01-02'::date,np.float64(299...
                                                      ^

2025-01-09 02:11:13,055 - DEBUG - Entering download()
2025-01-09 02:11:13,055 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:13,055 - DEBUG -  Entering history()
2025-01-09 02:11:13,056 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BLK', 1, 0])
2025-01-09 02:11:13,056 - DEBUG -   Entering history()
2025-01-09 02:11:13,057 - DEBUG - BLK: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:13,057 - DEBUG -    Entering get()
2025-01-09 02:11:13,057 - DEBUG -     Entering _make_request()
2025-01-09 02:11:13,057 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BLK
2025-01-09 02:11:13,057 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:13,057 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:13,057 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:13,057 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:13,057 - DEBUG - reusing cookie
2025-01-09 02:11:13,057 - DEBUG - reusing crumb
2025-01-09 02:11:13,057 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:13,057 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:13,204 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BLK?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1008
2025-01-09 02:11:13,205 - DEBUG - response code=200
2025-01-09 02:11:13,206 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:13,206 - DEBUG -    Exiting get()
2025-01-09 02:11:13,212 - ERROR - 
1 Failed download:
2025-01-09 02:11:13,212 - ERROR - ['BLK']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:13,212 - DEBUG - ['BLK']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:13,219 - DEBUG - Exiting download()
2025-01-09 02:11:13,220 - WARNING - Ticker BLK is missing 'Close' column. Skipping.
2025-01-09 02:11:13,220 - DEBUG - Entering download()
2025-01-09 02:11:13,220 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:13,220 - DEBUG -  Entering history()
2025-01-09 02:11:13,221 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BX', 1, 0])
2025-01-09 02:11:13,222 - DEBUG -   Entering history()
2025-01-09 02:11:13,224 - DEBUG - BX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:13,224 - DEBUG -    Entering get()
2025-01-09 02:11:13,224 - DEBUG -     Entering _make_request()
2025-01-09 02:11:13,224 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BX
2025-01-09 02:11:13,225 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:13,225 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:13,225 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:13,225 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:13,225 - DEBUG - reusing cookie
2025-01-09 02:11:13,225 - DEBUG - reusing crumb
2025-01-09 02:11:13,226 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:13,226 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:13,382 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BX?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1006
2025-01-09 02:11:13,383 - DEBUG - response code=200
2025-01-09 02:11:13,384 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:13,384 - DEBUG -    Exiting get()
2025-01-09 02:11:13,390 - ERROR - 
1 Failed download:
2025-01-09 02:11:13,390 - ERROR - ['BX']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:13,390 - DEBUG - ['BX']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:13,397 - DEBUG - Exiting download()
2025-01-09 02:11:13,618 - ERROR - Error writing data for BX to DB: schema "np" does not exist
LINE 4:             VALUES ('BX','2020-01-02'::date,np.float64(47.15...
                                                    ^

2025-01-09 02:11:13,619 - DEBUG - Entering download()
2025-01-09 02:11:13,619 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:13,619 - DEBUG -  Entering history()
2025-01-09 02:11:13,619 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BK', 1, 0])
2025-01-09 02:11:13,620 - DEBUG -   Entering history()
2025-01-09 02:11:13,620 - DEBUG - BK: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:13,620 - DEBUG -    Entering get()
2025-01-09 02:11:13,620 - DEBUG -     Entering _make_request()
2025-01-09 02:11:13,620 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BK
2025-01-09 02:11:13,620 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:13,620 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:13,621 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:13,621 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:13,621 - DEBUG - reusing cookie
2025-01-09 02:11:13,621 - DEBUG - reusing crumb
2025-01-09 02:11:13,621 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:13,621 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:13,796 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BK?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1042
2025-01-09 02:11:13,797 - DEBUG - response code=200
2025-01-09 02:11:13,797 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:13,797 - DEBUG -    Exiting get()
2025-01-09 02:11:13,803 - ERROR - 
1 Failed download:
2025-01-09 02:11:13,803 - ERROR - ['BK']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:13,804 - DEBUG - ['BK']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:13,811 - DEBUG - Exiting download()
2025-01-09 02:11:13,811 - WARNING - Ticker BK is missing 'Close' column. Skipping.
2025-01-09 02:11:13,811 - DEBUG - Entering download()
2025-01-09 02:11:13,811 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:13,812 - DEBUG -  Entering history()
2025-01-09 02:11:13,813 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BA', 1, 0])
2025-01-09 02:11:13,813 - DEBUG -   Entering history()
2025-01-09 02:11:13,814 - DEBUG - BA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:13,815 - DEBUG -    Entering get()
2025-01-09 02:11:13,815 - DEBUG -     Entering _make_request()
2025-01-09 02:11:13,815 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BA
2025-01-09 02:11:13,815 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:13,815 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:13,815 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:13,815 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:13,815 - DEBUG - reusing cookie
2025-01-09 02:11:13,816 - DEBUG - reusing crumb
2025-01-09 02:11:13,816 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:13,816 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:14,003 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BA?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1018
2025-01-09 02:11:14,004 - DEBUG - response code=200
2025-01-09 02:11:14,004 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:14,004 - DEBUG -    Exiting get()
2025-01-09 02:11:14,010 - ERROR - 
1 Failed download:
2025-01-09 02:11:14,011 - ERROR - ['BA']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:14,011 - DEBUG - ['BA']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:14,018 - DEBUG - Exiting download()
2025-01-09 02:11:14,148 - ERROR - Error writing data for BA to DB: schema "np" does not exist
LINE 4:             VALUES ('BA','2020-01-02'::date,np.float64(326.6...
                                                    ^

2025-01-09 02:11:14,148 - DEBUG - Entering download()
2025-01-09 02:11:14,149 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:14,149 - DEBUG -  Entering history()
2025-01-09 02:11:14,149 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BKNG', 1, 0])
2025-01-09 02:11:14,149 - DEBUG -   Entering history()
2025-01-09 02:11:14,150 - DEBUG - BKNG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:14,150 - DEBUG -    Entering get()
2025-01-09 02:11:14,150 - DEBUG -     Entering _make_request()
2025-01-09 02:11:14,150 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BKNG
2025-01-09 02:11:14,150 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:14,150 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:14,150 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:14,150 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:14,150 - DEBUG - reusing cookie
2025-01-09 02:11:14,150 - DEBUG - reusing crumb
2025-01-09 02:11:14,151 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:14,151 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:14,304 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BKNG?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1039
2025-01-09 02:11:14,305 - DEBUG - response code=200
2025-01-09 02:11:14,305 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:14,306 - DEBUG -    Exiting get()
2025-01-09 02:11:14,311 - ERROR - 
1 Failed download:
2025-01-09 02:11:14,311 - ERROR - ['BKNG']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:14,311 - DEBUG - ['BKNG']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:14,313 - DEBUG - Exiting download()
2025-01-09 02:11:14,417 - ERROR - Error writing data for BKNG to DB: schema "np" does not exist
LINE 4:             VALUES ('BKNG','2020-01-02'::date,np.float64(205...
                                                      ^

2025-01-09 02:11:14,417 - DEBUG - Entering download()
2025-01-09 02:11:14,417 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:14,418 - DEBUG -  Entering history()
2025-01-09 02:11:14,418 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BWA', 1, 0])
2025-01-09 02:11:14,418 - DEBUG -   Entering history()
2025-01-09 02:11:14,419 - DEBUG - BWA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:14,419 - DEBUG -    Entering get()
2025-01-09 02:11:14,419 - DEBUG -     Entering _make_request()
2025-01-09 02:11:14,419 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BWA
2025-01-09 02:11:14,419 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:14,419 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:14,419 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:14,419 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:14,419 - DEBUG - reusing cookie
2025-01-09 02:11:14,419 - DEBUG - reusing crumb
2025-01-09 02:11:14,419 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:14,419 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:14,567 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BWA?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1003
2025-01-09 02:11:14,568 - DEBUG - response code=200
2025-01-09 02:11:14,569 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:14,569 - DEBUG -    Exiting get()
2025-01-09 02:11:14,575 - ERROR - 
1 Failed download:
2025-01-09 02:11:14,575 - ERROR - ['BWA']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:14,575 - DEBUG - ['BWA']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:14,582 - DEBUG - Exiting download()
2025-01-09 02:11:14,704 - ERROR - Error writing data for BWA to DB: schema "np" does not exist
LINE 4:             VALUES ('BWA','2020-01-02'::date,np.float64(35.8...
                                                     ^

2025-01-09 02:11:14,704 - DEBUG - Entering download()
2025-01-09 02:11:14,704 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:14,705 - DEBUG -  Entering history()
2025-01-09 02:11:14,705 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BSX', 1, 0])
2025-01-09 02:11:14,705 - DEBUG -   Entering history()
2025-01-09 02:11:14,706 - DEBUG - BSX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:14,706 - DEBUG -    Entering get()
2025-01-09 02:11:14,706 - DEBUG -     Entering _make_request()
2025-01-09 02:11:14,706 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BSX
2025-01-09 02:11:14,706 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:14,706 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:14,706 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:14,706 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:14,706 - DEBUG - reusing cookie
2025-01-09 02:11:14,706 - DEBUG - reusing crumb
2025-01-09 02:11:14,706 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:14,706 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:14,843 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BSX?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1033
2025-01-09 02:11:14,844 - DEBUG - response code=200
2025-01-09 02:11:14,844 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:14,844 - DEBUG -    Exiting get()
2025-01-09 02:11:14,848 - ERROR - 
1 Failed download:
2025-01-09 02:11:14,848 - ERROR - ['BSX']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:14,848 - DEBUG - ['BSX']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:14,853 - DEBUG - Exiting download()
2025-01-09 02:11:14,973 - ERROR - Error writing data for BSX to DB: schema "np" does not exist
LINE 4:             VALUES ('BSX','2020-01-02'::date,np.float64(45.5...
                                                     ^

2025-01-09 02:11:14,974 - DEBUG - Entering download()
2025-01-09 02:11:14,974 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:14,974 - DEBUG -  Entering history()
2025-01-09 02:11:14,974 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BMY', 1, 0])
2025-01-09 02:11:14,974 - DEBUG -   Entering history()
2025-01-09 02:11:14,975 - DEBUG - BMY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:14,975 - DEBUG -    Entering get()
2025-01-09 02:11:14,975 - DEBUG -     Entering _make_request()
2025-01-09 02:11:14,975 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BMY
2025-01-09 02:11:14,975 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:14,976 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:14,976 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:14,976 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:14,976 - DEBUG - reusing cookie
2025-01-09 02:11:14,976 - DEBUG - reusing crumb
2025-01-09 02:11:14,976 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:14,976 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:15,190 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BMY?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1055
2025-01-09 02:11:15,191 - DEBUG - response code=200
2025-01-09 02:11:15,192 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:15,192 - DEBUG -    Exiting get()
2025-01-09 02:11:15,198 - ERROR - 
1 Failed download:
2025-01-09 02:11:15,198 - ERROR - ['BMY']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:15,198 - DEBUG - ['BMY']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:15,205 - DEBUG - Exiting download()
2025-01-09 02:11:15,316 - ERROR - Error writing data for BMY to DB: schema "np" does not exist
LINE 4:             VALUES ('BMY','2020-01-02'::date,np.float64(53.3...
                                                     ^

2025-01-09 02:11:15,316 - DEBUG - Entering download()
2025-01-09 02:11:15,316 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:15,317 - DEBUG -  Entering history()
2025-01-09 02:11:15,317 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AVGO', 1, 0])
2025-01-09 02:11:15,317 - DEBUG -   Entering history()
2025-01-09 02:11:15,318 - DEBUG - AVGO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:15,318 - DEBUG -    Entering get()
2025-01-09 02:11:15,318 - DEBUG -     Entering _make_request()
2025-01-09 02:11:15,318 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AVGO
2025-01-09 02:11:15,318 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:15,318 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:15,318 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:15,318 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:15,318 - DEBUG - reusing cookie
2025-01-09 02:11:15,318 - DEBUG - reusing crumb
2025-01-09 02:11:15,318 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:15,318 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:15,465 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AVGO?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1013
2025-01-09 02:11:15,466 - DEBUG - response code=200
2025-01-09 02:11:15,466 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:15,467 - DEBUG -    Exiting get()
2025-01-09 02:11:15,470 - ERROR - 
1 Failed download:
2025-01-09 02:11:15,470 - ERROR - ['AVGO']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:15,470 - DEBUG - ['AVGO']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:15,472 - DEBUG - Exiting download()
2025-01-09 02:11:15,577 - ERROR - Error writing data for AVGO to DB: schema "np" does not exist
LINE 4:             VALUES ('AVGO','2020-01-02'::date,np.float64(27....
                                                      ^

2025-01-09 02:11:15,578 - DEBUG - Entering download()
2025-01-09 02:11:15,578 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:15,578 - DEBUG -  Entering history()
2025-01-09 02:11:15,578 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BR', 1, 0])
2025-01-09 02:11:15,579 - DEBUG -   Entering history()
2025-01-09 02:11:15,579 - DEBUG - BR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:15,579 - DEBUG -    Entering get()
2025-01-09 02:11:15,579 - DEBUG -     Entering _make_request()
2025-01-09 02:11:15,579 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BR
2025-01-09 02:11:15,580 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:15,580 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:15,580 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:15,580 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:15,580 - DEBUG - reusing cookie
2025-01-09 02:11:15,580 - DEBUG - reusing crumb
2025-01-09 02:11:15,580 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:15,580 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:15,732 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1045
2025-01-09 02:11:15,733 - DEBUG - response code=200
2025-01-09 02:11:15,733 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:15,734 - DEBUG -    Exiting get()
2025-01-09 02:11:15,740 - ERROR - 
1 Failed download:
2025-01-09 02:11:15,740 - ERROR - ['BR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:15,740 - DEBUG - ['BR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:15,747 - DEBUG - Exiting download()
2025-01-09 02:11:15,748 - WARNING - Ticker BR is missing 'Close' column. Skipping.
2025-01-09 02:11:15,748 - DEBUG - Entering download()
2025-01-09 02:11:15,748 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:15,749 - DEBUG -  Entering history()
2025-01-09 02:11:15,749 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BRO', 1, 0])
2025-01-09 02:11:15,750 - DEBUG -   Entering history()
2025-01-09 02:11:15,751 - DEBUG - BRO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:15,751 - DEBUG -    Entering get()
2025-01-09 02:11:15,752 - DEBUG -     Entering _make_request()
2025-01-09 02:11:15,752 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BRO
2025-01-09 02:11:15,752 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:15,752 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:15,752 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:15,752 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:15,752 - DEBUG - reusing cookie
2025-01-09 02:11:15,752 - DEBUG - reusing crumb
2025-01-09 02:11:15,752 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:15,753 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:15,918 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BRO?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1013
2025-01-09 02:11:15,919 - DEBUG - response code=200
2025-01-09 02:11:15,919 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:15,919 - DEBUG -    Exiting get()
2025-01-09 02:11:15,923 - ERROR - 
1 Failed download:
2025-01-09 02:11:15,923 - ERROR - ['BRO']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:15,923 - DEBUG - ['BRO']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:15,925 - DEBUG - Exiting download()
2025-01-09 02:11:16,028 - ERROR - Error writing data for BRO to DB: schema "np" does not exist
LINE 4:             VALUES ('BRO','2020-01-02'::date,np.float64(38.2...
                                                     ^

2025-01-09 02:11:16,029 - DEBUG - Entering download()
2025-01-09 02:11:16,029 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:16,029 - DEBUG -  Entering history()
2025-01-09 02:11:16,029 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BF-B', 1, 0])
2025-01-09 02:11:16,030 - DEBUG -   Entering history()
2025-01-09 02:11:16,030 - DEBUG - BF-B: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:16,030 - DEBUG -    Entering get()
2025-01-09 02:11:16,031 - DEBUG -     Entering _make_request()
2025-01-09 02:11:16,031 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BF-B
2025-01-09 02:11:16,031 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:16,031 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:16,031 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:16,031 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:16,031 - DEBUG - reusing cookie
2025-01-09 02:11:16,031 - DEBUG - reusing crumb
2025-01-09 02:11:16,031 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:16,031 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:16,215 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BF-B?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1014
2025-01-09 02:11:16,216 - DEBUG - response code=200
2025-01-09 02:11:16,217 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:16,217 - DEBUG -    Exiting get()
2025-01-09 02:11:16,223 - ERROR - 
1 Failed download:
2025-01-09 02:11:16,224 - ERROR - ['BF-B']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:16,224 - DEBUG - ['BF-B']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:16,231 - DEBUG - Exiting download()
2025-01-09 02:11:16,351 - ERROR - Error writing data for BF-B to DB: schema "np" does not exist
LINE 4:             VALUES ('BF-B','2020-01-02'::date,np.float64(62....
                                                      ^

2025-01-09 02:11:16,351 - DEBUG - Entering download()
2025-01-09 02:11:16,352 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:16,352 - DEBUG -  Entering history()
2025-01-09 02:11:16,352 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BLDR', 1, 0])
2025-01-09 02:11:16,352 - DEBUG -   Entering history()
2025-01-09 02:11:16,353 - DEBUG - BLDR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:16,353 - DEBUG -    Entering get()
2025-01-09 02:11:16,353 - DEBUG -     Entering _make_request()
2025-01-09 02:11:16,353 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BLDR
2025-01-09 02:11:16,353 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:16,353 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:16,353 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:16,353 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:16,353 - DEBUG - reusing cookie
2025-01-09 02:11:16,353 - DEBUG - reusing crumb
2025-01-09 02:11:16,353 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:16,353 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:16,490 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BLDR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1030
2025-01-09 02:11:16,491 - DEBUG - response code=200
2025-01-09 02:11:16,491 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:16,491 - DEBUG -    Exiting get()
2025-01-09 02:11:16,495 - ERROR - 
1 Failed download:
2025-01-09 02:11:16,495 - ERROR - ['BLDR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:16,495 - DEBUG - ['BLDR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:16,500 - DEBUG - Exiting download()
2025-01-09 02:11:16,624 - ERROR - Error writing data for BLDR to DB: schema "np" does not exist
LINE 4:             VALUES ('BLDR','2020-01-02'::date,np.float64(25....
                                                      ^

2025-01-09 02:11:16,624 - DEBUG - Entering download()
2025-01-09 02:11:16,624 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:16,625 - DEBUG -  Entering history()
2025-01-09 02:11:16,625 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BG', 1, 0])
2025-01-09 02:11:16,625 - DEBUG -   Entering history()
2025-01-09 02:11:16,626 - DEBUG - BG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:16,626 - DEBUG -    Entering get()
2025-01-09 02:11:16,626 - DEBUG -     Entering _make_request()
2025-01-09 02:11:16,626 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BG
2025-01-09 02:11:16,626 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:16,626 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:16,626 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:16,626 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:16,626 - DEBUG - reusing cookie
2025-01-09 02:11:16,626 - DEBUG - reusing crumb
2025-01-09 02:11:16,626 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:16,626 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:16,792 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BG?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1001
2025-01-09 02:11:16,793 - DEBUG - response code=200
2025-01-09 02:11:16,794 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:16,794 - DEBUG -    Exiting get()
2025-01-09 02:11:16,800 - ERROR - 
1 Failed download:
2025-01-09 02:11:16,800 - ERROR - ['BG']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:16,800 - DEBUG - ['BG']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:16,807 - DEBUG - Exiting download()
2025-01-09 02:11:16,928 - ERROR - Error writing data for BG to DB: schema "np" does not exist
LINE 4:             VALUES ('BG','2020-01-02'::date,np.float64(50.18...
                                                    ^

2025-01-09 02:11:16,929 - DEBUG - Entering download()
2025-01-09 02:11:16,929 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:16,929 - DEBUG -  Entering history()
2025-01-09 02:11:16,929 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BXP', 1, 0])
2025-01-09 02:11:16,930 - DEBUG -   Entering history()
2025-01-09 02:11:16,930 - DEBUG - BXP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:16,930 - DEBUG -    Entering get()
2025-01-09 02:11:16,930 - DEBUG -     Entering _make_request()
2025-01-09 02:11:16,930 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BXP
2025-01-09 02:11:16,931 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:16,931 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:16,931 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:16,931 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:16,931 - DEBUG - reusing cookie
2025-01-09 02:11:16,931 - DEBUG - reusing crumb
2025-01-09 02:11:16,931 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:16,931 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:17,102 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BXP?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 994
2025-01-09 02:11:17,103 - DEBUG - response code=200
2025-01-09 02:11:17,103 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:17,103 - DEBUG -    Exiting get()
2025-01-09 02:11:17,109 - ERROR - 
1 Failed download:
2025-01-09 02:11:17,110 - ERROR - ['BXP']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:17,110 - DEBUG - ['BXP']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:17,116 - DEBUG - Exiting download()
2025-01-09 02:11:17,117 - WARNING - Ticker BXP is missing 'Close' column. Skipping.
2025-01-09 02:11:17,117 - DEBUG - Entering download()
2025-01-09 02:11:17,117 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:17,117 - DEBUG -  Entering history()
2025-01-09 02:11:17,118 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CHRW', 1, 0])
2025-01-09 02:11:17,119 - DEBUG -   Entering history()
2025-01-09 02:11:17,121 - DEBUG - CHRW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:17,121 - DEBUG -    Entering get()
2025-01-09 02:11:17,121 - DEBUG -     Entering _make_request()
2025-01-09 02:11:17,122 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CHRW
2025-01-09 02:11:17,122 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:17,122 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:17,122 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:17,122 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:17,122 - DEBUG - reusing cookie
2025-01-09 02:11:17,123 - DEBUG - reusing crumb
2025-01-09 02:11:17,123 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:17,123 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:17,297 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CHRW?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1037
2025-01-09 02:11:17,298 - DEBUG - response code=200
2025-01-09 02:11:17,299 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:17,299 - DEBUG -    Exiting get()
2025-01-09 02:11:17,305 - ERROR - 
1 Failed download:
2025-01-09 02:11:17,305 - ERROR - ['CHRW']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:17,305 - DEBUG - ['CHRW']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:17,312 - DEBUG - Exiting download()
2025-01-09 02:11:17,426 - ERROR - Error writing data for CHRW to DB: schema "np" does not exist
LINE 4:             VALUES ('CHRW','2020-01-02'::date,np.float64(69....
                                                      ^

2025-01-09 02:11:17,427 - DEBUG - Entering download()
2025-01-09 02:11:17,427 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:17,427 - DEBUG -  Entering history()
2025-01-09 02:11:17,427 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CDNS', 1, 0])
2025-01-09 02:11:17,428 - DEBUG -   Entering history()
2025-01-09 02:11:17,428 - DEBUG - CDNS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:17,429 - DEBUG -    Entering get()
2025-01-09 02:11:17,429 - DEBUG -     Entering _make_request()
2025-01-09 02:11:17,429 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CDNS
2025-01-09 02:11:17,429 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:17,429 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:17,429 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:17,429 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:17,429 - DEBUG - reusing cookie
2025-01-09 02:11:17,429 - DEBUG - reusing crumb
2025-01-09 02:11:17,429 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:17,429 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:17,557 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CDNS?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1039
2025-01-09 02:11:17,558 - DEBUG - response code=200
2025-01-09 02:11:17,558 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:17,558 - DEBUG -    Exiting get()
2025-01-09 02:11:17,561 - ERROR - 
1 Failed download:
2025-01-09 02:11:17,561 - ERROR - ['CDNS']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:17,562 - DEBUG - ['CDNS']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:17,565 - DEBUG - Exiting download()
2025-01-09 02:11:17,685 - ERROR - Error writing data for CDNS to DB: schema "np" does not exist
LINE 4:             VALUES ('CDNS','2020-01-02'::date,np.float64(70....
                                                      ^

2025-01-09 02:11:17,685 - DEBUG - Entering download()
2025-01-09 02:11:17,685 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:17,685 - DEBUG -  Entering history()
2025-01-09 02:11:17,686 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CZR', 1, 0])
2025-01-09 02:11:17,686 - DEBUG -   Entering history()
2025-01-09 02:11:17,687 - DEBUG - CZR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:17,687 - DEBUG -    Entering get()
2025-01-09 02:11:17,687 - DEBUG -     Entering _make_request()
2025-01-09 02:11:17,687 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CZR
2025-01-09 02:11:17,687 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:17,687 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:17,687 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:17,687 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:17,687 - DEBUG - reusing cookie
2025-01-09 02:11:17,687 - DEBUG - reusing crumb
2025-01-09 02:11:17,687 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:17,687 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:17,833 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CZR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1032
2025-01-09 02:11:17,833 - DEBUG - response code=200
2025-01-09 02:11:17,834 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:17,834 - DEBUG -    Exiting get()
2025-01-09 02:11:17,836 - ERROR - 
1 Failed download:
2025-01-09 02:11:17,836 - ERROR - ['CZR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:17,836 - DEBUG - ['CZR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:17,839 - DEBUG - Exiting download()
2025-01-09 02:11:17,942 - ERROR - Error writing data for CZR to DB: schema "np" does not exist
LINE 4:             VALUES ('CZR','2020-01-02'::date,np.float64(60.2...
                                                     ^

2025-01-09 02:11:17,943 - DEBUG - Entering download()
2025-01-09 02:11:17,943 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:17,943 - DEBUG -  Entering history()
2025-01-09 02:11:17,943 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CPT', 1, 0])
2025-01-09 02:11:17,943 - DEBUG -   Entering history()
2025-01-09 02:11:17,944 - DEBUG - CPT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:17,944 - DEBUG -    Entering get()
2025-01-09 02:11:17,944 - DEBUG -     Entering _make_request()
2025-01-09 02:11:17,944 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CPT
2025-01-09 02:11:17,944 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:17,944 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:17,944 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:17,944 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:17,944 - DEBUG - reusing cookie
2025-01-09 02:11:17,944 - DEBUG - reusing crumb
2025-01-09 02:11:17,944 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:17,944 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:18,098 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CPT?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1018
2025-01-09 02:11:18,099 - DEBUG - response code=200
2025-01-09 02:11:18,099 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:18,099 - DEBUG -    Exiting get()
2025-01-09 02:11:18,105 - ERROR - 
1 Failed download:
2025-01-09 02:11:18,105 - ERROR - ['CPT']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:18,105 - DEBUG - ['CPT']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:18,112 - DEBUG - Exiting download()
2025-01-09 02:11:18,226 - ERROR - Error writing data for CPT to DB: schema "np" does not exist
LINE 4:             VALUES ('CPT','2020-01-02'::date,np.float64(90.2...
                                                     ^

2025-01-09 02:11:18,227 - DEBUG - Entering download()
2025-01-09 02:11:18,227 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:18,227 - DEBUG -  Entering history()
2025-01-09 02:11:18,228 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CPB', 1, 0])
2025-01-09 02:11:18,228 - DEBUG -   Entering history()
2025-01-09 02:11:18,229 - DEBUG - CPB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:18,229 - DEBUG -    Entering get()
2025-01-09 02:11:18,229 - DEBUG -     Entering _make_request()
2025-01-09 02:11:18,229 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CPB
2025-01-09 02:11:18,229 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:18,229 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:18,229 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:18,229 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:18,229 - DEBUG - reusing cookie
2025-01-09 02:11:18,229 - DEBUG - reusing crumb
2025-01-09 02:11:18,229 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:18,229 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:18,426 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CPB?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1020
2025-01-09 02:11:18,427 - DEBUG - response code=200
2025-01-09 02:11:18,427 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:18,427 - DEBUG -    Exiting get()
2025-01-09 02:11:18,433 - ERROR - 
1 Failed download:
2025-01-09 02:11:18,435 - ERROR - ['CPB']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:18,436 - DEBUG - ['CPB']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:18,443 - DEBUG - Exiting download()
2025-01-09 02:11:18,443 - WARNING - Ticker CPB is missing 'Close' column. Skipping.
2025-01-09 02:11:18,443 - DEBUG - Entering download()
2025-01-09 02:11:18,443 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:18,444 - DEBUG -  Entering history()
2025-01-09 02:11:18,445 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['COF', 1, 0])
2025-01-09 02:11:18,445 - DEBUG -   Entering history()
2025-01-09 02:11:18,446 - DEBUG - COF: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:18,447 - DEBUG -    Entering get()
2025-01-09 02:11:18,447 - DEBUG -     Entering _make_request()
2025-01-09 02:11:18,447 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/COF
2025-01-09 02:11:18,447 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:18,447 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:18,447 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:18,447 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:18,448 - DEBUG - reusing cookie
2025-01-09 02:11:18,448 - DEBUG - reusing crumb
2025-01-09 02:11:18,448 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:18,448 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:18,618 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/COF?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1042
2025-01-09 02:11:18,619 - DEBUG - response code=200
2025-01-09 02:11:18,619 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:18,619 - DEBUG -    Exiting get()
2025-01-09 02:11:18,625 - ERROR - 
1 Failed download:
2025-01-09 02:11:18,626 - ERROR - ['COF']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:18,626 - DEBUG - ['COF']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:18,633 - DEBUG - Exiting download()
2025-01-09 02:11:18,633 - WARNING - Ticker COF is missing 'Close' column. Skipping.
2025-01-09 02:11:18,633 - DEBUG - Entering download()
2025-01-09 02:11:18,634 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:18,634 - DEBUG -  Entering history()
2025-01-09 02:11:18,635 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CAH', 1, 0])
2025-01-09 02:11:18,635 - DEBUG -   Entering history()
2025-01-09 02:11:18,636 - DEBUG - CAH: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:18,637 - DEBUG -    Entering get()
2025-01-09 02:11:18,637 - DEBUG -     Entering _make_request()
2025-01-09 02:11:18,637 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CAH
2025-01-09 02:11:18,637 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:18,637 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:18,637 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:18,637 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:18,638 - DEBUG - reusing cookie
2025-01-09 02:11:18,638 - DEBUG - reusing crumb
2025-01-09 02:11:18,638 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:18,638 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:18,810 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CAH?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1019
2025-01-09 02:11:18,811 - DEBUG - response code=200
2025-01-09 02:11:18,811 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:18,811 - DEBUG -    Exiting get()
2025-01-09 02:11:18,818 - ERROR - 
1 Failed download:
2025-01-09 02:11:18,818 - ERROR - ['CAH']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:18,818 - DEBUG - ['CAH']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:18,825 - DEBUG - Exiting download()
2025-01-09 02:11:18,936 - ERROR - Error writing data for CAH to DB: schema "np" does not exist
LINE 4:             VALUES ('CAH','2020-01-02'::date,np.float64(43.9...
                                                     ^

2025-01-09 02:11:18,936 - DEBUG - Entering download()
2025-01-09 02:11:18,936 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:18,936 - DEBUG -  Entering history()
2025-01-09 02:11:18,937 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['KMX', 1, 0])
2025-01-09 02:11:18,937 - DEBUG -   Entering history()
2025-01-09 02:11:18,937 - DEBUG - KMX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:18,937 - DEBUG -    Entering get()
2025-01-09 02:11:18,937 - DEBUG -     Entering _make_request()
2025-01-09 02:11:18,938 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/KMX
2025-01-09 02:11:18,938 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:18,938 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:18,938 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:18,938 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:18,938 - DEBUG - reusing cookie
2025-01-09 02:11:18,938 - DEBUG - reusing crumb
2025-01-09 02:11:18,938 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:18,938 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:19,064 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/KMX?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 995
2025-01-09 02:11:19,065 - DEBUG - response code=200
2025-01-09 02:11:19,065 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:19,065 - DEBUG -    Exiting get()
2025-01-09 02:11:19,068 - ERROR - 
1 Failed download:
2025-01-09 02:11:19,068 - ERROR - ['KMX']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:19,068 - DEBUG - ['KMX']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:19,071 - DEBUG - Exiting download()
2025-01-09 02:11:19,071 - WARNING - Ticker KMX is missing 'Close' column. Skipping.
2025-01-09 02:11:19,072 - DEBUG - Entering download()
2025-01-09 02:11:19,072 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:19,072 - DEBUG -  Entering history()
2025-01-09 02:11:19,072 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CCL', 1, 0])
2025-01-09 02:11:19,073 - DEBUG -   Entering history()
2025-01-09 02:11:19,074 - DEBUG - CCL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:19,074 - DEBUG -    Entering get()
2025-01-09 02:11:19,074 - DEBUG -     Entering _make_request()
2025-01-09 02:11:19,074 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CCL
2025-01-09 02:11:19,074 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:19,074 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:19,074 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:19,074 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:19,074 - DEBUG - reusing cookie
2025-01-09 02:11:19,074 - DEBUG - reusing crumb
2025-01-09 02:11:19,075 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:19,075 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:19,273 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CCL?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1020
2025-01-09 02:11:19,274 - DEBUG - response code=200
2025-01-09 02:11:19,274 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:19,274 - DEBUG -    Exiting get()
2025-01-09 02:11:19,280 - ERROR - 
1 Failed download:
2025-01-09 02:11:19,280 - ERROR - ['CCL']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:19,281 - DEBUG - ['CCL']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:19,288 - DEBUG - Exiting download()
2025-01-09 02:11:19,398 - ERROR - Error writing data for CCL to DB: schema "np" does not exist
LINE 4:             VALUES ('CCL','2020-01-02'::date,np.float64(50.7...
                                                     ^

2025-01-09 02:11:19,399 - DEBUG - Entering download()
2025-01-09 02:11:19,399 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:19,399 - DEBUG -  Entering history()
2025-01-09 02:11:19,400 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CARR', 1, 0])
2025-01-09 02:11:19,400 - DEBUG -   Entering history()
2025-01-09 02:11:19,400 - DEBUG - CARR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:19,401 - DEBUG -    Entering get()
2025-01-09 02:11:19,401 - DEBUG -     Entering _make_request()
2025-01-09 02:11:19,401 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CARR
2025-01-09 02:11:19,401 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:19,401 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:19,401 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:19,401 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:19,401 - DEBUG - reusing cookie
2025-01-09 02:11:19,401 - DEBUG - reusing crumb
2025-01-09 02:11:19,401 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:19,401 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:19,534 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CARR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:11:19,535 - DEBUG - response code=400
2025-01-09 02:11:19,536 - DEBUG - toggling cookie strategy basic -> csrf
2025-01-09 02:11:19,536 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:19,536 - DEBUG - cookie_mode = 'csrf'
2025-01-09 02:11:19,536 - DEBUG -       Entering _get_crumb_csrf()
2025-01-09 02:11:19,537 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['csrf', 1, 0])
2025-01-09 02:11:19,712 - DEBUG - https://guce.yahoo.com:443 "GET /consent HTTP/1.1" 302 0
2025-01-09 02:11:20,031 - DEBUG - https://www.yahoo.com:443 "GET /?guccounter=1 HTTP/1.1" 200 None
2025-01-09 02:11:20,493 - DEBUG - Failed to find "csrfToken" in response
2025-01-09 02:11:20,494 - DEBUG -       Exiting _get_crumb_csrf()
2025-01-09 02:11:20,494 - DEBUG - toggling cookie strategy csrf -> basic
2025-01-09 02:11:20,494 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:20,494 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['basic', 1, 0])
2025-01-09 02:11:20,494 - DEBUG - loaded persistent cookie
2025-01-09 02:11:20,494 - DEBUG - reusing cookie
2025-01-09 02:11:20,614 - DEBUG - https://query1.finance.yahoo.com:443 "GET /v1/test/getcrumb HTTP/1.1" 200 11
2025-01-09 02:11:20,614 - DEBUG - crumb = 'mbrlfmeSllh'
2025-01-09 02:11:20,614 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:20,614 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:20,752 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CARR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:11:20,753 - DEBUG - response code=400
2025-01-09 02:11:20,753 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:20,754 - DEBUG -    Exiting get()
2025-01-09 02:11:20,757 - ERROR - 
1 Failed download:
2025-01-09 02:11:20,757 - ERROR - ['CARR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn\'t exist for startDate = 1577854800, endDate = 1577941200")')
2025-01-09 02:11:20,757 - DEBUG - ['CARR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn't exist for startDate = 1577854800, endDate = 1577941200")

2025-01-09 02:11:20,759 - DEBUG - Exiting download()
2025-01-09 02:11:20,861 - ERROR - Error writing data for CARR to DB: schema "np" does not exist
LINE 4:             VALUES ('CARR','2020-03-19'::date,np.float64(11....
                                                      ^

2025-01-09 02:11:20,862 - DEBUG - Entering download()
2025-01-09 02:11:20,862 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:20,862 - DEBUG -  Entering history()
2025-01-09 02:11:20,862 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CAT', 1, 0])
2025-01-09 02:11:20,863 - DEBUG -   Entering history()
2025-01-09 02:11:20,864 - DEBUG - CAT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:20,864 - DEBUG -    Entering get()
2025-01-09 02:11:20,864 - DEBUG -     Entering _make_request()
2025-01-09 02:11:20,864 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CAT
2025-01-09 02:11:20,864 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:20,864 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:20,864 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:20,864 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:20,864 - DEBUG - reusing cookie
2025-01-09 02:11:20,864 - DEBUG - reusing crumb
2025-01-09 02:11:20,864 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:20,864 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:21,088 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CAT?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1011
2025-01-09 02:11:21,089 - DEBUG - response code=200
2025-01-09 02:11:21,090 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:21,090 - DEBUG -    Exiting get()
2025-01-09 02:11:21,094 - ERROR - 
1 Failed download:
2025-01-09 02:11:21,094 - ERROR - ['CAT']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:21,094 - DEBUG - ['CAT']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:21,096 - DEBUG - Exiting download()
2025-01-09 02:11:21,096 - WARNING - Ticker CAT is missing 'Close' column. Skipping.
2025-01-09 02:11:21,096 - DEBUG - Entering download()
2025-01-09 02:11:21,097 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:21,097 - DEBUG -  Entering history()
2025-01-09 02:11:21,097 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CBOE', 1, 0])
2025-01-09 02:11:21,097 - DEBUG -   Entering history()
2025-01-09 02:11:21,098 - DEBUG - CBOE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:21,098 - DEBUG -    Entering get()
2025-01-09 02:11:21,098 - DEBUG -     Entering _make_request()
2025-01-09 02:11:21,098 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CBOE
2025-01-09 02:11:21,098 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:21,098 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:21,098 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:21,098 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:21,098 - DEBUG - reusing cookie
2025-01-09 02:11:21,098 - DEBUG - reusing crumb
2025-01-09 02:11:21,098 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:21,098 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:21,282 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CBOE?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1032
2025-01-09 02:11:21,283 - DEBUG - response code=200
2025-01-09 02:11:21,284 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:21,284 - DEBUG -    Exiting get()
2025-01-09 02:11:21,290 - ERROR - 
1 Failed download:
2025-01-09 02:11:21,290 - ERROR - ['CBOE']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:21,290 - DEBUG - ['CBOE']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:21,298 - DEBUG - Exiting download()
2025-01-09 02:11:21,298 - WARNING - Ticker CBOE is missing 'Close' column. Skipping.
2025-01-09 02:11:21,299 - DEBUG - Entering download()
2025-01-09 02:11:21,299 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:21,299 - DEBUG -  Entering history()
2025-01-09 02:11:21,300 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CBRE', 1, 0])
2025-01-09 02:11:21,300 - DEBUG -   Entering history()
2025-01-09 02:11:21,302 - DEBUG - CBRE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:21,302 - DEBUG -    Entering get()
2025-01-09 02:11:21,302 - DEBUG -     Entering _make_request()
2025-01-09 02:11:21,302 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CBRE
2025-01-09 02:11:21,302 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:21,302 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:21,303 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:21,303 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:21,303 - DEBUG - reusing cookie
2025-01-09 02:11:21,303 - DEBUG - reusing crumb
2025-01-09 02:11:21,303 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:21,303 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:21,452 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CBRE?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1007
2025-01-09 02:11:21,453 - DEBUG - response code=200
2025-01-09 02:11:21,454 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:21,454 - DEBUG -    Exiting get()
2025-01-09 02:11:21,460 - ERROR - 
1 Failed download:
2025-01-09 02:11:21,460 - ERROR - ['CBRE']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:21,460 - DEBUG - ['CBRE']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:21,467 - DEBUG - Exiting download()
2025-01-09 02:11:21,468 - WARNING - Ticker CBRE is missing 'Close' column. Skipping.
2025-01-09 02:11:21,468 - DEBUG - Entering download()
2025-01-09 02:11:21,468 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:21,469 - DEBUG -  Entering history()
2025-01-09 02:11:21,470 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CDW', 1, 0])
2025-01-09 02:11:21,470 - DEBUG -   Entering history()
2025-01-09 02:11:21,471 - DEBUG - CDW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:21,472 - DEBUG -    Entering get()
2025-01-09 02:11:21,472 - DEBUG -     Entering _make_request()
2025-01-09 02:11:21,472 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CDW
2025-01-09 02:11:21,472 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:21,472 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:21,473 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:21,473 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:21,473 - DEBUG - reusing cookie
2025-01-09 02:11:21,473 - DEBUG - reusing crumb
2025-01-09 02:11:21,473 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:21,473 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:21,622 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CDW?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1014
2025-01-09 02:11:21,623 - DEBUG - response code=200
2025-01-09 02:11:21,623 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:21,624 - DEBUG -    Exiting get()
2025-01-09 02:11:21,630 - ERROR - 
1 Failed download:
2025-01-09 02:11:21,630 - ERROR - ['CDW']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:21,630 - DEBUG - ['CDW']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:21,637 - DEBUG - Exiting download()
2025-01-09 02:11:21,748 - ERROR - Error writing data for CDW to DB: schema "np" does not exist
LINE 4:             VALUES ('CDW','2020-01-02'::date,np.float64(136....
                                                     ^

2025-01-09 02:11:21,749 - DEBUG - Entering download()
2025-01-09 02:11:21,749 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:21,749 - DEBUG -  Entering history()
2025-01-09 02:11:21,749 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CE', 1, 0])
2025-01-09 02:11:21,749 - DEBUG -   Entering history()
2025-01-09 02:11:21,750 - DEBUG - CE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:21,750 - DEBUG -    Entering get()
2025-01-09 02:11:21,750 - DEBUG -     Entering _make_request()
2025-01-09 02:11:21,750 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CE
2025-01-09 02:11:21,750 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:21,750 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:21,750 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:21,750 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:21,750 - DEBUG - reusing cookie
2025-01-09 02:11:21,750 - DEBUG - reusing crumb
2025-01-09 02:11:21,750 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:21,750 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:21,920 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CE?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1015
2025-01-09 02:11:21,921 - DEBUG - response code=200
2025-01-09 02:11:21,921 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:21,922 - DEBUG -    Exiting get()
2025-01-09 02:11:21,928 - ERROR - 
1 Failed download:
2025-01-09 02:11:21,928 - ERROR - ['CE']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:21,928 - DEBUG - ['CE']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:21,935 - DEBUG - Exiting download()
2025-01-09 02:11:22,064 - ERROR - Error writing data for CE to DB: schema "np" does not exist
LINE 4:             VALUES ('CE','2020-01-02'::date,np.float64(110.9...
                                                    ^

2025-01-09 02:11:22,065 - DEBUG - Entering download()
2025-01-09 02:11:22,065 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:22,065 - DEBUG -  Entering history()
2025-01-09 02:11:22,065 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['COR', 1, 0])
2025-01-09 02:11:22,065 - DEBUG -   Entering history()
2025-01-09 02:11:22,066 - DEBUG - COR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:22,066 - DEBUG -    Entering get()
2025-01-09 02:11:22,066 - DEBUG -     Entering _make_request()
2025-01-09 02:11:22,066 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/COR
2025-01-09 02:11:22,066 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:22,066 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:22,066 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:22,066 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:22,066 - DEBUG - reusing cookie
2025-01-09 02:11:22,067 - DEBUG - reusing crumb
2025-01-09 02:11:22,067 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:22,067 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:22,225 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/COR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1005
2025-01-09 02:11:22,226 - DEBUG - response code=200
2025-01-09 02:11:22,226 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:22,226 - DEBUG -    Exiting get()
2025-01-09 02:11:22,232 - ERROR - 
1 Failed download:
2025-01-09 02:11:22,233 - ERROR - ['COR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:22,233 - DEBUG - ['COR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:22,239 - DEBUG - Exiting download()
2025-01-09 02:11:22,240 - WARNING - Ticker COR is missing 'Close' column. Skipping.
2025-01-09 02:11:22,240 - DEBUG - Entering download()
2025-01-09 02:11:22,240 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:22,240 - DEBUG -  Entering history()
2025-01-09 02:11:22,241 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CNC', 1, 0])
2025-01-09 02:11:22,242 - DEBUG -   Entering history()
2025-01-09 02:11:22,243 - DEBUG - CNC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:22,243 - DEBUG -    Entering get()
2025-01-09 02:11:22,244 - DEBUG -     Entering _make_request()
2025-01-09 02:11:22,244 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CNC
2025-01-09 02:11:22,244 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:22,244 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:22,244 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:22,244 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:22,244 - DEBUG - reusing cookie
2025-01-09 02:11:22,244 - DEBUG - reusing crumb
2025-01-09 02:11:22,245 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:22,245 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:22,377 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CNC?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1012
2025-01-09 02:11:22,378 - DEBUG - response code=200
2025-01-09 02:11:22,379 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:22,379 - DEBUG -    Exiting get()
2025-01-09 02:11:22,382 - ERROR - 
1 Failed download:
2025-01-09 02:11:22,382 - ERROR - ['CNC']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:22,382 - DEBUG - ['CNC']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:22,384 - DEBUG - Exiting download()
2025-01-09 02:11:22,486 - ERROR - Error writing data for CNC to DB: schema "np" does not exist
LINE 4:             VALUES ('CNC','2020-01-02'::date,np.float64(62.9...
                                                     ^

2025-01-09 02:11:22,487 - DEBUG - Entering download()
2025-01-09 02:11:22,487 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:22,487 - DEBUG -  Entering history()
2025-01-09 02:11:22,488 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CNP', 1, 0])
2025-01-09 02:11:22,488 - DEBUG -   Entering history()
2025-01-09 02:11:22,488 - DEBUG - CNP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:22,488 - DEBUG -    Entering get()
2025-01-09 02:11:22,488 - DEBUG -     Entering _make_request()
2025-01-09 02:11:22,488 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CNP
2025-01-09 02:11:22,489 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:22,489 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:22,489 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:22,489 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:22,489 - DEBUG - reusing cookie
2025-01-09 02:11:22,489 - DEBUG - reusing crumb
2025-01-09 02:11:22,489 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:22,489 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:22,793 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CNP?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1028
2025-01-09 02:11:22,794 - DEBUG - response code=200
2025-01-09 02:11:22,794 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:22,794 - DEBUG -    Exiting get()
2025-01-09 02:11:22,800 - ERROR - 
1 Failed download:
2025-01-09 02:11:22,801 - ERROR - ['CNP']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:22,801 - DEBUG - ['CNP']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:22,808 - DEBUG - Exiting download()
2025-01-09 02:11:22,919 - ERROR - Error writing data for CNP to DB: schema "np" does not exist
LINE 4:             VALUES ('CNP','2020-01-02'::date,np.float64(23.7...
                                                     ^

2025-01-09 02:11:22,920 - DEBUG - Entering download()
2025-01-09 02:11:22,920 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:22,920 - DEBUG -  Entering history()
2025-01-09 02:11:22,920 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CF', 1, 0])
2025-01-09 02:11:22,921 - DEBUG -   Entering history()
2025-01-09 02:11:22,921 - DEBUG - CF: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:22,921 - DEBUG -    Entering get()
2025-01-09 02:11:22,921 - DEBUG -     Entering _make_request()
2025-01-09 02:11:22,921 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CF
2025-01-09 02:11:22,922 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:22,922 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:22,922 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:22,922 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:22,922 - DEBUG - reusing cookie
2025-01-09 02:11:22,922 - DEBUG - reusing crumb
2025-01-09 02:11:22,922 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:22,922 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:23,078 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CF?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1030
2025-01-09 02:11:23,079 - DEBUG - response code=200
2025-01-09 02:11:23,079 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:23,080 - DEBUG -    Exiting get()
2025-01-09 02:11:23,086 - ERROR - 
1 Failed download:
2025-01-09 02:11:23,086 - ERROR - ['CF']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:23,086 - DEBUG - ['CF']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:23,093 - DEBUG - Exiting download()
2025-01-09 02:11:23,208 - ERROR - Error writing data for CF to DB: schema "np" does not exist
LINE 4:             VALUES ('CF','2020-01-02'::date,np.float64(42.59...
                                                    ^

2025-01-09 02:11:23,209 - DEBUG - Entering download()
2025-01-09 02:11:23,209 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:23,209 - DEBUG -  Entering history()
2025-01-09 02:11:23,209 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CRL', 1, 0])
2025-01-09 02:11:23,210 - DEBUG -   Entering history()
2025-01-09 02:11:23,210 - DEBUG - CRL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:23,211 - DEBUG -    Entering get()
2025-01-09 02:11:23,211 - DEBUG -     Entering _make_request()
2025-01-09 02:11:23,211 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CRL
2025-01-09 02:11:23,211 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:23,211 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:23,211 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:23,211 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:23,211 - DEBUG - reusing cookie
2025-01-09 02:11:23,211 - DEBUG - reusing crumb
2025-01-09 02:11:23,211 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:23,211 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:23,354 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CRL?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1053
2025-01-09 02:11:23,354 - DEBUG - response code=200
2025-01-09 02:11:23,355 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:23,355 - DEBUG -    Exiting get()
2025-01-09 02:11:23,358 - ERROR - 
1 Failed download:
2025-01-09 02:11:23,359 - ERROR - ['CRL']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:23,359 - DEBUG - ['CRL']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:23,363 - DEBUG - Exiting download()
2025-01-09 02:11:23,471 - ERROR - Error writing data for CRL to DB: schema "np" does not exist
LINE 4:             VALUES ('CRL','2020-01-02'::date,np.float64(154....
                                                     ^

2025-01-09 02:11:23,472 - DEBUG - Entering download()
2025-01-09 02:11:23,472 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:23,472 - DEBUG -  Entering history()
2025-01-09 02:11:23,472 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SCHW', 1, 0])
2025-01-09 02:11:23,472 - DEBUG -   Entering history()
2025-01-09 02:11:23,473 - DEBUG - SCHW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:23,473 - DEBUG -    Entering get()
2025-01-09 02:11:23,473 - DEBUG -     Entering _make_request()
2025-01-09 02:11:23,473 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SCHW
2025-01-09 02:11:23,473 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:23,473 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:23,473 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:23,473 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:23,473 - DEBUG - reusing cookie
2025-01-09 02:11:23,473 - DEBUG - reusing crumb
2025-01-09 02:11:23,473 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:23,473 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:23,650 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SCHW?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1035
2025-01-09 02:11:23,651 - DEBUG - response code=200
2025-01-09 02:11:23,651 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:23,652 - DEBUG -    Exiting get()
2025-01-09 02:11:23,658 - ERROR - 
1 Failed download:
2025-01-09 02:11:23,658 - ERROR - ['SCHW']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:23,659 - DEBUG - ['SCHW']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:23,666 - DEBUG - Exiting download()
2025-01-09 02:11:23,793 - ERROR - Error writing data for SCHW to DB: schema "np" does not exist
LINE 4:             VALUES ('SCHW','2020-01-02'::date,np.float64(44....
                                                      ^

2025-01-09 02:11:23,793 - DEBUG - Entering download()
2025-01-09 02:11:23,793 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:23,793 - DEBUG -  Entering history()
2025-01-09 02:11:23,794 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CHTR', 1, 0])
2025-01-09 02:11:23,794 - DEBUG -   Entering history()
2025-01-09 02:11:23,795 - DEBUG - CHTR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:23,795 - DEBUG -    Entering get()
2025-01-09 02:11:23,795 - DEBUG -     Entering _make_request()
2025-01-09 02:11:23,795 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CHTR
2025-01-09 02:11:23,795 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:23,795 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:23,795 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:23,795 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:23,795 - DEBUG - reusing cookie
2025-01-09 02:11:23,795 - DEBUG - reusing crumb
2025-01-09 02:11:23,795 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:23,795 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:23,950 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CHTR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1040
2025-01-09 02:11:23,950 - DEBUG - response code=200
2025-01-09 02:11:23,951 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:23,951 - DEBUG -    Exiting get()
2025-01-09 02:11:23,957 - ERROR - 
1 Failed download:
2025-01-09 02:11:23,957 - ERROR - ['CHTR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:23,957 - DEBUG - ['CHTR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:23,964 - DEBUG - Exiting download()
2025-01-09 02:11:24,075 - ERROR - Error writing data for CHTR to DB: schema "np" does not exist
LINE 4:             VALUES ('CHTR','2020-01-02'::date,np.float64(487...
                                                      ^

2025-01-09 02:11:24,076 - DEBUG - Entering download()
2025-01-09 02:11:24,076 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:24,076 - DEBUG -  Entering history()
2025-01-09 02:11:24,077 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CVX', 1, 0])
2025-01-09 02:11:24,077 - DEBUG -   Entering history()
2025-01-09 02:11:24,077 - DEBUG - CVX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:24,077 - DEBUG -    Entering get()
2025-01-09 02:11:24,078 - DEBUG -     Entering _make_request()
2025-01-09 02:11:24,078 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CVX
2025-01-09 02:11:24,078 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:24,078 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:24,078 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:24,078 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:24,078 - DEBUG - reusing cookie
2025-01-09 02:11:24,078 - DEBUG - reusing crumb
2025-01-09 02:11:24,078 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:24,078 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:24,255 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CVX?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1017
2025-01-09 02:11:24,256 - DEBUG - response code=200
2025-01-09 02:11:24,256 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:24,256 - DEBUG -    Exiting get()
2025-01-09 02:11:24,262 - ERROR - 
1 Failed download:
2025-01-09 02:11:24,262 - ERROR - ['CVX']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:24,263 - DEBUG - ['CVX']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:24,270 - DEBUG - Exiting download()
2025-01-09 02:11:24,381 - ERROR - Error writing data for CVX to DB: schema "np" does not exist
LINE 4:             VALUES ('CVX','2020-01-02'::date,np.float64(96.7...
                                                     ^

2025-01-09 02:11:24,382 - DEBUG - Entering download()
2025-01-09 02:11:24,382 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:24,382 - DEBUG -  Entering history()
2025-01-09 02:11:24,383 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CMG', 1, 0])
2025-01-09 02:11:24,383 - DEBUG -   Entering history()
2025-01-09 02:11:24,383 - DEBUG - CMG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:24,383 - DEBUG -    Entering get()
2025-01-09 02:11:24,384 - DEBUG -     Entering _make_request()
2025-01-09 02:11:24,384 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CMG
2025-01-09 02:11:24,384 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:24,384 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:24,384 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:24,384 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:24,384 - DEBUG - reusing cookie
2025-01-09 02:11:24,384 - DEBUG - reusing crumb
2025-01-09 02:11:24,384 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:24,384 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:24,517 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CMG?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1032
2025-01-09 02:11:24,518 - DEBUG - response code=200
2025-01-09 02:11:24,518 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:24,518 - DEBUG -    Exiting get()
2025-01-09 02:11:24,523 - ERROR - 
1 Failed download:
2025-01-09 02:11:24,523 - ERROR - ['CMG']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:24,523 - DEBUG - ['CMG']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:24,528 - DEBUG - Exiting download()
2025-01-09 02:11:24,529 - WARNING - Ticker CMG is missing 'Close' column. Skipping.
2025-01-09 02:11:24,529 - DEBUG - Entering download()
2025-01-09 02:11:24,529 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:24,529 - DEBUG -  Entering history()
2025-01-09 02:11:24,530 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CB', 1, 0])
2025-01-09 02:11:24,530 - DEBUG -   Entering history()
2025-01-09 02:11:24,532 - DEBUG - CB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:24,532 - DEBUG -    Entering get()
2025-01-09 02:11:24,532 - DEBUG -     Entering _make_request()
2025-01-09 02:11:24,533 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CB
2025-01-09 02:11:24,533 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:24,533 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:24,533 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:24,533 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:24,533 - DEBUG - reusing cookie
2025-01-09 02:11:24,533 - DEBUG - reusing crumb
2025-01-09 02:11:24,533 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:24,534 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:24,704 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CB?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1004
2025-01-09 02:11:24,705 - DEBUG - response code=200
2025-01-09 02:11:24,706 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:24,706 - DEBUG -    Exiting get()
2025-01-09 02:11:24,712 - ERROR - 
1 Failed download:
2025-01-09 02:11:24,712 - ERROR - ['CB']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:24,713 - DEBUG - ['CB']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:24,719 - DEBUG - Exiting download()
2025-01-09 02:11:24,720 - WARNING - Ticker CB is missing 'Close' column. Skipping.
2025-01-09 02:11:24,720 - DEBUG - Entering download()
2025-01-09 02:11:24,720 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:24,720 - DEBUG -  Entering history()
2025-01-09 02:11:24,721 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CHD', 1, 0])
2025-01-09 02:11:24,721 - DEBUG -   Entering history()
2025-01-09 02:11:24,723 - DEBUG - CHD: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:24,723 - DEBUG -    Entering get()
2025-01-09 02:11:24,723 - DEBUG -     Entering _make_request()
2025-01-09 02:11:24,723 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CHD
2025-01-09 02:11:24,724 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:24,724 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:24,724 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:24,724 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:24,724 - DEBUG - reusing cookie
2025-01-09 02:11:24,724 - DEBUG - reusing crumb
2025-01-09 02:11:24,724 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:24,724 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:24,894 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CHD?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1030
2025-01-09 02:11:24,895 - DEBUG - response code=200
2025-01-09 02:11:24,896 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:24,896 - DEBUG -    Exiting get()
2025-01-09 02:11:24,900 - ERROR - 
1 Failed download:
2025-01-09 02:11:24,900 - ERROR - ['CHD']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:24,900 - DEBUG - ['CHD']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:24,902 - DEBUG - Exiting download()
2025-01-09 02:11:25,008 - ERROR - Error writing data for CHD to DB: schema "np" does not exist
LINE 4:             VALUES ('CHD','2020-01-02'::date,np.float64(66.3...
                                                     ^

2025-01-09 02:11:25,008 - DEBUG - Entering download()
2025-01-09 02:11:25,008 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:25,008 - DEBUG -  Entering history()
2025-01-09 02:11:25,009 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CI', 1, 0])
2025-01-09 02:11:25,009 - DEBUG -   Entering history()
2025-01-09 02:11:25,009 - DEBUG - CI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:25,010 - DEBUG -    Entering get()
2025-01-09 02:11:25,010 - DEBUG -     Entering _make_request()
2025-01-09 02:11:25,010 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CI
2025-01-09 02:11:25,010 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:25,010 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:25,010 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:25,010 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:25,010 - DEBUG - reusing cookie
2025-01-09 02:11:25,010 - DEBUG - reusing crumb
2025-01-09 02:11:25,010 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:25,010 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:25,198 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CI?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1007
2025-01-09 02:11:25,199 - DEBUG - response code=200
2025-01-09 02:11:25,199 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:25,199 - DEBUG -    Exiting get()
2025-01-09 02:11:25,205 - ERROR - 
1 Failed download:
2025-01-09 02:11:25,205 - ERROR - ['CI']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:25,206 - DEBUG - ['CI']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:25,213 - DEBUG - Exiting download()
2025-01-09 02:11:25,323 - ERROR - Error writing data for CI to DB: schema "np" does not exist
LINE 4:             VALUES ('CI','2020-01-02'::date,np.float64(191.7...
                                                    ^

2025-01-09 02:11:25,323 - DEBUG - Entering download()
2025-01-09 02:11:25,323 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:25,323 - DEBUG -  Entering history()
2025-01-09 02:11:25,324 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CINF', 1, 0])
2025-01-09 02:11:25,324 - DEBUG -   Entering history()
2025-01-09 02:11:25,324 - DEBUG - CINF: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:25,324 - DEBUG -    Entering get()
2025-01-09 02:11:25,324 - DEBUG -     Entering _make_request()
2025-01-09 02:11:25,325 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CINF
2025-01-09 02:11:25,325 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:25,325 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:25,325 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:25,325 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:25,325 - DEBUG - reusing cookie
2025-01-09 02:11:25,325 - DEBUG - reusing crumb
2025-01-09 02:11:25,325 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:25,325 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:25,512 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CINF?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1046
2025-01-09 02:11:25,513 - DEBUG - response code=200
2025-01-09 02:11:25,514 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:25,514 - DEBUG -    Exiting get()
2025-01-09 02:11:25,520 - ERROR - 
1 Failed download:
2025-01-09 02:11:25,520 - ERROR - ['CINF']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:25,520 - DEBUG - ['CINF']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:25,527 - DEBUG - Exiting download()
2025-01-09 02:11:25,653 - ERROR - Error writing data for CINF to DB: schema "np" does not exist
LINE 4:             VALUES ('CINF','2020-01-02'::date,np.float64(92....
                                                      ^

2025-01-09 02:11:25,654 - DEBUG - Entering download()
2025-01-09 02:11:25,654 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:25,654 - DEBUG -  Entering history()
2025-01-09 02:11:25,654 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CTAS', 1, 0])
2025-01-09 02:11:25,655 - DEBUG -   Entering history()
2025-01-09 02:11:25,655 - DEBUG - CTAS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:25,655 - DEBUG -    Entering get()
2025-01-09 02:11:25,655 - DEBUG -     Entering _make_request()
2025-01-09 02:11:25,656 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CTAS
2025-01-09 02:11:25,656 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:25,656 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:25,656 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:25,656 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:25,656 - DEBUG - reusing cookie
2025-01-09 02:11:25,656 - DEBUG - reusing crumb
2025-01-09 02:11:25,656 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:25,656 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:25,837 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CTAS?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1020
2025-01-09 02:11:25,838 - DEBUG - response code=200
2025-01-09 02:11:25,838 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:25,838 - DEBUG -    Exiting get()
2025-01-09 02:11:25,845 - ERROR - 
1 Failed download:
2025-01-09 02:11:25,845 - ERROR - ['CTAS']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:25,845 - DEBUG - ['CTAS']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:25,852 - DEBUG - Exiting download()
2025-01-09 02:11:25,967 - ERROR - Error writing data for CTAS to DB: schema "np" does not exist
LINE 4:             VALUES ('CTAS','2020-01-02'::date,np.float64(63....
                                                      ^

2025-01-09 02:11:25,967 - DEBUG - Entering download()
2025-01-09 02:11:25,968 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:25,968 - DEBUG -  Entering history()
2025-01-09 02:11:25,968 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CSCO', 1, 0])
2025-01-09 02:11:25,968 - DEBUG -   Entering history()
2025-01-09 02:11:25,969 - DEBUG - CSCO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:25,969 - DEBUG -    Entering get()
2025-01-09 02:11:25,969 - DEBUG -     Entering _make_request()
2025-01-09 02:11:25,969 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CSCO
2025-01-09 02:11:25,969 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:25,969 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:25,969 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:25,969 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:25,969 - DEBUG - reusing cookie
2025-01-09 02:11:25,969 - DEBUG - reusing crumb
2025-01-09 02:11:25,969 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:25,969 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:26,132 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CSCO?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1041
2025-01-09 02:11:26,133 - DEBUG - response code=200
2025-01-09 02:11:26,133 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:26,134 - DEBUG -    Exiting get()
2025-01-09 02:11:26,139 - ERROR - 
1 Failed download:
2025-01-09 02:11:26,139 - ERROR - ['CSCO']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:26,139 - DEBUG - ['CSCO']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:26,141 - DEBUG - Exiting download()
2025-01-09 02:11:26,142 - WARNING - Ticker CSCO is missing 'Close' column. Skipping.
2025-01-09 02:11:26,142 - DEBUG - Entering download()
2025-01-09 02:11:26,142 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:26,142 - DEBUG -  Entering history()
2025-01-09 02:11:26,142 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['C', 1, 0])
2025-01-09 02:11:26,142 - DEBUG -   Entering history()
2025-01-09 02:11:26,143 - DEBUG - C: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:26,143 - DEBUG -    Entering get()
2025-01-09 02:11:26,143 - DEBUG -     Entering _make_request()
2025-01-09 02:11:26,143 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/C
2025-01-09 02:11:26,143 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:26,143 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:26,143 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:26,143 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:26,143 - DEBUG - reusing cookie
2025-01-09 02:11:26,143 - DEBUG - reusing crumb
2025-01-09 02:11:26,143 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:26,143 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:26,308 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/C?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1000
2025-01-09 02:11:26,309 - DEBUG - response code=200
2025-01-09 02:11:26,309 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:26,309 - DEBUG -    Exiting get()
2025-01-09 02:11:26,315 - ERROR - 
1 Failed download:
2025-01-09 02:11:26,315 - ERROR - ['C']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:26,316 - DEBUG - ['C']: Traceback (most recent call last):
  File "%ticker%:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "%ticker%:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "%ticker%:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "%ticker%:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "%ticker%:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:26,323 - DEBUG - Exiting download()
2025-01-09 02:11:26,435 - ERROR - Error writing data for C to DB: schema "np" does not exist
LINE 4:             VALUES ('C','2020-01-02'::date,np.float64(66.213...
                                                   ^

2025-01-09 02:11:26,435 - DEBUG - Entering download()
2025-01-09 02:11:26,436 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:26,436 - DEBUG -  Entering history()
2025-01-09 02:11:26,436 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CFG', 1, 0])
2025-01-09 02:11:26,436 - DEBUG -   Entering history()
2025-01-09 02:11:26,437 - DEBUG - CFG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:26,437 - DEBUG -    Entering get()
2025-01-09 02:11:26,437 - DEBUG -     Entering _make_request()
2025-01-09 02:11:26,437 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CFG
2025-01-09 02:11:26,437 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:26,437 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:26,437 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:26,437 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:26,437 - DEBUG - reusing cookie
2025-01-09 02:11:26,437 - DEBUG - reusing crumb
2025-01-09 02:11:26,437 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:26,437 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:26,585 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CFG?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1034
2025-01-09 02:11:26,586 - DEBUG - response code=200
2025-01-09 02:11:26,586 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:26,586 - DEBUG -    Exiting get()
2025-01-09 02:11:26,590 - ERROR - 
1 Failed download:
2025-01-09 02:11:26,590 - ERROR - ['CFG']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:26,590 - DEBUG - ['CFG']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:26,595 - DEBUG - Exiting download()
2025-01-09 02:11:26,595 - WARNING - Ticker CFG is missing 'Close' column. Skipping.
2025-01-09 02:11:26,595 - DEBUG - Entering download()
2025-01-09 02:11:26,595 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:26,595 - DEBUG -  Entering history()
2025-01-09 02:11:26,596 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CLX', 1, 0])
2025-01-09 02:11:26,596 - DEBUG -   Entering history()
2025-01-09 02:11:26,598 - DEBUG - CLX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:26,598 - DEBUG -    Entering get()
2025-01-09 02:11:26,598 - DEBUG -     Entering _make_request()
2025-01-09 02:11:26,598 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CLX
2025-01-09 02:11:26,598 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:26,599 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:26,599 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:26,599 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:26,599 - DEBUG - reusing cookie
2025-01-09 02:11:26,599 - DEBUG - reusing crumb
2025-01-09 02:11:26,599 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:26,599 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:26,802 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CLX?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1015
2025-01-09 02:11:26,803 - DEBUG - response code=200
2025-01-09 02:11:26,803 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:26,804 - DEBUG -    Exiting get()
2025-01-09 02:11:26,809 - ERROR - 
1 Failed download:
2025-01-09 02:11:26,810 - ERROR - ['CLX']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:26,810 - DEBUG - ['CLX']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:26,817 - DEBUG - Exiting download()
2025-01-09 02:11:26,939 - ERROR - Error writing data for CLX to DB: schema "np" does not exist
LINE 4:             VALUES ('CLX','2020-01-02'::date,np.float64(132....
                                                     ^

2025-01-09 02:11:26,940 - DEBUG - Entering download()
2025-01-09 02:11:26,940 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:26,940 - DEBUG -  Entering history()
2025-01-09 02:11:26,941 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CME', 1, 0])
2025-01-09 02:11:26,941 - DEBUG -   Entering history()
2025-01-09 02:11:26,941 - DEBUG - CME: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:26,941 - DEBUG -    Entering get()
2025-01-09 02:11:26,941 - DEBUG -     Entering _make_request()
2025-01-09 02:11:26,942 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CME
2025-01-09 02:11:26,942 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:26,942 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:26,942 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:26,942 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:26,942 - DEBUG - reusing cookie
2025-01-09 02:11:26,942 - DEBUG - reusing crumb
2025-01-09 02:11:26,942 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:26,942 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:27,106 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CME?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1011
2025-01-09 02:11:27,107 - DEBUG - response code=200
2025-01-09 02:11:27,107 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:27,107 - DEBUG -    Exiting get()
2025-01-09 02:11:27,113 - ERROR - 
1 Failed download:
2025-01-09 02:11:27,113 - ERROR - ['CME']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:27,114 - DEBUG - ['CME']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:27,120 - DEBUG - Exiting download()
2025-01-09 02:11:27,231 - ERROR - Error writing data for CME to DB: schema "np" does not exist
LINE 4:             VALUES ('CME','2020-01-02'::date,np.float64(164....
                                                     ^

2025-01-09 02:11:27,232 - DEBUG - Entering download()
2025-01-09 02:11:27,232 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:27,232 - DEBUG -  Entering history()
2025-01-09 02:11:27,232 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CMS', 1, 0])
2025-01-09 02:11:27,232 - DEBUG -   Entering history()
2025-01-09 02:11:27,233 - DEBUG - CMS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:27,233 - DEBUG -    Entering get()
2025-01-09 02:11:27,233 - DEBUG -     Entering _make_request()
2025-01-09 02:11:27,233 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CMS
2025-01-09 02:11:27,233 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:27,233 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:27,234 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:27,234 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:27,234 - DEBUG - reusing cookie
2025-01-09 02:11:27,234 - DEBUG - reusing crumb
2025-01-09 02:11:27,234 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:27,234 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:27,417 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CMS?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1013
2025-01-09 02:11:27,418 - DEBUG - response code=200
2025-01-09 02:11:27,418 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:27,418 - DEBUG -    Exiting get()
2025-01-09 02:11:27,424 - ERROR - 
1 Failed download:
2025-01-09 02:11:27,424 - ERROR - ['CMS']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:27,425 - DEBUG - ['CMS']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:27,432 - DEBUG - Exiting download()
2025-01-09 02:11:27,432 - WARNING - Ticker CMS is missing 'Close' column. Skipping.
2025-01-09 02:11:27,432 - DEBUG - Entering download()
2025-01-09 02:11:27,432 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:27,433 - DEBUG -  Entering history()
2025-01-09 02:11:27,434 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['KO', 1, 0])
2025-01-09 02:11:27,434 - DEBUG -   Entering history()
2025-01-09 02:11:27,435 - DEBUG - KO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:27,436 - DEBUG -    Entering get()
2025-01-09 02:11:27,436 - DEBUG -     Entering _make_request()
2025-01-09 02:11:27,436 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/KO
2025-01-09 02:11:27,436 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:27,436 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:27,436 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:27,437 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:27,437 - DEBUG - reusing cookie
2025-01-09 02:11:27,437 - DEBUG - reusing crumb
2025-01-09 02:11:27,437 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:27,437 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:27,672 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/KO?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1018
2025-01-09 02:11:27,673 - DEBUG - response code=200
2025-01-09 02:11:27,674 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:27,674 - DEBUG -    Exiting get()
2025-01-09 02:11:27,680 - ERROR - 
1 Failed download:
2025-01-09 02:11:27,680 - ERROR - ['KO']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:27,681 - DEBUG - ['KO']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:27,687 - DEBUG - Exiting download()
2025-01-09 02:11:27,687 - WARNING - Ticker KO is missing 'Close' column. Skipping.
2025-01-09 02:11:27,688 - DEBUG - Entering download()
2025-01-09 02:11:27,688 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:27,688 - DEBUG -  Entering history()
2025-01-09 02:11:27,689 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CTSH', 1, 0])
2025-01-09 02:11:27,689 - DEBUG -   Entering history()
2025-01-09 02:11:27,691 - DEBUG - CTSH: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:27,691 - DEBUG -    Entering get()
2025-01-09 02:11:27,691 - DEBUG -     Entering _make_request()
2025-01-09 02:11:27,691 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CTSH
2025-01-09 02:11:27,691 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:27,691 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:27,692 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:27,692 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:27,692 - DEBUG - reusing cookie
2025-01-09 02:11:27,692 - DEBUG - reusing crumb
2025-01-09 02:11:27,692 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:27,692 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:27,842 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CTSH?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1051
2025-01-09 02:11:27,843 - DEBUG - response code=200
2025-01-09 02:11:27,844 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:27,844 - DEBUG -    Exiting get()
2025-01-09 02:11:27,848 - ERROR - 
1 Failed download:
2025-01-09 02:11:27,848 - ERROR - ['CTSH']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:27,848 - DEBUG - ['CTSH']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:27,850 - DEBUG - Exiting download()
2025-01-09 02:11:27,953 - ERROR - Error writing data for CTSH to DB: schema "np" does not exist
LINE 4:             VALUES ('CTSH','2020-01-02'::date,np.float64(57....
                                                      ^

2025-01-09 02:11:27,953 - DEBUG - Entering download()
2025-01-09 02:11:27,953 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:27,954 - DEBUG -  Entering history()
2025-01-09 02:11:27,954 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CL', 1, 0])
2025-01-09 02:11:27,954 - DEBUG -   Entering history()
2025-01-09 02:11:27,955 - DEBUG - CL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:27,955 - DEBUG -    Entering get()
2025-01-09 02:11:27,955 - DEBUG -     Entering _make_request()
2025-01-09 02:11:27,955 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CL
2025-01-09 02:11:27,955 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:27,955 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:27,955 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:27,955 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:27,955 - DEBUG - reusing cookie
2025-01-09 02:11:27,955 - DEBUG - reusing crumb
2025-01-09 02:11:27,955 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:27,955 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:28,174 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CL?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1022
2025-01-09 02:11:28,175 - DEBUG - response code=200
2025-01-09 02:11:28,176 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:28,176 - DEBUG -    Exiting get()
2025-01-09 02:11:28,182 - ERROR - 
1 Failed download:
2025-01-09 02:11:28,182 - ERROR - ['CL']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:28,182 - DEBUG - ['CL']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:28,189 - DEBUG - Exiting download()
2025-01-09 02:11:28,298 - ERROR - Error writing data for CL to DB: schema "np" does not exist
LINE 4:             VALUES ('CL','2020-01-02'::date,np.float64(61.21...
                                                    ^

2025-01-09 02:11:28,299 - DEBUG - Entering download()
2025-01-09 02:11:28,299 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:28,299 - DEBUG -  Entering history()
2025-01-09 02:11:28,299 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CMCSA', 1, 0])
2025-01-09 02:11:28,299 - DEBUG -   Entering history()
2025-01-09 02:11:28,300 - DEBUG - CMCSA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:28,300 - DEBUG -    Entering get()
2025-01-09 02:11:28,301 - DEBUG -     Entering _make_request()
2025-01-09 02:11:28,301 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CMCSA
2025-01-09 02:11:28,301 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:28,301 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:28,301 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:28,301 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:28,301 - DEBUG - reusing cookie
2025-01-09 02:11:28,301 - DEBUG - reusing crumb
2025-01-09 02:11:28,301 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:28,301 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:28,465 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CMCSA?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1018
2025-01-09 02:11:28,466 - DEBUG - response code=200
2025-01-09 02:11:28,467 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:28,467 - DEBUG -    Exiting get()
2025-01-09 02:11:28,473 - ERROR - 
1 Failed download:
2025-01-09 02:11:28,473 - ERROR - ['CMCSA']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:28,473 - DEBUG - ['CMCSA']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:28,481 - DEBUG - Exiting download()
2025-01-09 02:11:28,481 - WARNING - Ticker CMCSA is missing 'Close' column. Skipping.
2025-01-09 02:11:28,482 - DEBUG - Entering download()
2025-01-09 02:11:28,482 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:28,482 - DEBUG -  Entering history()
2025-01-09 02:11:28,483 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CAG', 1, 0])
2025-01-09 02:11:28,483 - DEBUG -   Entering history()
2025-01-09 02:11:28,484 - DEBUG - CAG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:28,485 - DEBUG -    Entering get()
2025-01-09 02:11:28,485 - DEBUG -     Entering _make_request()
2025-01-09 02:11:28,485 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CAG
2025-01-09 02:11:28,485 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:28,485 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:28,485 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:28,486 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:28,486 - DEBUG - reusing cookie
2025-01-09 02:11:28,486 - DEBUG - reusing crumb
2025-01-09 02:11:28,486 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:28,486 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:28,655 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CAG?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1012
2025-01-09 02:11:28,656 - DEBUG - response code=200
2025-01-09 02:11:28,656 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:28,656 - DEBUG -    Exiting get()
2025-01-09 02:11:28,662 - ERROR - 
1 Failed download:
2025-01-09 02:11:28,663 - ERROR - ['CAG']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:28,663 - DEBUG - ['CAG']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:28,671 - DEBUG - Exiting download()
2025-01-09 02:11:28,671 - WARNING - Ticker CAG is missing 'Close' column. Skipping.
2025-01-09 02:11:28,671 - DEBUG - Entering download()
2025-01-09 02:11:28,671 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:28,671 - DEBUG -  Entering history()
2025-01-09 02:11:28,672 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['COP', 1, 0])
2025-01-09 02:11:28,672 - DEBUG -   Entering history()
2025-01-09 02:11:28,674 - DEBUG - COP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:28,674 - DEBUG -    Entering get()
2025-01-09 02:11:28,674 - DEBUG -     Entering _make_request()
2025-01-09 02:11:28,675 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/COP
2025-01-09 02:11:28,675 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:28,675 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:28,675 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:28,675 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:28,675 - DEBUG - reusing cookie
2025-01-09 02:11:28,675 - DEBUG - reusing crumb
2025-01-09 02:11:28,675 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:28,675 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:28,860 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/COP?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1005
2025-01-09 02:11:28,861 - DEBUG - response code=200
2025-01-09 02:11:28,861 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:28,862 - DEBUG -    Exiting get()
2025-01-09 02:11:28,865 - ERROR - 
1 Failed download:
2025-01-09 02:11:28,866 - ERROR - ['COP']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:28,866 - DEBUG - ['COP']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:28,868 - DEBUG - Exiting download()
2025-01-09 02:11:29,092 - ERROR - Error writing data for COP to DB: schema "np" does not exist
LINE 4:             VALUES ('COP','2020-01-02'::date,np.float64(54.2...
                                                     ^

2025-01-09 02:11:29,093 - DEBUG - Entering download()
2025-01-09 02:11:29,093 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:29,093 - DEBUG -  Entering history()
2025-01-09 02:11:29,093 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ED', 1, 0])
2025-01-09 02:11:29,093 - DEBUG -   Entering history()
2025-01-09 02:11:29,094 - DEBUG - ED: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:29,094 - DEBUG -    Entering get()
2025-01-09 02:11:29,094 - DEBUG -     Entering _make_request()
2025-01-09 02:11:29,094 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ED
2025-01-09 02:11:29,094 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:29,094 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:29,094 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:29,094 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:29,094 - DEBUG - reusing cookie
2025-01-09 02:11:29,095 - DEBUG - reusing crumb
2025-01-09 02:11:29,095 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:29,095 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:29,289 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ED?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1024
2025-01-09 02:11:29,290 - DEBUG - response code=200
2025-01-09 02:11:29,291 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:29,291 - DEBUG -    Exiting get()
2025-01-09 02:11:29,294 - ERROR - 
1 Failed download:
2025-01-09 02:11:29,294 - ERROR - ['ED']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:29,294 - DEBUG - ['ED']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:29,296 - DEBUG - Exiting download()
2025-01-09 02:11:29,399 - ERROR - Error writing data for ED to DB: schema "np" does not exist
LINE 4:             VALUES ('ED','2020-01-02'::date,np.float64(75.35...
                                                    ^

2025-01-09 02:11:29,399 - DEBUG - Entering download()
2025-01-09 02:11:29,399 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:29,400 - DEBUG -  Entering history()
2025-01-09 02:11:29,400 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['STZ', 1, 0])
2025-01-09 02:11:29,400 - DEBUG -   Entering history()
2025-01-09 02:11:29,401 - DEBUG - STZ: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:29,401 - DEBUG -    Entering get()
2025-01-09 02:11:29,401 - DEBUG -     Entering _make_request()
2025-01-09 02:11:29,401 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/STZ
2025-01-09 02:11:29,401 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:29,401 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:29,401 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:29,401 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:29,401 - DEBUG - reusing cookie
2025-01-09 02:11:29,401 - DEBUG - reusing crumb
2025-01-09 02:11:29,401 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:29,401 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:29,553 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/STZ?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1033
2025-01-09 02:11:29,554 - DEBUG - response code=200
2025-01-09 02:11:29,555 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:29,555 - DEBUG -    Exiting get()
2025-01-09 02:11:29,561 - ERROR - 
1 Failed download:
2025-01-09 02:11:29,561 - ERROR - ['STZ']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:29,561 - DEBUG - ['STZ']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:29,568 - DEBUG - Exiting download()
2025-01-09 02:11:29,568 - WARNING - Ticker STZ is missing 'Close' column. Skipping.
2025-01-09 02:11:29,568 - DEBUG - Entering download()
2025-01-09 02:11:29,569 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:29,569 - DEBUG -  Entering history()
2025-01-09 02:11:29,570 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CEG', 1, 0])
2025-01-09 02:11:29,570 - DEBUG -   Entering history()
2025-01-09 02:11:29,572 - DEBUG - CEG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:29,572 - DEBUG -    Entering get()
2025-01-09 02:11:29,572 - DEBUG -     Entering _make_request()
2025-01-09 02:11:29,572 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CEG
2025-01-09 02:11:29,572 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:29,572 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:29,573 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:29,573 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:29,573 - DEBUG - reusing cookie
2025-01-09 02:11:29,573 - DEBUG - reusing crumb
2025-01-09 02:11:29,573 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:29,573 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:29,703 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CEG?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:11:29,704 - DEBUG - response code=400
2025-01-09 02:11:29,704 - DEBUG - toggling cookie strategy basic -> csrf
2025-01-09 02:11:29,704 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:29,704 - DEBUG - cookie_mode = 'csrf'
2025-01-09 02:11:29,705 - DEBUG -       Entering _get_crumb_csrf()
2025-01-09 02:11:29,706 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['csrf', 1, 0])
2025-01-09 02:11:29,881 - DEBUG - https://guce.yahoo.com:443 "GET /consent HTTP/1.1" 302 0
2025-01-09 02:11:30,223 - DEBUG - https://www.yahoo.com:443 "GET /?guccounter=1 HTTP/1.1" 200 None
2025-01-09 02:11:30,704 - DEBUG - Failed to find "csrfToken" in response
2025-01-09 02:11:30,705 - DEBUG -       Exiting _get_crumb_csrf()
2025-01-09 02:11:30,705 - DEBUG - toggling cookie strategy csrf -> basic
2025-01-09 02:11:30,705 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:30,705 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['basic', 1, 0])
2025-01-09 02:11:30,705 - DEBUG - loaded persistent cookie
2025-01-09 02:11:30,705 - DEBUG - reusing cookie
2025-01-09 02:11:30,823 - DEBUG - https://query1.finance.yahoo.com:443 "GET /v1/test/getcrumb HTTP/1.1" 200 11
2025-01-09 02:11:30,824 - DEBUG - crumb = 'mbrlfmeSllh'
2025-01-09 02:11:30,824 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:30,824 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:30,982 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CEG?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:11:30,982 - DEBUG - response code=400
2025-01-09 02:11:30,982 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:30,982 - DEBUG -    Exiting get()
2025-01-09 02:11:30,984 - ERROR - 
1 Failed download:
2025-01-09 02:11:30,984 - ERROR - ['CEG']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn\'t exist for startDate = 1577854800, endDate = 1577941200")')
2025-01-09 02:11:30,984 - DEBUG - ['CEG']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn't exist for startDate = 1577854800, endDate = 1577941200")

2025-01-09 02:11:30,986 - DEBUG - Exiting download()
2025-01-09 02:11:31,215 - ERROR - Error writing data for CEG to DB: schema "np" does not exist
LINE 4:             VALUES ('CEG','2022-01-19'::date,np.float64(36.9...
                                                     ^

2025-01-09 02:11:31,216 - DEBUG - Entering download()
2025-01-09 02:11:31,216 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:31,216 - DEBUG -  Entering history()
2025-01-09 02:11:31,216 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['COO', 1, 0])
2025-01-09 02:11:31,217 - DEBUG -   Entering history()
2025-01-09 02:11:31,217 - DEBUG - COO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:31,217 - DEBUG -    Entering get()
2025-01-09 02:11:31,217 - DEBUG -     Entering _make_request()
2025-01-09 02:11:31,217 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/COO
2025-01-09 02:11:31,217 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:31,217 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:31,218 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:31,218 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:31,218 - DEBUG - reusing cookie
2025-01-09 02:11:31,218 - DEBUG - reusing crumb
2025-01-09 02:11:31,218 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:31,218 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:31,414 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/COO?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1031
2025-01-09 02:11:31,415 - DEBUG - response code=200
2025-01-09 02:11:31,416 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:31,416 - DEBUG -    Exiting get()
2025-01-09 02:11:31,422 - ERROR - 
1 Failed download:
2025-01-09 02:11:31,422 - ERROR - ['COO']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:31,422 - DEBUG - ['COO']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:31,429 - DEBUG - Exiting download()
2025-01-09 02:11:31,430 - WARNING - Ticker COO is missing 'Close' column. Skipping.
2025-01-09 02:11:31,430 - DEBUG - Entering download()
2025-01-09 02:11:31,430 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:31,431 - DEBUG -  Entering history()
2025-01-09 02:11:31,432 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CPRT', 1, 0])
2025-01-09 02:11:31,432 - DEBUG -   Entering history()
2025-01-09 02:11:31,434 - DEBUG - CPRT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:31,434 - DEBUG -    Entering get()
2025-01-09 02:11:31,434 - DEBUG -     Entering _make_request()
2025-01-09 02:11:31,434 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CPRT
2025-01-09 02:11:31,434 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:31,434 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:31,435 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:31,435 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:31,435 - DEBUG - reusing cookie
2025-01-09 02:11:31,435 - DEBUG - reusing crumb
2025-01-09 02:11:31,435 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:31,435 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:31,575 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CPRT?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1003
2025-01-09 02:11:31,576 - DEBUG - response code=200
2025-01-09 02:11:31,576 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:31,576 - DEBUG -    Exiting get()
2025-01-09 02:11:31,580 - ERROR - 
1 Failed download:
2025-01-09 02:11:31,580 - ERROR - ['CPRT']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:31,580 - DEBUG - ['CPRT']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:31,582 - DEBUG - Exiting download()
2025-01-09 02:11:31,684 - ERROR - Error writing data for CPRT to DB: schema "np" does not exist
LINE 4:             VALUES ('CPRT','2020-01-02'::date,np.float64(22....
                                                      ^

2025-01-09 02:11:31,684 - DEBUG - Entering download()
2025-01-09 02:11:31,684 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:31,685 - DEBUG -  Entering history()
2025-01-09 02:11:31,685 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GLW', 1, 0])
2025-01-09 02:11:31,685 - DEBUG -   Entering history()
2025-01-09 02:11:31,686 - DEBUG - GLW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:31,686 - DEBUG -    Entering get()
2025-01-09 02:11:31,686 - DEBUG -     Entering _make_request()
2025-01-09 02:11:31,686 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GLW
2025-01-09 02:11:31,686 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:31,686 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:31,686 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:31,686 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:31,686 - DEBUG - reusing cookie
2025-01-09 02:11:31,686 - DEBUG - reusing crumb
2025-01-09 02:11:31,686 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:31,686 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:31,852 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GLW?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1014
2025-01-09 02:11:31,853 - DEBUG - response code=200
2025-01-09 02:11:31,853 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:31,853 - DEBUG -    Exiting get()
2025-01-09 02:11:31,854 - ERROR - 
1 Failed download:
2025-01-09 02:11:31,854 - ERROR - ['GLW']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:31,855 - DEBUG - ['GLW']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:31,856 - DEBUG - Exiting download()
2025-01-09 02:11:32,102 - ERROR - Error writing data for GLW to DB: schema "np" does not exist
LINE 4:             VALUES ('GLW','2020-01-02'::date,np.float64(25.2...
                                                     ^

2025-01-09 02:11:32,102 - DEBUG - Entering download()
2025-01-09 02:11:32,102 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:32,103 - DEBUG -  Entering history()
2025-01-09 02:11:32,103 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CPAY', 1, 0])
2025-01-09 02:11:32,103 - DEBUG -   Entering history()
2025-01-09 02:11:32,104 - DEBUG - CPAY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:32,104 - DEBUG -    Entering get()
2025-01-09 02:11:32,104 - DEBUG -     Entering _make_request()
2025-01-09 02:11:32,104 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CPAY
2025-01-09 02:11:32,104 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:32,104 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:32,104 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:32,104 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:32,104 - DEBUG - reusing cookie
2025-01-09 02:11:32,104 - DEBUG - reusing crumb
2025-01-09 02:11:32,104 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:32,104 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:32,242 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CPAY?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1003
2025-01-09 02:11:32,243 - DEBUG - response code=200
2025-01-09 02:11:32,243 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:32,243 - DEBUG -    Exiting get()
2025-01-09 02:11:32,250 - ERROR - 
1 Failed download:
2025-01-09 02:11:32,250 - ERROR - ['CPAY']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:32,250 - DEBUG - ['CPAY']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:32,258 - DEBUG - Exiting download()
2025-01-09 02:11:32,258 - WARNING - Ticker CPAY is missing 'Close' column. Skipping.
2025-01-09 02:11:32,258 - DEBUG - Entering download()
2025-01-09 02:11:32,258 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:32,258 - DEBUG -  Entering history()
2025-01-09 02:11:32,259 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CTVA', 1, 0])
2025-01-09 02:11:32,259 - DEBUG -   Entering history()
2025-01-09 02:11:32,260 - DEBUG - CTVA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:32,260 - DEBUG -    Entering get()
2025-01-09 02:11:32,260 - DEBUG -     Entering _make_request()
2025-01-09 02:11:32,260 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CTVA
2025-01-09 02:11:32,260 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:32,260 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:32,260 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:32,261 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:32,261 - DEBUG - reusing cookie
2025-01-09 02:11:32,261 - DEBUG - reusing crumb
2025-01-09 02:11:32,261 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:32,261 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:32,397 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CTVA?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1001
2025-01-09 02:11:32,398 - DEBUG - response code=200
2025-01-09 02:11:32,398 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:32,399 - DEBUG -    Exiting get()
2025-01-09 02:11:32,404 - ERROR - 
1 Failed download:
2025-01-09 02:11:32,404 - ERROR - ['CTVA']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:32,404 - DEBUG - ['CTVA']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:32,410 - DEBUG - Exiting download()
2025-01-09 02:11:32,670 - ERROR - Error writing data for CTVA to DB: schema "np" does not exist
LINE 4:             VALUES ('CTVA','2020-01-02'::date,np.float64(27....
                                                      ^

2025-01-09 02:11:32,671 - DEBUG - Entering download()
2025-01-09 02:11:32,671 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:32,671 - DEBUG -  Entering history()
2025-01-09 02:11:32,671 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CSGP', 1, 0])
2025-01-09 02:11:32,671 - DEBUG -   Entering history()
2025-01-09 02:11:32,672 - DEBUG - CSGP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:32,672 - DEBUG -    Entering get()
2025-01-09 02:11:32,672 - DEBUG -     Entering _make_request()
2025-01-09 02:11:32,672 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CSGP
2025-01-09 02:11:32,672 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:32,672 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:32,672 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:32,672 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:32,672 - DEBUG - reusing cookie
2025-01-09 02:11:32,672 - DEBUG - reusing crumb
2025-01-09 02:11:32,673 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:32,673 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:32,811 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CSGP?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1016
2025-01-09 02:11:32,811 - DEBUG - response code=200
2025-01-09 02:11:32,811 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:32,811 - DEBUG -    Exiting get()
2025-01-09 02:11:32,813 - ERROR - 
1 Failed download:
2025-01-09 02:11:32,813 - ERROR - ['CSGP']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:32,813 - DEBUG - ['CSGP']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:32,815 - DEBUG - Exiting download()
2025-01-09 02:11:33,046 - ERROR - Error writing data for CSGP to DB: schema "np" does not exist
LINE 4:             VALUES ('CSGP','2020-01-02'::date,np.float64(60....
                                                      ^

2025-01-09 02:11:33,046 - DEBUG - Entering download()
2025-01-09 02:11:33,046 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:33,047 - DEBUG -  Entering history()
2025-01-09 02:11:33,047 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['COST', 1, 0])
2025-01-09 02:11:33,047 - DEBUG -   Entering history()
2025-01-09 02:11:33,048 - DEBUG - COST: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:33,048 - DEBUG -    Entering get()
2025-01-09 02:11:33,048 - DEBUG -     Entering _make_request()
2025-01-09 02:11:33,048 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/COST
2025-01-09 02:11:33,048 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:33,048 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:33,048 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:33,048 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:33,048 - DEBUG - reusing cookie
2025-01-09 02:11:33,048 - DEBUG - reusing crumb
2025-01-09 02:11:33,048 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:33,048 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:33,247 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/COST?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1041
2025-01-09 02:11:33,248 - DEBUG - response code=200
2025-01-09 02:11:33,249 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:33,249 - DEBUG -    Exiting get()
2025-01-09 02:11:33,252 - ERROR - 
1 Failed download:
2025-01-09 02:11:33,252 - ERROR - ['COST']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:33,252 - DEBUG - ['COST']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:33,254 - DEBUG - Exiting download()
2025-01-09 02:11:33,354 - ERROR - Error writing data for COST to DB: schema "np" does not exist
LINE 4:             VALUES ('COST','2020-01-02'::date,np.float64(270...
                                                      ^

2025-01-09 02:11:33,355 - DEBUG - Entering download()
2025-01-09 02:11:33,355 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:33,355 - DEBUG -  Entering history()
2025-01-09 02:11:33,355 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CTRA', 1, 0])
2025-01-09 02:11:33,356 - DEBUG -   Entering history()
2025-01-09 02:11:33,356 - DEBUG - CTRA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:33,356 - DEBUG -    Entering get()
2025-01-09 02:11:33,356 - DEBUG -     Entering _make_request()
2025-01-09 02:11:33,356 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CTRA
2025-01-09 02:11:33,357 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:33,357 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:33,357 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:33,357 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:33,357 - DEBUG - reusing cookie
2025-01-09 02:11:33,357 - DEBUG - reusing crumb
2025-01-09 02:11:33,357 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:33,357 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:33,582 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CTRA?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1011
2025-01-09 02:11:33,583 - DEBUG - response code=200
2025-01-09 02:11:33,583 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:33,584 - DEBUG -    Exiting get()
2025-01-09 02:11:33,586 - ERROR - 
1 Failed download:
2025-01-09 02:11:33,586 - ERROR - ['CTRA']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:33,586 - DEBUG - ['CTRA']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:33,588 - DEBUG - Exiting download()
2025-01-09 02:11:33,690 - ERROR - Error writing data for CTRA to DB: schema "np" does not exist
LINE 4:             VALUES ('CTRA','2020-01-02'::date,np.float64(13....
                                                      ^

2025-01-09 02:11:33,691 - DEBUG - Entering download()
2025-01-09 02:11:33,691 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:33,691 - DEBUG -  Entering history()
2025-01-09 02:11:33,691 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CRWD', 1, 0])
2025-01-09 02:11:33,691 - DEBUG -   Entering history()
2025-01-09 02:11:33,692 - DEBUG - CRWD: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:33,692 - DEBUG -    Entering get()
2025-01-09 02:11:33,692 - DEBUG -     Entering _make_request()
2025-01-09 02:11:33,692 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CRWD
2025-01-09 02:11:33,692 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:33,692 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:33,692 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:33,692 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:33,692 - DEBUG - reusing cookie
2025-01-09 02:11:33,692 - DEBUG - reusing crumb
2025-01-09 02:11:33,692 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:33,693 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:33,819 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CRWD?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1038
2025-01-09 02:11:33,820 - DEBUG - response code=200
2025-01-09 02:11:33,820 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:33,820 - DEBUG -    Exiting get()
2025-01-09 02:11:33,823 - ERROR - 
1 Failed download:
2025-01-09 02:11:33,824 - ERROR - ['CRWD']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:33,824 - DEBUG - ['CRWD']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:33,828 - DEBUG - Exiting download()
2025-01-09 02:11:33,958 - ERROR - Error writing data for CRWD to DB: schema "np" does not exist
LINE 4:             VALUES ('CRWD','2020-01-02'::date,np.float64(50....
                                                      ^

2025-01-09 02:11:33,958 - DEBUG - Entering download()
2025-01-09 02:11:33,959 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:33,959 - DEBUG -  Entering history()
2025-01-09 02:11:33,959 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CCI', 1, 0])
2025-01-09 02:11:33,959 - DEBUG -   Entering history()
2025-01-09 02:11:33,960 - DEBUG - CCI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:33,960 - DEBUG -    Entering get()
2025-01-09 02:11:33,960 - DEBUG -     Entering _make_request()
2025-01-09 02:11:33,960 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CCI
2025-01-09 02:11:33,960 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:33,960 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:33,960 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:33,960 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:33,960 - DEBUG - reusing cookie
2025-01-09 02:11:33,960 - DEBUG - reusing crumb
2025-01-09 02:11:33,961 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:33,961 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:34,107 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CCI?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1010
2025-01-09 02:11:34,108 - DEBUG - response code=200
2025-01-09 02:11:34,108 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:34,108 - DEBUG -    Exiting get()
2025-01-09 02:11:34,113 - ERROR - 
1 Failed download:
2025-01-09 02:11:34,113 - ERROR - ['CCI']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:34,113 - DEBUG - ['CCI']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:34,118 - DEBUG - Exiting download()
2025-01-09 02:11:34,246 - ERROR - Error writing data for CCI to DB: schema "np" does not exist
LINE 4:             VALUES ('CCI','2020-01-02'::date,np.float64(115....
                                                     ^

2025-01-09 02:11:34,246 - DEBUG - Entering download()
2025-01-09 02:11:34,246 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:34,246 - DEBUG -  Entering history()
2025-01-09 02:11:34,247 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CSX', 1, 0])
2025-01-09 02:11:34,247 - DEBUG -   Entering history()
2025-01-09 02:11:34,248 - DEBUG - CSX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:34,248 - DEBUG -    Entering get()
2025-01-09 02:11:34,248 - DEBUG -     Entering _make_request()
2025-01-09 02:11:34,248 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CSX
2025-01-09 02:11:34,248 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:34,248 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:34,248 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:34,248 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:34,248 - DEBUG - reusing cookie
2025-01-09 02:11:34,248 - DEBUG - reusing crumb
2025-01-09 02:11:34,248 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:34,248 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:34,442 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CSX?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1008
2025-01-09 02:11:34,443 - DEBUG - response code=200
2025-01-09 02:11:34,444 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:34,444 - DEBUG -    Exiting get()
2025-01-09 02:11:34,450 - ERROR - 
1 Failed download:
2025-01-09 02:11:34,450 - ERROR - ['CSX']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:34,450 - DEBUG - ['CSX']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:34,457 - DEBUG - Exiting download()
2025-01-09 02:11:34,458 - WARNING - Ticker CSX is missing 'Close' column. Skipping.
2025-01-09 02:11:34,458 - DEBUG - Entering download()
2025-01-09 02:11:34,458 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:34,459 - DEBUG -  Entering history()
2025-01-09 02:11:34,460 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CMI', 1, 0])
2025-01-09 02:11:34,460 - DEBUG -   Entering history()
2025-01-09 02:11:34,462 - DEBUG - CMI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:34,462 - DEBUG -    Entering get()
2025-01-09 02:11:34,462 - DEBUG -     Entering _make_request()
2025-01-09 02:11:34,462 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CMI
2025-01-09 02:11:34,462 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:34,463 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:34,463 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:34,463 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:34,463 - DEBUG - reusing cookie
2025-01-09 02:11:34,463 - DEBUG - reusing crumb
2025-01-09 02:11:34,463 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:34,463 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:34,649 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CMI?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1000
2025-01-09 02:11:34,650 - DEBUG - response code=200
2025-01-09 02:11:34,650 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:34,651 - DEBUG -    Exiting get()
2025-01-09 02:11:34,655 - ERROR - 
1 Failed download:
2025-01-09 02:11:34,655 - ERROR - ['CMI']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:34,655 - DEBUG - ['CMI']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:34,657 - DEBUG - Exiting download()
2025-01-09 02:11:34,764 - ERROR - Error writing data for CMI to DB: schema "np" does not exist
LINE 4:             VALUES ('CMI','2020-01-02'::date,np.float64(158....
                                                     ^

2025-01-09 02:11:34,765 - DEBUG - Entering download()
2025-01-09 02:11:34,765 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:34,765 - DEBUG -  Entering history()
2025-01-09 02:11:34,765 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CVS', 1, 0])
2025-01-09 02:11:34,765 - DEBUG -   Entering history()
2025-01-09 02:11:34,766 - DEBUG - CVS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:34,766 - DEBUG -    Entering get()
2025-01-09 02:11:34,766 - DEBUG -     Entering _make_request()
2025-01-09 02:11:34,766 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CVS
2025-01-09 02:11:34,766 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:34,767 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:34,767 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:34,767 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:34,767 - DEBUG - reusing cookie
2025-01-09 02:11:34,767 - DEBUG - reusing crumb
2025-01-09 02:11:34,767 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:34,767 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:34,955 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CVS?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1017
2025-01-09 02:11:34,956 - DEBUG - response code=200
2025-01-09 02:11:34,956 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:34,956 - DEBUG -    Exiting get()
2025-01-09 02:11:34,960 - ERROR - 
1 Failed download:
2025-01-09 02:11:34,960 - ERROR - ['CVS']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:34,960 - DEBUG - ['CVS']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:34,962 - DEBUG - Exiting download()
2025-01-09 02:11:35,072 - ERROR - Error writing data for CVS to DB: schema "np" does not exist
LINE 4:             VALUES ('CVS','2020-01-02'::date,np.float64(64.1...
                                                     ^

2025-01-09 02:11:35,073 - DEBUG - Entering download()
2025-01-09 02:11:35,073 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:35,073 - DEBUG -  Entering history()
2025-01-09 02:11:35,073 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DHR', 1, 0])
2025-01-09 02:11:35,073 - DEBUG -   Entering history()
2025-01-09 02:11:35,074 - DEBUG - DHR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:35,074 - DEBUG -    Entering get()
2025-01-09 02:11:35,074 - DEBUG -     Entering _make_request()
2025-01-09 02:11:35,074 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DHR
2025-01-09 02:11:35,075 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:35,075 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:35,075 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:35,075 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:35,075 - DEBUG - reusing cookie
2025-01-09 02:11:35,075 - DEBUG - reusing crumb
2025-01-09 02:11:35,075 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:35,075 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:35,247 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DHR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1016
2025-01-09 02:11:35,248 - DEBUG - response code=200
2025-01-09 02:11:35,249 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:35,249 - DEBUG -    Exiting get()
2025-01-09 02:11:35,255 - ERROR - 
1 Failed download:
2025-01-09 02:11:35,255 - ERROR - ['DHR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:35,256 - DEBUG - ['DHR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:35,263 - DEBUG - Exiting download()
2025-01-09 02:11:35,263 - WARNING - Ticker DHR is missing 'Close' column. Skipping.
2025-01-09 02:11:35,264 - DEBUG - Entering download()
2025-01-09 02:11:35,264 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:35,264 - DEBUG -  Entering history()
2025-01-09 02:11:35,265 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DRI', 1, 0])
2025-01-09 02:11:35,265 - DEBUG -   Entering history()
2025-01-09 02:11:35,267 - DEBUG - DRI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:35,267 - DEBUG -    Entering get()
2025-01-09 02:11:35,267 - DEBUG -     Entering _make_request()
2025-01-09 02:11:35,267 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DRI
2025-01-09 02:11:35,267 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:35,268 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:35,268 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:35,268 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:35,268 - DEBUG - reusing cookie
2025-01-09 02:11:35,268 - DEBUG - reusing crumb
2025-01-09 02:11:35,268 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:35,268 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:35,452 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DRI?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1027
2025-01-09 02:11:35,453 - DEBUG - response code=200
2025-01-09 02:11:35,454 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:35,454 - DEBUG -    Exiting get()
2025-01-09 02:11:35,460 - ERROR - 
1 Failed download:
2025-01-09 02:11:35,460 - ERROR - ['DRI']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:35,460 - DEBUG - ['DRI']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:35,468 - DEBUG - Exiting download()
2025-01-09 02:11:35,468 - WARNING - Ticker DRI is missing 'Close' column. Skipping.
2025-01-09 02:11:35,468 - DEBUG - Entering download()
2025-01-09 02:11:35,469 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:35,469 - DEBUG -  Entering history()
2025-01-09 02:11:35,470 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DVA', 1, 0])
2025-01-09 02:11:35,470 - DEBUG -   Entering history()
2025-01-09 02:11:35,472 - DEBUG - DVA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:35,472 - DEBUG -    Entering get()
2025-01-09 02:11:35,473 - DEBUG -     Entering _make_request()
2025-01-09 02:11:35,473 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DVA
2025-01-09 02:11:35,473 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:35,473 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:35,473 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:35,473 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:35,473 - DEBUG - reusing cookie
2025-01-09 02:11:35,473 - DEBUG - reusing crumb
2025-01-09 02:11:35,474 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:35,474 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:35,610 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DVA?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 998
2025-01-09 02:11:35,611 - DEBUG - response code=200
2025-01-09 02:11:35,612 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:35,612 - DEBUG -    Exiting get()
2025-01-09 02:11:35,618 - ERROR - 
1 Failed download:
2025-01-09 02:11:35,618 - ERROR - ['DVA']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:35,618 - DEBUG - ['DVA']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:35,626 - DEBUG - Exiting download()
2025-01-09 02:11:35,626 - WARNING - Ticker DVA is missing 'Close' column. Skipping.
2025-01-09 02:11:35,626 - DEBUG - Entering download()
2025-01-09 02:11:35,627 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:35,627 - DEBUG -  Entering history()
2025-01-09 02:11:35,628 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DAY', 1, 0])
2025-01-09 02:11:35,628 - DEBUG -   Entering history()
2025-01-09 02:11:35,630 - DEBUG - DAY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:35,631 - DEBUG -    Entering get()
2025-01-09 02:11:35,631 - DEBUG -     Entering _make_request()
2025-01-09 02:11:35,631 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DAY
2025-01-09 02:11:35,632 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:35,632 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:35,632 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:35,632 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:35,632 - DEBUG - reusing cookie
2025-01-09 02:11:35,632 - DEBUG - reusing crumb
2025-01-09 02:11:35,632 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:35,632 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:35,772 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DAY?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1000
2025-01-09 02:11:35,773 - DEBUG - response code=200
2025-01-09 02:11:35,773 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:35,774 - DEBUG -    Exiting get()
2025-01-09 02:11:35,777 - ERROR - 
1 Failed download:
2025-01-09 02:11:35,777 - ERROR - ['DAY']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:35,777 - DEBUG - ['DAY']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:35,779 - DEBUG - Exiting download()
2025-01-09 02:11:36,002 - ERROR - Error writing data for DAY to DB: schema "np" does not exist
LINE 4:             VALUES ('DAY','2020-01-02'::date,np.float64(68.4...
                                                     ^

2025-01-09 02:11:36,003 - DEBUG - Entering download()
2025-01-09 02:11:36,003 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:36,003 - DEBUG -  Entering history()
2025-01-09 02:11:36,003 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DECK', 1, 0])
2025-01-09 02:11:36,003 - DEBUG -   Entering history()
2025-01-09 02:11:36,004 - DEBUG - DECK: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:36,004 - DEBUG -    Entering get()
2025-01-09 02:11:36,004 - DEBUG -     Entering _make_request()
2025-01-09 02:11:36,004 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DECK
2025-01-09 02:11:36,004 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:36,004 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:36,004 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:36,004 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:36,005 - DEBUG - reusing cookie
2025-01-09 02:11:36,005 - DEBUG - reusing crumb
2025-01-09 02:11:36,005 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:36,005 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:36,132 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DECK?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1035
2025-01-09 02:11:36,132 - DEBUG - response code=200
2025-01-09 02:11:36,132 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:36,132 - DEBUG -    Exiting get()
2025-01-09 02:11:36,135 - ERROR - 
1 Failed download:
2025-01-09 02:11:36,135 - ERROR - ['DECK']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:36,135 - DEBUG - ['DECK']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:36,137 - DEBUG - Exiting download()
2025-01-09 02:11:36,137 - WARNING - Ticker DECK is missing 'Close' column. Skipping.
2025-01-09 02:11:36,137 - DEBUG - Entering download()
2025-01-09 02:11:36,137 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:36,137 - DEBUG -  Entering history()
2025-01-09 02:11:36,137 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DE', 1, 0])
2025-01-09 02:11:36,138 - DEBUG -   Entering history()
2025-01-09 02:11:36,138 - DEBUG - DE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:36,138 - DEBUG -    Entering get()
2025-01-09 02:11:36,138 - DEBUG -     Entering _make_request()
2025-01-09 02:11:36,138 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DE
2025-01-09 02:11:36,138 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:36,138 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:36,138 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:36,139 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:36,139 - DEBUG - reusing cookie
2025-01-09 02:11:36,139 - DEBUG - reusing crumb
2025-01-09 02:11:36,139 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:36,139 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:36,347 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DE?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1004
2025-01-09 02:11:36,348 - DEBUG - response code=200
2025-01-09 02:11:36,349 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:36,349 - DEBUG -    Exiting get()
2025-01-09 02:11:36,355 - ERROR - 
1 Failed download:
2025-01-09 02:11:36,355 - ERROR - ['DE']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:36,355 - DEBUG - ['DE']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:36,362 - DEBUG - Exiting download()
2025-01-09 02:11:36,363 - WARNING - Ticker DE is missing 'Close' column. Skipping.
2025-01-09 02:11:36,363 - DEBUG - Entering download()
2025-01-09 02:11:36,363 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:36,364 - DEBUG -  Entering history()
2025-01-09 02:11:36,365 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DELL', 1, 0])
2025-01-09 02:11:36,365 - DEBUG -   Entering history()
2025-01-09 02:11:36,367 - DEBUG - DELL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:36,367 - DEBUG -    Entering get()
2025-01-09 02:11:36,367 - DEBUG -     Entering _make_request()
2025-01-09 02:11:36,367 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DELL
2025-01-09 02:11:36,368 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:36,368 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:36,368 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:36,368 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:36,368 - DEBUG - reusing cookie
2025-01-09 02:11:36,368 - DEBUG - reusing crumb
2025-01-09 02:11:36,368 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:36,368 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:36,513 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DELL?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1022
2025-01-09 02:11:36,514 - DEBUG - response code=200
2025-01-09 02:11:36,515 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:36,515 - DEBUG -    Exiting get()
2025-01-09 02:11:36,521 - ERROR - 
1 Failed download:
2025-01-09 02:11:36,521 - ERROR - ['DELL']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:36,521 - DEBUG - ['DELL']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:36,529 - DEBUG - Exiting download()
2025-01-09 02:11:36,808 - ERROR - Error writing data for DELL to DB: schema "np" does not exist
LINE 4:             VALUES ('DELL','2020-01-02'::date,np.float64(24....
                                                      ^

2025-01-09 02:11:36,809 - DEBUG - Entering download()
2025-01-09 02:11:36,809 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:36,809 - DEBUG -  Entering history()
2025-01-09 02:11:36,809 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DAL', 1, 0])
2025-01-09 02:11:36,809 - DEBUG -   Entering history()
2025-01-09 02:11:36,810 - DEBUG - DAL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:36,810 - DEBUG -    Entering get()
2025-01-09 02:11:36,810 - DEBUG -     Entering _make_request()
2025-01-09 02:11:36,810 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DAL
2025-01-09 02:11:36,810 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:36,810 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:36,810 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:36,810 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:36,811 - DEBUG - reusing cookie
2025-01-09 02:11:36,811 - DEBUG - reusing crumb
2025-01-09 02:11:36,811 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:36,811 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:36,968 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DAL?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1015
2025-01-09 02:11:36,969 - DEBUG - response code=200
2025-01-09 02:11:36,969 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:36,969 - DEBUG -    Exiting get()
2025-01-09 02:11:36,975 - ERROR - 
1 Failed download:
2025-01-09 02:11:36,975 - ERROR - ['DAL']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:36,975 - DEBUG - ['DAL']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:36,983 - DEBUG - Exiting download()
2025-01-09 02:11:37,101 - ERROR - Error writing data for DAL to DB: schema "np" does not exist
LINE 4:             VALUES ('DAL','2020-01-02'::date,np.float64(57.6...
                                                     ^

2025-01-09 02:11:37,101 - DEBUG - Entering download()
2025-01-09 02:11:37,101 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:37,101 - DEBUG -  Entering history()
2025-01-09 02:11:37,102 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DVN', 1, 0])
2025-01-09 02:11:37,102 - DEBUG -   Entering history()
2025-01-09 02:11:37,102 - DEBUG - DVN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:37,103 - DEBUG -    Entering get()
2025-01-09 02:11:37,103 - DEBUG -     Entering _make_request()
2025-01-09 02:11:37,103 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DVN
2025-01-09 02:11:37,103 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:37,103 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:37,103 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:37,103 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:37,103 - DEBUG - reusing cookie
2025-01-09 02:11:37,103 - DEBUG - reusing crumb
2025-01-09 02:11:37,103 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:37,103 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:37,279 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DVN?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1020
2025-01-09 02:11:37,280 - DEBUG - response code=200
2025-01-09 02:11:37,280 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:37,280 - DEBUG -    Exiting get()
2025-01-09 02:11:37,286 - ERROR - 
1 Failed download:
2025-01-09 02:11:37,287 - ERROR - ['DVN']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:37,287 - DEBUG - ['DVN']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:37,294 - DEBUG - Exiting download()
2025-01-09 02:11:37,404 - ERROR - Error writing data for DVN to DB: schema "np" does not exist
LINE 4:             VALUES ('DVN','2020-01-02'::date,np.float64(19.5...
                                                     ^

2025-01-09 02:11:37,404 - DEBUG - Entering download()
2025-01-09 02:11:37,405 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:37,405 - DEBUG -  Entering history()
2025-01-09 02:11:37,405 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DXCM', 1, 0])
2025-01-09 02:11:37,405 - DEBUG -   Entering history()
2025-01-09 02:11:37,406 - DEBUG - DXCM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:37,406 - DEBUG -    Entering get()
2025-01-09 02:11:37,406 - DEBUG -     Entering _make_request()
2025-01-09 02:11:37,406 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DXCM
2025-01-09 02:11:37,406 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:37,406 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:37,406 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:37,406 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:37,406 - DEBUG - reusing cookie
2025-01-09 02:11:37,406 - DEBUG - reusing crumb
2025-01-09 02:11:37,406 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:37,406 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:37,532 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DXCM?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1003
2025-01-09 02:11:37,533 - DEBUG - response code=200
2025-01-09 02:11:37,533 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:37,533 - DEBUG -    Exiting get()
2025-01-09 02:11:37,537 - ERROR - 
1 Failed download:
2025-01-09 02:11:37,537 - ERROR - ['DXCM']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:37,538 - DEBUG - ['DXCM']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:37,542 - DEBUG - Exiting download()
2025-01-09 02:11:37,542 - WARNING - Ticker DXCM is missing 'Close' column. Skipping.
2025-01-09 02:11:37,543 - DEBUG - Entering download()
2025-01-09 02:11:37,543 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:37,543 - DEBUG -  Entering history()
2025-01-09 02:11:37,543 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FANG', 1, 0])
2025-01-09 02:11:37,544 - DEBUG -   Entering history()
2025-01-09 02:11:37,545 - DEBUG - FANG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:37,545 - DEBUG -    Entering get()
2025-01-09 02:11:37,546 - DEBUG -     Entering _make_request()
2025-01-09 02:11:37,546 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FANG
2025-01-09 02:11:37,546 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:37,546 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:37,546 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:37,546 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:37,546 - DEBUG - reusing cookie
2025-01-09 02:11:37,546 - DEBUG - reusing crumb
2025-01-09 02:11:37,546 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:37,547 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:37,710 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FANG?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1030
2025-01-09 02:11:37,711 - DEBUG - response code=200
2025-01-09 02:11:37,711 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:37,712 - DEBUG -    Exiting get()
2025-01-09 02:11:37,718 - ERROR - 
1 Failed download:
2025-01-09 02:11:37,718 - ERROR - ['FANG']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:37,718 - DEBUG - ['FANG']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:37,725 - DEBUG - Exiting download()
2025-01-09 02:11:37,835 - ERROR - Error writing data for FANG to DB: schema "np" does not exist
LINE 4:             VALUES ('FANG','2020-01-02'::date,np.float64(75....
                                                      ^

2025-01-09 02:11:37,835 - DEBUG - Entering download()
2025-01-09 02:11:37,835 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:37,835 - DEBUG -  Entering history()
2025-01-09 02:11:37,836 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DLR', 1, 0])
2025-01-09 02:11:37,836 - DEBUG -   Entering history()
2025-01-09 02:11:37,836 - DEBUG - DLR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:37,837 - DEBUG -    Entering get()
2025-01-09 02:11:37,837 - DEBUG -     Entering _make_request()
2025-01-09 02:11:37,837 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DLR
2025-01-09 02:11:37,837 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:37,837 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:37,837 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:37,837 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:37,837 - DEBUG - reusing cookie
2025-01-09 02:11:37,837 - DEBUG - reusing crumb
2025-01-09 02:11:37,837 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:37,837 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:37,996 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DLR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1031
2025-01-09 02:11:37,997 - DEBUG - response code=200
2025-01-09 02:11:37,998 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:37,998 - DEBUG -    Exiting get()
2025-01-09 02:11:38,004 - ERROR - 
1 Failed download:
2025-01-09 02:11:38,004 - ERROR - ['DLR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:38,005 - DEBUG - ['DLR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:38,012 - DEBUG - Exiting download()
2025-01-09 02:11:38,123 - ERROR - Error writing data for DLR to DB: schema "np" does not exist
LINE 4:             VALUES ('DLR','2020-01-02'::date,np.float64(100....
                                                     ^

2025-01-09 02:11:38,123 - DEBUG - Entering download()
2025-01-09 02:11:38,123 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:38,123 - DEBUG -  Entering history()
2025-01-09 02:11:38,124 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DFS', 1, 0])
2025-01-09 02:11:38,124 - DEBUG -   Entering history()
2025-01-09 02:11:38,124 - DEBUG - DFS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:38,125 - DEBUG -    Entering get()
2025-01-09 02:11:38,125 - DEBUG -     Entering _make_request()
2025-01-09 02:11:38,125 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DFS
2025-01-09 02:11:38,125 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:38,125 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:38,125 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:38,125 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:38,125 - DEBUG - reusing cookie
2025-01-09 02:11:38,125 - DEBUG - reusing crumb
2025-01-09 02:11:38,125 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:38,125 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:38,294 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DFS?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1031
2025-01-09 02:11:38,295 - DEBUG - response code=200
2025-01-09 02:11:38,296 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:38,296 - DEBUG -    Exiting get()
2025-01-09 02:11:38,302 - ERROR - 
1 Failed download:
2025-01-09 02:11:38,302 - ERROR - ['DFS']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:38,303 - DEBUG - ['DFS']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:38,310 - DEBUG - Exiting download()
2025-01-09 02:11:38,310 - WARNING - Ticker DFS is missing 'Close' column. Skipping.
2025-01-09 02:11:38,310 - DEBUG - Entering download()
2025-01-09 02:11:38,311 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:38,311 - DEBUG -  Entering history()
2025-01-09 02:11:38,312 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DG', 1, 0])
2025-01-09 02:11:38,312 - DEBUG -   Entering history()
2025-01-09 02:11:38,314 - DEBUG - DG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:38,314 - DEBUG -    Entering get()
2025-01-09 02:11:38,314 - DEBUG -     Entering _make_request()
2025-01-09 02:11:38,314 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DG
2025-01-09 02:11:38,314 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:38,315 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:38,315 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:38,315 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:38,315 - DEBUG - reusing cookie
2025-01-09 02:11:38,315 - DEBUG - reusing crumb
2025-01-09 02:11:38,315 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:38,315 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:38,458 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DG?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1026
2025-01-09 02:11:38,459 - DEBUG - response code=200
2025-01-09 02:11:38,460 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:38,460 - DEBUG -    Exiting get()
2025-01-09 02:11:38,466 - ERROR - 
1 Failed download:
2025-01-09 02:11:38,466 - ERROR - ['DG']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:38,466 - DEBUG - ['DG']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:38,474 - DEBUG - Exiting download()
2025-01-09 02:11:38,583 - ERROR - Error writing data for DG to DB: schema "np" does not exist
LINE 4:             VALUES ('DG','2020-01-02'::date,np.float64(146.9...
                                                    ^

2025-01-09 02:11:38,584 - DEBUG - Entering download()
2025-01-09 02:11:38,584 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:38,584 - DEBUG -  Entering history()
2025-01-09 02:11:38,584 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DLTR', 1, 0])
2025-01-09 02:11:38,585 - DEBUG -   Entering history()
2025-01-09 02:11:38,585 - DEBUG - DLTR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:38,585 - DEBUG -    Entering get()
2025-01-09 02:11:38,585 - DEBUG -     Entering _make_request()
2025-01-09 02:11:38,585 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DLTR
2025-01-09 02:11:38,586 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:38,586 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:38,586 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:38,586 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:38,586 - DEBUG - reusing cookie
2025-01-09 02:11:38,586 - DEBUG - reusing crumb
2025-01-09 02:11:38,586 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:38,586 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:38,730 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DLTR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1013
2025-01-09 02:11:38,730 - DEBUG - response code=200
2025-01-09 02:11:38,730 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:38,731 - DEBUG -    Exiting get()
2025-01-09 02:11:38,734 - ERROR - 
1 Failed download:
2025-01-09 02:11:38,734 - ERROR - ['DLTR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:38,735 - DEBUG - ['DLTR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:38,740 - DEBUG - Exiting download()
2025-01-09 02:11:38,869 - ERROR - Error writing data for DLTR to DB: schema "np" does not exist
LINE 4:             VALUES ('DLTR','2020-01-02'::date,np.float64(94....
                                                      ^

2025-01-09 02:11:38,869 - DEBUG - Entering download()
2025-01-09 02:11:38,869 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:38,869 - DEBUG -  Entering history()
2025-01-09 02:11:38,870 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['D', 1, 0])
2025-01-09 02:11:38,870 - DEBUG -   Entering history()
2025-01-09 02:11:38,871 - DEBUG - D: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:38,871 - DEBUG -    Entering get()
2025-01-09 02:11:38,871 - DEBUG -     Entering _make_request()
2025-01-09 02:11:38,871 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/D
2025-01-09 02:11:38,871 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:38,871 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:38,871 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:38,871 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:38,871 - DEBUG - reusing cookie
2025-01-09 02:11:38,871 - DEBUG - reusing crumb
2025-01-09 02:11:38,871 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:38,871 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:39,047 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/D?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1012
2025-01-09 02:11:39,048 - DEBUG - response code=200
2025-01-09 02:11:39,049 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:39,049 - DEBUG -    Exiting get()
2025-01-09 02:11:39,055 - ERROR - 
1 Failed download:
2025-01-09 02:11:39,055 - ERROR - ['D']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:39,056 - DEBUG - ['D']: Traceback (most recent call last):
  File "C:\Users\haman\App%ticker%ata\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\App%ticker%ata\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\App%ticker%ata\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\App%ticker%ata\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\App%ticker%ata\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:39,063 - DEBUG - Exiting download()
2025-01-09 02:11:39,063 - WARNING - Ticker D is missing 'Close' column. Skipping.
2025-01-09 02:11:39,064 - DEBUG - Entering download()
2025-01-09 02:11:39,064 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:39,064 - DEBUG -  Entering history()
2025-01-09 02:11:39,065 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DPZ', 1, 0])
2025-01-09 02:11:39,065 - DEBUG -   Entering history()
2025-01-09 02:11:39,067 - DEBUG - DPZ: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:39,067 - DEBUG -    Entering get()
2025-01-09 02:11:39,067 - DEBUG -     Entering _make_request()
2025-01-09 02:11:39,067 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DPZ
2025-01-09 02:11:39,067 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:39,068 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:39,068 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:39,068 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:39,068 - DEBUG - reusing cookie
2025-01-09 02:11:39,068 - DEBUG - reusing crumb
2025-01-09 02:11:39,068 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:39,068 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:39,214 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DPZ?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1020
2025-01-09 02:11:39,215 - DEBUG - response code=200
2025-01-09 02:11:39,215 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:39,216 - DEBUG -    Exiting get()
2025-01-09 02:11:39,221 - ERROR - 
1 Failed download:
2025-01-09 02:11:39,222 - ERROR - ['DPZ']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:39,222 - DEBUG - ['DPZ']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:39,229 - DEBUG - Exiting download()
2025-01-09 02:11:39,343 - ERROR - Error writing data for DPZ to DB: schema "np" does not exist
LINE 4:             VALUES ('DPZ','2020-01-02'::date,np.float64(277....
                                                     ^

2025-01-09 02:11:39,343 - DEBUG - Entering download()
2025-01-09 02:11:39,343 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:39,344 - DEBUG -  Entering history()
2025-01-09 02:11:39,344 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DOV', 1, 0])
2025-01-09 02:11:39,344 - DEBUG -   Entering history()
2025-01-09 02:11:39,345 - DEBUG - DOV: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:39,345 - DEBUG -    Entering get()
2025-01-09 02:11:39,345 - DEBUG -     Entering _make_request()
2025-01-09 02:11:39,345 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DOV
2025-01-09 02:11:39,345 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:39,345 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:39,345 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:39,345 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:39,345 - DEBUG - reusing cookie
2025-01-09 02:11:39,345 - DEBUG - reusing crumb
2025-01-09 02:11:39,345 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:39,345 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:39,534 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DOV?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1013
2025-01-09 02:11:39,535 - DEBUG - response code=200
2025-01-09 02:11:39,536 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:39,536 - DEBUG -    Exiting get()
2025-01-09 02:11:39,542 - ERROR - 
1 Failed download:
2025-01-09 02:11:39,542 - ERROR - ['DOV']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:39,543 - DEBUG - ['DOV']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:39,550 - DEBUG - Exiting download()
2025-01-09 02:11:39,663 - ERROR - Error writing data for DOV to DB: schema "np" does not exist
LINE 4:             VALUES ('DOV','2020-01-02'::date,np.float64(108....
                                                     ^

2025-01-09 02:11:39,663 - DEBUG - Entering download()
2025-01-09 02:11:39,663 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:39,663 - DEBUG -  Entering history()
2025-01-09 02:11:39,664 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DOW', 1, 0])
2025-01-09 02:11:39,664 - DEBUG -   Entering history()
2025-01-09 02:11:39,665 - DEBUG - DOW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:39,665 - DEBUG -    Entering get()
2025-01-09 02:11:39,665 - DEBUG -     Entering _make_request()
2025-01-09 02:11:39,665 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DOW
2025-01-09 02:11:39,665 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:39,665 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:39,665 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:39,665 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:39,665 - DEBUG - reusing cookie
2025-01-09 02:11:39,665 - DEBUG - reusing crumb
2025-01-09 02:11:39,665 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:39,665 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:39,807 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DOW?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 990
2025-01-09 02:11:39,808 - DEBUG - response code=200
2025-01-09 02:11:39,808 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:39,808 - DEBUG -    Exiting get()
2025-01-09 02:11:39,814 - ERROR - 
1 Failed download:
2025-01-09 02:11:39,814 - ERROR - ['DOW']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:39,814 - DEBUG - ['DOW']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:39,821 - DEBUG - Exiting download()
2025-01-09 02:11:39,948 - ERROR - Error writing data for DOW to DB: schema "np" does not exist
LINE 4:             VALUES ('DOW','2020-01-02'::date,np.float64(42.5...
                                                     ^

2025-01-09 02:11:39,948 - DEBUG - Entering download()
2025-01-09 02:11:39,948 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:39,949 - DEBUG -  Entering history()
2025-01-09 02:11:39,949 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DHI', 1, 0])
2025-01-09 02:11:39,949 - DEBUG -   Entering history()
2025-01-09 02:11:39,950 - DEBUG - DHI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:39,950 - DEBUG -    Entering get()
2025-01-09 02:11:39,950 - DEBUG -     Entering _make_request()
2025-01-09 02:11:39,950 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DHI
2025-01-09 02:11:39,950 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:39,950 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:39,950 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:39,950 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:39,950 - DEBUG - reusing cookie
2025-01-09 02:11:39,950 - DEBUG - reusing crumb
2025-01-09 02:11:39,950 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:39,950 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:40,180 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DHI?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1012
2025-01-09 02:11:40,181 - DEBUG - response code=200
2025-01-09 02:11:40,181 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:40,182 - DEBUG -    Exiting get()
2025-01-09 02:11:40,188 - ERROR - 
1 Failed download:
2025-01-09 02:11:40,188 - ERROR - ['DHI']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:40,188 - DEBUG - ['DHI']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:40,195 - DEBUG - Exiting download()
2025-01-09 02:11:40,435 - ERROR - Error writing data for DHI to DB: schema "np" does not exist
LINE 4:             VALUES ('DHI','2020-01-02'::date,np.float64(50.3...
                                                     ^

2025-01-09 02:11:40,436 - DEBUG - Entering download()
2025-01-09 02:11:40,436 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:40,436 - DEBUG -  Entering history()
2025-01-09 02:11:40,437 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DTE', 1, 0])
2025-01-09 02:11:40,437 - DEBUG -   Entering history()
2025-01-09 02:11:40,438 - DEBUG - DTE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:40,438 - DEBUG -    Entering get()
2025-01-09 02:11:40,438 - DEBUG -     Entering _make_request()
2025-01-09 02:11:40,438 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DTE
2025-01-09 02:11:40,438 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:40,438 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:40,438 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:40,438 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:40,439 - DEBUG - reusing cookie
2025-01-09 02:11:40,439 - DEBUG - reusing crumb
2025-01-09 02:11:40,439 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:40,439 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:40,630 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DTE?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1016
2025-01-09 02:11:40,631 - DEBUG - response code=200
2025-01-09 02:11:40,632 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:40,632 - DEBUG -    Exiting get()
2025-01-09 02:11:40,638 - ERROR - 
1 Failed download:
2025-01-09 02:11:40,638 - ERROR - ['DTE']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:40,638 - DEBUG - ['DTE']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:40,646 - DEBUG - Exiting download()
2025-01-09 02:11:40,901 - ERROR - Error writing data for DTE to DB: schema "np" does not exist
LINE 4:             VALUES ('DTE','2020-01-02'::date,np.float64(93.3...
                                                     ^

2025-01-09 02:11:40,901 - DEBUG - Entering download()
2025-01-09 02:11:40,902 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:40,902 - DEBUG -  Entering history()
2025-01-09 02:11:40,902 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DUK', 1, 0])
2025-01-09 02:11:40,902 - DEBUG -   Entering history()
2025-01-09 02:11:40,903 - DEBUG - DUK: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:40,903 - DEBUG -    Entering get()
2025-01-09 02:11:40,903 - DEBUG -     Entering _make_request()
2025-01-09 02:11:40,903 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DUK
2025-01-09 02:11:40,903 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:40,903 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:40,903 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:40,903 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:40,903 - DEBUG - reusing cookie
2025-01-09 02:11:40,904 - DEBUG - reusing crumb
2025-01-09 02:11:40,904 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:40,904 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:41,095 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DUK?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1032
2025-01-09 02:11:41,097 - DEBUG - response code=200
2025-01-09 02:11:41,097 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:41,097 - DEBUG -    Exiting get()
2025-01-09 02:11:41,103 - ERROR - 
1 Failed download:
2025-01-09 02:11:41,103 - ERROR - ['DUK']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:41,104 - DEBUG - ['DUK']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:41,111 - DEBUG - Exiting download()
2025-01-09 02:11:41,111 - WARNING - Ticker DUK is missing 'Close' column. Skipping.
2025-01-09 02:11:41,111 - DEBUG - Entering download()
2025-01-09 02:11:41,112 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:41,112 - DEBUG -  Entering history()
2025-01-09 02:11:41,113 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DD', 1, 0])
2025-01-09 02:11:41,114 - DEBUG -   Entering history()
2025-01-09 02:11:41,115 - DEBUG - DD: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:41,116 - DEBUG -    Entering get()
2025-01-09 02:11:41,116 - DEBUG -     Entering _make_request()
2025-01-09 02:11:41,116 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DD
2025-01-09 02:11:41,116 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:41,116 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:41,116 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:41,116 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:41,117 - DEBUG - reusing cookie
2025-01-09 02:11:41,117 - DEBUG - reusing crumb
2025-01-09 02:11:41,117 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:41,117 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:41,312 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DD?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1016
2025-01-09 02:11:41,313 - DEBUG - response code=200
2025-01-09 02:11:41,313 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:41,314 - DEBUG -    Exiting get()
2025-01-09 02:11:41,320 - ERROR - 
1 Failed download:
2025-01-09 02:11:41,320 - ERROR - ['DD']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:41,320 - DEBUG - ['DD']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:41,327 - DEBUG - Exiting download()
2025-01-09 02:11:41,443 - ERROR - Error writing data for DD to DB: schema "np" does not exist
LINE 4:             VALUES ('DD','2020-01-02'::date,np.float64(58.79...
                                                    ^

2025-01-09 02:11:41,443 - DEBUG - Entering download()
2025-01-09 02:11:41,444 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:41,444 - DEBUG -  Entering history()
2025-01-09 02:11:41,444 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EMN', 1, 0])
2025-01-09 02:11:41,444 - DEBUG -   Entering history()
2025-01-09 02:11:41,445 - DEBUG - EMN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:41,445 - DEBUG -    Entering get()
2025-01-09 02:11:41,445 - DEBUG -     Entering _make_request()
2025-01-09 02:11:41,445 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EMN
2025-01-09 02:11:41,445 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:41,445 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:41,445 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:41,445 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:41,445 - DEBUG - reusing cookie
2025-01-09 02:11:41,445 - DEBUG - reusing crumb
2025-01-09 02:11:41,445 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:41,445 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:41,626 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EMN?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1020
2025-01-09 02:11:41,627 - DEBUG - response code=200
2025-01-09 02:11:41,627 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:41,627 - DEBUG -    Exiting get()
2025-01-09 02:11:41,633 - ERROR - 
1 Failed download:
2025-01-09 02:11:41,633 - ERROR - ['EMN']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:41,634 - DEBUG - ['EMN']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:41,641 - DEBUG - Exiting download()
2025-01-09 02:11:41,759 - ERROR - Error writing data for EMN to DB: schema "np" does not exist
LINE 4:             VALUES ('EMN','2020-01-02'::date,np.float64(67.8...
                                                     ^

2025-01-09 02:11:41,760 - DEBUG - Entering download()
2025-01-09 02:11:41,760 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:41,760 - DEBUG -  Entering history()
2025-01-09 02:11:41,760 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ETN', 1, 0])
2025-01-09 02:11:41,761 - DEBUG -   Entering history()
2025-01-09 02:11:41,761 - DEBUG - ETN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:41,761 - DEBUG -    Entering get()
2025-01-09 02:11:41,762 - DEBUG -     Entering _make_request()
2025-01-09 02:11:41,762 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ETN
2025-01-09 02:11:41,762 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:41,762 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:41,762 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:41,762 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:41,762 - DEBUG - reusing cookie
2025-01-09 02:11:41,762 - DEBUG - reusing crumb
2025-01-09 02:11:41,762 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:41,762 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:41,969 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ETN?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1020
2025-01-09 02:11:41,970 - DEBUG - response code=200
2025-01-09 02:11:41,971 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:41,971 - DEBUG -    Exiting get()
2025-01-09 02:11:41,977 - ERROR - 
1 Failed download:
2025-01-09 02:11:41,977 - ERROR - ['ETN']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:41,977 - DEBUG - ['ETN']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:41,984 - DEBUG - Exiting download()
2025-01-09 02:11:42,109 - ERROR - Error writing data for ETN to DB: schema "np" does not exist
LINE 4:             VALUES ('ETN','2020-01-02'::date,np.float64(86.6...
                                                     ^

2025-01-09 02:11:42,109 - DEBUG - Entering download()
2025-01-09 02:11:42,109 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:42,109 - DEBUG -  Entering history()
2025-01-09 02:11:42,110 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EBAY', 1, 0])
2025-01-09 02:11:42,110 - DEBUG -   Entering history()
2025-01-09 02:11:42,110 - DEBUG - EBAY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:42,111 - DEBUG -    Entering get()
2025-01-09 02:11:42,111 - DEBUG -     Entering _make_request()
2025-01-09 02:11:42,111 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EBAY
2025-01-09 02:11:42,111 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:42,111 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:42,111 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:42,111 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:42,111 - DEBUG - reusing cookie
2025-01-09 02:11:42,111 - DEBUG - reusing crumb
2025-01-09 02:11:42,111 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:42,111 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:42,270 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EBAY?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 996
2025-01-09 02:11:42,271 - DEBUG - response code=200
2025-01-09 02:11:42,271 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:42,272 - DEBUG -    Exiting get()
2025-01-09 02:11:42,278 - ERROR - 
1 Failed download:
2025-01-09 02:11:42,278 - ERROR - ['EBAY']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:42,278 - DEBUG - ['EBAY']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:42,285 - DEBUG - Exiting download()
2025-01-09 02:11:42,397 - ERROR - Error writing data for EBAY to DB: schema "np" does not exist
LINE 4:             VALUES ('EBAY','2020-01-02'::date,np.float64(33....
                                                      ^

2025-01-09 02:11:42,398 - DEBUG - Entering download()
2025-01-09 02:11:42,398 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:42,398 - DEBUG -  Entering history()
2025-01-09 02:11:42,398 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ECL', 1, 0])
2025-01-09 02:11:42,399 - DEBUG -   Entering history()
2025-01-09 02:11:42,399 - DEBUG - ECL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:42,399 - DEBUG -    Entering get()
2025-01-09 02:11:42,399 - DEBUG -     Entering _make_request()
2025-01-09 02:11:42,399 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ECL
2025-01-09 02:11:42,399 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:42,399 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:42,400 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:42,400 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:42,400 - DEBUG - reusing cookie
2025-01-09 02:11:42,400 - DEBUG - reusing crumb
2025-01-09 02:11:42,400 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:42,400 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:42,572 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ECL?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1000
2025-01-09 02:11:42,573 - DEBUG - response code=200
2025-01-09 02:11:42,573 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:42,574 - DEBUG -    Exiting get()
2025-01-09 02:11:42,580 - ERROR - 
1 Failed download:
2025-01-09 02:11:42,580 - ERROR - ['ECL']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:42,580 - DEBUG - ['ECL']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:42,588 - DEBUG - Exiting download()
2025-01-09 02:11:42,857 - ERROR - Error writing data for ECL to DB: schema "np" does not exist
LINE 4:             VALUES ('ECL','2020-01-02'::date,np.float64(183....
                                                     ^

2025-01-09 02:11:42,857 - DEBUG - Entering download()
2025-01-09 02:11:42,857 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:42,857 - DEBUG -  Entering history()
2025-01-09 02:11:42,858 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EIX', 1, 0])
2025-01-09 02:11:42,858 - DEBUG -   Entering history()
2025-01-09 02:11:42,858 - DEBUG - EIX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:42,859 - DEBUG -    Entering get()
2025-01-09 02:11:42,859 - DEBUG -     Entering _make_request()
2025-01-09 02:11:42,859 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EIX
2025-01-09 02:11:42,859 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:42,859 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:42,859 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:42,859 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:42,859 - DEBUG - reusing cookie
2025-01-09 02:11:42,859 - DEBUG - reusing crumb
2025-01-09 02:11:42,859 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:42,859 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:43,070 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EIX?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1013
2025-01-09 02:11:43,071 - DEBUG - response code=200
2025-01-09 02:11:43,071 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:43,071 - DEBUG -    Exiting get()
2025-01-09 02:11:43,077 - ERROR - 
1 Failed download:
2025-01-09 02:11:43,077 - ERROR - ['EIX']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:43,078 - DEBUG - ['EIX']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:43,085 - DEBUG - Exiting download()
2025-01-09 02:11:43,196 - ERROR - Error writing data for EIX to DB: schema "np" does not exist
LINE 4:             VALUES ('EIX','2020-01-02'::date,np.float64(59.9...
                                                     ^

2025-01-09 02:11:43,197 - DEBUG - Entering download()
2025-01-09 02:11:43,197 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:43,197 - DEBUG -  Entering history()
2025-01-09 02:11:43,197 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EW', 1, 0])
2025-01-09 02:11:43,198 - DEBUG -   Entering history()
2025-01-09 02:11:43,198 - DEBUG - EW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:43,198 - DEBUG -    Entering get()
2025-01-09 02:11:43,198 - DEBUG -     Entering _make_request()
2025-01-09 02:11:43,198 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EW
2025-01-09 02:11:43,199 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:43,199 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:43,199 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:43,199 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:43,199 - DEBUG - reusing cookie
2025-01-09 02:11:43,199 - DEBUG - reusing crumb
2025-01-09 02:11:43,199 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:43,199 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:43,330 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EW?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1036
2025-01-09 02:11:43,330 - DEBUG - response code=200
2025-01-09 02:11:43,331 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:43,331 - DEBUG -    Exiting get()
2025-01-09 02:11:43,334 - ERROR - 
1 Failed download:
2025-01-09 02:11:43,335 - ERROR - ['EW']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:43,335 - DEBUG - ['EW']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:43,339 - DEBUG - Exiting download()
2025-01-09 02:11:43,466 - ERROR - Error writing data for EW to DB: schema "np" does not exist
LINE 4:             VALUES ('EW','2020-01-02'::date,np.float64(76.66...
                                                    ^

2025-01-09 02:11:43,466 - DEBUG - Entering download()
2025-01-09 02:11:43,466 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:43,467 - DEBUG -  Entering history()
2025-01-09 02:11:43,467 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EA', 1, 0])
2025-01-09 02:11:43,467 - DEBUG -   Entering history()
2025-01-09 02:11:43,468 - DEBUG - EA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:43,468 - DEBUG -    Entering get()
2025-01-09 02:11:43,468 - DEBUG -     Entering _make_request()
2025-01-09 02:11:43,468 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EA
2025-01-09 02:11:43,468 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:43,468 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:43,468 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:43,468 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:43,468 - DEBUG - reusing cookie
2025-01-09 02:11:43,468 - DEBUG - reusing crumb
2025-01-09 02:11:43,468 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:43,468 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:43,617 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EA?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1020
2025-01-09 02:11:43,618 - DEBUG - response code=200
2025-01-09 02:11:43,619 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:43,619 - DEBUG -    Exiting get()
2025-01-09 02:11:43,625 - ERROR - 
1 Failed download:
2025-01-09 02:11:43,625 - ERROR - ['EA']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:43,625 - DEBUG - ['EA']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:43,632 - DEBUG - Exiting download()
2025-01-09 02:11:43,633 - WARNING - Ticker EA is missing 'Close' column. Skipping.
2025-01-09 02:11:43,633 - DEBUG - Entering download()
2025-01-09 02:11:43,633 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:43,634 - DEBUG -  Entering history()
2025-01-09 02:11:43,635 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ELV', 1, 0])
2025-01-09 02:11:43,635 - DEBUG -   Entering history()
2025-01-09 02:11:43,636 - DEBUG - ELV: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:43,637 - DEBUG -    Entering get()
2025-01-09 02:11:43,637 - DEBUG -     Entering _make_request()
2025-01-09 02:11:43,637 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ELV
2025-01-09 02:11:43,637 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:43,637 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:43,637 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:43,637 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:43,638 - DEBUG - reusing cookie
2025-01-09 02:11:43,638 - DEBUG - reusing crumb
2025-01-09 02:11:43,638 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:43,638 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:43,786 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ELV?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1022
2025-01-09 02:11:43,787 - DEBUG - response code=200
2025-01-09 02:11:43,787 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:43,787 - DEBUG -    Exiting get()
2025-01-09 02:11:43,793 - ERROR - 
1 Failed download:
2025-01-09 02:11:43,794 - ERROR - ['ELV']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:43,794 - DEBUG - ['ELV']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:43,801 - DEBUG - Exiting download()
2025-01-09 02:11:43,910 - ERROR - Error writing data for ELV to DB: schema "np" does not exist
LINE 4:             VALUES ('ELV','2020-01-02'::date,np.float64(284....
                                                     ^

2025-01-09 02:11:43,910 - DEBUG - Entering download()
2025-01-09 02:11:43,910 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:43,910 - DEBUG -  Entering history()
2025-01-09 02:11:43,911 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EMR', 1, 0])
2025-01-09 02:11:43,911 - DEBUG -   Entering history()
2025-01-09 02:11:43,912 - DEBUG - EMR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:43,912 - DEBUG -    Entering get()
2025-01-09 02:11:43,912 - DEBUG -     Entering _make_request()
2025-01-09 02:11:43,912 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EMR
2025-01-09 02:11:43,912 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:43,912 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:43,912 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:43,912 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:43,912 - DEBUG - reusing cookie
2025-01-09 02:11:43,912 - DEBUG - reusing crumb
2025-01-09 02:11:43,912 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:43,912 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:44,127 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EMR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1018
2025-01-09 02:11:44,128 - DEBUG - response code=200
2025-01-09 02:11:44,129 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:44,129 - DEBUG -    Exiting get()
2025-01-09 02:11:44,135 - ERROR - 
1 Failed download:
2025-01-09 02:11:44,135 - ERROR - ['EMR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:44,135 - DEBUG - ['EMR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:44,143 - DEBUG - Exiting download()
2025-01-09 02:11:44,254 - ERROR - Error writing data for EMR to DB: schema "np" does not exist
LINE 4:             VALUES ('EMR','2020-01-02'::date,np.float64(68.1...
                                                     ^

2025-01-09 02:11:44,254 - DEBUG - Entering download()
2025-01-09 02:11:44,255 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:44,255 - DEBUG -  Entering history()
2025-01-09 02:11:44,255 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ENPH', 1, 0])
2025-01-09 02:11:44,255 - DEBUG -   Entering history()
2025-01-09 02:11:44,256 - DEBUG - ENPH: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:44,256 - DEBUG -    Entering get()
2025-01-09 02:11:44,256 - DEBUG -     Entering _make_request()
2025-01-09 02:11:44,256 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ENPH
2025-01-09 02:11:44,256 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:44,256 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:44,256 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:44,256 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:44,256 - DEBUG - reusing cookie
2025-01-09 02:11:44,256 - DEBUG - reusing crumb
2025-01-09 02:11:44,256 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:44,256 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:44,390 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ENPH?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1019
2025-01-09 02:11:44,391 - DEBUG - response code=200
2025-01-09 02:11:44,391 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:44,391 - DEBUG -    Exiting get()
2025-01-09 02:11:44,396 - ERROR - 
1 Failed download:
2025-01-09 02:11:44,396 - ERROR - ['ENPH']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:44,396 - DEBUG - ['ENPH']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:44,401 - DEBUG - Exiting download()
2025-01-09 02:11:44,530 - ERROR - Error writing data for ENPH to DB: schema "np" does not exist
LINE 4:             VALUES ('ENPH','2020-01-02'::date,np.float64(26....
                                                      ^

2025-01-09 02:11:44,530 - DEBUG - Entering download()
2025-01-09 02:11:44,531 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:44,531 - DEBUG -  Entering history()
2025-01-09 02:11:44,531 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ETR', 1, 0])
2025-01-09 02:11:44,531 - DEBUG -   Entering history()
2025-01-09 02:11:44,532 - DEBUG - ETR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:44,532 - DEBUG -    Entering get()
2025-01-09 02:11:44,532 - DEBUG -     Entering _make_request()
2025-01-09 02:11:44,532 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ETR
2025-01-09 02:11:44,532 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:44,532 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:44,532 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:44,532 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:44,533 - DEBUG - reusing cookie
2025-01-09 02:11:44,533 - DEBUG - reusing crumb
2025-01-09 02:11:44,533 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:44,533 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:44,719 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ETR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1010
2025-01-09 02:11:44,720 - DEBUG - response code=200
2025-01-09 02:11:44,721 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:44,721 - DEBUG -    Exiting get()
2025-01-09 02:11:44,727 - ERROR - 
1 Failed download:
2025-01-09 02:11:44,727 - ERROR - ['ETR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:44,727 - DEBUG - ['ETR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:44,734 - DEBUG - Exiting download()
2025-01-09 02:11:44,852 - ERROR - Error writing data for ETR to DB: schema "np" does not exist
LINE 4:             VALUES ('ETR','2020-01-02'::date,np.float64(45.4...
                                                     ^

2025-01-09 02:11:44,852 - DEBUG - Entering download()
2025-01-09 02:11:44,852 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:44,852 - DEBUG -  Entering history()
2025-01-09 02:11:44,853 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EOG', 1, 0])
2025-01-09 02:11:44,853 - DEBUG -   Entering history()
2025-01-09 02:11:44,853 - DEBUG - EOG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:44,853 - DEBUG -    Entering get()
2025-01-09 02:11:44,854 - DEBUG -     Entering _make_request()
2025-01-09 02:11:44,854 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EOG
2025-01-09 02:11:44,854 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:44,854 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:44,854 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:44,854 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:44,854 - DEBUG - reusing cookie
2025-01-09 02:11:44,854 - DEBUG - reusing crumb
2025-01-09 02:11:44,854 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:44,854 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:45,026 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EOG?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1018
2025-01-09 02:11:45,027 - DEBUG - response code=200
2025-01-09 02:11:45,027 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:45,028 - DEBUG -    Exiting get()
2025-01-09 02:11:45,033 - ERROR - 
1 Failed download:
2025-01-09 02:11:45,033 - ERROR - ['EOG']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:45,034 - DEBUG - ['EOG']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:45,040 - DEBUG - Exiting download()
2025-01-09 02:11:45,316 - ERROR - Error writing data for EOG to DB: schema "np" does not exist
LINE 4:             VALUES ('EOG','2020-01-02'::date,np.float64(66.5...
                                                     ^

2025-01-09 02:11:45,317 - DEBUG - Entering download()
2025-01-09 02:11:45,317 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:45,317 - DEBUG -  Entering history()
2025-01-09 02:11:45,317 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EPAM', 1, 0])
2025-01-09 02:11:45,317 - DEBUG -   Entering history()
2025-01-09 02:11:45,318 - DEBUG - EPAM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:45,318 - DEBUG -    Entering get()
2025-01-09 02:11:45,318 - DEBUG -     Entering _make_request()
2025-01-09 02:11:45,318 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EPAM
2025-01-09 02:11:45,318 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:45,318 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:45,318 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:45,318 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:45,318 - DEBUG - reusing cookie
2025-01-09 02:11:45,318 - DEBUG - reusing crumb
2025-01-09 02:11:45,318 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:45,318 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:45,452 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EPAM?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1017
2025-01-09 02:11:45,453 - DEBUG - response code=200
2025-01-09 02:11:45,453 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:45,453 - DEBUG -    Exiting get()
2025-01-09 02:11:45,456 - ERROR - 
1 Failed download:
2025-01-09 02:11:45,456 - ERROR - ['EPAM']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:45,456 - DEBUG - ['EPAM']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:45,460 - DEBUG - Exiting download()
2025-01-09 02:11:45,566 - ERROR - Error writing data for EPAM to DB: schema "np" does not exist
LINE 4:             VALUES ('EPAM','2020-01-02'::date,np.float64(214...
                                                      ^

2025-01-09 02:11:45,567 - DEBUG - Entering download()
2025-01-09 02:11:45,567 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:45,567 - DEBUG -  Entering history()
2025-01-09 02:11:45,567 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EQT', 1, 0])
2025-01-09 02:11:45,568 - DEBUG -   Entering history()
2025-01-09 02:11:45,568 - DEBUG - EQT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:45,568 - DEBUG -    Entering get()
2025-01-09 02:11:45,568 - DEBUG -     Entering _make_request()
2025-01-09 02:11:45,568 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EQT
2025-01-09 02:11:45,569 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:45,569 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:45,569 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:45,569 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:45,569 - DEBUG - reusing cookie
2025-01-09 02:11:45,569 - DEBUG - reusing crumb
2025-01-09 02:11:45,569 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:45,569 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:45,759 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EQT?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 999
2025-01-09 02:11:45,760 - DEBUG - response code=200
2025-01-09 02:11:45,761 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:45,761 - DEBUG -    Exiting get()
2025-01-09 02:11:45,767 - ERROR - 
1 Failed download:
2025-01-09 02:11:45,767 - ERROR - ['EQT']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:45,767 - DEBUG - ['EQT']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:45,775 - DEBUG - Exiting download()
2025-01-09 02:11:45,775 - WARNING - Ticker EQT is missing 'Close' column. Skipping.
2025-01-09 02:11:45,776 - DEBUG - Entering download()
2025-01-09 02:11:45,776 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:45,776 - DEBUG -  Entering history()
2025-01-09 02:11:45,777 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EFX', 1, 0])
2025-01-09 02:11:45,778 - DEBUG -   Entering history()
2025-01-09 02:11:45,779 - DEBUG - EFX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:45,780 - DEBUG -    Entering get()
2025-01-09 02:11:45,780 - DEBUG -     Entering _make_request()
2025-01-09 02:11:45,780 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EFX
2025-01-09 02:11:45,780 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:45,780 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:45,780 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:45,780 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:45,780 - DEBUG - reusing cookie
2025-01-09 02:11:45,781 - DEBUG - reusing crumb
2025-01-09 02:11:45,781 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:45,781 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:45,939 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EFX?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1003
2025-01-09 02:11:45,940 - DEBUG - response code=200
2025-01-09 02:11:45,941 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:45,941 - DEBUG -    Exiting get()
2025-01-09 02:11:45,947 - ERROR - 
1 Failed download:
2025-01-09 02:11:45,947 - ERROR - ['EFX']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:45,947 - DEBUG - ['EFX']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:45,955 - DEBUG - Exiting download()
2025-01-09 02:11:46,074 - ERROR - Error writing data for EFX to DB: schema "np" does not exist
LINE 4:             VALUES ('EFX','2020-01-02'::date,np.float64(135....
                                                     ^

2025-01-09 02:11:46,075 - DEBUG - Entering download()
2025-01-09 02:11:46,075 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:46,075 - DEBUG -  Entering history()
2025-01-09 02:11:46,075 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EQIX', 1, 0])
2025-01-09 02:11:46,075 - DEBUG -   Entering history()
2025-01-09 02:11:46,076 - DEBUG - EQIX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:46,076 - DEBUG -    Entering get()
2025-01-09 02:11:46,076 - DEBUG -     Entering _make_request()
2025-01-09 02:11:46,076 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EQIX
2025-01-09 02:11:46,077 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:46,077 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:46,077 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:46,077 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:46,077 - DEBUG - reusing cookie
2025-01-09 02:11:46,077 - DEBUG - reusing crumb
2025-01-09 02:11:46,077 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:46,077 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:46,233 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EQIX?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1008
2025-01-09 02:11:46,234 - DEBUG - response code=200
2025-01-09 02:11:46,235 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:46,235 - DEBUG -    Exiting get()
2025-01-09 02:11:46,240 - ERROR - 
1 Failed download:
2025-01-09 02:11:46,240 - ERROR - ['EQIX']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:46,240 - DEBUG - ['EQIX']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:46,246 - DEBUG - Exiting download()
2025-01-09 02:11:46,356 - ERROR - Error writing data for EQIX to DB: schema "np" does not exist
LINE 4:             VALUES ('EQIX','2020-01-02'::date,np.float64(534...
                                                      ^

2025-01-09 02:11:46,356 - DEBUG - Entering download()
2025-01-09 02:11:46,356 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:46,356 - DEBUG -  Entering history()
2025-01-09 02:11:46,357 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EQR', 1, 0])
2025-01-09 02:11:46,357 - DEBUG -   Entering history()
2025-01-09 02:11:46,358 - DEBUG - EQR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:46,358 - DEBUG -    Entering get()
2025-01-09 02:11:46,358 - DEBUG -     Entering _make_request()
2025-01-09 02:11:46,358 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EQR
2025-01-09 02:11:46,358 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:46,358 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:46,358 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:46,358 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:46,358 - DEBUG - reusing cookie
2025-01-09 02:11:46,358 - DEBUG - reusing crumb
2025-01-09 02:11:46,358 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:46,358 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:46,528 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EQR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1009
2025-01-09 02:11:46,529 - DEBUG - response code=200
2025-01-09 02:11:46,529 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:46,529 - DEBUG -    Exiting get()
2025-01-09 02:11:46,534 - ERROR - 
1 Failed download:
2025-01-09 02:11:46,535 - ERROR - ['EQR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:46,535 - DEBUG - ['EQR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:46,540 - DEBUG - Exiting download()
2025-01-09 02:11:46,541 - WARNING - Ticker EQR is missing 'Close' column. Skipping.
2025-01-09 02:11:46,541 - DEBUG - Entering download()
2025-01-09 02:11:46,541 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:46,541 - DEBUG -  Entering history()
2025-01-09 02:11:46,542 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ERIE', 1, 0])
2025-01-09 02:11:46,543 - DEBUG -   Entering history()
2025-01-09 02:11:46,544 - DEBUG - ERIE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:46,545 - DEBUG -    Entering get()
2025-01-09 02:11:46,545 - DEBUG -     Entering _make_request()
2025-01-09 02:11:46,545 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ERIE
2025-01-09 02:11:46,545 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:46,546 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:46,546 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:46,546 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:46,546 - DEBUG - reusing cookie
2025-01-09 02:11:46,546 - DEBUG - reusing crumb
2025-01-09 02:11:46,546 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:46,546 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:46,713 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ERIE?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1024
2025-01-09 02:11:46,714 - DEBUG - response code=200
2025-01-09 02:11:46,714 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:46,714 - DEBUG -    Exiting get()
2025-01-09 02:11:46,720 - ERROR - 
1 Failed download:
2025-01-09 02:11:46,720 - ERROR - ['ERIE']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:46,721 - DEBUG - ['ERIE']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:46,728 - DEBUG - Exiting download()
2025-01-09 02:11:46,728 - WARNING - Ticker ERIE is missing 'Close' column. Skipping.
2025-01-09 02:11:46,728 - DEBUG - Entering download()
2025-01-09 02:11:46,729 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:46,729 - DEBUG -  Entering history()
2025-01-09 02:11:46,730 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ESS', 1, 0])
2025-01-09 02:11:46,730 - DEBUG -   Entering history()
2025-01-09 02:11:46,732 - DEBUG - ESS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:46,732 - DEBUG -    Entering get()
2025-01-09 02:11:46,732 - DEBUG -     Entering _make_request()
2025-01-09 02:11:46,732 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ESS
2025-01-09 02:11:46,732 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:46,733 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:46,733 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:46,733 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:46,733 - DEBUG - reusing cookie
2025-01-09 02:11:46,733 - DEBUG - reusing crumb
2025-01-09 02:11:46,733 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:46,733 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:46,908 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ESS?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1031
2025-01-09 02:11:46,909 - DEBUG - response code=200
2025-01-09 02:11:46,909 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:46,910 - DEBUG -    Exiting get()
2025-01-09 02:11:46,916 - ERROR - 
1 Failed download:
2025-01-09 02:11:46,916 - ERROR - ['ESS']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:46,916 - DEBUG - ['ESS']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:46,923 - DEBUG - Exiting download()
2025-01-09 02:11:47,032 - ERROR - Error writing data for ESS to DB: schema "np" does not exist
LINE 4:             VALUES ('ESS','2020-01-02'::date,np.float64(253....
                                                     ^

2025-01-09 02:11:47,032 - DEBUG - Entering download()
2025-01-09 02:11:47,033 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:47,033 - DEBUG -  Entering history()
2025-01-09 02:11:47,033 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EL', 1, 0])
2025-01-09 02:11:47,033 - DEBUG -   Entering history()
2025-01-09 02:11:47,034 - DEBUG - EL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:47,034 - DEBUG -    Entering get()
2025-01-09 02:11:47,034 - DEBUG -     Entering _make_request()
2025-01-09 02:11:47,034 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EL
2025-01-09 02:11:47,034 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:47,034 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:47,034 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:47,034 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:47,034 - DEBUG - reusing cookie
2025-01-09 02:11:47,034 - DEBUG - reusing crumb
2025-01-09 02:11:47,034 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:47,034 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:47,205 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EL?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1036
2025-01-09 02:11:47,206 - DEBUG - response code=200
2025-01-09 02:11:47,207 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:47,207 - DEBUG -    Exiting get()
2025-01-09 02:11:47,210 - ERROR - 
1 Failed download:
2025-01-09 02:11:47,211 - ERROR - ['EL']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:47,211 - DEBUG - ['EL']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:47,213 - DEBUG - Exiting download()
2025-01-09 02:11:47,213 - WARNING - Ticker EL is missing 'Close' column. Skipping.
2025-01-09 02:11:47,213 - DEBUG - Entering download()
2025-01-09 02:11:47,213 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:47,213 - DEBUG -  Entering history()
2025-01-09 02:11:47,213 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EG', 1, 0])
2025-01-09 02:11:47,213 - DEBUG -   Entering history()
2025-01-09 02:11:47,214 - DEBUG - EG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:47,214 - DEBUG -    Entering get()
2025-01-09 02:11:47,214 - DEBUG -     Entering _make_request()
2025-01-09 02:11:47,214 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EG
2025-01-09 02:11:47,214 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:47,214 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:47,214 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:47,214 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:47,214 - DEBUG - reusing cookie
2025-01-09 02:11:47,214 - DEBUG - reusing crumb
2025-01-09 02:11:47,214 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:47,215 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:47,378 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EG?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1014
2025-01-09 02:11:47,381 - DEBUG - response code=200
2025-01-09 02:11:47,381 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:47,381 - DEBUG -    Exiting get()
2025-01-09 02:11:47,383 - ERROR - 
1 Failed download:
2025-01-09 02:11:47,383 - ERROR - ['EG']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:47,383 - DEBUG - ['EG']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:47,385 - DEBUG - Exiting download()
2025-01-09 02:11:47,489 - ERROR - Error writing data for EG to DB: schema "np" does not exist
LINE 4:             VALUES ('EG','2020-01-02'::date,np.float64(249.5...
                                                    ^

2025-01-09 02:11:47,490 - DEBUG - Entering download()
2025-01-09 02:11:47,490 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:47,490 - DEBUG -  Entering history()
2025-01-09 02:11:47,490 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EVRG', 1, 0])
2025-01-09 02:11:47,491 - DEBUG -   Entering history()
2025-01-09 02:11:47,492 - DEBUG - EVRG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:47,492 - DEBUG -    Entering get()
2025-01-09 02:11:47,492 - DEBUG -     Entering _make_request()
2025-01-09 02:11:47,492 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EVRG
2025-01-09 02:11:47,492 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:47,492 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:47,492 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:47,492 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:47,492 - DEBUG - reusing cookie
2025-01-09 02:11:47,493 - DEBUG - reusing crumb
2025-01-09 02:11:47,493 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:47,493 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:47,686 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EVRG?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1001
2025-01-09 02:11:47,687 - DEBUG - response code=200
2025-01-09 02:11:47,687 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:47,687 - DEBUG -    Exiting get()
2025-01-09 02:11:47,691 - ERROR - 
1 Failed download:
2025-01-09 02:11:47,691 - ERROR - ['EVRG']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:47,691 - DEBUG - ['EVRG']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:47,695 - DEBUG - Exiting download()
2025-01-09 02:11:47,929 - ERROR - Error writing data for EVRG to DB: schema "np" does not exist
LINE 4:             VALUES ('EVRG','2020-01-02'::date,np.float64(53....
                                                      ^

2025-01-09 02:11:47,929 - DEBUG - Entering download()
2025-01-09 02:11:47,930 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:47,930 - DEBUG -  Entering history()
2025-01-09 02:11:47,930 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ES', 1, 0])
2025-01-09 02:11:47,930 - DEBUG -   Entering history()
2025-01-09 02:11:47,931 - DEBUG - ES: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:47,931 - DEBUG -    Entering get()
2025-01-09 02:11:47,932 - DEBUG -     Entering _make_request()
2025-01-09 02:11:47,932 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ES
2025-01-09 02:11:47,932 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:47,932 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:47,932 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:47,932 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:47,932 - DEBUG - reusing cookie
2025-01-09 02:11:47,932 - DEBUG - reusing crumb
2025-01-09 02:11:47,932 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:47,932 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:48,112 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ES?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1013
2025-01-09 02:11:48,113 - DEBUG - response code=200
2025-01-09 02:11:48,113 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:48,113 - DEBUG -    Exiting get()
2025-01-09 02:11:48,115 - ERROR - 
1 Failed download:
2025-01-09 02:11:48,115 - ERROR - ['ES']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:48,115 - DEBUG - ['ES']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:48,117 - DEBUG - Exiting download()
2025-01-09 02:11:48,238 - ERROR - Error writing data for ES to DB: schema "np" does not exist
LINE 4:             VALUES ('ES','2020-01-02'::date,np.float64(71.63...
                                                    ^

2025-01-09 02:11:48,239 - DEBUG - Entering download()
2025-01-09 02:11:48,239 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:48,239 - DEBUG -  Entering history()
2025-01-09 02:11:48,239 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EXC', 1, 0])
2025-01-09 02:11:48,239 - DEBUG -   Entering history()
2025-01-09 02:11:48,240 - DEBUG - EXC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:48,240 - DEBUG -    Entering get()
2025-01-09 02:11:48,240 - DEBUG -     Entering _make_request()
2025-01-09 02:11:48,240 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EXC
2025-01-09 02:11:48,240 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:48,240 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:48,240 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:48,241 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:48,241 - DEBUG - reusing cookie
2025-01-09 02:11:48,241 - DEBUG - reusing crumb
2025-01-09 02:11:48,241 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:48,241 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:48,434 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EXC?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1013
2025-01-09 02:11:48,434 - DEBUG - response code=200
2025-01-09 02:11:48,434 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:48,434 - DEBUG -    Exiting get()
2025-01-09 02:11:48,436 - ERROR - 
1 Failed download:
2025-01-09 02:11:48,436 - ERROR - ['EXC']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:48,436 - DEBUG - ['EXC']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:48,439 - DEBUG - Exiting download()
2025-01-09 02:11:48,557 - ERROR - Error writing data for EXC to DB: schema "np" does not exist
LINE 4:             VALUES ('EXC','2020-01-02'::date,np.float64(27.3...
                                                     ^

2025-01-09 02:11:48,557 - DEBUG - Entering download()
2025-01-09 02:11:48,557 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:48,558 - DEBUG -  Entering history()
2025-01-09 02:11:48,558 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EXPE', 1, 0])
2025-01-09 02:11:48,558 - DEBUG -   Entering history()
2025-01-09 02:11:48,559 - DEBUG - EXPE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:48,559 - DEBUG -    Entering get()
2025-01-09 02:11:48,559 - DEBUG -     Entering _make_request()
2025-01-09 02:11:48,559 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EXPE
2025-01-09 02:11:48,559 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:48,559 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:48,559 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:48,559 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:48,559 - DEBUG - reusing cookie
2025-01-09 02:11:48,559 - DEBUG - reusing crumb
2025-01-09 02:11:48,559 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:48,559 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:48,704 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EXPE?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1021
2025-01-09 02:11:48,704 - DEBUG - response code=200
2025-01-09 02:11:48,704 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:48,704 - DEBUG -    Exiting get()
2025-01-09 02:11:48,706 - ERROR - 
1 Failed download:
2025-01-09 02:11:48,707 - ERROR - ['EXPE']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:48,707 - DEBUG - ['EXPE']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:48,709 - DEBUG - Exiting download()
2025-01-09 02:11:48,829 - ERROR - Error writing data for EXPE to DB: schema "np" does not exist
LINE 4:             VALUES ('EXPE','2020-01-02'::date,np.float64(108...
                                                      ^

2025-01-09 02:11:48,829 - DEBUG - Entering download()
2025-01-09 02:11:48,829 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:48,830 - DEBUG -  Entering history()
2025-01-09 02:11:48,830 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EXPD', 1, 0])
2025-01-09 02:11:48,830 - DEBUG -   Entering history()
2025-01-09 02:11:48,831 - DEBUG - EXPD: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:48,831 - DEBUG -    Entering get()
2025-01-09 02:11:48,831 - DEBUG -     Entering _make_request()
2025-01-09 02:11:48,831 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EXPD
2025-01-09 02:11:48,831 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:48,831 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:48,831 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:48,831 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:48,831 - DEBUG - reusing cookie
2025-01-09 02:11:48,831 - DEBUG - reusing crumb
2025-01-09 02:11:48,831 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:48,831 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:49,020 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EXPD?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1054
2025-01-09 02:11:49,021 - DEBUG - response code=200
2025-01-09 02:11:49,021 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:49,022 - DEBUG -    Exiting get()
2025-01-09 02:11:49,028 - ERROR - 
1 Failed download:
2025-01-09 02:11:49,028 - ERROR - ['EXPD']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:49,028 - DEBUG - ['EXPD']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:49,035 - DEBUG - Exiting download()
2025-01-09 02:11:49,155 - ERROR - Error writing data for EXPD to DB: schema "np" does not exist
LINE 4:             VALUES ('EXPD','2020-01-02'::date,np.float64(74....
                                                      ^

2025-01-09 02:11:49,156 - DEBUG - Entering download()
2025-01-09 02:11:49,156 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:49,156 - DEBUG -  Entering history()
2025-01-09 02:11:49,156 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EXR', 1, 0])
2025-01-09 02:11:49,157 - DEBUG -   Entering history()
2025-01-09 02:11:49,157 - DEBUG - EXR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:49,157 - DEBUG -    Entering get()
2025-01-09 02:11:49,157 - DEBUG -     Entering _make_request()
2025-01-09 02:11:49,158 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EXR
2025-01-09 02:11:49,158 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:49,158 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:49,158 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:49,158 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:49,158 - DEBUG - reusing cookie
2025-01-09 02:11:49,158 - DEBUG - reusing crumb
2025-01-09 02:11:49,158 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:49,158 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:49,320 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EXR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1026
2025-01-09 02:11:49,321 - DEBUG - response code=200
2025-01-09 02:11:49,321 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:49,322 - DEBUG -    Exiting get()
2025-01-09 02:11:49,327 - ERROR - 
1 Failed download:
2025-01-09 02:11:49,327 - ERROR - ['EXR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:49,327 - DEBUG - ['EXR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:49,334 - DEBUG - Exiting download()
2025-01-09 02:11:49,456 - ERROR - Error writing data for EXR to DB: schema "np" does not exist
LINE 4:             VALUES ('EXR','2020-01-02'::date,np.float64(88.3...
                                                     ^

2025-01-09 02:11:49,456 - DEBUG - Entering download()
2025-01-09 02:11:49,456 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:49,457 - DEBUG -  Entering history()
2025-01-09 02:11:49,457 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['XOM', 1, 0])
2025-01-09 02:11:49,457 - DEBUG -   Entering history()
2025-01-09 02:11:49,458 - DEBUG - XOM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:49,458 - DEBUG -    Entering get()
2025-01-09 02:11:49,458 - DEBUG -     Entering _make_request()
2025-01-09 02:11:49,458 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/XOM
2025-01-09 02:11:49,458 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:49,458 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:49,458 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:49,458 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:49,458 - DEBUG - reusing cookie
2025-01-09 02:11:49,458 - DEBUG - reusing crumb
2025-01-09 02:11:49,458 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:49,458 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:49,664 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/XOM?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1025
2025-01-09 02:11:49,665 - DEBUG - response code=200
2025-01-09 02:11:49,665 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:49,665 - DEBUG -    Exiting get()
2025-01-09 02:11:49,672 - ERROR - 
1 Failed download:
2025-01-09 02:11:49,672 - ERROR - ['XOM']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:49,673 - DEBUG - ['XOM']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:49,680 - DEBUG - Exiting download()
2025-01-09 02:11:49,851 - ERROR - Error writing data for XOM to DB: schema "np" does not exist
LINE 4:             VALUES ('XOM','2020-01-02'::date,np.float64(55.1...
                                                     ^

2025-01-09 02:11:49,851 - DEBUG - Entering download()
2025-01-09 02:11:49,851 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:49,851 - DEBUG -  Entering history()
2025-01-09 02:11:49,852 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FFIV', 1, 0])
2025-01-09 02:11:49,852 - DEBUG -   Entering history()
2025-01-09 02:11:49,853 - DEBUG - FFIV: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:49,853 - DEBUG -    Entering get()
2025-01-09 02:11:49,853 - DEBUG -     Entering _make_request()
2025-01-09 02:11:49,853 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FFIV
2025-01-09 02:11:49,853 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:49,853 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:49,853 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:49,853 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:49,853 - DEBUG - reusing cookie
2025-01-09 02:11:49,853 - DEBUG - reusing crumb
2025-01-09 02:11:49,853 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:49,853 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:49,993 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FFIV?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 999
2025-01-09 02:11:49,993 - DEBUG - response code=200
2025-01-09 02:11:49,993 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:49,993 - DEBUG -    Exiting get()
2025-01-09 02:11:49,995 - ERROR - 
1 Failed download:
2025-01-09 02:11:49,995 - ERROR - ['FFIV']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:49,995 - DEBUG - ['FFIV']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:49,998 - DEBUG - Exiting download()
2025-01-09 02:11:49,998 - WARNING - Ticker FFIV is missing 'Close' column. Skipping.
2025-01-09 02:11:49,998 - DEBUG - Entering download()
2025-01-09 02:11:49,998 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:49,998 - DEBUG -  Entering history()
2025-01-09 02:11:49,999 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FDS', 1, 0])
2025-01-09 02:11:49,999 - DEBUG -   Entering history()
2025-01-09 02:11:50,000 - DEBUG - FDS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:50,000 - DEBUG -    Entering get()
2025-01-09 02:11:50,000 - DEBUG -     Entering _make_request()
2025-01-09 02:11:50,000 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FDS
2025-01-09 02:11:50,000 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:50,000 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:50,000 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:50,000 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:50,000 - DEBUG - reusing cookie
2025-01-09 02:11:50,000 - DEBUG - reusing crumb
2025-01-09 02:11:50,000 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:50,000 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:50,159 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FDS?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1035
2025-01-09 02:11:50,159 - DEBUG - response code=200
2025-01-09 02:11:50,159 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:50,159 - DEBUG -    Exiting get()
2025-01-09 02:11:50,161 - ERROR - 
1 Failed download:
2025-01-09 02:11:50,161 - ERROR - ['FDS']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:50,161 - DEBUG - ['FDS']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:50,163 - DEBUG - Exiting download()
2025-01-09 02:11:50,163 - WARNING - Ticker FDS is missing 'Close' column. Skipping.
2025-01-09 02:11:50,163 - DEBUG - Entering download()
2025-01-09 02:11:50,163 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:50,163 - DEBUG -  Entering history()
2025-01-09 02:11:50,163 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FICO', 1, 0])
2025-01-09 02:11:50,164 - DEBUG -   Entering history()
2025-01-09 02:11:50,164 - DEBUG - FICO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:50,164 - DEBUG -    Entering get()
2025-01-09 02:11:50,164 - DEBUG -     Entering _make_request()
2025-01-09 02:11:50,164 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FICO
2025-01-09 02:11:50,164 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:50,164 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:50,164 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:50,164 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:50,164 - DEBUG - reusing cookie
2025-01-09 02:11:50,165 - DEBUG - reusing crumb
2025-01-09 02:11:50,165 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:50,165 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:50,341 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FICO?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1029
2025-01-09 02:11:50,342 - DEBUG - response code=200
2025-01-09 02:11:50,342 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:50,342 - DEBUG -    Exiting get()
2025-01-09 02:11:50,347 - ERROR - 
1 Failed download:
2025-01-09 02:11:50,347 - ERROR - ['FICO']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:50,347 - DEBUG - ['FICO']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:50,352 - DEBUG - Exiting download()
2025-01-09 02:11:50,484 - ERROR - Error writing data for FICO to DB: schema "np" does not exist
LINE 4:             VALUES ('FICO','2020-01-02'::date,np.float64(377...
                                                      ^

2025-01-09 02:11:50,484 - DEBUG - Entering download()
2025-01-09 02:11:50,484 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:50,484 - DEBUG -  Entering history()
2025-01-09 02:11:50,485 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FAST', 1, 0])
2025-01-09 02:11:50,485 - DEBUG -   Entering history()
2025-01-09 02:11:50,485 - DEBUG - FAST: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:50,486 - DEBUG -    Entering get()
2025-01-09 02:11:50,486 - DEBUG -     Entering _make_request()
2025-01-09 02:11:50,486 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FAST
2025-01-09 02:11:50,486 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:50,486 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:50,486 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:50,486 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:50,486 - DEBUG - reusing cookie
2025-01-09 02:11:50,486 - DEBUG - reusing crumb
2025-01-09 02:11:50,486 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:50,486 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:50,699 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FAST?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1011
2025-01-09 02:11:50,700 - DEBUG - response code=200
2025-01-09 02:11:50,700 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:50,700 - DEBUG -    Exiting get()
2025-01-09 02:11:50,705 - ERROR - 
1 Failed download:
2025-01-09 02:11:50,706 - ERROR - ['FAST']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:50,706 - DEBUG - ['FAST']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:50,712 - DEBUG - Exiting download()
2025-01-09 02:11:50,713 - WARNING - Ticker FAST is missing 'Close' column. Skipping.
2025-01-09 02:11:50,713 - DEBUG - Entering download()
2025-01-09 02:11:50,713 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:50,713 - DEBUG -  Entering history()
2025-01-09 02:11:50,714 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FRT', 1, 0])
2025-01-09 02:11:50,715 - DEBUG -   Entering history()
2025-01-09 02:11:50,716 - DEBUG - FRT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:50,716 - DEBUG -    Entering get()
2025-01-09 02:11:50,717 - DEBUG -     Entering _make_request()
2025-01-09 02:11:50,717 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FRT
2025-01-09 02:11:50,717 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:50,717 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:50,717 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:50,717 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:50,717 - DEBUG - reusing cookie
2025-01-09 02:11:50,717 - DEBUG - reusing crumb
2025-01-09 02:11:50,718 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:50,718 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:50,893 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FRT?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1039
2025-01-09 02:11:50,894 - DEBUG - response code=200
2025-01-09 02:11:50,894 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:50,894 - DEBUG -    Exiting get()
2025-01-09 02:11:50,900 - ERROR - 
1 Failed download:
2025-01-09 02:11:50,900 - ERROR - ['FRT']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:50,901 - DEBUG - ['FRT']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:50,908 - DEBUG - Exiting download()
2025-01-09 02:11:51,025 - ERROR - Error writing data for FRT to DB: schema "np" does not exist
LINE 4:             VALUES ('FRT','2020-01-02'::date,np.float64(104....
                                                     ^

2025-01-09 02:11:51,026 - DEBUG - Entering download()
2025-01-09 02:11:51,026 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:51,026 - DEBUG -  Entering history()
2025-01-09 02:11:51,026 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FDX', 1, 0])
2025-01-09 02:11:51,027 - DEBUG -   Entering history()
2025-01-09 02:11:51,027 - DEBUG - FDX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:51,027 - DEBUG -    Entering get()
2025-01-09 02:11:51,027 - DEBUG -     Entering _make_request()
2025-01-09 02:11:51,027 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FDX
2025-01-09 02:11:51,027 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:51,027 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:51,028 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:51,028 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:51,028 - DEBUG - reusing cookie
2025-01-09 02:11:51,028 - DEBUG - reusing crumb
2025-01-09 02:11:51,028 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:51,028 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:51,185 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FDX?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1012
2025-01-09 02:11:51,185 - DEBUG - response code=200
2025-01-09 02:11:51,185 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:51,185 - DEBUG -    Exiting get()
2025-01-09 02:11:51,188 - ERROR - 
1 Failed download:
2025-01-09 02:11:51,188 - ERROR - ['FDX']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:51,188 - DEBUG - ['FDX']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:51,191 - DEBUG - Exiting download()
2025-01-09 02:11:51,295 - ERROR - Error writing data for FDX to DB: schema "np" does not exist
LINE 4:             VALUES ('FDX','2020-01-02'::date,np.float64(139....
                                                     ^

2025-01-09 02:11:51,296 - DEBUG - Entering download()
2025-01-09 02:11:51,296 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:51,296 - DEBUG -  Entering history()
2025-01-09 02:11:51,296 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FIS', 1, 0])
2025-01-09 02:11:51,296 - DEBUG -   Entering history()
2025-01-09 02:11:51,297 - DEBUG - FIS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:51,297 - DEBUG -    Entering get()
2025-01-09 02:11:51,297 - DEBUG -     Entering _make_request()
2025-01-09 02:11:51,297 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FIS
2025-01-09 02:11:51,297 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:51,297 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:51,297 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:51,298 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:51,298 - DEBUG - reusing cookie
2025-01-09 02:11:51,298 - DEBUG - reusing crumb
2025-01-09 02:11:51,298 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:51,298 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:51,455 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FIS?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1048
2025-01-09 02:11:51,456 - DEBUG - response code=200
2025-01-09 02:11:51,456 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:51,456 - DEBUG -    Exiting get()
2025-01-09 02:11:51,461 - ERROR - 
1 Failed download:
2025-01-09 02:11:51,461 - ERROR - ['FIS']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:51,461 - DEBUG - ['FIS']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:51,466 - DEBUG - Exiting download()
2025-01-09 02:11:51,579 - ERROR - Error writing data for FIS to DB: schema "np" does not exist
LINE 4:             VALUES ('FIS','2020-01-02'::date,np.float64(126....
                                                     ^

2025-01-09 02:11:51,579 - DEBUG - Entering download()
2025-01-09 02:11:51,579 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:51,579 - DEBUG -  Entering history()
2025-01-09 02:11:51,580 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FITB', 1, 0])
2025-01-09 02:11:51,580 - DEBUG -   Entering history()
2025-01-09 02:11:51,581 - DEBUG - FITB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:51,581 - DEBUG -    Entering get()
2025-01-09 02:11:51,581 - DEBUG -     Entering _make_request()
2025-01-09 02:11:51,581 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FITB
2025-01-09 02:11:51,581 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:51,581 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:51,581 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:51,581 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:51,581 - DEBUG - reusing cookie
2025-01-09 02:11:51,581 - DEBUG - reusing crumb
2025-01-09 02:11:51,582 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:51,582 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:51,777 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FITB?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1017
2025-01-09 02:11:51,778 - DEBUG - response code=200
2025-01-09 02:11:51,779 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:51,779 - DEBUG -    Exiting get()
2025-01-09 02:11:51,785 - ERROR - 
1 Failed download:
2025-01-09 02:11:51,785 - ERROR - ['FITB']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:51,785 - DEBUG - ['FITB']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:51,793 - DEBUG - Exiting download()
2025-01-09 02:11:51,924 - ERROR - Error writing data for FITB to DB: schema "np" does not exist
LINE 4:             VALUES ('FITB','2020-01-02'::date,np.float64(25....
                                                      ^

2025-01-09 02:11:51,924 - DEBUG - Entering download()
2025-01-09 02:11:51,925 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:51,925 - DEBUG -  Entering history()
2025-01-09 02:11:51,925 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FSLR', 1, 0])
2025-01-09 02:11:51,925 - DEBUG -   Entering history()
2025-01-09 02:11:51,926 - DEBUG - FSLR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:51,926 - DEBUG -    Entering get()
2025-01-09 02:11:51,926 - DEBUG -     Entering _make_request()
2025-01-09 02:11:51,926 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FSLR
2025-01-09 02:11:51,926 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:51,926 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:51,926 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:51,926 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:51,926 - DEBUG - reusing cookie
2025-01-09 02:11:51,926 - DEBUG - reusing crumb
2025-01-09 02:11:51,926 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:51,926 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:52,070 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FSLR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1018
2025-01-09 02:11:52,071 - DEBUG - response code=200
2025-01-09 02:11:52,071 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:52,072 - DEBUG -    Exiting get()
2025-01-09 02:11:52,077 - ERROR - 
1 Failed download:
2025-01-09 02:11:52,077 - ERROR - ['FSLR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:52,078 - DEBUG - ['FSLR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:52,084 - DEBUG - Exiting download()
2025-01-09 02:11:52,200 - ERROR - Error writing data for FSLR to DB: schema "np" does not exist
LINE 4:             VALUES ('FSLR','2020-01-02'::date,np.float64(56....
                                                      ^

2025-01-09 02:11:52,201 - DEBUG - Entering download()
2025-01-09 02:11:52,201 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:52,201 - DEBUG -  Entering history()
2025-01-09 02:11:52,202 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FE', 1, 0])
2025-01-09 02:11:52,202 - DEBUG -   Entering history()
2025-01-09 02:11:52,202 - DEBUG - FE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:52,202 - DEBUG -    Entering get()
2025-01-09 02:11:52,202 - DEBUG -     Entering _make_request()
2025-01-09 02:11:52,202 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FE
2025-01-09 02:11:52,203 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:52,203 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:52,203 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:52,203 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:52,203 - DEBUG - reusing cookie
2025-01-09 02:11:52,203 - DEBUG - reusing crumb
2025-01-09 02:11:52,203 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:52,203 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:52,362 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FE?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1005
2025-01-09 02:11:52,363 - DEBUG - response code=200
2025-01-09 02:11:52,363 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:52,363 - DEBUG -    Exiting get()
2025-01-09 02:11:52,369 - ERROR - 
1 Failed download:
2025-01-09 02:11:52,369 - ERROR - ['FE']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:52,369 - DEBUG - ['FE']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:52,376 - DEBUG - Exiting download()
2025-01-09 02:11:52,376 - WARNING - Ticker FE is missing 'Close' column. Skipping.
2025-01-09 02:11:52,377 - DEBUG - Entering download()
2025-01-09 02:11:52,377 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:52,377 - DEBUG -  Entering history()
2025-01-09 02:11:52,378 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FI', 1, 0])
2025-01-09 02:11:52,378 - DEBUG -   Entering history()
2025-01-09 02:11:52,379 - DEBUG - FI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:52,379 - DEBUG -    Entering get()
2025-01-09 02:11:52,380 - DEBUG -     Entering _make_request()
2025-01-09 02:11:52,380 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FI
2025-01-09 02:11:52,380 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:52,380 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:52,380 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:52,380 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:52,380 - DEBUG - reusing cookie
2025-01-09 02:11:52,380 - DEBUG - reusing crumb
2025-01-09 02:11:52,381 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:52,381 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:52,519 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FI?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1002
2025-01-09 02:11:52,520 - DEBUG - response code=200
2025-01-09 02:11:52,521 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:52,521 - DEBUG -    Exiting get()
2025-01-09 02:11:52,527 - ERROR - 
1 Failed download:
2025-01-09 02:11:52,527 - ERROR - ['FI']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:52,527 - DEBUG - ['FI']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:52,534 - DEBUG - Exiting download()
2025-01-09 02:11:52,644 - ERROR - Error writing data for FI to DB: schema "np" does not exist
LINE 4:             VALUES ('FI','2020-01-02'::date,np.float64(116.0...
                                                    ^

2025-01-09 02:11:52,645 - DEBUG - Entering download()
2025-01-09 02:11:52,645 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:52,645 - DEBUG -  Entering history()
2025-01-09 02:11:52,645 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FMC', 1, 0])
2025-01-09 02:11:52,646 - DEBUG -   Entering history()
2025-01-09 02:11:52,646 - DEBUG - FMC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:52,646 - DEBUG -    Entering get()
2025-01-09 02:11:52,646 - DEBUG -     Entering _make_request()
2025-01-09 02:11:52,646 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FMC
2025-01-09 02:11:52,646 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:52,646 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:52,647 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:52,647 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:52,647 - DEBUG - reusing cookie
2025-01-09 02:11:52,647 - DEBUG - reusing crumb
2025-01-09 02:11:52,647 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:52,647 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:52,835 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FMC?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1005
2025-01-09 02:11:52,836 - DEBUG - response code=200
2025-01-09 02:11:52,836 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:52,836 - DEBUG -    Exiting get()
2025-01-09 02:11:52,842 - ERROR - 
1 Failed download:
2025-01-09 02:11:52,843 - ERROR - ['FMC']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:52,843 - DEBUG - ['FMC']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:52,851 - DEBUG - Exiting download()
2025-01-09 02:11:52,958 - ERROR - Error writing data for FMC to DB: schema "np" does not exist
LINE 4:             VALUES ('FMC','2020-01-02'::date,np.float64(88.6...
                                                     ^

2025-01-09 02:11:52,958 - DEBUG - Entering download()
2025-01-09 02:11:52,958 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:52,959 - DEBUG -  Entering history()
2025-01-09 02:11:52,959 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['F', 1, 0])
2025-01-09 02:11:52,959 - DEBUG -   Entering history()
2025-01-09 02:11:52,960 - DEBUG - F: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:52,960 - DEBUG -    Entering get()
2025-01-09 02:11:52,960 - DEBUG -     Entering _make_request()
2025-01-09 02:11:52,960 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/F
2025-01-09 02:11:52,960 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:52,960 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:52,960 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:52,960 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:52,960 - DEBUG - reusing cookie
2025-01-09 02:11:52,960 - DEBUG - reusing crumb
2025-01-09 02:11:52,960 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:52,960 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:53,183 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/F?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1001
2025-01-09 02:11:53,184 - DEBUG - response code=200
2025-01-09 02:11:53,184 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:53,184 - DEBUG -    Exiting get()
2025-01-09 02:11:53,190 - ERROR - 
1 Failed download:
2025-01-09 02:11:53,190 - ERROR - ['F']: Y%ticker%PricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:53,190 - DEBUG - ['F']: Traceback (most recent call last):
  %ticker%ile "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  %ticker%ile "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  %ticker%ile "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  %ticker%ile "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  %ticker%ile "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.Y%ticker%PricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:53,196 - DEBUG - Exiting download()
2025-01-09 02:11:53,314 - ERROR - Error writing data for F to DB: schema "np" does not exist
LINE 4:             VALUES ('F','2020-01-02'::date,np.float64(7.4444...
                                                   ^

2025-01-09 02:11:53,315 - DEBUG - Entering download()
2025-01-09 02:11:53,315 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:53,315 - DEBUG -  Entering history()
2025-01-09 02:11:53,315 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FTNT', 1, 0])
2025-01-09 02:11:53,315 - DEBUG -   Entering history()
2025-01-09 02:11:53,316 - DEBUG - FTNT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:53,316 - DEBUG -    Entering get()
2025-01-09 02:11:53,316 - DEBUG -     Entering _make_request()
2025-01-09 02:11:53,316 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FTNT
2025-01-09 02:11:53,316 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:53,316 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:53,316 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:53,316 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:53,317 - DEBUG - reusing cookie
2025-01-09 02:11:53,317 - DEBUG - reusing crumb
2025-01-09 02:11:53,317 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:53,317 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:53,457 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FTNT?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1008
2025-01-09 02:11:53,458 - DEBUG - response code=200
2025-01-09 02:11:53,458 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:53,458 - DEBUG -    Exiting get()
2025-01-09 02:11:53,462 - ERROR - 
1 Failed download:
2025-01-09 02:11:53,462 - ERROR - ['FTNT']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:53,463 - DEBUG - ['FTNT']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:53,467 - DEBUG - Exiting download()
2025-01-09 02:11:53,592 - ERROR - Error writing data for FTNT to DB: schema "np" does not exist
LINE 4:             VALUES ('FTNT','2020-01-02'::date,np.float64(21....
                                                      ^

2025-01-09 02:11:53,593 - DEBUG - Entering download()
2025-01-09 02:11:53,593 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:53,593 - DEBUG -  Entering history()
2025-01-09 02:11:53,594 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FTV', 1, 0])
2025-01-09 02:11:53,594 - DEBUG -   Entering history()
2025-01-09 02:11:53,594 - DEBUG - FTV: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:53,595 - DEBUG -    Entering get()
2025-01-09 02:11:53,595 - DEBUG -     Entering _make_request()
2025-01-09 02:11:53,595 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FTV
2025-01-09 02:11:53,595 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:53,595 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:53,595 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:53,595 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:53,595 - DEBUG - reusing cookie
2025-01-09 02:11:53,595 - DEBUG - reusing crumb
2025-01-09 02:11:53,595 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:53,595 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:53,747 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FTV?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1012
2025-01-09 02:11:53,748 - DEBUG - response code=200
2025-01-09 02:11:53,748 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:53,749 - DEBUG -    Exiting get()
2025-01-09 02:11:53,755 - ERROR - 
1 Failed download:
2025-01-09 02:11:53,755 - ERROR - ['FTV']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:53,755 - DEBUG - ['FTV']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:53,762 - DEBUG - Exiting download()
2025-01-09 02:11:53,888 - ERROR - Error writing data for FTV to DB: schema "np" does not exist
LINE 4:             VALUES ('FTV','2020-01-02'::date,np.float64(63.1...
                                                     ^

2025-01-09 02:11:53,889 - DEBUG - Entering download()
2025-01-09 02:11:53,889 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:53,889 - DEBUG -  Entering history()
2025-01-09 02:11:53,889 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FOXA', 1, 0])
2025-01-09 02:11:53,889 - DEBUG -   Entering history()
2025-01-09 02:11:53,890 - DEBUG - FOXA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:53,890 - DEBUG -    Entering get()
2025-01-09 02:11:53,890 - DEBUG -     Entering _make_request()
2025-01-09 02:11:53,890 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FOXA
2025-01-09 02:11:53,890 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:53,890 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:53,891 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:53,891 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:53,891 - DEBUG - reusing cookie
2025-01-09 02:11:53,891 - DEBUG - reusing crumb
2025-01-09 02:11:53,891 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:53,891 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:54,037 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FOXA?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1012
2025-01-09 02:11:54,038 - DEBUG - response code=200
2025-01-09 02:11:54,039 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:54,039 - DEBUG -    Exiting get()
2025-01-09 02:11:54,045 - ERROR - 
1 Failed download:
2025-01-09 02:11:54,045 - ERROR - ['FOXA']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:54,045 - DEBUG - ['FOXA']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:54,052 - DEBUG - Exiting download()
2025-01-09 02:11:54,053 - WARNING - Ticker FOXA is missing 'Close' column. Skipping.
2025-01-09 02:11:54,053 - DEBUG - Entering download()
2025-01-09 02:11:54,053 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:54,053 - DEBUG -  Entering history()
2025-01-09 02:11:54,054 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FOX', 1, 0])
2025-01-09 02:11:54,055 - DEBUG -   Entering history()
2025-01-09 02:11:54,056 - DEBUG - FOX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:54,056 - DEBUG -    Entering get()
2025-01-09 02:11:54,057 - DEBUG -     Entering _make_request()
2025-01-09 02:11:54,057 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FOX
2025-01-09 02:11:54,057 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:54,057 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:54,057 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:54,057 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:54,057 - DEBUG - reusing cookie
2025-01-09 02:11:54,057 - DEBUG - reusing crumb
2025-01-09 02:11:54,057 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:54,058 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:54,193 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FOX?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1006
2025-01-09 02:11:54,194 - DEBUG - response code=200
2025-01-09 02:11:54,194 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:54,194 - DEBUG -    Exiting get()
2025-01-09 02:11:54,200 - ERROR - 
1 Failed download:
2025-01-09 02:11:54,201 - ERROR - ['FOX']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:54,201 - DEBUG - ['FOX']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:54,208 - DEBUG - Exiting download()
2025-01-09 02:11:54,327 - ERROR - Error writing data for FOX to DB: schema "np" does not exist
LINE 4:             VALUES ('FOX','2020-01-02'::date,np.float64(33.8...
                                                     ^

2025-01-09 02:11:54,328 - DEBUG - Entering download()
2025-01-09 02:11:54,328 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:54,328 - DEBUG -  Entering history()
2025-01-09 02:11:54,329 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BEN', 1, 0])
2025-01-09 02:11:54,329 - DEBUG -   Entering history()
2025-01-09 02:11:54,329 - DEBUG - BEN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:54,329 - DEBUG -    Entering get()
2025-01-09 02:11:54,329 - DEBUG -     Entering _make_request()
2025-01-09 02:11:54,330 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BEN
2025-01-09 02:11:54,330 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:54,330 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:54,330 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:54,330 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:54,330 - DEBUG - reusing cookie
2025-01-09 02:11:54,330 - DEBUG - reusing crumb
2025-01-09 02:11:54,330 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:54,330 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:54,510 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BEN?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1019
2025-01-09 02:11:54,511 - DEBUG - response code=200
2025-01-09 02:11:54,511 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:54,511 - DEBUG -    Exiting get()
2025-01-09 02:11:54,517 - ERROR - 
1 Failed download:
2025-01-09 02:11:54,517 - ERROR - ['BEN']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:54,518 - DEBUG - ['BEN']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:54,525 - DEBUG - Exiting download()
2025-01-09 02:11:54,525 - WARNING - Ticker BEN is missing 'Close' column. Skipping.
2025-01-09 02:11:54,525 - DEBUG - Entering download()
2025-01-09 02:11:54,526 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:54,526 - DEBUG -  Entering history()
2025-01-09 02:11:54,527 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FCX', 1, 0])
2025-01-09 02:11:54,527 - DEBUG -   Entering history()
2025-01-09 02:11:54,529 - DEBUG - FCX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:54,529 - DEBUG -    Entering get()
2025-01-09 02:11:54,529 - DEBUG -     Entering _make_request()
2025-01-09 02:11:54,529 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FCX
2025-01-09 02:11:54,529 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:54,529 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:54,530 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:54,530 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:54,530 - DEBUG - reusing cookie
2025-01-09 02:11:54,530 - DEBUG - reusing crumb
2025-01-09 02:11:54,530 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:54,530 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:54,704 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FCX?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1018
2025-01-09 02:11:54,705 - DEBUG - response code=200
2025-01-09 02:11:54,705 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:54,706 - DEBUG -    Exiting get()
2025-01-09 02:11:54,712 - ERROR - 
1 Failed download:
2025-01-09 02:11:54,712 - ERROR - ['FCX']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:54,712 - DEBUG - ['FCX']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:54,719 - DEBUG - Exiting download()
2025-01-09 02:11:54,719 - WARNING - Ticker FCX is missing 'Close' column. Skipping.
2025-01-09 02:11:54,720 - DEBUG - Entering download()
2025-01-09 02:11:54,720 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:54,720 - DEBUG -  Entering history()
2025-01-09 02:11:54,721 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GRMN', 1, 0])
2025-01-09 02:11:54,722 - DEBUG -   Entering history()
2025-01-09 02:11:54,723 - DEBUG - GRMN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:54,723 - DEBUG -    Entering get()
2025-01-09 02:11:54,724 - DEBUG -     Entering _make_request()
2025-01-09 02:11:54,724 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GRMN
2025-01-09 02:11:54,724 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:54,724 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:54,724 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:54,724 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:54,724 - DEBUG - reusing cookie
2025-01-09 02:11:54,724 - DEBUG - reusing crumb
2025-01-09 02:11:54,724 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:54,725 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:54,878 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GRMN?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1000
2025-01-09 02:11:54,879 - DEBUG - response code=200
2025-01-09 02:11:54,879 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:54,879 - DEBUG -    Exiting get()
2025-01-09 02:11:54,885 - ERROR - 
1 Failed download:
2025-01-09 02:11:54,886 - ERROR - ['GRMN']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:54,886 - DEBUG - ['GRMN']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:54,893 - DEBUG - Exiting download()
2025-01-09 02:11:55,008 - ERROR - Error writing data for GRMN to DB: schema "np" does not exist
LINE 4:             VALUES ('GRMN','2020-01-02'::date,np.float64(86....
                                                      ^

2025-01-09 02:11:55,008 - DEBUG - Entering download()
2025-01-09 02:11:55,009 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:55,009 - DEBUG -  Entering history()
2025-01-09 02:11:55,009 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['IT', 1, 0])
2025-01-09 02:11:55,009 - DEBUG -   Entering history()
2025-01-09 02:11:55,010 - DEBUG - IT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:55,010 - DEBUG -    Entering get()
2025-01-09 02:11:55,010 - DEBUG -     Entering _make_request()
2025-01-09 02:11:55,010 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/IT
2025-01-09 02:11:55,010 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:55,010 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:55,010 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:55,010 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:55,010 - DEBUG - reusing cookie
2025-01-09 02:11:55,010 - DEBUG - reusing crumb
2025-01-09 02:11:55,010 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:55,010 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:55,151 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/IT?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1000
2025-01-09 02:11:55,152 - DEBUG - response code=200
2025-01-09 02:11:55,152 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:55,153 - DEBUG -    Exiting get()
2025-01-09 02:11:55,157 - ERROR - 
1 Failed download:
2025-01-09 02:11:55,158 - ERROR - ['IT']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:55,158 - DEBUG - ['IT']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:55,164 - DEBUG - Exiting download()
2025-01-09 02:11:55,303 - ERROR - Error writing data for IT to DB: schema "np" does not exist
LINE 4:             VALUES ('IT','2020-01-02'::date,np.float64(154.4...
                                                    ^

2025-01-09 02:11:55,304 - DEBUG - Entering download()
2025-01-09 02:11:55,304 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:55,304 - DEBUG -  Entering history()
2025-01-09 02:11:55,304 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GE', 1, 0])
2025-01-09 02:11:55,305 - DEBUG -   Entering history()
2025-01-09 02:11:55,305 - DEBUG - GE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:55,305 - DEBUG -    Entering get()
2025-01-09 02:11:55,305 - DEBUG -     Entering _make_request()
2025-01-09 02:11:55,305 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GE
2025-01-09 02:11:55,305 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:55,306 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:55,306 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:55,306 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:55,306 - DEBUG - reusing cookie
2025-01-09 02:11:55,306 - DEBUG - reusing crumb
2025-01-09 02:11:55,306 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:55,306 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:55,517 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GE?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1002
2025-01-09 02:11:55,518 - DEBUG - response code=200
2025-01-09 02:11:55,519 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:55,519 - DEBUG -    Exiting get()
2025-01-09 02:11:55,525 - ERROR - 
1 Failed download:
2025-01-09 02:11:55,525 - ERROR - ['GE']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:55,525 - DEBUG - ['GE']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:55,533 - DEBUG - Exiting download()
2025-01-09 02:11:55,533 - WARNING - Ticker GE is missing 'Close' column. Skipping.
2025-01-09 02:11:55,533 - DEBUG - Entering download()
2025-01-09 02:11:55,534 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:55,534 - DEBUG -  Entering history()
2025-01-09 02:11:55,535 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GEHC', 1, 0])
2025-01-09 02:11:55,535 - DEBUG -   Entering history()
2025-01-09 02:11:55,536 - DEBUG - GEHC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:55,537 - DEBUG -    Entering get()
2025-01-09 02:11:55,537 - DEBUG -     Entering _make_request()
2025-01-09 02:11:55,537 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GEHC
2025-01-09 02:11:55,537 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:55,537 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:55,537 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:55,538 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:55,538 - DEBUG - reusing cookie
2025-01-09 02:11:55,538 - DEBUG - reusing crumb
2025-01-09 02:11:55,538 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:55,538 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:55,693 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GEHC?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:11:55,694 - DEBUG - response code=400
2025-01-09 02:11:55,695 - DEBUG - toggling cookie strategy basic -> csrf
2025-01-09 02:11:55,695 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:55,695 - DEBUG - cookie_mode = 'csrf'
2025-01-09 02:11:55,695 - DEBUG -       Entering _get_crumb_csrf()
2025-01-09 02:11:55,696 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['csrf', 1, 0])
2025-01-09 02:11:55,854 - DEBUG - https://guce.yahoo.com:443 "GET /consent HTTP/1.1" 302 0
2025-01-09 02:11:56,618 - DEBUG - https://www.yahoo.com:443 "GET /?guccounter=1 HTTP/1.1" 200 None
2025-01-09 02:11:57,158 - DEBUG - Failed to find "csrfToken" in response
2025-01-09 02:11:57,158 - DEBUG -       Exiting _get_crumb_csrf()
2025-01-09 02:11:57,158 - DEBUG - toggling cookie strategy csrf -> basic
2025-01-09 02:11:57,158 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:57,158 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['basic', 1, 0])
2025-01-09 02:11:57,158 - DEBUG - loaded persistent cookie
2025-01-09 02:11:57,159 - DEBUG - reusing cookie
2025-01-09 02:11:57,297 - DEBUG - https://query1.finance.yahoo.com:443 "GET /v1/test/getcrumb HTTP/1.1" 200 11
2025-01-09 02:11:57,298 - DEBUG - crumb = 'mbrlfmeSllh'
2025-01-09 02:11:57,298 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:57,298 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:57,430 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GEHC?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:11:57,431 - DEBUG - response code=400
2025-01-09 02:11:57,431 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:57,431 - DEBUG -    Exiting get()
2025-01-09 02:11:57,437 - ERROR - 
1 Failed download:
2025-01-09 02:11:57,437 - ERROR - ['GEHC']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn\'t exist for startDate = 1577854800, endDate = 1577941200")')
2025-01-09 02:11:57,438 - DEBUG - ['GEHC']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn't exist for startDate = 1577854800, endDate = 1577941200")

2025-01-09 02:11:57,445 - DEBUG - Exiting download()
2025-01-09 02:11:57,445 - WARNING - Ticker GEHC is missing 'Close' column. Skipping.
2025-01-09 02:11:57,446 - DEBUG - Entering download()
2025-01-09 02:11:57,446 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:57,446 - DEBUG -  Entering history()
2025-01-09 02:11:57,447 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GEV', 1, 0])
2025-01-09 02:11:57,447 - DEBUG -   Entering history()
2025-01-09 02:11:57,449 - DEBUG - GEV: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:57,449 - DEBUG -    Entering get()
2025-01-09 02:11:57,449 - DEBUG -     Entering _make_request()
2025-01-09 02:11:57,449 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GEV
2025-01-09 02:11:57,449 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:57,450 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:57,450 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:57,450 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:57,450 - DEBUG - reusing cookie
2025-01-09 02:11:57,450 - DEBUG - reusing crumb
2025-01-09 02:11:57,450 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:57,450 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:57,593 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GEV?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:11:57,594 - DEBUG - response code=400
2025-01-09 02:11:57,595 - DEBUG - toggling cookie strategy basic -> csrf
2025-01-09 02:11:57,595 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:57,595 - DEBUG - cookie_mode = 'csrf'
2025-01-09 02:11:57,595 - DEBUG -       Entering _get_crumb_csrf()
2025-01-09 02:11:57,596 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['csrf', 1, 0])
2025-01-09 02:11:57,777 - DEBUG - https://guce.yahoo.com:443 "GET /consent HTTP/1.1" 302 0
2025-01-09 02:11:58,134 - DEBUG - https://www.yahoo.com:443 "GET /?guccounter=1 HTTP/1.1" 200 None
2025-01-09 02:11:58,502 - DEBUG - Failed to find "csrfToken" in response
2025-01-09 02:11:58,502 - DEBUG -       Exiting _get_crumb_csrf()
2025-01-09 02:11:58,502 - DEBUG - toggling cookie strategy csrf -> basic
2025-01-09 02:11:58,502 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:58,503 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['basic', 1, 0])
2025-01-09 02:11:58,503 - DEBUG - loaded persistent cookie
2025-01-09 02:11:58,503 - DEBUG - reusing cookie
2025-01-09 02:11:58,642 - DEBUG - https://query1.finance.yahoo.com:443 "GET /v1/test/getcrumb HTTP/1.1" 200 11
2025-01-09 02:11:58,643 - DEBUG - crumb = 'mbrlfmeSllh'
2025-01-09 02:11:58,643 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:58,643 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:58,773 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GEV?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:11:58,774 - DEBUG - response code=400
2025-01-09 02:11:58,774 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:58,774 - DEBUG -    Exiting get()
2025-01-09 02:11:58,780 - ERROR - 
1 Failed download:
2025-01-09 02:11:58,781 - ERROR - ['GEV']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn\'t exist for startDate = 1577854800, endDate = 1577941200")')
2025-01-09 02:11:58,781 - DEBUG - ['GEV']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn't exist for startDate = 1577854800, endDate = 1577941200")

2025-01-09 02:11:58,788 - DEBUG - Exiting download()
2025-01-09 02:11:58,849 - ERROR - Error writing data for GEV to DB: schema "np" does not exist
LINE 4:             VALUES ('GEV','2024-04-01'::date,np.float64(140....
                                                     ^

2025-01-09 02:11:58,849 - DEBUG - Entering download()
2025-01-09 02:11:58,849 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:58,849 - DEBUG -  Entering history()
2025-01-09 02:11:58,850 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GEN', 1, 0])
2025-01-09 02:11:58,850 - DEBUG -   Entering history()
2025-01-09 02:11:58,850 - DEBUG - GEN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:58,851 - DEBUG -    Entering get()
2025-01-09 02:11:58,851 - DEBUG -     Entering _make_request()
2025-01-09 02:11:58,851 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GEN
2025-01-09 02:11:58,851 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:58,851 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:58,851 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:58,851 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:58,851 - DEBUG - reusing cookie
2025-01-09 02:11:58,851 - DEBUG - reusing crumb
2025-01-09 02:11:58,851 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:58,851 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:58,999 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GEN?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1010
2025-01-09 02:11:59,001 - DEBUG - response code=200
2025-01-09 02:11:59,001 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:59,002 - DEBUG -    Exiting get()
2025-01-09 02:11:59,008 - ERROR - 
1 Failed download:
2025-01-09 02:11:59,008 - ERROR - ['GEN']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:59,008 - DEBUG - ['GEN']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:59,015 - DEBUG - Exiting download()
2025-01-09 02:11:59,144 - ERROR - Error writing data for GEN to DB: schema "np" does not exist
LINE 4:             VALUES ('GEN','2020-01-02'::date,np.float64(13.2...
                                                     ^

2025-01-09 02:11:59,145 - DEBUG - Entering download()
2025-01-09 02:11:59,145 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:59,145 - DEBUG -  Entering history()
2025-01-09 02:11:59,145 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GNRC', 1, 0])
2025-01-09 02:11:59,146 - DEBUG -   Entering history()
2025-01-09 02:11:59,146 - DEBUG - GNRC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:59,146 - DEBUG -    Entering get()
2025-01-09 02:11:59,146 - DEBUG -     Entering _make_request()
2025-01-09 02:11:59,146 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GNRC
2025-01-09 02:11:59,147 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:59,147 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:59,147 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:59,147 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:59,147 - DEBUG - reusing cookie
2025-01-09 02:11:59,147 - DEBUG - reusing crumb
2025-01-09 02:11:59,147 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:59,147 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:59,296 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GNRC?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1022
2025-01-09 02:11:59,297 - DEBUG - response code=200
2025-01-09 02:11:59,297 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:59,297 - DEBUG -    Exiting get()
2025-01-09 02:11:59,301 - ERROR - 
1 Failed download:
2025-01-09 02:11:59,301 - ERROR - ['GNRC']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:59,301 - DEBUG - ['GNRC']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:59,303 - DEBUG - Exiting download()
2025-01-09 02:11:59,303 - WARNING - Ticker GNRC is missing 'Close' column. Skipping.
2025-01-09 02:11:59,303 - DEBUG - Entering download()
2025-01-09 02:11:59,303 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:59,303 - DEBUG -  Entering history()
2025-01-09 02:11:59,304 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GD', 1, 0])
2025-01-09 02:11:59,304 - DEBUG -   Entering history()
2025-01-09 02:11:59,304 - DEBUG - GD: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:59,304 - DEBUG -    Entering get()
2025-01-09 02:11:59,304 - DEBUG -     Entering _make_request()
2025-01-09 02:11:59,305 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GD
2025-01-09 02:11:59,305 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:59,305 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:59,305 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:59,305 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:59,305 - DEBUG - reusing cookie
2025-01-09 02:11:59,305 - DEBUG - reusing crumb
2025-01-09 02:11:59,305 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:59,305 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:59,509 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GD?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1033
2025-01-09 02:11:59,510 - DEBUG - response code=200
2025-01-09 02:11:59,511 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:59,511 - DEBUG -    Exiting get()
2025-01-09 02:11:59,515 - ERROR - 
1 Failed download:
2025-01-09 02:11:59,515 - ERROR - ['GD']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:59,515 - DEBUG - ['GD']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:59,517 - DEBUG - Exiting download()
2025-01-09 02:11:59,618 - ERROR - Error writing data for GD to DB: schema "np" does not exist
LINE 4:             VALUES ('GD','2020-01-02'::date,np.float64(157.3...
                                                    ^

2025-01-09 02:11:59,619 - DEBUG - Entering download()
2025-01-09 02:11:59,619 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:59,619 - DEBUG -  Entering history()
2025-01-09 02:11:59,619 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GIS', 1, 0])
2025-01-09 02:11:59,619 - DEBUG -   Entering history()
2025-01-09 02:11:59,620 - DEBUG - GIS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:59,620 - DEBUG -    Entering get()
2025-01-09 02:11:59,620 - DEBUG -     Entering _make_request()
2025-01-09 02:11:59,620 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GIS
2025-01-09 02:11:59,620 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:59,620 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:59,620 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:59,620 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:59,620 - DEBUG - reusing cookie
2025-01-09 02:11:59,621 - DEBUG - reusing crumb
2025-01-09 02:11:59,621 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:59,621 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:11:59,802 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GIS?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1008
2025-01-09 02:11:59,803 - DEBUG - response code=200
2025-01-09 02:11:59,803 - DEBUG -     Exiting _make_request()
2025-01-09 02:11:59,803 - DEBUG -    Exiting get()
2025-01-09 02:11:59,809 - ERROR - 
1 Failed download:
2025-01-09 02:11:59,810 - ERROR - ['GIS']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:11:59,810 - DEBUG - ['GIS']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:11:59,817 - DEBUG - Exiting download()
2025-01-09 02:11:59,953 - ERROR - Error writing data for GIS to DB: schema "np" does not exist
LINE 4:             VALUES ('GIS','2020-01-02'::date,np.float64(45.6...
                                                     ^

2025-01-09 02:11:59,953 - DEBUG - Entering download()
2025-01-09 02:11:59,953 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:11:59,953 - DEBUG -  Entering history()
2025-01-09 02:11:59,954 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GM', 1, 0])
2025-01-09 02:11:59,954 - DEBUG -   Entering history()
2025-01-09 02:11:59,955 - DEBUG - GM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:11:59,955 - DEBUG -    Entering get()
2025-01-09 02:11:59,955 - DEBUG -     Entering _make_request()
2025-01-09 02:11:59,955 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GM
2025-01-09 02:11:59,955 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:11:59,955 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:11:59,955 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:11:59,955 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:11:59,955 - DEBUG - reusing cookie
2025-01-09 02:11:59,955 - DEBUG - reusing crumb
2025-01-09 02:11:59,955 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:11:59,955 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:00,114 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GM?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1016
2025-01-09 02:12:00,115 - DEBUG - response code=200
2025-01-09 02:12:00,115 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:00,116 - DEBUG -    Exiting get()
2025-01-09 02:12:00,121 - ERROR - 
1 Failed download:
2025-01-09 02:12:00,121 - ERROR - ['GM']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:00,122 - DEBUG - ['GM']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:00,126 - DEBUG - Exiting download()
2025-01-09 02:12:00,242 - ERROR - Error writing data for GM to DB: schema "np" does not exist
LINE 4:             VALUES ('GM','2020-01-02'::date,np.float64(35.63...
                                                    ^

2025-01-09 02:12:00,243 - DEBUG - Entering download()
2025-01-09 02:12:00,243 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:00,243 - DEBUG -  Entering history()
2025-01-09 02:12:00,243 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GPC', 1, 0])
2025-01-09 02:12:00,244 - DEBUG -   Entering history()
2025-01-09 02:12:00,244 - DEBUG - GPC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:00,244 - DEBUG -    Entering get()
2025-01-09 02:12:00,244 - DEBUG -     Entering _make_request()
2025-01-09 02:12:00,245 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GPC
2025-01-09 02:12:00,245 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:00,245 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:00,245 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:00,245 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:00,245 - DEBUG - reusing cookie
2025-01-09 02:12:00,245 - DEBUG - reusing crumb
2025-01-09 02:12:00,245 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:00,245 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:00,430 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GPC?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1020
2025-01-09 02:12:00,431 - DEBUG - response code=200
2025-01-09 02:12:00,431 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:00,431 - DEBUG -    Exiting get()
2025-01-09 02:12:00,437 - ERROR - 
1 Failed download:
2025-01-09 02:12:00,438 - ERROR - ['GPC']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:00,438 - DEBUG - ['GPC']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:00,445 - DEBUG - Exiting download()
2025-01-09 02:12:00,701 - ERROR - Error writing data for GPC to DB: schema "np" does not exist
LINE 4:             VALUES ('GPC','2020-01-02'::date,np.float64(92.7...
                                                     ^

2025-01-09 02:12:00,702 - DEBUG - Entering download()
2025-01-09 02:12:00,702 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:00,702 - DEBUG -  Entering history()
2025-01-09 02:12:00,703 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GILD', 1, 0])
2025-01-09 02:12:00,703 - DEBUG -   Entering history()
2025-01-09 02:12:00,704 - DEBUG - GILD: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:00,704 - DEBUG -    Entering get()
2025-01-09 02:12:00,704 - DEBUG -     Entering _make_request()
2025-01-09 02:12:00,704 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GILD
2025-01-09 02:12:00,704 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:00,704 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:00,704 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:00,704 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:00,704 - DEBUG - reusing cookie
2025-01-09 02:12:00,704 - DEBUG - reusing crumb
2025-01-09 02:12:00,704 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:00,704 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:00,860 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GILD?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1017
2025-01-09 02:12:00,861 - DEBUG - response code=200
2025-01-09 02:12:00,861 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:00,861 - DEBUG -    Exiting get()
2025-01-09 02:12:00,864 - ERROR - 
1 Failed download:
2025-01-09 02:12:00,865 - ERROR - ['GILD']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:00,865 - DEBUG - ['GILD']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:00,867 - DEBUG - Exiting download()
2025-01-09 02:12:00,970 - ERROR - Error writing data for GILD to DB: schema "np" does not exist
LINE 4:             VALUES ('GILD','2020-01-02'::date,np.float64(53....
                                                      ^

2025-01-09 02:12:00,971 - DEBUG - Entering download()
2025-01-09 02:12:00,971 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:00,971 - DEBUG -  Entering history()
2025-01-09 02:12:00,971 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GPN', 1, 0])
2025-01-09 02:12:00,971 - DEBUG -   Entering history()
2025-01-09 02:12:00,972 - DEBUG - GPN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:00,973 - DEBUG -    Entering get()
2025-01-09 02:12:00,973 - DEBUG -     Entering _make_request()
2025-01-09 02:12:00,973 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GPN
2025-01-09 02:12:00,973 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:00,973 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:00,973 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:00,973 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:00,973 - DEBUG - reusing cookie
2025-01-09 02:12:00,973 - DEBUG - reusing crumb
2025-01-09 02:12:00,973 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:00,973 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:01,142 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GPN?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1018
2025-01-09 02:12:01,143 - DEBUG - response code=200
2025-01-09 02:12:01,143 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:01,143 - DEBUG -    Exiting get()
2025-01-09 02:12:01,149 - ERROR - 
1 Failed download:
2025-01-09 02:12:01,150 - ERROR - ['GPN']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:01,150 - DEBUG - ['GPN']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:01,157 - DEBUG - Exiting download()
2025-01-09 02:12:01,269 - ERROR - Error writing data for GPN to DB: schema "np" does not exist
LINE 4:             VALUES ('GPN','2020-01-02'::date,np.float64(177....
                                                     ^

2025-01-09 02:12:01,269 - DEBUG - Entering download()
2025-01-09 02:12:01,269 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:01,270 - DEBUG -  Entering history()
2025-01-09 02:12:01,270 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GL', 1, 0])
2025-01-09 02:12:01,270 - DEBUG -   Entering history()
2025-01-09 02:12:01,271 - DEBUG - GL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:01,271 - DEBUG -    Entering get()
2025-01-09 02:12:01,271 - DEBUG -     Entering _make_request()
2025-01-09 02:12:01,271 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GL
2025-01-09 02:12:01,271 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:01,271 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:01,271 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:01,271 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:01,271 - DEBUG - reusing cookie
2025-01-09 02:12:01,271 - DEBUG - reusing crumb
2025-01-09 02:12:01,271 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:01,271 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:01,448 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GL?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1033
2025-01-09 02:12:01,449 - DEBUG - response code=200
2025-01-09 02:12:01,449 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:01,450 - DEBUG -    Exiting get()
2025-01-09 02:12:01,456 - ERROR - 
1 Failed download:
2025-01-09 02:12:01,456 - ERROR - ['GL']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:01,456 - DEBUG - ['GL']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:01,463 - DEBUG - Exiting download()
2025-01-09 02:12:01,592 - ERROR - Error writing data for GL to DB: schema "np" does not exist
LINE 4:             VALUES ('GL','2020-01-02'::date,np.float64(100.8...
                                                    ^

2025-01-09 02:12:01,593 - DEBUG - Entering download()
2025-01-09 02:12:01,593 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:01,593 - DEBUG -  Entering history()
2025-01-09 02:12:01,593 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GDDY', 1, 0])
2025-01-09 02:12:01,593 - DEBUG -   Entering history()
2025-01-09 02:12:01,594 - DEBUG - GDDY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:01,594 - DEBUG -    Entering get()
2025-01-09 02:12:01,594 - DEBUG -     Entering _make_request()
2025-01-09 02:12:01,594 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GDDY
2025-01-09 02:12:01,594 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:01,594 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:01,594 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:01,594 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:01,594 - DEBUG - reusing cookie
2025-01-09 02:12:01,594 - DEBUG - reusing crumb
2025-01-09 02:12:01,594 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:01,594 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:01,735 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GDDY?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1001
2025-01-09 02:12:01,736 - DEBUG - response code=200
2025-01-09 02:12:01,737 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:01,737 - DEBUG -    Exiting get()
2025-01-09 02:12:01,743 - ERROR - 
1 Failed download:
2025-01-09 02:12:01,743 - ERROR - ['GDDY']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:01,743 - DEBUG - ['GDDY']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:01,751 - DEBUG - Exiting download()
2025-01-09 02:12:01,876 - ERROR - Error writing data for GDDY to DB: schema "np" does not exist
LINE 4:             VALUES ('GDDY','2020-01-02'::date,np.float64(68....
                                                      ^

2025-01-09 02:12:01,876 - DEBUG - Entering download()
2025-01-09 02:12:01,876 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:01,876 - DEBUG -  Entering history()
2025-01-09 02:12:01,877 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GS', 1, 0])
2025-01-09 02:12:01,877 - DEBUG -   Entering history()
2025-01-09 02:12:01,878 - DEBUG - GS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:01,878 - DEBUG -    Entering get()
2025-01-09 02:12:01,878 - DEBUG -     Entering _make_request()
2025-01-09 02:12:01,878 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GS
2025-01-09 02:12:01,878 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:01,878 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:01,878 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:01,878 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:01,878 - DEBUG - reusing cookie
2025-01-09 02:12:01,878 - DEBUG - reusing crumb
2025-01-09 02:12:01,878 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:01,878 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:02,033 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GS?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1039
2025-01-09 02:12:02,034 - DEBUG - response code=200
2025-01-09 02:12:02,034 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:02,034 - DEBUG -    Exiting get()
2025-01-09 02:12:02,040 - ERROR - 
1 Failed download:
2025-01-09 02:12:02,041 - ERROR - ['GS']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:02,041 - DEBUG - ['GS']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:02,048 - DEBUG - Exiting download()
2025-01-09 02:12:02,158 - ERROR - Error writing data for GS to DB: schema "np" does not exist
LINE 4:             VALUES ('GS','2020-01-02'::date,np.float64(204.3...
                                                    ^

2025-01-09 02:12:02,158 - DEBUG - Entering download()
2025-01-09 02:12:02,158 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:02,158 - DEBUG -  Entering history()
2025-01-09 02:12:02,159 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HAL', 1, 0])
2025-01-09 02:12:02,159 - DEBUG -   Entering history()
2025-01-09 02:12:02,159 - DEBUG - HAL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:02,160 - DEBUG -    Entering get()
2025-01-09 02:12:02,160 - DEBUG -     Entering _make_request()
2025-01-09 02:12:02,160 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HAL
2025-01-09 02:12:02,160 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:02,160 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:02,160 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:02,160 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:02,160 - DEBUG - reusing cookie
2025-01-09 02:12:02,160 - DEBUG - reusing crumb
2025-01-09 02:12:02,160 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:02,160 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:02,353 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HAL?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1012
2025-01-09 02:12:02,354 - DEBUG - response code=200
2025-01-09 02:12:02,355 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:02,355 - DEBUG -    Exiting get()
2025-01-09 02:12:02,361 - ERROR - 
1 Failed download:
2025-01-09 02:12:02,361 - ERROR - ['HAL']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:02,362 - DEBUG - ['HAL']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:02,369 - DEBUG - Exiting download()
2025-01-09 02:12:02,644 - ERROR - Error writing data for HAL to DB: schema "np" does not exist
LINE 4:             VALUES ('HAL','2020-01-02'::date,np.float64(22.7...
                                                     ^

2025-01-09 02:12:02,645 - DEBUG - Entering download()
2025-01-09 02:12:02,645 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:02,645 - DEBUG -  Entering history()
2025-01-09 02:12:02,645 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HIG', 1, 0])
2025-01-09 02:12:02,646 - DEBUG -   Entering history()
2025-01-09 02:12:02,646 - DEBUG - HIG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:02,646 - DEBUG -    Entering get()
2025-01-09 02:12:02,646 - DEBUG -     Entering _make_request()
2025-01-09 02:12:02,646 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HIG
2025-01-09 02:12:02,646 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:02,646 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:02,647 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:02,647 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:02,647 - DEBUG - reusing cookie
2025-01-09 02:12:02,647 - DEBUG - reusing crumb
2025-01-09 02:12:02,647 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:02,647 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:02,834 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HIG?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1050
2025-01-09 02:12:02,835 - DEBUG - response code=200
2025-01-09 02:12:02,835 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:02,835 - DEBUG -    Exiting get()
2025-01-09 02:12:02,841 - ERROR - 
1 Failed download:
2025-01-09 02:12:02,841 - ERROR - ['HIG']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:02,842 - DEBUG - ['HIG']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:02,849 - DEBUG - Exiting download()
2025-01-09 02:12:03,115 - ERROR - Error writing data for HIG to DB: schema "np" does not exist
LINE 4:             VALUES ('HIG','2020-01-02'::date,np.float64(54.2...
                                                     ^

2025-01-09 02:12:03,116 - DEBUG - Entering download()
2025-01-09 02:12:03,116 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:03,116 - DEBUG -  Entering history()
2025-01-09 02:12:03,117 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HAS', 1, 0])
2025-01-09 02:12:03,117 - DEBUG -   Entering history()
2025-01-09 02:12:03,117 - DEBUG - HAS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:03,117 - DEBUG -    Entering get()
2025-01-09 02:12:03,118 - DEBUG -     Entering _make_request()
2025-01-09 02:12:03,118 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HAS
2025-01-09 02:12:03,118 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:03,118 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:03,118 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:03,118 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:03,118 - DEBUG - reusing cookie
2025-01-09 02:12:03,118 - DEBUG - reusing crumb
2025-01-09 02:12:03,118 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:03,118 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:03,294 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HAS?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1001
2025-01-09 02:12:03,295 - DEBUG - response code=200
2025-01-09 02:12:03,295 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:03,295 - DEBUG -    Exiting get()
2025-01-09 02:12:03,301 - ERROR - 
1 Failed download:
2025-01-09 02:12:03,301 - ERROR - ['HAS']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:03,301 - DEBUG - ['HAS']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:03,308 - DEBUG - Exiting download()
2025-01-09 02:12:03,424 - ERROR - Error writing data for HAS to DB: schema "np" does not exist
LINE 4:             VALUES ('HAS','2020-01-02'::date,np.float64(87.4...
                                                     ^

2025-01-09 02:12:03,425 - DEBUG - Entering download()
2025-01-09 02:12:03,425 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:03,425 - DEBUG -  Entering history()
2025-01-09 02:12:03,425 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HCA', 1, 0])
2025-01-09 02:12:03,426 - DEBUG -   Entering history()
2025-01-09 02:12:03,426 - DEBUG - HCA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:03,426 - DEBUG -    Entering get()
2025-01-09 02:12:03,427 - DEBUG -     Entering _make_request()
2025-01-09 02:12:03,427 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HCA
2025-01-09 02:12:03,427 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:03,427 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:03,427 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:03,427 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:03,427 - DEBUG - reusing cookie
2025-01-09 02:12:03,427 - DEBUG - reusing crumb
2025-01-09 02:12:03,427 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:03,427 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:03,573 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HCA?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1018
2025-01-09 02:12:03,574 - DEBUG - response code=200
2025-01-09 02:12:03,574 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:03,574 - DEBUG -    Exiting get()
2025-01-09 02:12:03,577 - ERROR - 
1 Failed download:
2025-01-09 02:12:03,577 - ERROR - ['HCA']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:03,577 - DEBUG - ['HCA']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:03,580 - DEBUG - Exiting download()
2025-01-09 02:12:03,580 - WARNING - Ticker HCA is missing 'Close' column. Skipping.
2025-01-09 02:12:03,580 - DEBUG - Entering download()
2025-01-09 02:12:03,580 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:03,580 - DEBUG -  Entering history()
2025-01-09 02:12:03,581 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DOC', 1, 0])
2025-01-09 02:12:03,581 - DEBUG -   Entering history()
2025-01-09 02:12:03,582 - DEBUG - DOC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:03,582 - DEBUG -    Entering get()
2025-01-09 02:12:03,582 - DEBUG -     Entering _make_request()
2025-01-09 02:12:03,582 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DOC
2025-01-09 02:12:03,582 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:03,582 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:03,583 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:03,583 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:03,583 - DEBUG - reusing cookie
2025-01-09 02:12:03,583 - DEBUG - reusing crumb
2025-01-09 02:12:03,583 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:03,583 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:03,818 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DOC?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1028
2025-01-09 02:12:03,819 - DEBUG - response code=200
2025-01-09 02:12:03,819 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:03,819 - DEBUG -    Exiting get()
2025-01-09 02:12:03,825 - ERROR - 
1 Failed download:
2025-01-09 02:12:03,825 - ERROR - ['DOC']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:03,826 - DEBUG - ['DOC']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:03,833 - DEBUG - Exiting download()
2025-01-09 02:12:03,952 - ERROR - Error writing data for DOC to DB: schema "np" does not exist
LINE 4:             VALUES ('DOC','2020-01-02'::date,np.float64(27.0...
                                                     ^

2025-01-09 02:12:03,952 - DEBUG - Entering download()
2025-01-09 02:12:03,952 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:03,953 - DEBUG -  Entering history()
2025-01-09 02:12:03,953 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HSIC', 1, 0])
2025-01-09 02:12:03,953 - DEBUG -   Entering history()
2025-01-09 02:12:03,954 - DEBUG - HSIC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:03,954 - DEBUG -    Entering get()
2025-01-09 02:12:03,954 - DEBUG -     Entering _make_request()
2025-01-09 02:12:03,954 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HSIC
2025-01-09 02:12:03,954 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:03,954 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:03,954 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:03,954 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:03,954 - DEBUG - reusing cookie
2025-01-09 02:12:03,954 - DEBUG - reusing crumb
2025-01-09 02:12:03,954 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:03,954 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:04,092 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HSIC?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1013
2025-01-09 02:12:04,092 - DEBUG - response code=200
2025-01-09 02:12:04,092 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:04,092 - DEBUG -    Exiting get()
2025-01-09 02:12:04,096 - ERROR - 
1 Failed download:
2025-01-09 02:12:04,096 - ERROR - ['HSIC']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:04,096 - DEBUG - ['HSIC']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:04,100 - DEBUG - Exiting download()
2025-01-09 02:12:04,207 - ERROR - Error writing data for HSIC to DB: schema "np" does not exist
LINE 4:             VALUES ('HSIC','2020-01-02'::date,np.float64(67....
                                                      ^

2025-01-09 02:12:04,207 - DEBUG - Entering download()
2025-01-09 02:12:04,207 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:04,208 - DEBUG -  Entering history()
2025-01-09 02:12:04,208 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HSY', 1, 0])
2025-01-09 02:12:04,208 - DEBUG -   Entering history()
2025-01-09 02:12:04,209 - DEBUG - HSY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:04,209 - DEBUG -    Entering get()
2025-01-09 02:12:04,209 - DEBUG -     Entering _make_request()
2025-01-09 02:12:04,209 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HSY
2025-01-09 02:12:04,209 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:04,209 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:04,209 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:04,209 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:04,209 - DEBUG - reusing cookie
2025-01-09 02:12:04,209 - DEBUG - reusing crumb
2025-01-09 02:12:04,209 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:04,209 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:04,433 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HSY?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1017
2025-01-09 02:12:04,434 - DEBUG - response code=200
2025-01-09 02:12:04,434 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:04,434 - DEBUG -    Exiting get()
2025-01-09 02:12:04,440 - ERROR - 
1 Failed download:
2025-01-09 02:12:04,440 - ERROR - ['HSY']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:04,441 - DEBUG - ['HSY']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:04,448 - DEBUG - Exiting download()
2025-01-09 02:12:04,448 - WARNING - Ticker HSY is missing 'Close' column. Skipping.
2025-01-09 02:12:04,449 - DEBUG - Entering download()
2025-01-09 02:12:04,449 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:04,449 - DEBUG -  Entering history()
2025-01-09 02:12:04,450 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HES', 1, 0])
2025-01-09 02:12:04,450 - DEBUG -   Entering history()
2025-01-09 02:12:04,452 - DEBUG - HES: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:04,452 - DEBUG -    Entering get()
2025-01-09 02:12:04,452 - DEBUG -     Entering _make_request()
2025-01-09 02:12:04,452 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HES
2025-01-09 02:12:04,452 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:04,453 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:04,453 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:04,453 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:04,453 - DEBUG - reusing cookie
2025-01-09 02:12:04,453 - DEBUG - reusing crumb
2025-01-09 02:12:04,453 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:04,453 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:04,630 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HES?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1011
2025-01-09 02:12:04,631 - DEBUG - response code=200
2025-01-09 02:12:04,631 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:04,632 - DEBUG -    Exiting get()
2025-01-09 02:12:04,638 - ERROR - 
1 Failed download:
2025-01-09 02:12:04,638 - ERROR - ['HES']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:04,638 - DEBUG - ['HES']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:04,645 - DEBUG - Exiting download()
2025-01-09 02:12:04,758 - ERROR - Error writing data for HES to DB: schema "np" does not exist
LINE 4:             VALUES ('HES','2020-01-02'::date,np.float64(62.6...
                                                     ^

2025-01-09 02:12:04,759 - DEBUG - Entering download()
2025-01-09 02:12:04,759 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:04,759 - DEBUG -  Entering history()
2025-01-09 02:12:04,759 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HPE', 1, 0])
2025-01-09 02:12:04,759 - DEBUG -   Entering history()
2025-01-09 02:12:04,760 - DEBUG - HPE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:04,760 - DEBUG -    Entering get()
2025-01-09 02:12:04,760 - DEBUG -     Entering _make_request()
2025-01-09 02:12:04,760 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HPE
2025-01-09 02:12:04,760 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:04,760 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:04,760 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:04,760 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:04,761 - DEBUG - reusing cookie
2025-01-09 02:12:04,761 - DEBUG - reusing crumb
2025-01-09 02:12:04,761 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:04,761 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:04,919 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HPE?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1043
2025-01-09 02:12:04,920 - DEBUG - response code=200
2025-01-09 02:12:04,920 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:04,920 - DEBUG -    Exiting get()
2025-01-09 02:12:04,925 - ERROR - 
1 Failed download:
2025-01-09 02:12:04,925 - ERROR - ['HPE']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:04,925 - DEBUG - ['HPE']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:04,932 - DEBUG - Exiting download()
2025-01-09 02:12:05,065 - ERROR - Error writing data for HPE to DB: schema "np" does not exist
LINE 4:             VALUES ('HPE','2020-01-02'::date,np.float64(13.5...
                                                     ^

2025-01-09 02:12:05,065 - DEBUG - Entering download()
2025-01-09 02:12:05,066 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:05,066 - DEBUG -  Entering history()
2025-01-09 02:12:05,066 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HLT', 1, 0])
2025-01-09 02:12:05,066 - DEBUG -   Entering history()
2025-01-09 02:12:05,067 - DEBUG - HLT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:05,067 - DEBUG -    Entering get()
2025-01-09 02:12:05,067 - DEBUG -     Entering _make_request()
2025-01-09 02:12:05,067 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HLT
2025-01-09 02:12:05,067 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:05,067 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:05,067 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:05,067 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:05,067 - DEBUG - reusing cookie
2025-01-09 02:12:05,067 - DEBUG - reusing crumb
2025-01-09 02:12:05,067 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:05,067 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:05,222 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HLT?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1039
2025-01-09 02:12:05,223 - DEBUG - response code=200
2025-01-09 02:12:05,223 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:05,223 - DEBUG -    Exiting get()
2025-01-09 02:12:05,229 - ERROR - 
1 Failed download:
2025-01-09 02:12:05,229 - ERROR - ['HLT']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:05,230 - DEBUG - ['HLT']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:05,237 - DEBUG - Exiting download()
2025-01-09 02:12:05,360 - ERROR - Error writing data for HLT to DB: schema "np" does not exist
LINE 4:             VALUES ('HLT','2020-01-02'::date,np.float64(109....
                                                     ^

2025-01-09 02:12:05,360 - DEBUG - Entering download()
2025-01-09 02:12:05,360 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:05,360 - DEBUG -  Entering history()
2025-01-09 02:12:05,361 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HOLX', 1, 0])
2025-01-09 02:12:05,361 - DEBUG -   Entering history()
2025-01-09 02:12:05,362 - DEBUG - HOLX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:05,362 - DEBUG -    Entering get()
2025-01-09 02:12:05,362 - DEBUG -     Entering _make_request()
2025-01-09 02:12:05,362 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HOLX
2025-01-09 02:12:05,362 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:05,362 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:05,362 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:05,362 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:05,362 - DEBUG - reusing cookie
2025-01-09 02:12:05,362 - DEBUG - reusing crumb
2025-01-09 02:12:05,362 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:05,362 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:05,501 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HOLX?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1004
2025-01-09 02:12:05,502 - DEBUG - response code=200
2025-01-09 02:12:05,502 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:05,502 - DEBUG -    Exiting get()
2025-01-09 02:12:05,506 - ERROR - 
1 Failed download:
2025-01-09 02:12:05,506 - ERROR - ['HOLX']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:05,506 - DEBUG - ['HOLX']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:05,511 - DEBUG - Exiting download()
2025-01-09 02:12:05,627 - ERROR - Error writing data for HOLX to DB: schema "np" does not exist
LINE 4:             VALUES ('HOLX','2020-01-02'::date,np.float64(52....
                                                      ^

2025-01-09 02:12:05,628 - DEBUG - Entering download()
2025-01-09 02:12:05,628 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:05,628 - DEBUG -  Entering history()
2025-01-09 02:12:05,628 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HD', 1, 0])
2025-01-09 02:12:05,629 - DEBUG -   Entering history()
2025-01-09 02:12:05,629 - DEBUG - HD: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:05,629 - DEBUG -    Entering get()
2025-01-09 02:12:05,629 - DEBUG -     Entering _make_request()
2025-01-09 02:12:05,629 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HD
2025-01-09 02:12:05,629 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:05,630 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:05,630 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:05,630 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:05,630 - DEBUG - reusing cookie
2025-01-09 02:12:05,630 - DEBUG - reusing crumb
2025-01-09 02:12:05,630 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:05,630 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:05,817 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HD?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1018
2025-01-09 02:12:05,818 - DEBUG - response code=200
2025-01-09 02:12:05,818 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:05,818 - DEBUG -    Exiting get()
2025-01-09 02:12:05,824 - ERROR - 
1 Failed download:
2025-01-09 02:12:05,825 - ERROR - ['HD']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:05,825 - DEBUG - ['HD']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:05,832 - DEBUG - Exiting download()
2025-01-09 02:12:05,955 - ERROR - Error writing data for HD to DB: schema "np" does not exist
LINE 4:             VALUES ('HD','2020-01-02'::date,np.float64(194.2...
                                                    ^

2025-01-09 02:12:05,956 - DEBUG - Entering download()
2025-01-09 02:12:05,956 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:05,956 - DEBUG -  Entering history()
2025-01-09 02:12:05,956 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HON', 1, 0])
2025-01-09 02:12:05,957 - DEBUG -   Entering history()
2025-01-09 02:12:05,957 - DEBUG - HON: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:05,957 - DEBUG -    Entering get()
2025-01-09 02:12:05,957 - DEBUG -     Entering _make_request()
2025-01-09 02:12:05,957 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HON
2025-01-09 02:12:05,958 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:05,958 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:05,958 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:05,958 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:05,958 - DEBUG - reusing cookie
2025-01-09 02:12:05,958 - DEBUG - reusing crumb
2025-01-09 02:12:05,958 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:05,958 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:06,169 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HON?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1038
2025-01-09 02:12:06,170 - DEBUG - response code=200
2025-01-09 02:12:06,170 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:06,170 - DEBUG -    Exiting get()
2025-01-09 02:12:06,176 - ERROR - 
1 Failed download:
2025-01-09 02:12:06,177 - ERROR - ['HON']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:06,177 - DEBUG - ['HON']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:06,184 - DEBUG - Exiting download()
2025-01-09 02:12:06,293 - ERROR - Error writing data for HON to DB: schema "np" does not exist
LINE 4:             VALUES ('HON','2020-01-02'::date,np.float64(160....
                                                     ^

2025-01-09 02:12:06,293 - DEBUG - Entering download()
2025-01-09 02:12:06,293 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:06,293 - DEBUG -  Entering history()
2025-01-09 02:12:06,294 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HRL', 1, 0])
2025-01-09 02:12:06,294 - DEBUG -   Entering history()
2025-01-09 02:12:06,294 - DEBUG - HRL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:06,294 - DEBUG -    Entering get()
2025-01-09 02:12:06,295 - DEBUG -     Entering _make_request()
2025-01-09 02:12:06,295 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HRL
2025-01-09 02:12:06,295 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:06,295 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:06,295 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:06,295 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:06,295 - DEBUG - reusing cookie
2025-01-09 02:12:06,295 - DEBUG - reusing crumb
2025-01-09 02:12:06,295 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:06,295 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:06,508 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HRL?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1021
2025-01-09 02:12:06,509 - DEBUG - response code=200
2025-01-09 02:12:06,509 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:06,509 - DEBUG -    Exiting get()
2025-01-09 02:12:06,515 - ERROR - 
1 Failed download:
2025-01-09 02:12:06,515 - ERROR - ['HRL']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:06,516 - DEBUG - ['HRL']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:06,523 - DEBUG - Exiting download()
2025-01-09 02:12:06,523 - WARNING - Ticker HRL is missing 'Close' column. Skipping.
2025-01-09 02:12:06,524 - DEBUG - Entering download()
2025-01-09 02:12:06,524 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:06,524 - DEBUG -  Entering history()
2025-01-09 02:12:06,525 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HST', 1, 0])
2025-01-09 02:12:06,525 - DEBUG -   Entering history()
2025-01-09 02:12:06,527 - DEBUG - HST: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:06,527 - DEBUG -    Entering get()
2025-01-09 02:12:06,527 - DEBUG -     Entering _make_request()
2025-01-09 02:12:06,527 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HST
2025-01-09 02:12:06,528 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:06,528 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:06,528 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:06,528 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:06,528 - DEBUG - reusing cookie
2025-01-09 02:12:06,528 - DEBUG - reusing crumb
2025-01-09 02:12:06,528 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:06,528 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:06,719 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HST?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1032
2025-01-09 02:12:06,720 - DEBUG - response code=200
2025-01-09 02:12:06,721 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:06,721 - DEBUG -    Exiting get()
2025-01-09 02:12:06,727 - ERROR - 
1 Failed download:
2025-01-09 02:12:06,727 - ERROR - ['HST']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:06,727 - DEBUG - ['HST']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:06,735 - DEBUG - Exiting download()
2025-01-09 02:12:07,003 - ERROR - Error writing data for HST to DB: schema "np" does not exist
LINE 4:             VALUES ('HST','2020-01-02'::date,np.float64(16.0...
                                                     ^

2025-01-09 02:12:07,003 - DEBUG - Entering download()
2025-01-09 02:12:07,003 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:07,003 - DEBUG -  Entering history()
2025-01-09 02:12:07,004 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HWM', 1, 0])
2025-01-09 02:12:07,004 - DEBUG -   Entering history()
2025-01-09 02:12:07,004 - DEBUG - HWM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:07,004 - DEBUG -    Entering get()
2025-01-09 02:12:07,005 - DEBUG -     Entering _make_request()
2025-01-09 02:12:07,005 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HWM
2025-01-09 02:12:07,005 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:07,005 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:07,005 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:07,005 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:07,005 - DEBUG - reusing cookie
2025-01-09 02:12:07,005 - DEBUG - reusing crumb
2025-01-09 02:12:07,005 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:07,005 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:07,172 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HWM?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1021
2025-01-09 02:12:07,173 - DEBUG - response code=200
2025-01-09 02:12:07,173 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:07,174 - DEBUG -    Exiting get()
2025-01-09 02:12:07,179 - ERROR - 
1 Failed download:
2025-01-09 02:12:07,179 - ERROR - ['HWM']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:07,180 - DEBUG - ['HWM']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:07,186 - DEBUG - Exiting download()
2025-01-09 02:12:07,321 - ERROR - Error writing data for HWM to DB: schema "np" does not exist
LINE 4:             VALUES ('HWM','2020-01-02'::date,np.float64(30.5...
                                                     ^

2025-01-09 02:12:07,322 - DEBUG - Entering download()
2025-01-09 02:12:07,322 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:07,322 - DEBUG -  Entering history()
2025-01-09 02:12:07,322 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HPQ', 1, 0])
2025-01-09 02:12:07,323 - DEBUG -   Entering history()
2025-01-09 02:12:07,323 - DEBUG - HPQ: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:07,323 - DEBUG -    Entering get()
2025-01-09 02:12:07,323 - DEBUG -     Entering _make_request()
2025-01-09 02:12:07,323 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HPQ
2025-01-09 02:12:07,323 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:07,324 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:07,324 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:07,324 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:07,324 - DEBUG - reusing cookie
2025-01-09 02:12:07,324 - DEBUG - reusing crumb
2025-01-09 02:12:07,324 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:07,324 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:07,544 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HPQ?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 988
2025-01-09 02:12:07,545 - DEBUG - response code=200
2025-01-09 02:12:07,546 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:07,546 - DEBUG -    Exiting get()
2025-01-09 02:12:07,549 - ERROR - 
1 Failed download:
2025-01-09 02:12:07,549 - ERROR - ['HPQ']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:07,549 - DEBUG - ['HPQ']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:07,551 - DEBUG - Exiting download()
2025-01-09 02:12:07,551 - WARNING - Ticker HPQ is missing 'Close' column. Skipping.
2025-01-09 02:12:07,552 - DEBUG - Entering download()
2025-01-09 02:12:07,552 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:07,552 - DEBUG -  Entering history()
2025-01-09 02:12:07,552 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HUBB', 1, 0])
2025-01-09 02:12:07,552 - DEBUG -   Entering history()
2025-01-09 02:12:07,553 - DEBUG - HUBB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:07,553 - DEBUG -    Entering get()
2025-01-09 02:12:07,553 - DEBUG -     Entering _make_request()
2025-01-09 02:12:07,553 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HUBB
2025-01-09 02:12:07,553 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:07,553 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:07,553 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:07,553 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:07,553 - DEBUG - reusing cookie
2025-01-09 02:12:07,553 - DEBUG - reusing crumb
2025-01-09 02:12:07,553 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:07,553 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:07,745 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HUBB?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1010
2025-01-09 02:12:07,746 - DEBUG - response code=200
2025-01-09 02:12:07,747 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:07,747 - DEBUG -    Exiting get()
2025-01-09 02:12:07,751 - ERROR - 
1 Failed download:
2025-01-09 02:12:07,751 - ERROR - ['HUBB']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:07,751 - DEBUG - ['HUBB']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:07,753 - DEBUG - Exiting download()
2025-01-09 02:12:07,854 - ERROR - Error writing data for HUBB to DB: schema "np" does not exist
LINE 4:             VALUES ('HUBB','2020-01-02'::date,np.float64(135...
                                                      ^

2025-01-09 02:12:07,854 - DEBUG - Entering download()
2025-01-09 02:12:07,854 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:07,855 - DEBUG -  Entering history()
2025-01-09 02:12:07,855 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HUM', 1, 0])
2025-01-09 02:12:07,855 - DEBUG -   Entering history()
2025-01-09 02:12:07,856 - DEBUG - HUM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:07,856 - DEBUG -    Entering get()
2025-01-09 02:12:07,856 - DEBUG -     Entering _make_request()
2025-01-09 02:12:07,856 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HUM
2025-01-09 02:12:07,856 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:07,856 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:07,856 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:07,856 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:07,856 - DEBUG - reusing cookie
2025-01-09 02:12:07,856 - DEBUG - reusing crumb
2025-01-09 02:12:07,856 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:07,856 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:08,039 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HUM?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1000
2025-01-09 02:12:08,040 - DEBUG - response code=200
2025-01-09 02:12:08,040 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:08,040 - DEBUG -    Exiting get()
2025-01-09 02:12:08,046 - ERROR - 
1 Failed download:
2025-01-09 02:12:08,046 - ERROR - ['HUM']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:08,046 - DEBUG - ['HUM']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:08,053 - DEBUG - Exiting download()
2025-01-09 02:12:08,174 - ERROR - Error writing data for HUM to DB: schema "np" does not exist
LINE 4:             VALUES ('HUM','2020-01-02'::date,np.float64(353....
                                                     ^

2025-01-09 02:12:08,175 - DEBUG - Entering download()
2025-01-09 02:12:08,175 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:08,175 - DEBUG -  Entering history()
2025-01-09 02:12:08,175 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HBAN', 1, 0])
2025-01-09 02:12:08,175 - DEBUG -   Entering history()
2025-01-09 02:12:08,176 - DEBUG - HBAN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:08,176 - DEBUG -    Entering get()
2025-01-09 02:12:08,176 - DEBUG -     Entering _make_request()
2025-01-09 02:12:08,176 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HBAN
2025-01-09 02:12:08,176 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:08,176 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:08,176 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:08,176 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:08,177 - DEBUG - reusing cookie
2025-01-09 02:12:08,177 - DEBUG - reusing crumb
2025-01-09 02:12:08,177 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:08,177 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:08,363 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HBAN?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1044
2025-01-09 02:12:08,364 - DEBUG - response code=200
2025-01-09 02:12:08,364 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:08,365 - DEBUG -    Exiting get()
2025-01-09 02:12:08,370 - ERROR - 
1 Failed download:
2025-01-09 02:12:08,371 - ERROR - ['HBAN']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:08,371 - DEBUG - ['HBAN']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:08,378 - DEBUG - Exiting download()
2025-01-09 02:12:08,500 - ERROR - Error writing data for HBAN to DB: schema "np" does not exist
LINE 4:             VALUES ('HBAN','2020-01-02'::date,np.float64(11....
                                                      ^

2025-01-09 02:12:08,501 - DEBUG - Entering download()
2025-01-09 02:12:08,501 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:08,501 - DEBUG -  Entering history()
2025-01-09 02:12:08,501 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HII', 1, 0])
2025-01-09 02:12:08,501 - DEBUG -   Entering history()
2025-01-09 02:12:08,502 - DEBUG - HII: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:08,502 - DEBUG -    Entering get()
2025-01-09 02:12:08,502 - DEBUG -     Entering _make_request()
2025-01-09 02:12:08,502 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HII
2025-01-09 02:12:08,502 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:08,502 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:08,503 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:08,503 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:08,503 - DEBUG - reusing cookie
2025-01-09 02:12:08,503 - DEBUG - reusing crumb
2025-01-09 02:12:08,503 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:08,503 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:08,668 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HII?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1044
2025-01-09 02:12:08,669 - DEBUG - response code=200
2025-01-09 02:12:08,670 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:08,670 - DEBUG -    Exiting get()
2025-01-09 02:12:08,675 - ERROR - 
1 Failed download:
2025-01-09 02:12:08,676 - ERROR - ['HII']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:08,676 - DEBUG - ['HII']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:08,682 - DEBUG - Exiting download()
2025-01-09 02:12:08,914 - ERROR - Error writing data for HII to DB: schema "np" does not exist
LINE 4:             VALUES ('HII','2020-01-02'::date,np.float64(225....
                                                     ^

2025-01-09 02:12:08,915 - DEBUG - Entering download()
2025-01-09 02:12:08,915 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:08,915 - DEBUG -  Entering history()
2025-01-09 02:12:08,915 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['IBM', 1, 0])
2025-01-09 02:12:08,915 - DEBUG -   Entering history()
2025-01-09 02:12:08,916 - DEBUG - IBM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:08,916 - DEBUG -    Entering get()
2025-01-09 02:12:08,916 - DEBUG -     Entering _make_request()
2025-01-09 02:12:08,916 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/IBM
2025-01-09 02:12:08,916 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:08,916 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:08,916 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:08,916 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:08,916 - DEBUG - reusing cookie
2025-01-09 02:12:08,916 - DEBUG - reusing crumb
2025-01-09 02:12:08,916 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:08,917 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:09,110 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/IBM?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1054
2025-01-09 02:12:09,111 - DEBUG - response code=200
2025-01-09 02:12:09,111 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:09,111 - DEBUG -    Exiting get()
2025-01-09 02:12:09,117 - ERROR - 
1 Failed download:
2025-01-09 02:12:09,117 - ERROR - ['IBM']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:09,117 - DEBUG - ['IBM']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:09,124 - DEBUG - Exiting download()
2025-01-09 02:12:09,233 - ERROR - Error writing data for IBM to DB: schema "np" does not exist
LINE 4:             VALUES ('IBM','2020-01-02'::date,np.float64(102....
                                                     ^

2025-01-09 02:12:09,234 - DEBUG - Entering download()
2025-01-09 02:12:09,234 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:09,234 - DEBUG -  Entering history()
2025-01-09 02:12:09,235 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['IEX', 1, 0])
2025-01-09 02:12:09,235 - DEBUG -   Entering history()
2025-01-09 02:12:09,235 - DEBUG - IEX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:09,235 - DEBUG -    Entering get()
2025-01-09 02:12:09,235 - DEBUG -     Entering _make_request()
2025-01-09 02:12:09,236 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/IEX
2025-01-09 02:12:09,236 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:09,236 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:09,236 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:09,236 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:09,236 - DEBUG - reusing cookie
2025-01-09 02:12:09,236 - DEBUG - reusing crumb
2025-01-09 02:12:09,236 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:09,236 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:09,408 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/IEX?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1010
2025-01-09 02:12:09,409 - DEBUG - response code=200
2025-01-09 02:12:09,409 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:09,409 - DEBUG -    Exiting get()
2025-01-09 02:12:09,415 - ERROR - 
1 Failed download:
2025-01-09 02:12:09,415 - ERROR - ['IEX']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:09,416 - DEBUG - ['IEX']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:09,423 - DEBUG - Exiting download()
2025-01-09 02:12:09,549 - ERROR - Error writing data for IEX to DB: schema "np" does not exist
LINE 4:             VALUES ('IEX','2020-01-02'::date,np.float64(163....
                                                     ^

2025-01-09 02:12:09,550 - DEBUG - Entering download()
2025-01-09 02:12:09,550 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:09,550 - DEBUG -  Entering history()
2025-01-09 02:12:09,550 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['IDXX', 1, 0])
2025-01-09 02:12:09,550 - DEBUG -   Entering history()
2025-01-09 02:12:09,551 - DEBUG - IDXX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:09,551 - DEBUG -    Entering get()
2025-01-09 02:12:09,551 - DEBUG -     Entering _make_request()
2025-01-09 02:12:09,551 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/IDXX
2025-01-09 02:12:09,551 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:09,551 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:09,551 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:09,551 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:09,551 - DEBUG - reusing cookie
2025-01-09 02:12:09,551 - DEBUG - reusing crumb
2025-01-09 02:12:09,552 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:09,552 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:09,689 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/IDXX?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1029
2025-01-09 02:12:09,690 - DEBUG - response code=200
2025-01-09 02:12:09,690 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:09,690 - DEBUG -    Exiting get()
2025-01-09 02:12:09,694 - ERROR - 
1 Failed download:
2025-01-09 02:12:09,695 - ERROR - ['IDXX']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:09,695 - DEBUG - ['IDXX']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:09,700 - DEBUG - Exiting download()
2025-01-09 02:12:09,818 - ERROR - Error writing data for IDXX to DB: schema "np" does not exist
LINE 4:             VALUES ('IDXX','2020-01-02'::date,np.float64(261...
                                                      ^

2025-01-09 02:12:09,818 - DEBUG - Entering download()
2025-01-09 02:12:09,818 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:09,818 - DEBUG -  Entering history()
2025-01-09 02:12:09,819 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ITW', 1, 0])
2025-01-09 02:12:09,819 - DEBUG -   Entering history()
2025-01-09 02:12:09,820 - DEBUG - ITW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:09,820 - DEBUG -    Entering get()
2025-01-09 02:12:09,820 - DEBUG -     Entering _make_request()
2025-01-09 02:12:09,820 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ITW
2025-01-09 02:12:09,820 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:09,820 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:09,820 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:09,820 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:09,820 - DEBUG - reusing cookie
2025-01-09 02:12:09,820 - DEBUG - reusing crumb
2025-01-09 02:12:09,820 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:09,820 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:09,997 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ITW?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1026
2025-01-09 02:12:09,998 - DEBUG - response code=200
2025-01-09 02:12:09,998 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:09,999 - DEBUG -    Exiting get()
2025-01-09 02:12:10,004 - ERROR - 
1 Failed download:
2025-01-09 02:12:10,004 - ERROR - ['ITW']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:10,005 - DEBUG - ['ITW']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:10,011 - DEBUG - Exiting download()
2025-01-09 02:12:10,133 - ERROR - Error writing data for ITW to DB: schema "np" does not exist
LINE 4:             VALUES ('ITW','2020-01-02'::date,np.float64(160....
                                                     ^

2025-01-09 02:12:10,133 - DEBUG - Entering download()
2025-01-09 02:12:10,133 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:10,133 - DEBUG -  Entering history()
2025-01-09 02:12:10,134 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['INCY', 1, 0])
2025-01-09 02:12:10,134 - DEBUG -   Entering history()
2025-01-09 02:12:10,135 - DEBUG - INCY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:10,135 - DEBUG -    Entering get()
2025-01-09 02:12:10,135 - DEBUG -     Entering _make_request()
2025-01-09 02:12:10,135 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/INCY
2025-01-09 02:12:10,135 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:10,135 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:10,135 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:10,135 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:10,135 - DEBUG - reusing cookie
2025-01-09 02:12:10,135 - DEBUG - reusing crumb
2025-01-09 02:12:10,135 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:10,135 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:10,271 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/INCY?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1016
2025-01-09 02:12:10,272 - DEBUG - response code=200
2025-01-09 02:12:10,272 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:10,273 - DEBUG -    Exiting get()
2025-01-09 02:12:10,278 - ERROR - 
1 Failed download:
2025-01-09 02:12:10,278 - ERROR - ['INCY']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:10,278 - DEBUG - ['INCY']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:10,285 - DEBUG - Exiting download()
2025-01-09 02:12:10,402 - ERROR - Error writing data for INCY to DB: schema "np" does not exist
LINE 4:             VALUES ('INCY','2020-01-02'::date,np.float64(86....
                                                      ^

2025-01-09 02:12:10,402 - DEBUG - Entering download()
2025-01-09 02:12:10,403 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:10,403 - DEBUG -  Entering history()
2025-01-09 02:12:10,403 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['IR', 1, 0])
2025-01-09 02:12:10,403 - DEBUG -   Entering history()
2025-01-09 02:12:10,404 - DEBUG - IR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:10,404 - DEBUG -    Entering get()
2025-01-09 02:12:10,404 - DEBUG -     Entering _make_request()
2025-01-09 02:12:10,404 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/IR
2025-01-09 02:12:10,404 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:10,404 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:10,404 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:10,404 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:10,404 - DEBUG - reusing cookie
2025-01-09 02:12:10,404 - DEBUG - reusing crumb
2025-01-09 02:12:10,404 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:10,404 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:10,552 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/IR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1014
2025-01-09 02:12:10,553 - DEBUG - response code=200
2025-01-09 02:12:10,553 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:10,554 - DEBUG -    Exiting get()
2025-01-09 02:12:10,558 - ERROR - 
1 Failed download:
2025-01-09 02:12:10,559 - ERROR - ['IR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:10,559 - DEBUG - ['IR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:10,565 - DEBUG - Exiting download()
2025-01-09 02:12:10,678 - ERROR - Error writing data for IR to DB: schema "np" does not exist
LINE 4:             VALUES ('IR','2020-01-02'::date,np.float64(36.72...
                                                    ^

2025-01-09 02:12:10,679 - DEBUG - Entering download()
2025-01-09 02:12:10,679 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:10,679 - DEBUG -  Entering history()
2025-01-09 02:12:10,680 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PODD', 1, 0])
2025-01-09 02:12:10,680 - DEBUG -   Entering history()
2025-01-09 02:12:10,680 - DEBUG - PODD: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:10,681 - DEBUG -    Entering get()
2025-01-09 02:12:10,681 - DEBUG -     Entering _make_request()
2025-01-09 02:12:10,681 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PODD
2025-01-09 02:12:10,681 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:10,681 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:10,681 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:10,681 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:10,681 - DEBUG - reusing cookie
2025-01-09 02:12:10,681 - DEBUG - reusing crumb
2025-01-09 02:12:10,681 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:10,681 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:10,822 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PODD?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1021
2025-01-09 02:12:10,822 - DEBUG - response code=200
2025-01-09 02:12:10,823 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:10,823 - DEBUG -    Exiting get()
2025-01-09 02:12:10,828 - ERROR - 
1 Failed download:
2025-01-09 02:12:10,829 - ERROR - ['PODD']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:10,829 - DEBUG - ['PODD']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:10,836 - DEBUG - Exiting download()
2025-01-09 02:12:10,836 - WARNING - Ticker PODD is missing 'Close' column. Skipping.
2025-01-09 02:12:10,836 - DEBUG - Entering download()
2025-01-09 02:12:10,836 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:10,837 - DEBUG -  Entering history()
2025-01-09 02:12:10,838 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['INTC', 1, 0])
2025-01-09 02:12:10,838 - DEBUG -   Entering history()
2025-01-09 02:12:10,840 - DEBUG - INTC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:10,840 - DEBUG -    Entering get()
2025-01-09 02:12:10,840 - DEBUG -     Entering _make_request()
2025-01-09 02:12:10,840 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/INTC
2025-01-09 02:12:10,840 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:10,840 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:10,841 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:10,841 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:10,841 - DEBUG - reusing cookie
2025-01-09 02:12:10,841 - DEBUG - reusing crumb
2025-01-09 02:12:10,841 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:10,841 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:11,000 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/INTC?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1012
2025-01-09 02:12:11,001 - DEBUG - response code=200
2025-01-09 02:12:11,001 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:11,001 - DEBUG -    Exiting get()
2025-01-09 02:12:11,007 - ERROR - 
1 Failed download:
2025-01-09 02:12:11,008 - ERROR - ['INTC']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:11,008 - DEBUG - ['INTC']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:11,015 - DEBUG - Exiting download()
2025-01-09 02:12:11,128 - ERROR - Error writing data for INTC to DB: schema "np" does not exist
LINE 4:             VALUES ('INTC','2020-01-02'::date,np.float64(53....
                                                      ^

2025-01-09 02:12:11,128 - DEBUG - Entering download()
2025-01-09 02:12:11,128 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:11,129 - DEBUG -  Entering history()
2025-01-09 02:12:11,129 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ICE', 1, 0])
2025-01-09 02:12:11,129 - DEBUG -   Entering history()
2025-01-09 02:12:11,130 - DEBUG - ICE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:11,130 - DEBUG -    Entering get()
2025-01-09 02:12:11,130 - DEBUG -     Entering _make_request()
2025-01-09 02:12:11,130 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ICE
2025-01-09 02:12:11,130 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:11,130 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:11,130 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:11,130 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:11,130 - DEBUG - reusing cookie
2025-01-09 02:12:11,130 - DEBUG - reusing crumb
2025-01-09 02:12:11,130 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:11,130 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:11,288 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ICE?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1040
2025-01-09 02:12:11,289 - DEBUG - response code=200
2025-01-09 02:12:11,289 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:11,290 - DEBUG -    Exiting get()
2025-01-09 02:12:11,295 - ERROR - 
1 Failed download:
2025-01-09 02:12:11,296 - ERROR - ['ICE']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:11,296 - DEBUG - ['ICE']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:11,303 - DEBUG - Exiting download()
2025-01-09 02:12:11,303 - WARNING - Ticker ICE is missing 'Close' column. Skipping.
2025-01-09 02:12:11,304 - DEBUG - Entering download()
2025-01-09 02:12:11,304 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:11,304 - DEBUG -  Entering history()
2025-01-09 02:12:11,305 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['IFF', 1, 0])
2025-01-09 02:12:11,306 - DEBUG -   Entering history()
2025-01-09 02:12:11,307 - DEBUG - IFF: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:11,307 - DEBUG -    Entering get()
2025-01-09 02:12:11,307 - DEBUG -     Entering _make_request()
2025-01-09 02:12:11,307 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/IFF
2025-01-09 02:12:11,308 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:11,308 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:11,308 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:11,308 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:11,308 - DEBUG - reusing cookie
2025-01-09 02:12:11,308 - DEBUG - reusing crumb
2025-01-09 02:12:11,308 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:11,308 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:11,497 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/IFF?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1045
2025-01-09 02:12:11,498 - DEBUG - response code=200
2025-01-09 02:12:11,499 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:11,499 - DEBUG -    Exiting get()
2025-01-09 02:12:11,505 - ERROR - 
1 Failed download:
2025-01-09 02:12:11,505 - ERROR - ['IFF']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:11,505 - DEBUG - ['IFF']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:11,513 - DEBUG - Exiting download()
2025-01-09 02:12:11,623 - ERROR - Error writing data for IFF to DB: schema "np" does not exist
LINE 4:             VALUES ('IFF','2020-01-02'::date,np.float64(112....
                                                     ^

2025-01-09 02:12:11,624 - DEBUG - Entering download()
2025-01-09 02:12:11,624 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:11,624 - DEBUG -  Entering history()
2025-01-09 02:12:11,624 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['IP', 1, 0])
2025-01-09 02:12:11,624 - DEBUG -   Entering history()
2025-01-09 02:12:11,625 - DEBUG - IP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:11,625 - DEBUG -    Entering get()
2025-01-09 02:12:11,625 - DEBUG -     Entering _make_request()
2025-01-09 02:12:11,625 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/IP
2025-01-09 02:12:11,625 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:11,625 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:11,625 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:11,625 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:11,625 - DEBUG - reusing cookie
2025-01-09 02:12:11,625 - DEBUG - reusing crumb
2025-01-09 02:12:11,625 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:11,626 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:11,842 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/IP?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1028
2025-01-09 02:12:11,843 - DEBUG - response code=200
2025-01-09 02:12:11,844 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:11,844 - DEBUG -    Exiting get()
2025-01-09 02:12:11,850 - ERROR - 
1 Failed download:
2025-01-09 02:12:11,850 - ERROR - ['IP']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:11,851 - DEBUG - ['IP']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:11,858 - DEBUG - Exiting download()
2025-01-09 02:12:11,858 - WARNING - Ticker IP is missing 'Close' column. Skipping.
2025-01-09 02:12:11,859 - DEBUG - Entering download()
2025-01-09 02:12:11,859 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:11,859 - DEBUG -  Entering history()
2025-01-09 02:12:11,860 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['IPG', 1, 0])
2025-01-09 02:12:11,860 - DEBUG -   Entering history()
2025-01-09 02:12:11,862 - DEBUG - IPG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:11,862 - DEBUG -    Entering get()
2025-01-09 02:12:11,862 - DEBUG -     Entering _make_request()
2025-01-09 02:12:11,862 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/IPG
2025-01-09 02:12:11,863 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:11,863 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:11,863 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:11,863 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:11,863 - DEBUG - reusing cookie
2025-01-09 02:12:11,863 - DEBUG - reusing crumb
2025-01-09 02:12:11,863 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:11,863 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:12,047 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/IPG?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1043
2025-01-09 02:12:12,048 - DEBUG - response code=200
2025-01-09 02:12:12,049 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:12,049 - DEBUG -    Exiting get()
2025-01-09 02:12:12,055 - ERROR - 
1 Failed download:
2025-01-09 02:12:12,055 - ERROR - ['IPG']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:12,055 - DEBUG - ['IPG']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:12,063 - DEBUG - Exiting download()
2025-01-09 02:12:12,179 - ERROR - Error writing data for IPG to DB: schema "np" does not exist
LINE 4:             VALUES ('IPG','2020-01-02'::date,np.float64(19.0...
                                                     ^

2025-01-09 02:12:12,180 - DEBUG - Entering download()
2025-01-09 02:12:12,180 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:12,180 - DEBUG -  Entering history()
2025-01-09 02:12:12,180 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['INTU', 1, 0])
2025-01-09 02:12:12,180 - DEBUG -   Entering history()
2025-01-09 02:12:12,181 - DEBUG - INTU: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:12,181 - DEBUG -    Entering get()
2025-01-09 02:12:12,181 - DEBUG -     Entering _make_request()
2025-01-09 02:12:12,181 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/INTU
2025-01-09 02:12:12,182 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:12,182 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:12,182 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:12,182 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:12,182 - DEBUG - reusing cookie
2025-01-09 02:12:12,182 - DEBUG - reusing crumb
2025-01-09 02:12:12,182 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:12,182 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:12,323 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/INTU?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1007
2025-01-09 02:12:12,324 - DEBUG - response code=200
2025-01-09 02:12:12,324 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:12,324 - DEBUG -    Exiting get()
2025-01-09 02:12:12,327 - ERROR - 
1 Failed download:
2025-01-09 02:12:12,327 - ERROR - ['INTU']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:12,328 - DEBUG - ['INTU']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:12,332 - DEBUG - Exiting download()
2025-01-09 02:12:12,446 - ERROR - Error writing data for INTU to DB: schema "np" does not exist
LINE 4:             VALUES ('INTU','2020-01-02'::date,np.float64(252...
                                                      ^

2025-01-09 02:12:12,446 - DEBUG - Entering download()
2025-01-09 02:12:12,446 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:12,446 - DEBUG -  Entering history()
2025-01-09 02:12:12,447 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ISRG', 1, 0])
2025-01-09 02:12:12,447 - DEBUG -   Entering history()
2025-01-09 02:12:12,448 - DEBUG - ISRG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:12,448 - DEBUG -    Entering get()
2025-01-09 02:12:12,448 - DEBUG -     Entering _make_request()
2025-01-09 02:12:12,448 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ISRG
2025-01-09 02:12:12,448 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:12,448 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:12,448 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:12,448 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:12,448 - DEBUG - reusing cookie
2025-01-09 02:12:12,448 - DEBUG - reusing crumb
2025-01-09 02:12:12,448 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:12,448 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:12,572 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ISRG?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1032
2025-01-09 02:12:12,572 - DEBUG - response code=200
2025-01-09 02:12:12,572 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:12,573 - DEBUG -    Exiting get()
2025-01-09 02:12:12,576 - ERROR - 
1 Failed download:
2025-01-09 02:12:12,576 - ERROR - ['ISRG']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:12,576 - DEBUG - ['ISRG']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:12,581 - DEBUG - Exiting download()
2025-01-09 02:12:12,581 - WARNING - Ticker ISRG is missing 'Close' column. Skipping.
2025-01-09 02:12:12,581 - DEBUG - Entering download()
2025-01-09 02:12:12,581 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:12,581 - DEBUG -  Entering history()
2025-01-09 02:12:12,582 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['IVZ', 1, 0])
2025-01-09 02:12:12,582 - DEBUG -   Entering history()
2025-01-09 02:12:12,584 - DEBUG - IVZ: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:12,584 - DEBUG -    Entering get()
2025-01-09 02:12:12,584 - DEBUG -     Entering _make_request()
2025-01-09 02:12:12,584 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/IVZ
2025-01-09 02:12:12,584 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:12,584 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:12,585 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:12,585 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:12,585 - DEBUG - reusing cookie
2025-01-09 02:12:12,585 - DEBUG - reusing crumb
2025-01-09 02:12:12,585 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:12,585 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:12,762 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/IVZ?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 996
2025-01-09 02:12:12,763 - DEBUG - response code=200
2025-01-09 02:12:12,764 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:12,764 - DEBUG -    Exiting get()
2025-01-09 02:12:12,770 - ERROR - 
1 Failed download:
2025-01-09 02:12:12,770 - ERROR - ['IVZ']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:12,770 - DEBUG - ['IVZ']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:12,778 - DEBUG - Exiting download()
2025-01-09 02:12:12,889 - ERROR - Error writing data for IVZ to DB: schema "np" does not exist
LINE 4:             VALUES ('IVZ','2020-01-02'::date,np.float64(14.2...
                                                     ^

2025-01-09 02:12:12,889 - DEBUG - Entering download()
2025-01-09 02:12:12,890 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:12,890 - DEBUG -  Entering history()
2025-01-09 02:12:12,890 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['INVH', 1, 0])
2025-01-09 02:12:12,890 - DEBUG -   Entering history()
2025-01-09 02:12:12,891 - DEBUG - INVH: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:12,891 - DEBUG -    Entering get()
2025-01-09 02:12:12,891 - DEBUG -     Entering _make_request()
2025-01-09 02:12:12,891 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/INVH
2025-01-09 02:12:12,891 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:12,891 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:12,891 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:12,891 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:12,891 - DEBUG - reusing cookie
2025-01-09 02:12:12,892 - DEBUG - reusing crumb
2025-01-09 02:12:12,892 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:12,892 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:13,039 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/INVH?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1016
2025-01-09 02:12:13,040 - DEBUG - response code=200
2025-01-09 02:12:13,040 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:13,041 - DEBUG -    Exiting get()
2025-01-09 02:12:13,047 - ERROR - 
1 Failed download:
2025-01-09 02:12:13,047 - ERROR - ['INVH']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:13,047 - DEBUG - ['INVH']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:13,054 - DEBUG - Exiting download()
2025-01-09 02:12:13,168 - ERROR - Error writing data for INVH to DB: schema "np" does not exist
LINE 4:             VALUES ('INVH','2020-01-02'::date,np.float64(26....
                                                      ^

2025-01-09 02:12:13,168 - DEBUG - Entering download()
2025-01-09 02:12:13,168 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:13,168 - DEBUG -  Entering history()
2025-01-09 02:12:13,169 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['IQV', 1, 0])
2025-01-09 02:12:13,169 - DEBUG -   Entering history()
2025-01-09 02:12:13,169 - DEBUG - IQV: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:13,170 - DEBUG -    Entering get()
2025-01-09 02:12:13,170 - DEBUG -     Entering _make_request()
2025-01-09 02:12:13,170 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/IQV
2025-01-09 02:12:13,170 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:13,170 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:13,170 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:13,170 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:13,170 - DEBUG - reusing cookie
2025-01-09 02:12:13,170 - DEBUG - reusing crumb
2025-01-09 02:12:13,170 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:13,170 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:13,312 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/IQV?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1020
2025-01-09 02:12:13,313 - DEBUG - response code=200
2025-01-09 02:12:13,314 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:13,314 - DEBUG -    Exiting get()
2025-01-09 02:12:13,320 - ERROR - 
1 Failed download:
2025-01-09 02:12:13,320 - ERROR - ['IQV']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:13,320 - DEBUG - ['IQV']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:13,328 - DEBUG - Exiting download()
2025-01-09 02:12:13,445 - ERROR - Error writing data for IQV to DB: schema "np" does not exist
LINE 4:             VALUES ('IQV','2020-01-02'::date,np.float64(155....
                                                     ^

2025-01-09 02:12:13,445 - DEBUG - Entering download()
2025-01-09 02:12:13,445 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:13,445 - DEBUG -  Entering history()
2025-01-09 02:12:13,446 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['IRM', 1, 0])
2025-01-09 02:12:13,446 - DEBUG -   Entering history()
2025-01-09 02:12:13,446 - DEBUG - IRM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:13,447 - DEBUG -    Entering get()
2025-01-09 02:12:13,447 - DEBUG -     Entering _make_request()
2025-01-09 02:12:13,447 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/IRM
2025-01-09 02:12:13,447 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:13,447 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:13,447 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:13,447 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:13,447 - DEBUG - reusing cookie
2025-01-09 02:12:13,447 - DEBUG - reusing crumb
2025-01-09 02:12:13,447 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:13,447 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:13,599 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/IRM?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1033
2025-01-09 02:12:13,600 - DEBUG - response code=200
2025-01-09 02:12:13,601 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:13,601 - DEBUG -    Exiting get()
2025-01-09 02:12:13,607 - ERROR - 
1 Failed download:
2025-01-09 02:12:13,607 - ERROR - ['IRM']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:13,607 - DEBUG - ['IRM']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:13,615 - DEBUG - Exiting download()
2025-01-09 02:12:13,728 - ERROR - Error writing data for IRM to DB: schema "np" does not exist
LINE 4:             VALUES ('IRM','2020-01-02'::date,np.float64(24.5...
                                                     ^

2025-01-09 02:12:13,728 - DEBUG - Entering download()
2025-01-09 02:12:13,728 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:13,728 - DEBUG -  Entering history()
2025-01-09 02:12:13,729 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['JBHT', 1, 0])
2025-01-09 02:12:13,729 - DEBUG -   Entering history()
2025-01-09 02:12:13,729 - DEBUG - JBHT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:13,730 - DEBUG -    Entering get()
2025-01-09 02:12:13,730 - DEBUG -     Entering _make_request()
2025-01-09 02:12:13,730 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/JBHT
2025-01-09 02:12:13,730 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:13,730 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:13,730 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:13,730 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:13,730 - DEBUG - reusing cookie
2025-01-09 02:12:13,730 - DEBUG - reusing crumb
2025-01-09 02:12:13,730 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:13,730 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:13,912 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/JBHT?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1048
2025-01-09 02:12:13,913 - DEBUG - response code=200
2025-01-09 02:12:13,913 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:13,914 - DEBUG -    Exiting get()
2025-01-09 02:12:13,920 - ERROR - 
1 Failed download:
2025-01-09 02:12:13,920 - ERROR - ['JBHT']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:13,920 - DEBUG - ['JBHT']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:13,928 - DEBUG - Exiting download()
2025-01-09 02:12:14,073 - ERROR - Error writing data for JBHT to DB: schema "np" does not exist
LINE 4:             VALUES ('JBHT','2020-01-02'::date,np.float64(112...
                                                      ^

2025-01-09 02:12:14,073 - DEBUG - Entering download()
2025-01-09 02:12:14,073 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:14,074 - DEBUG -  Entering history()
2025-01-09 02:12:14,074 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['JBL', 1, 0])
2025-01-09 02:12:14,074 - DEBUG -   Entering history()
2025-01-09 02:12:14,075 - DEBUG - JBL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:14,075 - DEBUG -    Entering get()
2025-01-09 02:12:14,075 - DEBUG -     Entering _make_request()
2025-01-09 02:12:14,075 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/JBL
2025-01-09 02:12:14,075 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:14,075 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:14,075 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:14,075 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:14,075 - DEBUG - reusing cookie
2025-01-09 02:12:14,075 - DEBUG - reusing crumb
2025-01-09 02:12:14,075 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:14,075 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:14,232 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/JBL?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 997
2025-01-09 02:12:14,233 - DEBUG - response code=200
2025-01-09 02:12:14,233 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:14,233 - DEBUG -    Exiting get()
2025-01-09 02:12:14,239 - ERROR - 
1 Failed download:
2025-01-09 02:12:14,239 - ERROR - ['JBL']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:14,239 - DEBUG - ['JBL']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:14,246 - DEBUG - Exiting download()
2025-01-09 02:12:14,246 - WARNING - Ticker JBL is missing 'Close' column. Skipping.
2025-01-09 02:12:14,247 - DEBUG - Entering download()
2025-01-09 02:12:14,247 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:14,247 - DEBUG -  Entering history()
2025-01-09 02:12:14,248 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['JKHY', 1, 0])
2025-01-09 02:12:14,248 - DEBUG -   Entering history()
2025-01-09 02:12:14,250 - DEBUG - JKHY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:14,251 - DEBUG -    Entering get()
2025-01-09 02:12:14,251 - DEBUG -     Entering _make_request()
2025-01-09 02:12:14,251 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/JKHY
2025-01-09 02:12:14,251 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:14,251 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:14,252 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:14,252 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:14,252 - DEBUG - reusing cookie
2025-01-09 02:12:14,252 - DEBUG - reusing crumb
2025-01-09 02:12:14,252 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:14,252 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:14,418 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/JKHY?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1041
2025-01-09 02:12:14,419 - DEBUG - response code=200
2025-01-09 02:12:14,420 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:14,420 - DEBUG -    Exiting get()
2025-01-09 02:12:14,426 - ERROR - 
1 Failed download:
2025-01-09 02:12:14,426 - ERROR - ['JKHY']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:14,426 - DEBUG - ['JKHY']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:14,434 - DEBUG - Exiting download()
2025-01-09 02:12:14,434 - WARNING - Ticker JKHY is missing 'Close' column. Skipping.
2025-01-09 02:12:14,434 - DEBUG - Entering download()
2025-01-09 02:12:14,435 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:14,435 - DEBUG -  Entering history()
2025-01-09 02:12:14,436 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['J', 1, 0])
2025-01-09 02:12:14,436 - DEBUG -   Entering history()
2025-01-09 02:12:14,438 - DEBUG - J: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:14,439 - DEBUG -    Entering get()
2025-01-09 02:12:14,439 - DEBUG -     Entering _make_request()
2025-01-09 02:12:14,439 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/J
2025-01-09 02:12:14,439 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:14,439 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:14,439 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:14,440 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:14,440 - DEBUG - reusing cookie
2025-01-09 02:12:14,440 - DEBUG - reusing crumb
2025-01-09 02:12:14,440 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:14,440 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:14,576 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/J?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1018
2025-01-09 02:12:14,577 - DEBUG - response code=200
2025-01-09 02:12:14,578 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:14,578 - DEBUG -    Exiting get()
2025-01-09 02:12:14,584 - ERROR - 
1 Failed download:
2025-01-09 02:12:14,584 - ERROR - ['J']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:14,584 - DEBUG - ['J']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:14,592 - DEBUG - Exiting download()
2025-01-09 02:12:14,704 - ERROR - Error writing data for J to DB: schema "np" does not exist
LINE 4:             VALUES ('J','2020-01-02'::date,np.float64(71.989...
                                                   ^

2025-01-09 02:12:14,704 - DEBUG - Entering download()
2025-01-09 02:12:14,704 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:14,704 - DEBUG -  Entering history()
2025-01-09 02:12:14,704 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['JNJ', 1, 0])
2025-01-09 02:12:14,705 - DEBUG -   Entering history()
2025-01-09 02:12:14,705 - DEBUG - JNJ: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:14,705 - DEBUG -    Entering get()
2025-01-09 02:12:14,705 - DEBUG -     Entering _make_request()
2025-01-09 02:12:14,706 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/JNJ
2025-01-09 02:12:14,706 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:14,706 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:14,706 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:14,706 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:14,706 - DEBUG - reusing cookie
2025-01-09 02:12:14,706 - DEBUG - reusing crumb
2025-01-09 02:12:14,706 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:14,706 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:14,926 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/JNJ?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1014
2025-01-09 02:12:14,927 - DEBUG - response code=200
2025-01-09 02:12:14,928 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:14,928 - DEBUG -    Exiting get()
2025-01-09 02:12:14,934 - ERROR - 
1 Failed download:
2025-01-09 02:12:14,934 - ERROR - ['JNJ']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:14,934 - DEBUG - ['JNJ']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:14,942 - DEBUG - Exiting download()
2025-01-09 02:12:15,063 - ERROR - Error writing data for JNJ to DB: schema "np" does not exist
LINE 4:             VALUES ('JNJ','2020-01-02'::date,np.float64(126....
                                                     ^

2025-01-09 02:12:15,063 - DEBUG - Entering download()
2025-01-09 02:12:15,063 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:15,064 - DEBUG -  Entering history()
2025-01-09 02:12:15,064 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['JCI', 1, 0])
2025-01-09 02:12:15,064 - DEBUG -   Entering history()
2025-01-09 02:12:15,065 - DEBUG - JCI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:15,065 - DEBUG -    Entering get()
2025-01-09 02:12:15,065 - DEBUG -     Entering _make_request()
2025-01-09 02:12:15,065 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/JCI
2025-01-09 02:12:15,065 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:15,065 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:15,065 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:15,065 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:15,065 - DEBUG - reusing cookie
2025-01-09 02:12:15,065 - DEBUG - reusing crumb
2025-01-09 02:12:15,065 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:15,065 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:15,254 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/JCI?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1038
2025-01-09 02:12:15,255 - DEBUG - response code=200
2025-01-09 02:12:15,255 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:15,255 - DEBUG -    Exiting get()
2025-01-09 02:12:15,261 - ERROR - 
1 Failed download:
2025-01-09 02:12:15,261 - ERROR - ['JCI']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:15,262 - DEBUG - ['JCI']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:15,269 - DEBUG - Exiting download()
2025-01-09 02:12:15,378 - ERROR - Error writing data for JCI to DB: schema "np" does not exist
LINE 4:             VALUES ('JCI','2020-01-02'::date,np.float64(36.6...
                                                     ^

2025-01-09 02:12:15,378 - DEBUG - Entering download()
2025-01-09 02:12:15,378 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:15,379 - DEBUG -  Entering history()
2025-01-09 02:12:15,379 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['JPM', 1, 0])
2025-01-09 02:12:15,379 - DEBUG -   Entering history()
2025-01-09 02:12:15,380 - DEBUG - JPM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:15,380 - DEBUG -    Entering get()
2025-01-09 02:12:15,380 - DEBUG -     Entering _make_request()
2025-01-09 02:12:15,380 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/JPM
2025-01-09 02:12:15,380 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:15,380 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:15,380 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:15,380 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:15,380 - DEBUG - reusing cookie
2025-01-09 02:12:15,380 - DEBUG - reusing crumb
2025-01-09 02:12:15,380 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:15,380 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:15,575 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/JPM?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1017
2025-01-09 02:12:15,576 - DEBUG - response code=200
2025-01-09 02:12:15,577 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:15,577 - DEBUG -    Exiting get()
2025-01-09 02:12:15,583 - ERROR - 
1 Failed download:
2025-01-09 02:12:15,583 - ERROR - ['JPM']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:15,583 - DEBUG - ['JPM']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:15,591 - DEBUG - Exiting download()
2025-01-09 02:12:15,591 - WARNING - Ticker JPM is missing 'Close' column. Skipping.
2025-01-09 02:12:15,591 - DEBUG - Entering download()
2025-01-09 02:12:15,592 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:15,592 - DEBUG -  Entering history()
2025-01-09 02:12:15,593 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['JNPR', 1, 0])
2025-01-09 02:12:15,593 - DEBUG -   Entering history()
2025-01-09 02:12:15,595 - DEBUG - JNPR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:15,595 - DEBUG -    Entering get()
2025-01-09 02:12:15,595 - DEBUG -     Entering _make_request()
2025-01-09 02:12:15,595 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/JNPR
2025-01-09 02:12:15,595 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:15,596 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:15,596 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:15,596 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:15,596 - DEBUG - reusing cookie
2025-01-09 02:12:15,596 - DEBUG - reusing crumb
2025-01-09 02:12:15,596 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:15,596 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:15,748 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/JNPR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1018
2025-01-09 02:12:15,749 - DEBUG - response code=200
2025-01-09 02:12:15,749 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:15,749 - DEBUG -    Exiting get()
2025-01-09 02:12:15,755 - ERROR - 
1 Failed download:
2025-01-09 02:12:15,755 - ERROR - ['JNPR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:15,756 - DEBUG - ['JNPR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:15,763 - DEBUG - Exiting download()
2025-01-09 02:12:15,763 - WARNING - Ticker JNPR is missing 'Close' column. Skipping.
2025-01-09 02:12:15,764 - DEBUG - Entering download()
2025-01-09 02:12:15,764 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:15,764 - DEBUG -  Entering history()
2025-01-09 02:12:15,765 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['K', 1, 0])
2025-01-09 02:12:15,765 - DEBUG -   Entering history()
2025-01-09 02:12:15,767 - DEBUG - K: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:15,767 - DEBUG -    Entering get()
2025-01-09 02:12:15,767 - DEBUG -     Entering _make_request()
2025-01-09 02:12:15,767 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/K
2025-01-09 02:12:15,767 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:15,768 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:15,768 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:15,768 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:15,768 - DEBUG - reusing cookie
2025-01-09 02:12:15,768 - DEBUG - reusing crumb
2025-01-09 02:12:15,768 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:15,768 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:15,970 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/K?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 989
2025-01-09 02:12:15,971 - DEBUG - response code=200
2025-01-09 02:12:15,972 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:15,972 - DEBUG -    Exiting get()
2025-01-09 02:12:15,978 - ERROR - 
1 Failed download:
2025-01-09 02:12:15,978 - ERROR - ['K']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:15,978 - DEBUG - ['K']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:15,985 - DEBUG - Exiting download()
2025-01-09 02:12:16,094 - ERROR - Error writing data for K to DB: schema "np" does not exist
LINE 4:             VALUES ('K','2020-01-02'::date,np.float64(54.333...
                                                   ^

2025-01-09 02:12:16,095 - DEBUG - Entering download()
2025-01-09 02:12:16,095 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:16,095 - DEBUG -  Entering history()
2025-01-09 02:12:16,095 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['KVUE', 1, 0])
2025-01-09 02:12:16,095 - DEBUG -   Entering history()
2025-01-09 02:12:16,096 - DEBUG - KVUE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:16,096 - DEBUG -    Entering get()
2025-01-09 02:12:16,096 - DEBUG -     Entering _make_request()
2025-01-09 02:12:16,096 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/KVUE
2025-01-09 02:12:16,096 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:16,096 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:16,096 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:16,096 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:16,096 - DEBUG - reusing cookie
2025-01-09 02:12:16,097 - DEBUG - reusing crumb
2025-01-09 02:12:16,097 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:16,097 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:16,227 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/KVUE?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:12:16,228 - DEBUG - response code=400
2025-01-09 02:12:16,229 - DEBUG - toggling cookie strategy basic -> csrf
2025-01-09 02:12:16,229 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:16,229 - DEBUG - cookie_mode = 'csrf'
2025-01-09 02:12:16,229 - DEBUG -       Entering _get_crumb_csrf()
2025-01-09 02:12:16,230 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['csrf', 1, 0])
2025-01-09 02:12:16,410 - DEBUG - https://guce.yahoo.com:443 "GET /consent HTTP/1.1" 302 0
2025-01-09 02:12:16,773 - DEBUG - https://www.yahoo.com:443 "GET /?guccounter=1 HTTP/1.1" 200 None
2025-01-09 02:12:17,235 - DEBUG - Failed to find "csrfToken" in response
2025-01-09 02:12:17,235 - DEBUG -       Exiting _get_crumb_csrf()
2025-01-09 02:12:17,235 - DEBUG - toggling cookie strategy csrf -> basic
2025-01-09 02:12:17,235 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:17,236 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['basic', 1, 0])
2025-01-09 02:12:17,236 - DEBUG - loaded persistent cookie
2025-01-09 02:12:17,236 - DEBUG - reusing cookie
2025-01-09 02:12:17,362 - DEBUG - https://query1.finance.yahoo.com:443 "GET /v1/test/getcrumb HTTP/1.1" 200 11
2025-01-09 02:12:17,362 - DEBUG - crumb = 'mbrlfmeSllh'
2025-01-09 02:12:17,363 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:17,363 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:17,509 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/KVUE?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:12:17,510 - DEBUG - response code=400
2025-01-09 02:12:17,510 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:17,510 - DEBUG -    Exiting get()
2025-01-09 02:12:17,516 - ERROR - 
1 Failed download:
2025-01-09 02:12:17,517 - ERROR - ['KVUE']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn\'t exist for startDate = 1577854800, endDate = 1577941200")')
2025-01-09 02:12:17,517 - DEBUG - ['KVUE']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn't exist for startDate = 1577854800, endDate = 1577941200")

2025-01-09 02:12:17,524 - DEBUG - Exiting download()
2025-01-09 02:12:17,730 - ERROR - Error writing data for KVUE to DB: schema "np" does not exist
LINE 4:             VALUES ('KVUE','2023-05-04'::date,np.float64(24....
                                                      ^

2025-01-09 02:12:17,730 - DEBUG - Entering download()
2025-01-09 02:12:17,730 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:17,730 - DEBUG -  Entering history()
2025-01-09 02:12:17,731 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['KDP', 1, 0])
2025-01-09 02:12:17,731 - DEBUG -   Entering history()
2025-01-09 02:12:17,732 - DEBUG - KDP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:17,732 - DEBUG -    Entering get()
2025-01-09 02:12:17,732 - DEBUG -     Entering _make_request()
2025-01-09 02:12:17,732 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/KDP
2025-01-09 02:12:17,732 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:17,732 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:17,732 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:17,732 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:17,732 - DEBUG - reusing cookie
2025-01-09 02:12:17,732 - DEBUG - reusing crumb
2025-01-09 02:12:17,732 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:17,732 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:17,878 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/KDP?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1047
2025-01-09 02:12:17,878 - DEBUG - response code=200
2025-01-09 02:12:17,879 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:17,879 - DEBUG -    Exiting get()
2025-01-09 02:12:17,883 - ERROR - 
1 Failed download:
2025-01-09 02:12:17,883 - ERROR - ['KDP']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:17,883 - DEBUG - ['KDP']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:17,888 - DEBUG - Exiting download()
2025-01-09 02:12:18,142 - ERROR - Error writing data for KDP to DB: schema "np" does not exist
LINE 4:             VALUES ('KDP','2020-01-02'::date,np.float64(25.7...
                                                     ^

2025-01-09 02:12:18,142 - DEBUG - Entering download()
2025-01-09 02:12:18,142 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:18,142 - DEBUG -  Entering history()
2025-01-09 02:12:18,143 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['KEY', 1, 0])
2025-01-09 02:12:18,143 - DEBUG -   Entering history()
2025-01-09 02:12:18,143 - DEBUG - KEY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:18,143 - DEBUG -    Entering get()
2025-01-09 02:12:18,144 - DEBUG -     Entering _make_request()
2025-01-09 02:12:18,144 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/KEY
2025-01-09 02:12:18,144 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:18,144 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:18,144 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:18,144 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:18,144 - DEBUG - reusing cookie
2025-01-09 02:12:18,144 - DEBUG - reusing crumb
2025-01-09 02:12:18,144 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:18,144 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:18,362 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/KEY?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 986
2025-01-09 02:12:18,363 - DEBUG - response code=200
2025-01-09 02:12:18,363 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:18,363 - DEBUG -    Exiting get()
2025-01-09 02:12:18,369 - ERROR - 
1 Failed download:
2025-01-09 02:12:18,370 - ERROR - ['KEY']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:18,370 - DEBUG - ['KEY']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:18,377 - DEBUG - Exiting download()
2025-01-09 02:12:18,503 - ERROR - Error writing data for KEY to DB: schema "np" does not exist
LINE 4:             VALUES ('KEY','2020-01-02'::date,np.float64(15.9...
                                                     ^

2025-01-09 02:12:18,503 - DEBUG - Entering download()
2025-01-09 02:12:18,503 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:18,503 - DEBUG -  Entering history()
2025-01-09 02:12:18,504 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['KEYS', 1, 0])
2025-01-09 02:12:18,504 - DEBUG -   Entering history()
2025-01-09 02:12:18,504 - DEBUG - KEYS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:18,505 - DEBUG -    Entering get()
2025-01-09 02:12:18,505 - DEBUG -     Entering _make_request()
2025-01-09 02:12:18,505 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/KEYS
2025-01-09 02:12:18,505 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:18,505 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:18,505 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:18,505 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:18,505 - DEBUG - reusing cookie
2025-01-09 02:12:18,505 - DEBUG - reusing crumb
2025-01-09 02:12:18,505 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:18,505 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:18,656 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/KEYS?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1033
2025-01-09 02:12:18,656 - DEBUG - response code=200
2025-01-09 02:12:18,656 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:18,657 - DEBUG -    Exiting get()
2025-01-09 02:12:18,660 - ERROR - 
1 Failed download:
2025-01-09 02:12:18,660 - ERROR - ['KEYS']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:18,660 - DEBUG - ['KEYS']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:18,664 - DEBUG - Exiting download()
2025-01-09 02:12:18,905 - ERROR - Error writing data for KEYS to DB: schema "np" does not exist
LINE 4:             VALUES ('KEYS','2020-01-02'::date,np.float64(103...
                                                      ^

2025-01-09 02:12:18,906 - DEBUG - Entering download()
2025-01-09 02:12:18,906 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:18,906 - DEBUG -  Entering history()
2025-01-09 02:12:18,906 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['KMB', 1, 0])
2025-01-09 02:12:18,906 - DEBUG -   Entering history()
2025-01-09 02:12:18,907 - DEBUG - KMB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:18,907 - DEBUG -    Entering get()
2025-01-09 02:12:18,907 - DEBUG -     Entering _make_request()
2025-01-09 02:12:18,907 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/KMB
2025-01-09 02:12:18,907 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:18,907 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:18,907 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:18,907 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:18,907 - DEBUG - reusing cookie
2025-01-09 02:12:18,907 - DEBUG - reusing crumb
2025-01-09 02:12:18,907 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:18,907 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:19,094 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/KMB?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1031
2025-01-09 02:12:19,095 - DEBUG - response code=200
2025-01-09 02:12:19,095 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:19,095 - DEBUG -    Exiting get()
2025-01-09 02:12:19,101 - ERROR - 
1 Failed download:
2025-01-09 02:12:19,101 - ERROR - ['KMB']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:19,102 - DEBUG - ['KMB']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:19,108 - DEBUG - Exiting download()
2025-01-09 02:12:19,217 - ERROR - Error writing data for KMB to DB: schema "np" does not exist
LINE 4:             VALUES ('KMB','2020-01-02'::date,np.float64(115....
                                                     ^

2025-01-09 02:12:19,218 - DEBUG - Entering download()
2025-01-09 02:12:19,218 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:19,218 - DEBUG -  Entering history()
2025-01-09 02:12:19,218 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['KIM', 1, 0])
2025-01-09 02:12:19,218 - DEBUG -   Entering history()
2025-01-09 02:12:19,219 - DEBUG - KIM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:19,219 - DEBUG -    Entering get()
2025-01-09 02:12:19,219 - DEBUG -     Entering _make_request()
2025-01-09 02:12:19,219 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/KIM
2025-01-09 02:12:19,219 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:19,219 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:19,219 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:19,219 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:19,219 - DEBUG - reusing cookie
2025-01-09 02:12:19,219 - DEBUG - reusing crumb
2025-01-09 02:12:19,219 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:19,219 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:19,394 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/KIM?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1027
2025-01-09 02:12:19,395 - DEBUG - response code=200
2025-01-09 02:12:19,396 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:19,396 - DEBUG -    Exiting get()
2025-01-09 02:12:19,402 - ERROR - 
1 Failed download:
2025-01-09 02:12:19,402 - ERROR - ['KIM']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:19,402 - DEBUG - ['KIM']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:19,409 - DEBUG - Exiting download()
2025-01-09 02:12:19,535 - ERROR - Error writing data for KIM to DB: schema "np" does not exist
LINE 4:             VALUES ('KIM','2020-01-02'::date,np.float64(16.7...
                                                     ^

2025-01-09 02:12:19,536 - DEBUG - Entering download()
2025-01-09 02:12:19,536 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:19,536 - DEBUG -  Entering history()
2025-01-09 02:12:19,536 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['KMI', 1, 0])
2025-01-09 02:12:19,537 - DEBUG -   Entering history()
2025-01-09 02:12:19,537 - DEBUG - KMI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:19,537 - DEBUG -    Entering get()
2025-01-09 02:12:19,537 - DEBUG -     Entering _make_request()
2025-01-09 02:12:19,537 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/KMI
2025-01-09 02:12:19,537 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:19,538 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:19,538 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:19,538 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:19,538 - DEBUG - reusing cookie
2025-01-09 02:12:19,538 - DEBUG - reusing crumb
2025-01-09 02:12:19,538 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:19,538 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:19,682 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/KMI?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1012
2025-01-09 02:12:19,683 - DEBUG - response code=200
2025-01-09 02:12:19,684 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:19,684 - DEBUG -    Exiting get()
2025-01-09 02:12:19,690 - ERROR - 
1 Failed download:
2025-01-09 02:12:19,690 - ERROR - ['KMI']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:19,691 - DEBUG - ['KMI']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:19,697 - DEBUG - Exiting download()
2025-01-09 02:12:19,811 - ERROR - Error writing data for KMI to DB: schema "np" does not exist
LINE 4:             VALUES ('KMI','2020-01-02'::date,np.float64(15.4...
                                                     ^

2025-01-09 02:12:19,812 - DEBUG - Entering download()
2025-01-09 02:12:19,812 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:19,812 - DEBUG -  Entering history()
2025-01-09 02:12:19,812 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['KKR', 1, 0])
2025-01-09 02:12:19,813 - DEBUG -   Entering history()
2025-01-09 02:12:19,813 - DEBUG - KKR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:19,813 - DEBUG -    Entering get()
2025-01-09 02:12:19,813 - DEBUG -     Entering _make_request()
2025-01-09 02:12:19,813 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/KKR
2025-01-09 02:12:19,814 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:19,814 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:19,814 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:19,814 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:19,814 - DEBUG - reusing cookie
2025-01-09 02:12:19,814 - DEBUG - reusing crumb
2025-01-09 02:12:19,814 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:19,814 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:19,966 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/KKR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1005
2025-01-09 02:12:19,967 - DEBUG - response code=200
2025-01-09 02:12:19,967 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:19,967 - DEBUG -    Exiting get()
2025-01-09 02:12:19,972 - ERROR - 
1 Failed download:
2025-01-09 02:12:19,972 - ERROR - ['KKR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:19,972 - DEBUG - ['KKR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:19,978 - DEBUG - Exiting download()
2025-01-09 02:12:20,086 - ERROR - Error writing data for KKR to DB: schema "np" does not exist
LINE 4:             VALUES ('KKR','2020-01-02'::date,np.float64(27.8...
                                                     ^

2025-01-09 02:12:20,087 - DEBUG - Entering download()
2025-01-09 02:12:20,087 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:20,087 - DEBUG -  Entering history()
2025-01-09 02:12:20,087 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['KLAC', 1, 0])
2025-01-09 02:12:20,088 - DEBUG -   Entering history()
2025-01-09 02:12:20,088 - DEBUG - KLAC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:20,088 - DEBUG -    Entering get()
2025-01-09 02:12:20,088 - DEBUG -     Entering _make_request()
2025-01-09 02:12:20,088 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/KLAC
2025-01-09 02:12:20,088 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:20,088 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:20,089 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:20,089 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:20,089 - DEBUG - reusing cookie
2025-01-09 02:12:20,089 - DEBUG - reusing crumb
2025-01-09 02:12:20,089 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:20,089 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:20,241 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/KLAC?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1015
2025-01-09 02:12:20,242 - DEBUG - response code=200
2025-01-09 02:12:20,242 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:20,242 - DEBUG -    Exiting get()
2025-01-09 02:12:20,247 - ERROR - 
1 Failed download:
2025-01-09 02:12:20,247 - ERROR - ['KLAC']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:20,248 - DEBUG - ['KLAC']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:20,254 - DEBUG - Exiting download()
2025-01-09 02:12:20,385 - ERROR - Error writing data for KLAC to DB: schema "np" does not exist
LINE 4:             VALUES ('KLAC','2020-01-02'::date,np.float64(169...
                                                      ^

2025-01-09 02:12:20,386 - DEBUG - Entering download()
2025-01-09 02:12:20,386 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:20,386 - DEBUG -  Entering history()
2025-01-09 02:12:20,386 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['KHC', 1, 0])
2025-01-09 02:12:20,386 - DEBUG -   Entering history()
2025-01-09 02:12:20,387 - DEBUG - KHC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:20,387 - DEBUG -    Entering get()
2025-01-09 02:12:20,387 - DEBUG -     Entering _make_request()
2025-01-09 02:12:20,387 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/KHC
2025-01-09 02:12:20,387 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:20,387 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:20,387 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:20,387 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:20,387 - DEBUG - reusing cookie
2025-01-09 02:12:20,387 - DEBUG - reusing crumb
2025-01-09 02:12:20,387 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:20,387 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:20,517 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/KHC?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1024
2025-01-09 02:12:20,518 - DEBUG - response code=200
2025-01-09 02:12:20,518 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:20,519 - DEBUG -    Exiting get()
2025-01-09 02:12:20,522 - ERROR - 
1 Failed download:
2025-01-09 02:12:20,522 - ERROR - ['KHC']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:20,522 - DEBUG - ['KHC']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:20,524 - DEBUG - Exiting download()
2025-01-09 02:12:20,629 - ERROR - Error writing data for KHC to DB: schema "np" does not exist
LINE 4:             VALUES ('KHC','2020-01-02'::date,np.float64(25.7...
                                                     ^

2025-01-09 02:12:20,629 - DEBUG - Entering download()
2025-01-09 02:12:20,629 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:20,629 - DEBUG -  Entering history()
2025-01-09 02:12:20,630 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['KR', 1, 0])
2025-01-09 02:12:20,630 - DEBUG -   Entering history()
2025-01-09 02:12:20,631 - DEBUG - KR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:20,631 - DEBUG -    Entering get()
2025-01-09 02:12:20,631 - DEBUG -     Entering _make_request()
2025-01-09 02:12:20,631 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/KR
2025-01-09 02:12:20,631 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:20,631 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:20,631 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:20,631 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:20,631 - DEBUG - reusing cookie
2025-01-09 02:12:20,631 - DEBUG - reusing crumb
2025-01-09 02:12:20,631 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:20,631 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:20,833 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/KR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1007
2025-01-09 02:12:20,834 - DEBUG - response code=200
2025-01-09 02:12:20,835 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:20,835 - DEBUG -    Exiting get()
2025-01-09 02:12:20,843 - ERROR - 
1 Failed download:
2025-01-09 02:12:20,843 - ERROR - ['KR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:20,844 - DEBUG - ['KR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:20,851 - DEBUG - Exiting download()
2025-01-09 02:12:20,963 - ERROR - Error writing data for KR to DB: schema "np" does not exist
LINE 4:             VALUES ('KR','2020-01-02'::date,np.float64(26.06...
                                                    ^

2025-01-09 02:12:20,964 - DEBUG - Entering download()
2025-01-09 02:12:20,964 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:20,964 - DEBUG -  Entering history()
2025-01-09 02:12:20,964 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LHX', 1, 0])
2025-01-09 02:12:20,965 - DEBUG -   Entering history()
2025-01-09 02:12:20,965 - DEBUG - LHX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:20,965 - DEBUG -    Entering get()
2025-01-09 02:12:20,966 - DEBUG -     Entering _make_request()
2025-01-09 02:12:20,966 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LHX
2025-01-09 02:12:20,966 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:20,966 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:20,966 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:20,966 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:20,966 - DEBUG - reusing cookie
2025-01-09 02:12:20,966 - DEBUG - reusing crumb
2025-01-09 02:12:20,966 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:20,966 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:21,158 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LHX?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1034
2025-01-09 02:12:21,159 - DEBUG - response code=200
2025-01-09 02:12:21,159 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:21,159 - DEBUG -    Exiting get()
2025-01-09 02:12:21,165 - ERROR - 
1 Failed download:
2025-01-09 02:12:21,166 - ERROR - ['LHX']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:21,166 - DEBUG - ['LHX']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:21,173 - DEBUG - Exiting download()
2025-01-09 02:12:21,173 - WARNING - Ticker LHX is missing 'Close' column. Skipping.
2025-01-09 02:12:21,174 - DEBUG - Entering download()
2025-01-09 02:12:21,174 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:21,174 - DEBUG -  Entering history()
2025-01-09 02:12:21,175 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LH', 1, 0])
2025-01-09 02:12:21,175 - DEBUG -   Entering history()
2025-01-09 02:12:21,177 - DEBUG - LH: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:21,177 - DEBUG -    Entering get()
2025-01-09 02:12:21,177 - DEBUG -     Entering _make_request()
2025-01-09 02:12:21,178 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LH
2025-01-09 02:12:21,178 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:21,178 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:21,178 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:21,178 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:21,178 - DEBUG - reusing cookie
2025-01-09 02:12:21,178 - DEBUG - reusing crumb
2025-01-09 02:12:21,178 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:21,178 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:21,341 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LH?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1021
2025-01-09 02:12:21,342 - DEBUG - response code=200
2025-01-09 02:12:21,343 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:21,343 - DEBUG -    Exiting get()
2025-01-09 02:12:21,349 - ERROR - 
1 Failed download:
2025-01-09 02:12:21,349 - ERROR - ['LH']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:21,349 - DEBUG - ['LH']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:21,357 - DEBUG - Exiting download()
2025-01-09 02:12:21,470 - ERROR - Error writing data for LH to DB: schema "np" does not exist
LINE 4:             VALUES ('LH','2020-01-02'::date,np.float64(141.0...
                                                    ^

2025-01-09 02:12:21,471 - DEBUG - Entering download()
2025-01-09 02:12:21,471 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:21,471 - DEBUG -  Entering history()
2025-01-09 02:12:21,471 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LRCX', 1, 0])
2025-01-09 02:12:21,471 - DEBUG -   Entering history()
2025-01-09 02:12:21,472 - DEBUG - LRCX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:21,472 - DEBUG -    Entering get()
2025-01-09 02:12:21,472 - DEBUG -     Entering _make_request()
2025-01-09 02:12:21,472 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LRCX
2025-01-09 02:12:21,472 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:21,472 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:21,472 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:21,472 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:21,472 - DEBUG - reusing cookie
2025-01-09 02:12:21,472 - DEBUG - reusing crumb
2025-01-09 02:12:21,472 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:21,473 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:21,607 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LRCX?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1026
2025-01-09 02:12:21,608 - DEBUG - response code=200
2025-01-09 02:12:21,608 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:21,608 - DEBUG -    Exiting get()
2025-01-09 02:12:21,612 - ERROR - 
1 Failed download:
2025-01-09 02:12:21,612 - ERROR - ['LRCX']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:21,612 - DEBUG - ['LRCX']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:21,617 - DEBUG - Exiting download()
2025-01-09 02:12:21,618 - WARNING - Ticker LRCX is missing 'Close' column. Skipping.
2025-01-09 02:12:21,618 - DEBUG - Entering download()
2025-01-09 02:12:21,618 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:21,618 - DEBUG -  Entering history()
2025-01-09 02:12:21,619 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LW', 1, 0])
2025-01-09 02:12:21,619 - DEBUG -   Entering history()
2025-01-09 02:12:21,621 - DEBUG - LW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:21,621 - DEBUG -    Entering get()
2025-01-09 02:12:21,621 - DEBUG -     Entering _make_request()
2025-01-09 02:12:21,621 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LW
2025-01-09 02:12:21,622 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:21,622 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:21,622 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:21,622 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:21,622 - DEBUG - reusing cookie
2025-01-09 02:12:21,622 - DEBUG - reusing crumb
2025-01-09 02:12:21,622 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:21,622 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:21,777 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LW?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1025
2025-01-09 02:12:21,778 - DEBUG - response code=200
2025-01-09 02:12:21,778 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:21,778 - DEBUG -    Exiting get()
2025-01-09 02:12:21,782 - ERROR - 
1 Failed download:
2025-01-09 02:12:21,782 - ERROR - ['LW']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:21,782 - DEBUG - ['LW']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:21,784 - DEBUG - Exiting download()
2025-01-09 02:12:21,784 - WARNING - Ticker LW is missing 'Close' column. Skipping.
2025-01-09 02:12:21,784 - DEBUG - Entering download()
2025-01-09 02:12:21,784 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:21,784 - DEBUG -  Entering history()
2025-01-09 02:12:21,785 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LVS', 1, 0])
2025-01-09 02:12:21,785 - DEBUG -   Entering history()
2025-01-09 02:12:21,785 - DEBUG - LVS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:21,785 - DEBUG -    Entering get()
2025-01-09 02:12:21,786 - DEBUG -     Entering _make_request()
2025-01-09 02:12:21,786 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LVS
2025-01-09 02:12:21,786 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:21,786 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:21,786 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:21,786 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:21,786 - DEBUG - reusing cookie
2025-01-09 02:12:21,786 - DEBUG - reusing crumb
2025-01-09 02:12:21,786 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:21,786 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:21,945 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LVS?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1016
2025-01-09 02:12:21,946 - DEBUG - response code=200
2025-01-09 02:12:21,947 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:21,947 - DEBUG -    Exiting get()
2025-01-09 02:12:21,953 - ERROR - 
1 Failed download:
2025-01-09 02:12:21,953 - ERROR - ['LVS']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:21,953 - DEBUG - ['LVS']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:21,961 - DEBUG - Exiting download()
2025-01-09 02:12:22,076 - ERROR - Error writing data for LVS to DB: schema "np" does not exist
LINE 4:             VALUES ('LVS','2020-01-02'::date,np.float64(66.8...
                                                     ^

2025-01-09 02:12:22,077 - DEBUG - Entering download()
2025-01-09 02:12:22,077 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:22,077 - DEBUG -  Entering history()
2025-01-09 02:12:22,077 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LDOS', 1, 0])
2025-01-09 02:12:22,077 - DEBUG -   Entering history()
2025-01-09 02:12:22,078 - DEBUG - LDOS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:22,078 - DEBUG -    Entering get()
2025-01-09 02:12:22,078 - DEBUG -     Entering _make_request()
2025-01-09 02:12:22,078 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LDOS
2025-01-09 02:12:22,078 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:22,078 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:22,078 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:22,079 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:22,079 - DEBUG - reusing cookie
2025-01-09 02:12:22,079 - DEBUG - reusing crumb
2025-01-09 02:12:22,079 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:22,079 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:22,232 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LDOS?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1022
2025-01-09 02:12:22,233 - DEBUG - response code=200
2025-01-09 02:12:22,233 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:22,234 - DEBUG -    Exiting get()
2025-01-09 02:12:22,237 - ERROR - 
1 Failed download:
2025-01-09 02:12:22,237 - ERROR - ['LDOS']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:22,237 - DEBUG - ['LDOS']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:22,239 - DEBUG - Exiting download()
2025-01-09 02:12:22,341 - ERROR - Error writing data for LDOS to DB: schema "np" does not exist
LINE 4:             VALUES ('LDOS','2020-01-02'::date,np.float64(91....
                                                      ^

2025-01-09 02:12:22,342 - DEBUG - Entering download()
2025-01-09 02:12:22,342 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:22,342 - DEBUG -  Entering history()
2025-01-09 02:12:22,343 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LEN', 1, 0])
2025-01-09 02:12:22,343 - DEBUG -   Entering history()
2025-01-09 02:12:22,343 - DEBUG - LEN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:22,344 - DEBUG -    Entering get()
2025-01-09 02:12:22,344 - DEBUG -     Entering _make_request()
2025-01-09 02:12:22,344 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LEN
2025-01-09 02:12:22,344 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:22,344 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:22,344 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:22,344 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:22,344 - DEBUG - reusing cookie
2025-01-09 02:12:22,344 - DEBUG - reusing crumb
2025-01-09 02:12:22,344 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:22,344 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:22,508 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LEN?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1013
2025-01-09 02:12:22,509 - DEBUG - response code=200
2025-01-09 02:12:22,510 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:22,510 - DEBUG -    Exiting get()
2025-01-09 02:12:22,516 - ERROR - 
1 Failed download:
2025-01-09 02:12:22,516 - ERROR - ['LEN']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:22,516 - DEBUG - ['LEN']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:22,523 - DEBUG - Exiting download()
2025-01-09 02:12:22,636 - ERROR - Error writing data for LEN to DB: schema "np" does not exist
LINE 4:             VALUES ('LEN','2020-01-02'::date,np.float64(52.5...
                                                     ^

2025-01-09 02:12:22,636 - DEBUG - Entering download()
2025-01-09 02:12:22,636 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:22,637 - DEBUG -  Entering history()
2025-01-09 02:12:22,637 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LII', 1, 0])
2025-01-09 02:12:22,637 - DEBUG -   Entering history()
2025-01-09 02:12:22,638 - DEBUG - LII: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:22,638 - DEBUG -    Entering get()
2025-01-09 02:12:22,638 - DEBUG -     Entering _make_request()
2025-01-09 02:12:22,638 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LII
2025-01-09 02:12:22,638 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:22,638 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:22,638 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:22,638 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:22,638 - DEBUG - reusing cookie
2025-01-09 02:12:22,638 - DEBUG - reusing crumb
2025-01-09 02:12:22,638 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:22,638 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:22,789 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LII?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1030
2025-01-09 02:12:22,790 - DEBUG - response code=200
2025-01-09 02:12:22,791 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:22,791 - DEBUG -    Exiting get()
2025-01-09 02:12:22,798 - ERROR - 
1 Failed download:
2025-01-09 02:12:22,798 - ERROR - ['LII']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:22,798 - DEBUG - ['LII']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:22,806 - DEBUG - Exiting download()
2025-01-09 02:12:22,924 - ERROR - Error writing data for LII to DB: schema "np" does not exist
LINE 4:             VALUES ('LII','2020-01-02'::date,np.float64(229....
                                                     ^

2025-01-09 02:12:22,924 - DEBUG - Entering download()
2025-01-09 02:12:22,925 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:22,925 - DEBUG -  Entering history()
2025-01-09 02:12:22,925 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LLY', 1, 0])
2025-01-09 02:12:22,925 - DEBUG -   Entering history()
2025-01-09 02:12:22,926 - DEBUG - LLY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:22,926 - DEBUG -    Entering get()
2025-01-09 02:12:22,926 - DEBUG -     Entering _make_request()
2025-01-09 02:12:22,926 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LLY
2025-01-09 02:12:22,926 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:22,926 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:22,926 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:22,926 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:22,927 - DEBUG - reusing cookie
2025-01-09 02:12:22,927 - DEBUG - reusing crumb
2025-01-09 02:12:22,927 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:22,927 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:23,114 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LLY?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1020
2025-01-09 02:12:23,115 - DEBUG - response code=200
2025-01-09 02:12:23,115 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:23,115 - DEBUG -    Exiting get()
2025-01-09 02:12:23,121 - ERROR - 
1 Failed download:
2025-01-09 02:12:23,122 - ERROR - ['LLY']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:23,122 - DEBUG - ['LLY']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:23,129 - DEBUG - Exiting download()
2025-01-09 02:12:23,129 - WARNING - Ticker LLY is missing 'Close' column. Skipping.
2025-01-09 02:12:23,130 - DEBUG - Entering download()
2025-01-09 02:12:23,130 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:23,130 - DEBUG -  Entering history()
2025-01-09 02:12:23,131 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LIN', 1, 0])
2025-01-09 02:12:23,132 - DEBUG -   Entering history()
2025-01-09 02:12:23,134 - DEBUG - LIN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:23,134 - DEBUG -    Entering get()
2025-01-09 02:12:23,134 - DEBUG -     Entering _make_request()
2025-01-09 02:12:23,134 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LIN
2025-01-09 02:12:23,134 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:23,135 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:23,135 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:23,135 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:23,135 - DEBUG - reusing cookie
2025-01-09 02:12:23,135 - DEBUG - reusing crumb
2025-01-09 02:12:23,135 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:23,135 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:23,301 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LIN?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 999
2025-01-09 02:12:23,302 - DEBUG - response code=200
2025-01-09 02:12:23,303 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:23,303 - DEBUG -    Exiting get()
2025-01-09 02:12:23,309 - ERROR - 
1 Failed download:
2025-01-09 02:12:23,309 - ERROR - ['LIN']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:23,309 - DEBUG - ['LIN']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:23,317 - DEBUG - Exiting download()
2025-01-09 02:12:23,317 - WARNING - Ticker LIN is missing 'Close' column. Skipping.
2025-01-09 02:12:23,317 - DEBUG - Entering download()
2025-01-09 02:12:23,317 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:23,318 - DEBUG -  Entering history()
2025-01-09 02:12:23,319 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LYV', 1, 0])
2025-01-09 02:12:23,319 - DEBUG -   Entering history()
2025-01-09 02:12:23,321 - DEBUG - LYV: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:23,321 - DEBUG -    Entering get()
2025-01-09 02:12:23,321 - DEBUG -     Entering _make_request()
2025-01-09 02:12:23,321 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LYV
2025-01-09 02:12:23,322 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:23,322 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:23,322 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:23,322 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:23,322 - DEBUG - reusing cookie
2025-01-09 02:12:23,322 - DEBUG - reusing crumb
2025-01-09 02:12:23,322 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:23,322 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:23,452 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LYV?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1041
2025-01-09 02:12:23,453 - DEBUG - response code=200
2025-01-09 02:12:23,453 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:23,453 - DEBUG -    Exiting get()
2025-01-09 02:12:23,459 - ERROR - 
1 Failed download:
2025-01-09 02:12:23,460 - ERROR - ['LYV']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:23,460 - DEBUG - ['LYV']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:23,467 - DEBUG - Exiting download()
2025-01-09 02:12:23,467 - WARNING - Ticker LYV is missing 'Close' column. Skipping.
2025-01-09 02:12:23,468 - DEBUG - Entering download()
2025-01-09 02:12:23,468 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:23,468 - DEBUG -  Entering history()
2025-01-09 02:12:23,469 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LKQ', 1, 0])
2025-01-09 02:12:23,469 - DEBUG -   Entering history()
2025-01-09 02:12:23,471 - DEBUG - LKQ: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:23,471 - DEBUG -    Entering get()
2025-01-09 02:12:23,471 - DEBUG -     Entering _make_request()
2025-01-09 02:12:23,471 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LKQ
2025-01-09 02:12:23,472 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:23,472 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:23,472 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:23,472 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:23,472 - DEBUG - reusing cookie
2025-01-09 02:12:23,472 - DEBUG - reusing crumb
2025-01-09 02:12:23,472 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:23,472 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:23,605 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LKQ?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1008
2025-01-09 02:12:23,606 - DEBUG - response code=200
2025-01-09 02:12:23,607 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:23,607 - DEBUG -    Exiting get()
2025-01-09 02:12:23,613 - ERROR - 
1 Failed download:
2025-01-09 02:12:23,613 - ERROR - ['LKQ']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:23,613 - DEBUG - ['LKQ']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:23,620 - DEBUG - Exiting download()
2025-01-09 02:12:23,731 - ERROR - Error writing data for LKQ to DB: schema "np" does not exist
LINE 4:             VALUES ('LKQ','2020-01-02'::date,np.float64(33.3...
                                                     ^

2025-01-09 02:12:23,732 - DEBUG - Entering download()
2025-01-09 02:12:23,732 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:23,732 - DEBUG -  Entering history()
2025-01-09 02:12:23,732 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LMT', 1, 0])
2025-01-09 02:12:23,732 - DEBUG -   Entering history()
2025-01-09 02:12:23,733 - DEBUG - LMT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:23,733 - DEBUG -    Entering get()
2025-01-09 02:12:23,733 - DEBUG -     Entering _make_request()
2025-01-09 02:12:23,733 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LMT
2025-01-09 02:12:23,733 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:23,733 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:23,733 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:23,733 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:23,733 - DEBUG - reusing cookie
2025-01-09 02:12:23,733 - DEBUG - reusing crumb
2025-01-09 02:12:23,733 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:23,733 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:23,943 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LMT?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1033
2025-01-09 02:12:23,944 - DEBUG - response code=200
2025-01-09 02:12:23,944 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:23,945 - DEBUG -    Exiting get()
2025-01-09 02:12:23,951 - ERROR - 
1 Failed download:
2025-01-09 02:12:23,951 - ERROR - ['LMT']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:23,951 - DEBUG - ['LMT']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:23,958 - DEBUG - Exiting download()
2025-01-09 02:12:23,959 - WARNING - Ticker LMT is missing 'Close' column. Skipping.
2025-01-09 02:12:23,959 - DEBUG - Entering download()
2025-01-09 02:12:23,959 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:23,960 - DEBUG -  Entering history()
2025-01-09 02:12:23,960 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['L', 1, 0])
2025-01-09 02:12:23,961 - DEBUG -   Entering history()
2025-01-09 02:12:23,962 - DEBUG - L: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:23,963 - DEBUG -    Entering get()
2025-01-09 02:12:23,963 - DEBUG -     Entering _make_request()
2025-01-09 02:12:23,963 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/L
2025-01-09 02:12:23,963 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:23,963 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:23,963 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:23,964 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:23,964 - DEBUG - reusing cookie
2025-01-09 02:12:23,964 - DEBUG - reusing crumb
2025-01-09 02:12:23,964 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:23,964 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:24,143 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/L?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1003
2025-01-09 02:12:24,144 - DEBUG - response code=200
2025-01-09 02:12:24,145 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:24,145 - DEBUG -    Exiting get()
2025-01-09 02:12:24,151 - ERROR - 
1 Failed download:
2025-01-09 02:12:24,151 - ERROR - ['L']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:24,151 - DEBUG - ['L']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\%ticker%ocal\Programs\Python\Python313\%ticker%ib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\%ticker%ocal\Programs\Python\Python313\%ticker%ib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\%ticker%ocal\Programs\Python\Python313\%ticker%ib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\%ticker%ocal\Programs\Python\Python313\%ticker%ib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\%ticker%ocal\Programs\Python\Python313\%ticker%ib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:24,159 - DEBUG - Exiting download()
2025-01-09 02:12:24,269 - ERROR - Error writing data for L to DB: schema "np" does not exist
LINE 4:             VALUES ('L','2020-01-02'::date,np.float64(51.552...
                                                   ^

2025-01-09 02:12:24,269 - DEBUG - Entering download()
2025-01-09 02:12:24,270 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:24,270 - DEBUG -  Entering history()
2025-01-09 02:12:24,270 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LOW', 1, 0])
2025-01-09 02:12:24,270 - DEBUG -   Entering history()
2025-01-09 02:12:24,271 - DEBUG - LOW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:24,272 - DEBUG -    Entering get()
2025-01-09 02:12:24,272 - DEBUG -     Entering _make_request()
2025-01-09 02:12:24,272 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LOW
2025-01-09 02:12:24,272 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:24,272 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:24,272 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:24,272 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:24,272 - DEBUG - reusing cookie
2025-01-09 02:12:24,272 - DEBUG - reusing crumb
2025-01-09 02:12:24,272 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:24,272 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:24,452 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LOW?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1023
2025-01-09 02:12:24,454 - DEBUG - response code=200
2025-01-09 02:12:24,454 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:24,454 - DEBUG -    Exiting get()
2025-01-09 02:12:24,460 - ERROR - 
1 Failed download:
2025-01-09 02:12:24,460 - ERROR - ['LOW']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:24,461 - DEBUG - ['LOW']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:24,468 - DEBUG - Exiting download()
2025-01-09 02:12:24,588 - ERROR - Error writing data for LOW to DB: schema "np" does not exist
LINE 4:             VALUES ('LOW','2020-01-02'::date,np.float64(109....
                                                     ^

2025-01-09 02:12:24,588 - DEBUG - Entering download()
2025-01-09 02:12:24,588 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:24,588 - DEBUG -  Entering history()
2025-01-09 02:12:24,589 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LULU', 1, 0])
2025-01-09 02:12:24,589 - DEBUG -   Entering history()
2025-01-09 02:12:24,589 - DEBUG - LULU: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:24,590 - DEBUG -    Entering get()
2025-01-09 02:12:24,590 - DEBUG -     Entering _make_request()
2025-01-09 02:12:24,590 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LULU
2025-01-09 02:12:24,590 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:24,590 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:24,590 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:24,590 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:24,590 - DEBUG - reusing cookie
2025-01-09 02:12:24,590 - DEBUG - reusing crumb
2025-01-09 02:12:24,590 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:24,590 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:24,737 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LULU?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1031
2025-01-09 02:12:24,738 - DEBUG - response code=200
2025-01-09 02:12:24,738 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:24,738 - DEBUG -    Exiting get()
2025-01-09 02:12:24,743 - ERROR - 
1 Failed download:
2025-01-09 02:12:24,743 - ERROR - ['LULU']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:24,744 - DEBUG - ['LULU']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:24,749 - DEBUG - Exiting download()
2025-01-09 02:12:24,862 - ERROR - Error writing data for LULU to DB: schema "np" does not exist
LINE 4:             VALUES ('LULU','2020-01-02'::date,np.float64(232...
                                                      ^

2025-01-09 02:12:24,862 - DEBUG - Entering download()
2025-01-09 02:12:24,863 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:24,863 - DEBUG -  Entering history()
2025-01-09 02:12:24,863 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LYB', 1, 0])
2025-01-09 02:12:24,863 - DEBUG -   Entering history()
2025-01-09 02:12:24,864 - DEBUG - LYB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:24,864 - DEBUG -    Entering get()
2025-01-09 02:12:24,864 - DEBUG -     Entering _make_request()
2025-01-09 02:12:24,864 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LYB
2025-01-09 02:12:24,864 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:24,864 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:24,864 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:24,864 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:24,864 - DEBUG - reusing cookie
2025-01-09 02:12:24,864 - DEBUG - reusing crumb
2025-01-09 02:12:24,864 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:24,865 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:25,012 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LYB?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1032
2025-01-09 02:12:25,013 - DEBUG - response code=200
2025-01-09 02:12:25,013 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:25,014 - DEBUG -    Exiting get()
2025-01-09 02:12:25,020 - ERROR - 
1 Failed download:
2025-01-09 02:12:25,020 - ERROR - ['LYB']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:25,020 - DEBUG - ['LYB']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:25,027 - DEBUG - Exiting download()
2025-01-09 02:12:25,158 - ERROR - Error writing data for LYB to DB: schema "np" does not exist
LINE 4:             VALUES ('LYB','2020-01-02'::date,np.float64(70.3...
                                                     ^

2025-01-09 02:12:25,159 - DEBUG - Entering download()
2025-01-09 02:12:25,159 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:25,159 - DEBUG -  Entering history()
2025-01-09 02:12:25,159 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MTB', 1, 0])
2025-01-09 02:12:25,160 - DEBUG -   Entering history()
2025-01-09 02:12:25,160 - DEBUG - MTB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:25,160 - DEBUG -    Entering get()
2025-01-09 02:12:25,160 - DEBUG -     Entering _make_request()
2025-01-09 02:12:25,160 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MTB
2025-01-09 02:12:25,160 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:25,161 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:25,161 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:25,161 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:25,161 - DEBUG - reusing cookie
2025-01-09 02:12:25,161 - DEBUG - reusing crumb
2025-01-09 02:12:25,161 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:25,161 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:25,326 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MTB?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1018
2025-01-09 02:12:25,327 - DEBUG - response code=200
2025-01-09 02:12:25,328 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:25,328 - DEBUG -    Exiting get()
2025-01-09 02:12:25,334 - ERROR - 
1 Failed download:
2025-01-09 02:12:25,334 - ERROR - ['MTB']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:25,334 - DEBUG - ['MTB']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:25,342 - DEBUG - Exiting download()
2025-01-09 02:12:25,459 - ERROR - Error writing data for MTB to DB: schema "np" does not exist
LINE 4:             VALUES ('MTB','2020-01-02'::date,np.float64(144....
                                                     ^

2025-01-09 02:12:25,460 - DEBUG - Entering download()
2025-01-09 02:12:25,460 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:25,460 - DEBUG -  Entering history()
2025-01-09 02:12:25,460 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MPC', 1, 0])
2025-01-09 02:12:25,460 - DEBUG -   Entering history()
2025-01-09 02:12:25,461 - DEBUG - MPC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:25,461 - DEBUG -    Entering get()
2025-01-09 02:12:25,461 - DEBUG -     Entering _make_request()
2025-01-09 02:12:25,461 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MPC
2025-01-09 02:12:25,461 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:25,461 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:25,461 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:25,461 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:25,461 - DEBUG - reusing cookie
2025-01-09 02:12:25,462 - DEBUG - reusing crumb
2025-01-09 02:12:25,462 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:25,462 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:25,625 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MPC?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1039
2025-01-09 02:12:25,626 - DEBUG - response code=200
2025-01-09 02:12:25,626 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:25,626 - DEBUG -    Exiting get()
2025-01-09 02:12:25,632 - ERROR - 
1 Failed download:
2025-01-09 02:12:25,632 - ERROR - ['MPC']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:25,633 - DEBUG - ['MPC']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:25,640 - DEBUG - Exiting download()
2025-01-09 02:12:25,640 - WARNING - Ticker MPC is missing 'Close' column. Skipping.
2025-01-09 02:12:25,641 - DEBUG - Entering download()
2025-01-09 02:12:25,641 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:25,641 - DEBUG -  Entering history()
2025-01-09 02:12:25,642 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MKTX', 1, 0])
2025-01-09 02:12:25,642 - DEBUG -   Entering history()
2025-01-09 02:12:25,644 - DEBUG - MKTX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:25,644 - DEBUG -    Entering get()
2025-01-09 02:12:25,644 - DEBUG -     Entering _make_request()
2025-01-09 02:12:25,644 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MKTX
2025-01-09 02:12:25,645 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:25,645 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:25,645 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:25,645 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:25,645 - DEBUG - reusing cookie
2025-01-09 02:12:25,645 - DEBUG - reusing crumb
2025-01-09 02:12:25,645 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:25,645 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:25,812 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MKTX?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1033
2025-01-09 02:12:25,813 - DEBUG - response code=200
2025-01-09 02:12:25,813 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:25,813 - DEBUG -    Exiting get()
2025-01-09 02:12:25,819 - ERROR - 
1 Failed download:
2025-01-09 02:12:25,819 - ERROR - ['MKTX']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:25,819 - DEBUG - ['MKTX']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:25,827 - DEBUG - Exiting download()
2025-01-09 02:12:25,941 - ERROR - Error writing data for MKTX to DB: schema "np" does not exist
LINE 4:             VALUES ('MKTX','2020-01-02'::date,np.float64(363...
                                                      ^

2025-01-09 02:12:25,942 - DEBUG - Entering download()
2025-01-09 02:12:25,942 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:25,942 - DEBUG -  Entering history()
2025-01-09 02:12:25,942 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MAR', 1, 0])
2025-01-09 02:12:25,942 - DEBUG -   Entering history()
2025-01-09 02:12:25,943 - DEBUG - MAR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:25,943 - DEBUG -    Entering get()
2025-01-09 02:12:25,943 - DEBUG -     Entering _make_request()
2025-01-09 02:12:25,943 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MAR
2025-01-09 02:12:25,943 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:25,943 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:25,943 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:25,943 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:25,943 - DEBUG - reusing cookie
2025-01-09 02:12:25,943 - DEBUG - reusing crumb
2025-01-09 02:12:25,944 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:25,944 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:26,102 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MAR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1033
2025-01-09 02:12:26,103 - DEBUG - response code=200
2025-01-09 02:12:26,104 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:26,104 - DEBUG -    Exiting get()
2025-01-09 02:12:26,109 - ERROR - 
1 Failed download:
2025-01-09 02:12:26,109 - ERROR - ['MAR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:26,110 - DEBUG - ['MAR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:26,116 - DEBUG - Exiting download()
2025-01-09 02:12:26,247 - ERROR - Error writing data for MAR to DB: schema "np" does not exist
LINE 4:             VALUES ('MAR','2020-01-02'::date,np.float64(146....
                                                     ^

2025-01-09 02:12:26,247 - DEBUG - Entering download()
2025-01-09 02:12:26,247 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:26,247 - DEBUG -  Entering history()
2025-01-09 02:12:26,247 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MMC', 1, 0])
2025-01-09 02:12:26,248 - DEBUG -   Entering history()
2025-01-09 02:12:26,248 - DEBUG - MMC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:26,248 - DEBUG -    Entering get()
2025-01-09 02:12:26,248 - DEBUG -     Entering _make_request()
2025-01-09 02:12:26,248 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MMC
2025-01-09 02:12:26,248 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:26,249 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:26,249 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:26,249 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:26,249 - DEBUG - reusing cookie
2025-01-09 02:12:26,249 - DEBUG - reusing crumb
2025-01-09 02:12:26,249 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:26,249 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:26,435 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MMC?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1040
2025-01-09 02:12:26,436 - DEBUG - response code=200
2025-01-09 02:12:26,437 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:26,437 - DEBUG -    Exiting get()
2025-01-09 02:12:26,443 - ERROR - 
1 Failed download:
2025-01-09 02:12:26,443 - ERROR - ['MMC']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:26,443 - DEBUG - ['MMC']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:26,451 - DEBUG - Exiting download()
2025-01-09 02:12:26,451 - WARNING - Ticker MMC is missing 'Close' column. Skipping.
2025-01-09 02:12:26,451 - DEBUG - Entering download()
2025-01-09 02:12:26,451 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:26,452 - DEBUG -  Entering history()
2025-01-09 02:12:26,453 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MLM', 1, 0])
2025-01-09 02:12:26,453 - DEBUG -   Entering history()
2025-01-09 02:12:26,455 - DEBUG - MLM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:26,455 - DEBUG -    Entering get()
2025-01-09 02:12:26,455 - DEBUG -     Entering _make_request()
2025-01-09 02:12:26,455 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MLM
2025-01-09 02:12:26,455 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:26,455 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:26,455 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:26,456 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:26,456 - DEBUG - reusing cookie
2025-01-09 02:12:26,456 - DEBUG - reusing crumb
2025-01-09 02:12:26,456 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:26,456 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:26,621 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MLM?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1041
2025-01-09 02:12:26,621 - DEBUG - response code=200
2025-01-09 02:12:26,621 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:26,622 - DEBUG -    Exiting get()
2025-01-09 02:12:26,624 - ERROR - 
1 Failed download:
2025-01-09 02:12:26,624 - ERROR - ['MLM']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:26,624 - DEBUG - ['MLM']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:26,627 - DEBUG - Exiting download()
2025-01-09 02:12:26,737 - ERROR - Error writing data for MLM to DB: schema "np" does not exist
LINE 4:             VALUES ('MLM','2020-01-02'::date,np.float64(271....
                                                     ^

2025-01-09 02:12:26,737 - DEBUG - Entering download()
2025-01-09 02:12:26,737 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:26,737 - DEBUG -  Entering history()
2025-01-09 02:12:26,738 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MAS', 1, 0])
2025-01-09 02:12:26,738 - DEBUG -   Entering history()
2025-01-09 02:12:26,739 - DEBUG - MAS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:26,739 - DEBUG -    Entering get()
2025-01-09 02:12:26,739 - DEBUG -     Entering _make_request()
2025-01-09 02:12:26,739 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MAS
2025-01-09 02:12:26,739 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:26,739 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:26,739 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:26,739 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:26,739 - DEBUG - reusing cookie
2025-01-09 02:12:26,739 - DEBUG - reusing crumb
2025-01-09 02:12:26,739 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:26,739 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:26,902 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MAS?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1007
2025-01-09 02:12:26,903 - DEBUG - response code=200
2025-01-09 02:12:26,904 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:26,904 - DEBUG -    Exiting get()
2025-01-09 02:12:26,910 - ERROR - 
1 Failed download:
2025-01-09 02:12:26,910 - ERROR - ['MAS']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:26,910 - DEBUG - ['MAS']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:26,916 - DEBUG - Exiting download()
2025-01-09 02:12:26,917 - WARNING - Ticker MAS is missing 'Close' column. Skipping.
2025-01-09 02:12:26,917 - DEBUG - Entering download()
2025-01-09 02:12:26,917 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:26,918 - DEBUG -  Entering history()
2025-01-09 02:12:26,918 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MA', 1, 0])
2025-01-09 02:12:26,919 - DEBUG -   Entering history()
2025-01-09 02:12:26,920 - DEBUG - MA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:26,921 - DEBUG -    Entering get()
2025-01-09 02:12:26,921 - DEBUG -     Entering _make_request()
2025-01-09 02:12:26,921 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MA
2025-01-09 02:12:26,921 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:26,921 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:26,921 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:26,921 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:26,921 - DEBUG - reusing cookie
2025-01-09 02:12:26,922 - DEBUG - reusing crumb
2025-01-09 02:12:26,922 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:26,922 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:27,109 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MA?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1024
2025-01-09 02:12:27,110 - DEBUG - response code=200
2025-01-09 02:12:27,111 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:27,111 - DEBUG -    Exiting get()
2025-01-09 02:12:27,117 - ERROR - 
1 Failed download:
2025-01-09 02:12:27,117 - ERROR - ['MA']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:27,117 - DEBUG - ['MA']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:27,124 - DEBUG - Exiting download()
2025-01-09 02:12:27,235 - ERROR - Error writing data for MA to DB: schema "np" does not exist
LINE 4:             VALUES ('MA','2020-01-02'::date,np.float64(292.1...
                                                    ^

2025-01-09 02:12:27,236 - DEBUG - Entering download()
2025-01-09 02:12:27,236 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:27,236 - DEBUG -  Entering history()
2025-01-09 02:12:27,236 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MTCH', 1, 0])
2025-01-09 02:12:27,236 - DEBUG -   Entering history()
2025-01-09 02:12:27,237 - DEBUG - MTCH: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:27,237 - DEBUG -    Entering get()
2025-01-09 02:12:27,237 - DEBUG -     Entering _make_request()
2025-01-09 02:12:27,237 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MTCH
2025-01-09 02:12:27,237 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:27,237 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:27,237 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:27,237 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:27,238 - DEBUG - reusing cookie
2025-01-09 02:12:27,238 - DEBUG - reusing crumb
2025-01-09 02:12:27,238 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:27,238 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:27,388 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MTCH?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1013
2025-01-09 02:12:27,389 - DEBUG - response code=200
2025-01-09 02:12:27,389 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:27,390 - DEBUG -    Exiting get()
2025-01-09 02:12:27,396 - ERROR - 
1 Failed download:
2025-01-09 02:12:27,396 - ERROR - ['MTCH']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:27,396 - DEBUG - ['MTCH']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:27,403 - DEBUG - Exiting download()
2025-01-09 02:12:27,517 - ERROR - Error writing data for MTCH to DB: schema "np" does not exist
LINE 4:             VALUES ('MTCH','2020-01-02'::date,np.float64(82....
                                                      ^

2025-01-09 02:12:27,518 - DEBUG - Entering download()
2025-01-09 02:12:27,518 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:27,518 - DEBUG -  Entering history()
2025-01-09 02:12:27,518 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MKC', 1, 0])
2025-01-09 02:12:27,518 - DEBUG -   Entering history()
2025-01-09 02:12:27,519 - DEBUG - MKC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:27,519 - DEBUG -    Entering get()
2025-01-09 02:12:27,519 - DEBUG -     Entering _make_request()
2025-01-09 02:12:27,519 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MKC
2025-01-09 02:12:27,519 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:27,519 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:27,519 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:27,519 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:27,519 - DEBUG - reusing cookie
2025-01-09 02:12:27,519 - DEBUG - reusing crumb
2025-01-09 02:12:27,519 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:27,519 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:27,687 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MKC?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1037
2025-01-09 02:12:27,688 - DEBUG - response code=200
2025-01-09 02:12:27,688 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:27,688 - DEBUG -    Exiting get()
2025-01-09 02:12:27,694 - ERROR - 
1 Failed download:
2025-01-09 02:12:27,695 - ERROR - ['MKC']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:27,695 - DEBUG - ['MKC']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:27,703 - DEBUG - Exiting download()
2025-01-09 02:12:27,817 - ERROR - Error writing data for MKC to DB: schema "np" does not exist
LINE 4:             VALUES ('MKC','2020-01-02'::date,np.float64(77.2...
                                                     ^

2025-01-09 02:12:27,817 - DEBUG - Entering download()
2025-01-09 02:12:27,818 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:27,818 - DEBUG -  Entering history()
2025-01-09 02:12:27,818 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MCD', 1, 0])
2025-01-09 02:12:27,818 - DEBUG -   Entering history()
2025-01-09 02:12:27,819 - DEBUG - MCD: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:27,819 - DEBUG -    Entering get()
2025-01-09 02:12:27,819 - DEBUG -     Entering _make_request()
2025-01-09 02:12:27,819 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MCD
2025-01-09 02:12:27,819 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:27,819 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:27,819 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:27,819 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:27,819 - DEBUG - reusing cookie
2025-01-09 02:12:27,819 - DEBUG - reusing crumb
2025-01-09 02:12:27,819 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:27,819 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:28,001 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MCD?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1022
2025-01-09 02:12:28,002 - DEBUG - response code=200
2025-01-09 02:12:28,003 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:28,003 - DEBUG -    Exiting get()
2025-01-09 02:12:28,009 - ERROR - 
1 Failed download:
2025-01-09 02:12:28,009 - ERROR - ['MCD']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:28,010 - DEBUG - ['MCD']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:28,017 - DEBUG - Exiting download()
2025-01-09 02:12:28,141 - ERROR - Error writing data for MCD to DB: schema "np" does not exist
LINE 4:             VALUES ('MCD','2020-01-02'::date,np.float64(176....
                                                     ^

2025-01-09 02:12:28,142 - DEBUG - Entering download()
2025-01-09 02:12:28,142 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:28,142 - DEBUG -  Entering history()
2025-01-09 02:12:28,142 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MCK', 1, 0])
2025-01-09 02:12:28,143 - DEBUG -   Entering history()
2025-01-09 02:12:28,143 - DEBUG - MCK: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:28,143 - DEBUG -    Entering get()
2025-01-09 02:12:28,143 - DEBUG -     Entering _make_request()
2025-01-09 02:12:28,143 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MCK
2025-01-09 02:12:28,143 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:28,143 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:28,144 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:28,144 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:28,144 - DEBUG - reusing cookie
2025-01-09 02:12:28,144 - DEBUG - reusing crumb
2025-01-09 02:12:28,144 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:28,144 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:28,334 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MCK?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1018
2025-01-09 02:12:28,335 - DEBUG - response code=200
2025-01-09 02:12:28,335 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:28,335 - DEBUG -    Exiting get()
2025-01-09 02:12:28,341 - ERROR - 
1 Failed download:
2025-01-09 02:12:28,342 - ERROR - ['MCK']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:28,342 - DEBUG - ['MCK']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:28,349 - DEBUG - Exiting download()
2025-01-09 02:12:28,457 - ERROR - Error writing data for MCK to DB: schema "np" does not exist
LINE 4:             VALUES ('MCK','2020-01-02'::date,np.float64(134....
                                                     ^

2025-01-09 02:12:28,457 - DEBUG - Entering download()
2025-01-09 02:12:28,458 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:28,458 - DEBUG -  Entering history()
2025-01-09 02:12:28,458 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MDT', 1, 0])
2025-01-09 02:12:28,458 - DEBUG -   Entering history()
2025-01-09 02:12:28,459 - DEBUG - MDT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:28,459 - DEBUG -    Entering get()
2025-01-09 02:12:28,459 - DEBUG -     Entering _make_request()
2025-01-09 02:12:28,459 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MDT
2025-01-09 02:12:28,459 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:28,459 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:28,459 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:28,459 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:28,459 - DEBUG - reusing cookie
2025-01-09 02:12:28,459 - DEBUG - reusing crumb
2025-01-09 02:12:28,459 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:28,459 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:28,622 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MDT?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1002
2025-01-09 02:12:28,622 - DEBUG - response code=200
2025-01-09 02:12:28,622 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:28,622 - DEBUG -    Exiting get()
2025-01-09 02:12:28,625 - ERROR - 
1 Failed download:
2025-01-09 02:12:28,625 - ERROR - ['MDT']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:28,625 - DEBUG - ['MDT']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:28,627 - DEBUG - Exiting download()
2025-01-09 02:12:28,628 - WARNING - Ticker MDT is missing 'Close' column. Skipping.
2025-01-09 02:12:28,628 - DEBUG - Entering download()
2025-01-09 02:12:28,628 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:28,628 - DEBUG -  Entering history()
2025-01-09 02:12:28,628 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MRK', 1, 0])
2025-01-09 02:12:28,629 - DEBUG -   Entering history()
2025-01-09 02:12:28,629 - DEBUG - MRK: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:28,629 - DEBUG -    Entering get()
2025-01-09 02:12:28,630 - DEBUG -     Entering _make_request()
2025-01-09 02:12:28,630 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MRK
2025-01-09 02:12:28,630 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:28,630 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:28,630 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:28,630 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:28,630 - DEBUG - reusing cookie
2025-01-09 02:12:28,630 - DEBUG - reusing crumb
2025-01-09 02:12:28,630 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:28,630 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:28,878 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MRK?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1015
2025-01-09 02:12:28,879 - DEBUG - response code=200
2025-01-09 02:12:28,879 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:28,879 - DEBUG -    Exiting get()
2025-01-09 02:12:28,883 - ERROR - 
1 Failed download:
2025-01-09 02:12:28,883 - ERROR - ['MRK']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:28,883 - DEBUG - ['MRK']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:28,885 - DEBUG - Exiting download()
2025-01-09 02:12:28,990 - ERROR - Error writing data for MRK to DB: schema "np" does not exist
LINE 4:             VALUES ('MRK','2020-01-02'::date,np.float64(74.5...
                                                     ^

2025-01-09 02:12:28,990 - DEBUG - Entering download()
2025-01-09 02:12:28,990 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:28,990 - DEBUG -  Entering history()
2025-01-09 02:12:28,991 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['META', 1, 0])
2025-01-09 02:12:28,991 - DEBUG -   Entering history()
2025-01-09 02:12:28,991 - DEBUG - META: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:28,992 - DEBUG -    Entering get()
2025-01-09 02:12:28,992 - DEBUG -     Entering _make_request()
2025-01-09 02:12:28,992 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/META
2025-01-09 02:12:28,992 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:28,992 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:28,992 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:28,992 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:28,992 - DEBUG - reusing cookie
2025-01-09 02:12:28,992 - DEBUG - reusing crumb
2025-01-09 02:12:28,992 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:28,992 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:29,121 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/META?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1024
2025-01-09 02:12:29,122 - DEBUG - response code=200
2025-01-09 02:12:29,122 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:29,122 - DEBUG -    Exiting get()
2025-01-09 02:12:29,127 - ERROR - 
1 Failed download:
2025-01-09 02:12:29,127 - ERROR - ['META']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:29,127 - DEBUG - ['META']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:29,133 - DEBUG - Exiting download()
2025-01-09 02:12:29,133 - WARNING - Ticker META is missing 'Close' column. Skipping.
2025-01-09 02:12:29,134 - DEBUG - Entering download()
2025-01-09 02:12:29,134 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:29,134 - DEBUG -  Entering history()
2025-01-09 02:12:29,135 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MET', 1, 0])
2025-01-09 02:12:29,135 - DEBUG -   Entering history()
2025-01-09 02:12:29,137 - DEBUG - MET: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:29,137 - DEBUG -    Entering get()
2025-01-09 02:12:29,138 - DEBUG -     Entering _make_request()
2025-01-09 02:12:29,138 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MET
2025-01-09 02:12:29,138 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:29,138 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:29,138 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:29,138 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:29,139 - DEBUG - reusing cookie
2025-01-09 02:12:29,139 - DEBUG - reusing crumb
2025-01-09 02:12:29,139 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:29,139 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:29,290 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MET?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1000
2025-01-09 02:12:29,291 - DEBUG - response code=200
2025-01-09 02:12:29,291 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:29,291 - DEBUG -    Exiting get()
2025-01-09 02:12:29,297 - ERROR - 
1 Failed download:
2025-01-09 02:12:29,297 - ERROR - ['MET']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:29,298 - DEBUG - ['MET']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:29,305 - DEBUG - Exiting download()
2025-01-09 02:12:29,305 - WARNING - Ticker MET is missing 'Close' column. Skipping.
2025-01-09 02:12:29,306 - DEBUG - Entering download()
2025-01-09 02:12:29,306 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:29,306 - DEBUG -  Entering history()
2025-01-09 02:12:29,308 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MTD', 1, 0])
2025-01-09 02:12:29,308 - DEBUG -   Entering history()
2025-01-09 02:12:29,311 - DEBUG - MTD: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:29,311 - DEBUG -    Entering get()
2025-01-09 02:12:29,311 - DEBUG -     Entering _make_request()
2025-01-09 02:12:29,311 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MTD
2025-01-09 02:12:29,311 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:29,311 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:29,311 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:29,311 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:29,311 - DEBUG - reusing cookie
2025-01-09 02:12:29,311 - DEBUG - reusing crumb
2025-01-09 02:12:29,311 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:29,311 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:29,442 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MTD?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1046
2025-01-09 02:12:29,443 - DEBUG - response code=200
2025-01-09 02:12:29,443 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:29,444 - DEBUG -    Exiting get()
2025-01-09 02:12:29,450 - ERROR - 
1 Failed download:
2025-01-09 02:12:29,450 - ERROR - ['MTD']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:29,450 - DEBUG - ['MTD']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:29,458 - DEBUG - Exiting download()
2025-01-09 02:12:29,572 - ERROR - Error writing data for MTD to DB: schema "np" does not exist
LINE 4:             VALUES ('MTD','2020-01-02'::date,np.float64(805....
                                                     ^

2025-01-09 02:12:29,572 - DEBUG - Entering download()
2025-01-09 02:12:29,572 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:29,573 - DEBUG -  Entering history()
2025-01-09 02:12:29,573 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MGM', 1, 0])
2025-01-09 02:12:29,573 - DEBUG -   Entering history()
2025-01-09 02:12:29,574 - DEBUG - MGM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:29,574 - DEBUG -    Entering get()
2025-01-09 02:12:29,574 - DEBUG -     Entering _make_request()
2025-01-09 02:12:29,574 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MGM
2025-01-09 02:12:29,574 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:29,574 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:29,574 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:29,574 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:29,574 - DEBUG - reusing cookie
2025-01-09 02:12:29,574 - DEBUG - reusing crumb
2025-01-09 02:12:29,574 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:29,574 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:29,731 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MGM?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1022
2025-01-09 02:12:29,732 - DEBUG - response code=200
2025-01-09 02:12:29,733 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:29,733 - DEBUG -    Exiting get()
2025-01-09 02:12:29,739 - ERROR - 
1 Failed download:
2025-01-09 02:12:29,739 - ERROR - ['MGM']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:29,740 - DEBUG - ['MGM']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:29,747 - DEBUG - Exiting download()
2025-01-09 02:12:29,874 - ERROR - Error writing data for MGM to DB: schema "np" does not exist
LINE 4:             VALUES ('MGM','2020-01-02'::date,np.float64(33.2...
                                                     ^

2025-01-09 02:12:29,874 - DEBUG - Entering download()
2025-01-09 02:12:29,874 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:29,874 - DEBUG -  Entering history()
2025-01-09 02:12:29,875 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MCHP', 1, 0])
2025-01-09 02:12:29,875 - DEBUG -   Entering history()
2025-01-09 02:12:29,875 - DEBUG - MCHP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:29,876 - DEBUG -    Entering get()
2025-01-09 02:12:29,876 - DEBUG -     Entering _make_request()
2025-01-09 02:12:29,876 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MCHP
2025-01-09 02:12:29,876 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:29,876 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:29,876 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:29,876 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:29,876 - DEBUG - reusing cookie
2025-01-09 02:12:29,876 - DEBUG - reusing crumb
2025-01-09 02:12:29,876 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:29,876 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:30,052 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MCHP?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1042
2025-01-09 02:12:30,053 - DEBUG - response code=200
2025-01-09 02:12:30,054 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:30,054 - DEBUG -    Exiting get()
2025-01-09 02:12:30,060 - ERROR - 
1 Failed download:
2025-01-09 02:12:30,060 - ERROR - ['MCHP']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:30,060 - DEBUG - ['MCHP']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:30,068 - DEBUG - Exiting download()
2025-01-09 02:12:30,200 - ERROR - Error writing data for MCHP to DB: schema "np" does not exist
LINE 4:             VALUES ('MCHP','2020-01-02'::date,np.float64(48....
                                                      ^

2025-01-09 02:12:30,200 - DEBUG - Entering download()
2025-01-09 02:12:30,200 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:30,201 - DEBUG -  Entering history()
2025-01-09 02:12:30,201 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MU', 1, 0])
2025-01-09 02:12:30,201 - DEBUG -   Entering history()
2025-01-09 02:12:30,202 - DEBUG - MU: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:30,202 - DEBUG -    Entering get()
2025-01-09 02:12:30,202 - DEBUG -     Entering _make_request()
2025-01-09 02:12:30,202 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MU
2025-01-09 02:12:30,202 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:30,202 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:30,202 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:30,202 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:30,202 - DEBUG - reusing cookie
2025-01-09 02:12:30,202 - DEBUG - reusing crumb
2025-01-09 02:12:30,202 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:30,202 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:30,367 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MU?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1024
2025-01-09 02:12:30,368 - DEBUG - response code=200
2025-01-09 02:12:30,368 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:30,369 - DEBUG -    Exiting get()
2025-01-09 02:12:30,375 - ERROR - 
1 Failed download:
2025-01-09 02:12:30,375 - ERROR - ['MU']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:30,375 - DEBUG - ['MU']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:30,382 - DEBUG - Exiting download()
2025-01-09 02:12:30,638 - ERROR - Error writing data for MU to DB: schema "np" does not exist
LINE 4:             VALUES ('MU','2020-01-02'::date,np.float64(53.69...
                                                    ^

2025-01-09 02:12:30,639 - DEBUG - Entering download()
2025-01-09 02:12:30,639 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:30,639 - DEBUG -  Entering history()
2025-01-09 02:12:30,640 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MSFT', 1, 0])
2025-01-09 02:12:30,640 - DEBUG -   Entering history()
2025-01-09 02:12:30,640 - DEBUG - MSFT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:30,641 - DEBUG -    Entering get()
2025-01-09 02:12:30,641 - DEBUG -     Entering _make_request()
2025-01-09 02:12:30,641 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MSFT
2025-01-09 02:12:30,641 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:30,641 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:30,641 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:30,641 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:30,641 - DEBUG - reusing cookie
2025-01-09 02:12:30,641 - DEBUG - reusing crumb
2025-01-09 02:12:30,641 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:30,641 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:30,808 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MSFT?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1026
2025-01-09 02:12:30,809 - DEBUG - response code=200
2025-01-09 02:12:30,809 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:30,809 - DEBUG -    Exiting get()
2025-01-09 02:12:30,815 - ERROR - 
1 Failed download:
2025-01-09 02:12:30,816 - ERROR - ['MSFT']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:30,816 - DEBUG - ['MSFT']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:30,823 - DEBUG - Exiting download()
2025-01-09 02:12:31,086 - ERROR - Error writing data for MSFT to DB: schema "np" does not exist
LINE 4:             VALUES ('MSFT','2020-01-02'::date,np.float64(151...
                                                      ^

2025-01-09 02:12:31,087 - DEBUG - Entering download()
2025-01-09 02:12:31,087 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:31,087 - DEBUG -  Entering history()
2025-01-09 02:12:31,087 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MAA', 1, 0])
2025-01-09 02:12:31,088 - DEBUG -   Entering history()
2025-01-09 02:12:31,088 - DEBUG - MAA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:31,088 - DEBUG -    Entering get()
2025-01-09 02:12:31,089 - DEBUG -     Entering _make_request()
2025-01-09 02:12:31,089 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MAA
2025-01-09 02:12:31,089 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:31,089 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:31,089 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:31,089 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:31,089 - DEBUG - reusing cookie
2025-01-09 02:12:31,089 - DEBUG - reusing crumb
2025-01-09 02:12:31,089 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:31,089 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:31,254 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MAA?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1049
2025-01-09 02:12:31,255 - DEBUG - response code=200
2025-01-09 02:12:31,255 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:31,255 - DEBUG -    Exiting get()
2025-01-09 02:12:31,261 - ERROR - 
1 Failed download:
2025-01-09 02:12:31,262 - ERROR - ['MAA']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:31,262 - DEBUG - ['MAA']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:31,269 - DEBUG - Exiting download()
2025-01-09 02:12:31,400 - ERROR - Error writing data for MAA to DB: schema "np" does not exist
LINE 4:             VALUES ('MAA','2020-01-02'::date,np.float64(112....
                                                     ^

2025-01-09 02:12:31,401 - DEBUG - Entering download()
2025-01-09 02:12:31,401 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:31,401 - DEBUG -  Entering history()
2025-01-09 02:12:31,402 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MRNA', 1, 0])
2025-01-09 02:12:31,402 - DEBUG -   Entering history()
2025-01-09 02:12:31,403 - DEBUG - MRNA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:31,403 - DEBUG -    Entering get()
2025-01-09 02:12:31,403 - DEBUG -     Entering _make_request()
2025-01-09 02:12:31,403 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MRNA
2025-01-09 02:12:31,403 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:31,403 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:31,403 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:31,403 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:31,403 - DEBUG - reusing cookie
2025-01-09 02:12:31,403 - DEBUG - reusing crumb
2025-01-09 02:12:31,403 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:31,403 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:31,541 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MRNA?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1005
2025-01-09 02:12:31,542 - DEBUG - response code=200
2025-01-09 02:12:31,542 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:31,542 - DEBUG -    Exiting get()
2025-01-09 02:12:31,547 - ERROR - 
1 Failed download:
2025-01-09 02:12:31,547 - ERROR - ['MRNA']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:31,548 - DEBUG - ['MRNA']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:31,553 - DEBUG - Exiting download()
2025-01-09 02:12:31,676 - ERROR - Error writing data for MRNA to DB: schema "np" does not exist
LINE 4:             VALUES ('MRNA','2020-01-02'::date,np.float64(19....
                                                      ^

2025-01-09 02:12:31,676 - DEBUG - Entering download()
2025-01-09 02:12:31,676 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:31,677 - DEBUG -  Entering history()
2025-01-09 02:12:31,677 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MHK', 1, 0])
2025-01-09 02:12:31,677 - DEBUG -   Entering history()
2025-01-09 02:12:31,678 - DEBUG - MHK: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:31,678 - DEBUG -    Entering get()
2025-01-09 02:12:31,678 - DEBUG -     Entering _make_request()
2025-01-09 02:12:31,678 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MHK
2025-01-09 02:12:31,678 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:31,678 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:31,678 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:31,678 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:31,678 - DEBUG - reusing cookie
2025-01-09 02:12:31,678 - DEBUG - reusing crumb
2025-01-09 02:12:31,678 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:31,678 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:31,814 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MHK?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1023
2025-01-09 02:12:31,814 - DEBUG - response code=200
2025-01-09 02:12:31,815 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:31,815 - DEBUG -    Exiting get()
2025-01-09 02:12:31,819 - ERROR - 
1 Failed download:
2025-01-09 02:12:31,819 - ERROR - ['MHK']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:31,820 - DEBUG - ['MHK']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:31,825 - DEBUG - Exiting download()
2025-01-09 02:12:31,938 - ERROR - Error writing data for MHK to DB: schema "np" does not exist
LINE 4:             VALUES ('MHK','2020-01-02'::date,np.float64(136....
                                                     ^

2025-01-09 02:12:31,939 - DEBUG - Entering download()
2025-01-09 02:12:31,939 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:31,939 - DEBUG -  Entering history()
2025-01-09 02:12:31,939 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MOH', 1, 0])
2025-01-09 02:12:31,940 - DEBUG -   Entering history()
2025-01-09 02:12:31,940 - DEBUG - MOH: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:31,940 - DEBUG -    Entering get()
2025-01-09 02:12:31,940 - DEBUG -     Entering _make_request()
2025-01-09 02:12:31,940 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MOH
2025-01-09 02:12:31,940 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:31,940 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:31,941 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:31,941 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:31,941 - DEBUG - reusing cookie
2025-01-09 02:12:31,941 - DEBUG - reusing crumb
2025-01-09 02:12:31,941 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:31,941 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:32,071 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MOH?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1023
2025-01-09 02:12:32,072 - DEBUG - response code=200
2025-01-09 02:12:32,072 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:32,072 - DEBUG -    Exiting get()
2025-01-09 02:12:32,076 - ERROR - 
1 Failed download:
2025-01-09 02:12:32,076 - ERROR - ['MOH']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:32,076 - DEBUG - ['MOH']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:32,082 - DEBUG - Exiting download()
2025-01-09 02:12:32,352 - ERROR - Error writing data for MOH to DB: schema "np" does not exist
LINE 4:             VALUES ('MOH','2020-01-02'::date,np.float64(136....
                                                     ^

2025-01-09 02:12:32,353 - DEBUG - Entering download()
2025-01-09 02:12:32,353 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:32,353 - DEBUG -  Entering history()
2025-01-09 02:12:32,354 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TAP', 1, 0])
2025-01-09 02:12:32,354 - DEBUG -   Entering history()
2025-01-09 02:12:32,355 - DEBUG - TAP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:32,355 - DEBUG -    Entering get()
2025-01-09 02:12:32,355 - DEBUG -     Entering _make_request()
2025-01-09 02:12:32,355 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TAP
2025-01-09 02:12:32,355 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:32,355 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:32,355 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:32,355 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:32,355 - DEBUG - reusing cookie
2025-01-09 02:12:32,355 - DEBUG - reusing crumb
2025-01-09 02:12:32,355 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:32,355 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:32,567 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TAP?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1030
2025-01-09 02:12:32,568 - DEBUG - response code=200
2025-01-09 02:12:32,568 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:32,568 - DEBUG -    Exiting get()
2025-01-09 02:12:32,574 - ERROR - 
1 Failed download:
2025-01-09 02:12:32,575 - ERROR - ['TAP']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:32,575 - DEBUG - ['TAP']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:32,582 - DEBUG - Exiting download()
2025-01-09 02:12:32,694 - ERROR - Error writing data for TAP to DB: schema "np" does not exist
LINE 4:             VALUES ('TAP','2020-01-02'::date,np.float64(48.4...
                                                     ^

2025-01-09 02:12:32,695 - DEBUG - Entering download()
2025-01-09 02:12:32,695 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:32,695 - DEBUG -  Entering history()
2025-01-09 02:12:32,695 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MDLZ', 1, 0])
2025-01-09 02:12:32,696 - DEBUG -   Entering history()
2025-01-09 02:12:32,696 - DEBUG - MDLZ: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:32,696 - DEBUG -    Entering get()
2025-01-09 02:12:32,696 - DEBUG -     Entering _make_request()
2025-01-09 02:12:32,696 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MDLZ
2025-01-09 02:12:32,696 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:32,697 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:32,697 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:32,697 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:32,697 - DEBUG - reusing cookie
2025-01-09 02:12:32,697 - DEBUG - reusing crumb
2025-01-09 02:12:32,697 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:32,697 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:32,856 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MDLZ?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1034
2025-01-09 02:12:32,857 - DEBUG - response code=200
2025-01-09 02:12:32,858 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:32,858 - DEBUG -    Exiting get()
2025-01-09 02:12:32,864 - ERROR - 
1 Failed download:
2025-01-09 02:12:32,864 - ERROR - ['MDLZ']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:32,864 - DEBUG - ['MDLZ']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:32,871 - DEBUG - Exiting download()
2025-01-09 02:12:32,994 - ERROR - Error writing data for MDLZ to DB: schema "np" does not exist
LINE 4:             VALUES ('MDLZ','2020-01-02'::date,np.float64(48....
                                                      ^

2025-01-09 02:12:32,994 - DEBUG - Entering download()
2025-01-09 02:12:32,994 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:32,994 - DEBUG -  Entering history()
2025-01-09 02:12:32,995 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MPWR', 1, 0])
2025-01-09 02:12:32,995 - DEBUG -   Entering history()
2025-01-09 02:12:32,996 - DEBUG - MPWR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:32,996 - DEBUG -    Entering get()
2025-01-09 02:12:32,996 - DEBUG -     Entering _make_request()
2025-01-09 02:12:32,996 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MPWR
2025-01-09 02:12:32,996 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:32,996 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:32,996 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:32,997 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:32,997 - DEBUG - reusing cookie
2025-01-09 02:12:32,997 - DEBUG - reusing crumb
2025-01-09 02:12:32,997 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:32,997 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:33,208 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MPWR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1043
2025-01-09 02:12:33,209 - DEBUG - response code=200
2025-01-09 02:12:33,209 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:33,210 - DEBUG -    Exiting get()
2025-01-09 02:12:33,216 - ERROR - 
1 Failed download:
2025-01-09 02:12:33,216 - ERROR - ['MPWR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:33,216 - DEBUG - ['MPWR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:33,223 - DEBUG - Exiting download()
2025-01-09 02:12:33,223 - WARNING - Ticker MPWR is missing 'Close' column. Skipping.
2025-01-09 02:12:33,224 - DEBUG - Entering download()
2025-01-09 02:12:33,224 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:33,224 - DEBUG -  Entering history()
2025-01-09 02:12:33,225 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MNST', 1, 0])
2025-01-09 02:12:33,226 - DEBUG -   Entering history()
2025-01-09 02:12:33,227 - DEBUG - MNST: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:33,227 - DEBUG -    Entering get()
2025-01-09 02:12:33,228 - DEBUG -     Entering _make_request()
2025-01-09 02:12:33,228 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MNST
2025-01-09 02:12:33,228 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:33,228 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:33,228 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:33,228 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:33,228 - DEBUG - reusing cookie
2025-01-09 02:12:33,229 - DEBUG - reusing crumb
2025-01-09 02:12:33,229 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:33,229 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:33,372 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MNST?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1034
2025-01-09 02:12:33,373 - DEBUG - response code=200
2025-01-09 02:12:33,373 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:33,373 - DEBUG -    Exiting get()
2025-01-09 02:12:33,379 - ERROR - 
1 Failed download:
2025-01-09 02:12:33,379 - ERROR - ['MNST']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:33,379 - DEBUG - ['MNST']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:33,387 - DEBUG - Exiting download()
2025-01-09 02:12:33,387 - WARNING - Ticker MNST is missing 'Close' column. Skipping.
2025-01-09 02:12:33,387 - DEBUG - Entering download()
2025-01-09 02:12:33,388 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:33,388 - DEBUG -  Entering history()
2025-01-09 02:12:33,389 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MCO', 1, 0])
2025-01-09 02:12:33,389 - DEBUG -   Entering history()
2025-01-09 02:12:33,391 - DEBUG - MCO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:33,391 - DEBUG -    Entering get()
2025-01-09 02:12:33,391 - DEBUG -     Entering _make_request()
2025-01-09 02:12:33,391 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MCO
2025-01-09 02:12:33,391 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:33,392 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:33,392 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:33,392 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:33,392 - DEBUG - reusing cookie
2025-01-09 02:12:33,392 - DEBUG - reusing crumb
2025-01-09 02:12:33,392 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:33,392 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:33,557 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MCO?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1015
2025-01-09 02:12:33,558 - DEBUG - response code=200
2025-01-09 02:12:33,558 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:33,559 - DEBUG -    Exiting get()
2025-01-09 02:12:33,565 - ERROR - 
1 Failed download:
2025-01-09 02:12:33,565 - ERROR - ['MCO']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:33,565 - DEBUG - ['MCO']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:33,572 - DEBUG - Exiting download()
2025-01-09 02:12:33,572 - WARNING - Ticker MCO is missing 'Close' column. Skipping.
2025-01-09 02:12:33,573 - DEBUG - Entering download()
2025-01-09 02:12:33,573 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:33,573 - DEBUG -  Entering history()
2025-01-09 02:12:33,574 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MS', 1, 0])
2025-01-09 02:12:33,575 - DEBUG -   Entering history()
2025-01-09 02:12:33,576 - DEBUG - MS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:33,576 - DEBUG -    Entering get()
2025-01-09 02:12:33,577 - DEBUG -     Entering _make_request()
2025-01-09 02:12:33,577 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MS
2025-01-09 02:12:33,577 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:33,577 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:33,577 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:33,577 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:33,577 - DEBUG - reusing cookie
2025-01-09 02:12:33,577 - DEBUG - reusing crumb
2025-01-09 02:12:33,578 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:33,578 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:33,742 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MS?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1004
2025-01-09 02:12:33,743 - DEBUG - response code=200
2025-01-09 02:12:33,743 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:33,743 - DEBUG -    Exiting get()
2025-01-09 02:12:33,747 - ERROR - 
1 Failed download:
2025-01-09 02:12:33,747 - ERROR - ['MS']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:33,747 - DEBUG - ['MS']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:33,749 - DEBUG - Exiting download()
2025-01-09 02:12:33,850 - ERROR - Error writing data for MS to DB: schema "np" does not exist
LINE 4:             VALUES ('MS','2020-01-02'::date,np.float64(43.56...
                                                    ^

2025-01-09 02:12:33,851 - DEBUG - Entering download()
2025-01-09 02:12:33,851 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:33,851 - DEBUG -  Entering history()
2025-01-09 02:12:33,851 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MOS', 1, 0])
2025-01-09 02:12:33,851 - DEBUG -   Entering history()
2025-01-09 02:12:33,852 - DEBUG - MOS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:33,852 - DEBUG -    Entering get()
2025-01-09 02:12:33,852 - DEBUG -     Entering _make_request()
2025-01-09 02:12:33,852 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MOS
2025-01-09 02:12:33,852 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:33,852 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:33,852 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:33,852 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:33,853 - DEBUG - reusing cookie
2025-01-09 02:12:33,853 - DEBUG - reusing crumb
2025-01-09 02:12:33,853 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:33,853 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:34,094 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MOS?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1012
2025-01-09 02:12:34,095 - DEBUG - response code=200
2025-01-09 02:12:34,095 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:34,095 - DEBUG -    Exiting get()
2025-01-09 02:12:34,098 - ERROR - 
1 Failed download:
2025-01-09 02:12:34,098 - ERROR - ['MOS']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:34,098 - DEBUG - ['MOS']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:34,100 - DEBUG - Exiting download()
2025-01-09 02:12:34,203 - ERROR - Error writing data for MOS to DB: schema "np" does not exist
LINE 4:             VALUES ('MOS','2020-01-02'::date,np.float64(20.1...
                                                     ^

2025-01-09 02:12:34,203 - DEBUG - Entering download()
2025-01-09 02:12:34,203 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:34,203 - DEBUG -  Entering history()
2025-01-09 02:12:34,204 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MSI', 1, 0])
2025-01-09 02:12:34,204 - DEBUG -   Entering history()
2025-01-09 02:12:34,205 - DEBUG - MSI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:34,205 - DEBUG -    Entering get()
2025-01-09 02:12:34,205 - DEBUG -     Entering _make_request()
2025-01-09 02:12:34,205 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MSI
2025-01-09 02:12:34,205 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:34,205 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:34,205 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:34,205 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:34,205 - DEBUG - reusing cookie
2025-01-09 02:12:34,205 - DEBUG - reusing crumb
2025-01-09 02:12:34,205 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:34,205 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:34,447 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MSI?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1027
2025-01-09 02:12:34,448 - DEBUG - response code=200
2025-01-09 02:12:34,449 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:34,449 - DEBUG -    Exiting get()
2025-01-09 02:12:34,455 - ERROR - 
1 Failed download:
2025-01-09 02:12:34,455 - ERROR - ['MSI']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:34,455 - DEBUG - ['MSI']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:34,463 - DEBUG - Exiting download()
2025-01-09 02:12:34,576 - ERROR - Error writing data for MSI to DB: schema "np" does not exist
LINE 4:             VALUES ('MSI','2020-01-02'::date,np.float64(151....
                                                     ^

2025-01-09 02:12:34,577 - DEBUG - Entering download()
2025-01-09 02:12:34,577 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:34,577 - DEBUG -  Entering history()
2025-01-09 02:12:34,577 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MSCI', 1, 0])
2025-01-09 02:12:34,578 - DEBUG -   Entering history()
2025-01-09 02:12:34,578 - DEBUG - MSCI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:34,578 - DEBUG -    Entering get()
2025-01-09 02:12:34,578 - DEBUG -     Entering _make_request()
2025-01-09 02:12:34,578 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MSCI
2025-01-09 02:12:34,578 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:34,579 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:34,579 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:34,579 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:34,579 - DEBUG - reusing cookie
2025-01-09 02:12:34,579 - DEBUG - reusing crumb
2025-01-09 02:12:34,579 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:34,579 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:34,731 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MSCI?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 998
2025-01-09 02:12:34,732 - DEBUG - response code=200
2025-01-09 02:12:34,732 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:34,732 - DEBUG -    Exiting get()
2025-01-09 02:12:34,738 - ERROR - 
1 Failed download:
2025-01-09 02:12:34,739 - ERROR - ['MSCI']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:34,739 - DEBUG - ['MSCI']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:34,746 - DEBUG - Exiting download()
2025-01-09 02:12:34,871 - ERROR - Error writing data for MSCI to DB: schema "np" does not exist
LINE 4:             VALUES ('MSCI','2020-01-02'::date,np.float64(248...
                                                      ^

2025-01-09 02:12:34,871 - DEBUG - Entering download()
2025-01-09 02:12:34,872 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:34,872 - DEBUG -  Entering history()
2025-01-09 02:12:34,872 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NDAQ', 1, 0])
2025-01-09 02:12:34,872 - DEBUG -   Entering history()
2025-01-09 02:12:34,873 - DEBUG - NDAQ: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:34,873 - DEBUG -    Entering get()
2025-01-09 02:12:34,873 - DEBUG -     Entering _make_request()
2025-01-09 02:12:34,873 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NDAQ
2025-01-09 02:12:34,873 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:34,873 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:34,873 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:34,873 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:34,873 - DEBUG - reusing cookie
2025-01-09 02:12:34,873 - DEBUG - reusing crumb
2025-01-09 02:12:34,873 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:34,873 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:35,029 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NDAQ?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1001
2025-01-09 02:12:35,029 - DEBUG - response code=200
2025-01-09 02:12:35,029 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:35,030 - DEBUG -    Exiting get()
2025-01-09 02:12:35,033 - ERROR - 
1 Failed download:
2025-01-09 02:12:35,033 - ERROR - ['NDAQ']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:35,033 - DEBUG - ['NDAQ']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:35,037 - DEBUG - Exiting download()
2025-01-09 02:12:35,289 - ERROR - Error writing data for NDAQ to DB: schema "np" does not exist
LINE 4:             VALUES ('NDAQ','2020-01-02'::date,np.float64(33....
                                                      ^

2025-01-09 02:12:35,289 - DEBUG - Entering download()
2025-01-09 02:12:35,289 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:35,290 - DEBUG -  Entering history()
2025-01-09 02:12:35,290 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NTAP', 1, 0])
2025-01-09 02:12:35,290 - DEBUG -   Entering history()
2025-01-09 02:12:35,291 - DEBUG - NTAP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:35,291 - DEBUG -    Entering get()
2025-01-09 02:12:35,291 - DEBUG -     Entering _make_request()
2025-01-09 02:12:35,291 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NTAP
2025-01-09 02:12:35,291 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:35,291 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:35,291 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:35,291 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:35,291 - DEBUG - reusing cookie
2025-01-09 02:12:35,291 - DEBUG - reusing crumb
2025-01-09 02:12:35,291 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:35,291 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:35,446 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NTAP?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1031
2025-01-09 02:12:35,447 - DEBUG - response code=200
2025-01-09 02:12:35,447 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:35,448 - DEBUG -    Exiting get()
2025-01-09 02:12:35,454 - ERROR - 
1 Failed download:
2025-01-09 02:12:35,454 - ERROR - ['NTAP']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:35,454 - DEBUG - ['NTAP']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:35,461 - DEBUG - Exiting download()
2025-01-09 02:12:35,581 - ERROR - Error writing data for NTAP to DB: schema "np" does not exist
LINE 4:             VALUES ('NTAP','2020-01-02'::date,np.float64(53....
                                                      ^

2025-01-09 02:12:35,582 - DEBUG - Entering download()
2025-01-09 02:12:35,582 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:35,582 - DEBUG -  Entering history()
2025-01-09 02:12:35,582 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NFLX', 1, 0])
2025-01-09 02:12:35,582 - DEBUG -   Entering history()
2025-01-09 02:12:35,583 - DEBUG - NFLX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:35,583 - DEBUG -    Entering get()
2025-01-09 02:12:35,583 - DEBUG -     Entering _make_request()
2025-01-09 02:12:35,583 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NFLX
2025-01-09 02:12:35,583 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:35,583 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:35,583 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:35,583 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:35,583 - DEBUG - reusing cookie
2025-01-09 02:12:35,583 - DEBUG - reusing crumb
2025-01-09 02:12:35,583 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:35,583 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:35,730 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NFLX?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1011
2025-01-09 02:12:35,731 - DEBUG - response code=200
2025-01-09 02:12:35,731 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:35,731 - DEBUG -    Exiting get()
2025-01-09 02:12:35,733 - ERROR - 
1 Failed download:
2025-01-09 02:12:35,733 - ERROR - ['NFLX']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:35,733 - DEBUG - ['NFLX']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:35,735 - DEBUG - Exiting download()
2025-01-09 02:12:35,735 - WARNING - Ticker NFLX is missing 'Close' column. Skipping.
2025-01-09 02:12:35,735 - DEBUG - Entering download()
2025-01-09 02:12:35,735 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:35,736 - DEBUG -  Entering history()
2025-01-09 02:12:35,736 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NEM', 1, 0])
2025-01-09 02:12:35,736 - DEBUG -   Entering history()
2025-01-09 02:12:35,737 - DEBUG - NEM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:35,737 - DEBUG -    Entering get()
2025-01-09 02:12:35,737 - DEBUG -     Entering _make_request()
2025-01-09 02:12:35,737 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NEM
2025-01-09 02:12:35,737 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:35,737 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:35,737 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:35,737 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:35,737 - DEBUG - reusing cookie
2025-01-09 02:12:35,737 - DEBUG - reusing crumb
2025-01-09 02:12:35,737 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:35,737 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:35,927 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NEM?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1011
2025-01-09 02:12:35,928 - DEBUG - response code=200
2025-01-09 02:12:35,929 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:35,929 - DEBUG -    Exiting get()
2025-01-09 02:12:35,935 - ERROR - 
1 Failed download:
2025-01-09 02:12:35,935 - ERROR - ['NEM']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:35,935 - DEBUG - ['NEM']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:35,943 - DEBUG - Exiting download()
2025-01-09 02:12:35,943 - WARNING - Ticker NEM is missing 'Close' column. Skipping.
2025-01-09 02:12:35,943 - DEBUG - Entering download()
2025-01-09 02:12:35,944 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:35,944 - DEBUG -  Entering history()
2025-01-09 02:12:35,945 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NWSA', 1, 0])
2025-01-09 02:12:35,945 - DEBUG -   Entering history()
2025-01-09 02:12:35,947 - DEBUG - NWSA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:35,948 - DEBUG -    Entering get()
2025-01-09 02:12:35,948 - DEBUG -     Entering _make_request()
2025-01-09 02:12:35,948 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NWSA
2025-01-09 02:12:35,949 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:35,949 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:35,949 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:35,949 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:35,949 - DEBUG - reusing cookie
2025-01-09 02:12:35,949 - DEBUG - reusing crumb
2025-01-09 02:12:35,949 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:35,949 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:36,099 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NWSA?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1012
2025-01-09 02:12:36,100 - DEBUG - response code=200
2025-01-09 02:12:36,100 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:36,100 - DEBUG -    Exiting get()
2025-01-09 02:12:36,106 - ERROR - 
1 Failed download:
2025-01-09 02:12:36,106 - ERROR - ['NWSA']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:36,106 - DEBUG - ['NWSA']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:36,114 - DEBUG - Exiting download()
2025-01-09 02:12:36,247 - ERROR - Error writing data for NWSA to DB: schema "np" does not exist
LINE 4:             VALUES ('NWSA','2020-01-02'::date,np.float64(13....
                                                      ^

2025-01-09 02:12:36,248 - DEBUG - Entering download()
2025-01-09 02:12:36,248 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:36,248 - DEBUG -  Entering history()
2025-01-09 02:12:36,248 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NWS', 1, 0])
2025-01-09 02:12:36,249 - DEBUG -   Entering history()
2025-01-09 02:12:36,249 - DEBUG - NWS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:36,250 - DEBUG -    Entering get()
2025-01-09 02:12:36,250 - DEBUG -     Entering _make_request()
2025-01-09 02:12:36,250 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NWS
2025-01-09 02:12:36,250 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:36,250 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:36,250 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:36,250 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:36,250 - DEBUG - reusing cookie
2025-01-09 02:12:36,250 - DEBUG - reusing crumb
2025-01-09 02:12:36,250 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:36,250 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:36,391 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NWS?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1007
2025-01-09 02:12:36,392 - DEBUG - response code=200
2025-01-09 02:12:36,393 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:36,393 - DEBUG -    Exiting get()
2025-01-09 02:12:36,399 - ERROR - 
1 Failed download:
2025-01-09 02:12:36,399 - ERROR - ['NWS']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:36,399 - DEBUG - ['NWS']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:36,407 - DEBUG - Exiting download()
2025-01-09 02:12:36,407 - WARNING - Ticker NWS is missing 'Close' column. Skipping.
2025-01-09 02:12:36,407 - DEBUG - Entering download()
2025-01-09 02:12:36,408 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:36,408 - DEBUG -  Entering history()
2025-01-09 02:12:36,409 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NEE', 1, 0])
2025-01-09 02:12:36,409 - DEBUG -   Entering history()
2025-01-09 02:12:36,411 - DEBUG - NEE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:36,411 - DEBUG -    Entering get()
2025-01-09 02:12:36,411 - DEBUG -     Entering _make_request()
2025-01-09 02:12:36,411 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NEE
2025-01-09 02:12:36,411 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:36,412 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:36,412 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:36,412 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:36,412 - DEBUG - reusing cookie
2025-01-09 02:12:36,412 - DEBUG - reusing crumb
2025-01-09 02:12:36,412 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:36,412 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:36,631 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NEE?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1010
2025-01-09 02:12:36,632 - DEBUG - response code=200
2025-01-09 02:12:36,633 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:36,633 - DEBUG -    Exiting get()
2025-01-09 02:12:36,639 - ERROR - 
1 Failed download:
2025-01-09 02:12:36,639 - ERROR - ['NEE']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:36,639 - DEBUG - ['NEE']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:36,646 - DEBUG - Exiting download()
2025-01-09 02:12:36,770 - ERROR - Error writing data for NEE to DB: schema "np" does not exist
LINE 4:             VALUES ('NEE','2020-01-02'::date,np.float64(53.7...
                                                     ^

2025-01-09 02:12:36,770 - DEBUG - Entering download()
2025-01-09 02:12:36,770 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:36,770 - DEBUG -  Entering history()
2025-01-09 02:12:36,771 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NKE', 1, 0])
2025-01-09 02:12:36,771 - DEBUG -   Entering history()
2025-01-09 02:12:36,772 - DEBUG - NKE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:36,772 - DEBUG -    Entering get()
2025-01-09 02:12:36,772 - DEBUG -     Entering _make_request()
2025-01-09 02:12:36,772 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NKE
2025-01-09 02:12:36,772 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:36,772 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:36,772 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:36,772 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:36,773 - DEBUG - reusing cookie
2025-01-09 02:12:36,773 - DEBUG - reusing crumb
2025-01-09 02:12:36,773 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:36,773 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:36,949 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NKE?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 996
2025-01-09 02:12:36,950 - DEBUG - response code=200
2025-01-09 02:12:36,950 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:36,950 - DEBUG -    Exiting get()
2025-01-09 02:12:36,953 - ERROR - 
1 Failed download:
2025-01-09 02:12:36,953 - ERROR - ['NKE']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:36,953 - DEBUG - ['NKE']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:36,957 - DEBUG - Exiting download()
2025-01-09 02:12:37,079 - ERROR - Error writing data for NKE to DB: schema "np" does not exist
LINE 4:             VALUES ('NKE','2020-01-02'::date,np.float64(95.6...
                                                     ^

2025-01-09 02:12:37,079 - DEBUG - Entering download()
2025-01-09 02:12:37,079 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:37,079 - DEBUG -  Entering history()
2025-01-09 02:12:37,080 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NI', 1, 0])
2025-01-09 02:12:37,080 - DEBUG -   Entering history()
2025-01-09 02:12:37,080 - DEBUG - NI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:37,080 - DEBUG -    Entering get()
2025-01-09 02:12:37,081 - DEBUG -     Entering _make_request()
2025-01-09 02:12:37,081 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NI
2025-01-09 02:12:37,081 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:37,081 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:37,081 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:37,081 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:37,081 - DEBUG - reusing cookie
2025-01-09 02:12:37,081 - DEBUG - reusing crumb
2025-01-09 02:12:37,081 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:37,081 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:37,272 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NI?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 997
2025-01-09 02:12:37,273 - DEBUG - response code=200
2025-01-09 02:12:37,274 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:37,274 - DEBUG -    Exiting get()
2025-01-09 02:12:37,280 - ERROR - 
1 Failed download:
2025-01-09 02:12:37,280 - ERROR - ['NI']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:37,281 - DEBUG - ['NI']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:37,288 - DEBUG - Exiting download()
2025-01-09 02:12:37,288 - WARNING - Ticker NI is missing 'Close' column. Skipping.
2025-01-09 02:12:37,288 - DEBUG - Entering download()
2025-01-09 02:12:37,289 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:37,289 - DEBUG -  Entering history()
2025-01-09 02:12:37,290 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NDSN', 1, 0])
2025-01-09 02:12:37,290 - DEBUG -   Entering history()
2025-01-09 02:12:37,292 - DEBUG - NDSN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:37,292 - DEBUG -    Entering get()
2025-01-09 02:12:37,292 - DEBUG -     Entering _make_request()
2025-01-09 02:12:37,292 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NDSN
2025-01-09 02:12:37,292 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:37,292 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:37,293 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:37,293 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:37,293 - DEBUG - reusing cookie
2025-01-09 02:12:37,293 - DEBUG - reusing crumb
2025-01-09 02:12:37,293 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:37,293 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:37,494 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NDSN?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1021
2025-01-09 02:12:37,495 - DEBUG - response code=200
2025-01-09 02:12:37,495 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:37,495 - DEBUG -    Exiting get()
2025-01-09 02:12:37,499 - ERROR - 
1 Failed download:
2025-01-09 02:12:37,499 - ERROR - ['NDSN']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:37,499 - DEBUG - ['NDSN']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:37,501 - DEBUG - Exiting download()
2025-01-09 02:12:37,618 - ERROR - Error writing data for NDSN to DB: schema "np" does not exist
LINE 4:             VALUES ('NDSN','2020-01-02'::date,np.float64(155...
                                                      ^

2025-01-09 02:12:37,618 - DEBUG - Entering download()
2025-01-09 02:12:37,618 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:37,619 - DEBUG -  Entering history()
2025-01-09 02:12:37,619 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NSC', 1, 0])
2025-01-09 02:12:37,619 - DEBUG -   Entering history()
2025-01-09 02:12:37,620 - DEBUG - NSC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:37,620 - DEBUG -    Entering get()
2025-01-09 02:12:37,620 - DEBUG -     Entering _make_request()
2025-01-09 02:12:37,620 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NSC
2025-01-09 02:12:37,620 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:37,620 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:37,620 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:37,620 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:37,620 - DEBUG - reusing cookie
2025-01-09 02:12:37,620 - DEBUG - reusing crumb
2025-01-09 02:12:37,620 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:37,620 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:37,813 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NSC?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1033
2025-01-09 02:12:37,814 - DEBUG - response code=200
2025-01-09 02:12:37,814 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:37,814 - DEBUG -    Exiting get()
2025-01-09 02:12:37,819 - ERROR - 
1 Failed download:
2025-01-09 02:12:37,819 - ERROR - ['NSC']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:37,819 - DEBUG - ['NSC']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:37,825 - DEBUG - Exiting download()
2025-01-09 02:12:37,953 - ERROR - Error writing data for NSC to DB: schema "np" does not exist
LINE 4:             VALUES ('NSC','2020-01-02'::date,np.float64(176....
                                                     ^

2025-01-09 02:12:37,953 - DEBUG - Entering download()
2025-01-09 02:12:37,954 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:37,954 - DEBUG -  Entering history()
2025-01-09 02:12:37,954 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NTRS', 1, 0])
2025-01-09 02:12:37,954 - DEBUG -   Entering history()
2025-01-09 02:12:37,955 - DEBUG - NTRS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:37,955 - DEBUG -    Entering get()
2025-01-09 02:12:37,955 - DEBUG -     Entering _make_request()
2025-01-09 02:12:37,955 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NTRS
2025-01-09 02:12:37,955 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:37,955 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:37,955 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:37,955 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:37,955 - DEBUG - reusing cookie
2025-01-09 02:12:37,955 - DEBUG - reusing crumb
2025-01-09 02:12:37,955 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:37,955 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:38,120 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NTRS?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1035
2025-01-09 02:12:38,121 - DEBUG - response code=200
2025-01-09 02:12:38,121 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:38,121 - DEBUG -    Exiting get()
2025-01-09 02:12:38,127 - ERROR - 
1 Failed download:
2025-01-09 02:12:38,127 - ERROR - ['NTRS']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:38,127 - DEBUG - ['NTRS']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:38,133 - DEBUG - Exiting download()
2025-01-09 02:12:38,134 - WARNING - Ticker NTRS is missing 'Close' column. Skipping.
2025-01-09 02:12:38,134 - DEBUG - Entering download()
2025-01-09 02:12:38,134 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:38,135 - DEBUG -  Entering history()
2025-01-09 02:12:38,135 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NOC', 1, 0])
2025-01-09 02:12:38,136 - DEBUG -   Entering history()
2025-01-09 02:12:38,138 - DEBUG - NOC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:38,138 - DEBUG -    Entering get()
2025-01-09 02:12:38,138 - DEBUG -     Entering _make_request()
2025-01-09 02:12:38,138 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NOC
2025-01-09 02:12:38,138 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:38,138 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:38,138 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:38,139 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:38,139 - DEBUG - reusing cookie
2025-01-09 02:12:38,139 - DEBUG - reusing crumb
2025-01-09 02:12:38,139 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:38,139 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:38,351 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NOC?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1033
2025-01-09 02:12:38,352 - DEBUG - response code=200
2025-01-09 02:12:38,353 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:38,353 - DEBUG -    Exiting get()
2025-01-09 02:12:38,359 - ERROR - 
1 Failed download:
2025-01-09 02:12:38,359 - ERROR - ['NOC']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:38,359 - DEBUG - ['NOC']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:38,367 - DEBUG - Exiting download()
2025-01-09 02:12:38,473 - ERROR - Error writing data for NOC to DB: schema "np" does not exist
LINE 4:             VALUES ('NOC','2020-01-02'::date,np.float64(317....
                                                     ^

2025-01-09 02:12:38,473 - DEBUG - Entering download()
2025-01-09 02:12:38,474 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:38,474 - DEBUG -  Entering history()
2025-01-09 02:12:38,474 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NCLH', 1, 0])
2025-01-09 02:12:38,474 - DEBUG -   Entering history()
2025-01-09 02:12:38,475 - DEBUG - NCLH: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:38,475 - DEBUG -    Entering get()
2025-01-09 02:12:38,475 - DEBUG -     Entering _make_request()
2025-01-09 02:12:38,476 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NCLH
2025-01-09 02:12:38,476 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:38,476 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:38,476 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:38,476 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:38,476 - DEBUG - reusing cookie
2025-01-09 02:12:38,476 - DEBUG - reusing crumb
2025-01-09 02:12:38,476 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:38,476 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:38,610 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NCLH?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1042
2025-01-09 02:12:38,610 - DEBUG - response code=200
2025-01-09 02:12:38,611 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:38,611 - DEBUG -    Exiting get()
2025-01-09 02:12:38,613 - ERROR - 
1 Failed download:
2025-01-09 02:12:38,613 - ERROR - ['NCLH']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:38,613 - DEBUG - ['NCLH']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:38,615 - DEBUG - Exiting download()
2025-01-09 02:12:38,818 - ERROR - Error writing data for NCLH to DB: schema "np" does not exist
LINE 4:             VALUES ('NCLH','2020-01-02'::date,np.float64(58....
                                                      ^

2025-01-09 02:12:38,818 - DEBUG - Entering download()
2025-01-09 02:12:38,818 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:38,818 - DEBUG -  Entering history()
2025-01-09 02:12:38,819 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NRG', 1, 0])
2025-01-09 02:12:38,819 - DEBUG -   Entering history()
2025-01-09 02:12:38,820 - DEBUG - NRG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:38,820 - DEBUG -    Entering get()
2025-01-09 02:12:38,820 - DEBUG -     Entering _make_request()
2025-01-09 02:12:38,820 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NRG
2025-01-09 02:12:38,820 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:38,820 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:38,820 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:38,820 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:38,820 - DEBUG - reusing cookie
2025-01-09 02:12:38,820 - DEBUG - reusing crumb
2025-01-09 02:12:38,820 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:38,820 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:38,970 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NRG?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1008
2025-01-09 02:12:38,971 - DEBUG - response code=200
2025-01-09 02:12:38,972 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:38,972 - DEBUG -    Exiting get()
2025-01-09 02:12:38,978 - ERROR - 
1 Failed download:
2025-01-09 02:12:38,978 - ERROR - ['NRG']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:38,979 - DEBUG - ['NRG']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:38,986 - DEBUG - Exiting download()
2025-01-09 02:12:38,986 - WARNING - Ticker NRG is missing 'Close' column. Skipping.
2025-01-09 02:12:38,986 - DEBUG - Entering download()
2025-01-09 02:12:38,987 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:38,987 - DEBUG -  Entering history()
2025-01-09 02:12:38,988 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NUE', 1, 0])
2025-01-09 02:12:38,988 - DEBUG -   Entering history()
2025-01-09 02:12:38,990 - DEBUG - NUE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:38,990 - DEBUG -    Entering get()
2025-01-09 02:12:38,990 - DEBUG -     Entering _make_request()
2025-01-09 02:12:38,990 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NUE
2025-01-09 02:12:38,990 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:38,990 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:38,991 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:38,991 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:38,991 - DEBUG - reusing cookie
2025-01-09 02:12:38,991 - DEBUG - reusing crumb
2025-01-09 02:12:38,991 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:38,991 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:39,182 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NUE?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1011
2025-01-09 02:12:39,183 - DEBUG - response code=200
2025-01-09 02:12:39,183 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:39,183 - DEBUG -    Exiting get()
2025-01-09 02:12:39,189 - ERROR - 
1 Failed download:
2025-01-09 02:12:39,190 - ERROR - ['NUE']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:39,190 - DEBUG - ['NUE']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:39,197 - DEBUG - Exiting download()
2025-01-09 02:12:39,197 - WARNING - Ticker NUE is missing 'Close' column. Skipping.
2025-01-09 02:12:39,198 - DEBUG - Entering download()
2025-01-09 02:12:39,198 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:39,198 - DEBUG -  Entering history()
2025-01-09 02:12:39,199 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NVDA', 1, 0])
2025-01-09 02:12:39,199 - DEBUG -   Entering history()
2025-01-09 02:12:39,201 - DEBUG - NVDA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:39,201 - DEBUG -    Entering get()
2025-01-09 02:12:39,201 - DEBUG -     Entering _make_request()
2025-01-09 02:12:39,202 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NVDA
2025-01-09 02:12:39,202 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:39,202 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:39,202 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:39,202 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:39,202 - DEBUG - reusing cookie
2025-01-09 02:12:39,202 - DEBUG - reusing crumb
2025-01-09 02:12:39,202 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:39,202 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:39,337 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NVDA?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1021
2025-01-09 02:12:39,338 - DEBUG - response code=200
2025-01-09 02:12:39,339 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:39,339 - DEBUG -    Exiting get()
2025-01-09 02:12:39,345 - ERROR - 
1 Failed download:
2025-01-09 02:12:39,345 - ERROR - ['NVDA']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:39,345 - DEBUG - ['NVDA']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:39,352 - DEBUG - Exiting download()
2025-01-09 02:12:39,353 - WARNING - Ticker NVDA is missing 'Close' column. Skipping.
2025-01-09 02:12:39,353 - DEBUG - Entering download()
2025-01-09 02:12:39,353 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:39,354 - DEBUG -  Entering history()
2025-01-09 02:12:39,355 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NVR', 1, 0])
2025-01-09 02:12:39,355 - DEBUG -   Entering history()
2025-01-09 02:12:39,357 - DEBUG - NVR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:39,357 - DEBUG -    Entering get()
2025-01-09 02:12:39,357 - DEBUG -     Entering _make_request()
2025-01-09 02:12:39,357 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NVR
2025-01-09 02:12:39,357 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:39,358 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:39,358 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:39,358 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:39,358 - DEBUG - reusing cookie
2025-01-09 02:12:39,358 - DEBUG - reusing crumb
2025-01-09 02:12:39,358 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:39,358 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:39,488 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NVR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 998
2025-01-09 02:12:39,489 - DEBUG - response code=200
2025-01-09 02:12:39,490 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:39,490 - DEBUG -    Exiting get()
2025-01-09 02:12:39,496 - ERROR - 
1 Failed download:
2025-01-09 02:12:39,496 - ERROR - ['NVR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:39,496 - DEBUG - ['NVR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:39,504 - DEBUG - Exiting download()
2025-01-09 02:12:39,504 - WARNING - Ticker NVR is missing 'Close' column. Skipping.
2025-01-09 02:12:39,504 - DEBUG - Entering download()
2025-01-09 02:12:39,504 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:39,505 - DEBUG -  Entering history()
2025-01-09 02:12:39,506 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NXPI', 1, 0])
2025-01-09 02:12:39,506 - DEBUG -   Entering history()
2025-01-09 02:12:39,508 - DEBUG - NXPI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:39,508 - DEBUG -    Entering get()
2025-01-09 02:12:39,508 - DEBUG -     Entering _make_request()
2025-01-09 02:12:39,508 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NXPI
2025-01-09 02:12:39,508 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:39,508 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:39,509 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:39,509 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:39,509 - DEBUG - reusing cookie
2025-01-09 02:12:39,509 - DEBUG - reusing crumb
2025-01-09 02:12:39,509 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:39,509 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:39,652 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NXPI?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1031
2025-01-09 02:12:39,653 - DEBUG - response code=200
2025-01-09 02:12:39,654 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:39,654 - DEBUG -    Exiting get()
2025-01-09 02:12:39,658 - ERROR - 
1 Failed download:
2025-01-09 02:12:39,658 - ERROR - ['NXPI']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:39,658 - DEBUG - ['NXPI']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:39,660 - DEBUG - Exiting download()
2025-01-09 02:12:39,660 - WARNING - Ticker NXPI is missing 'Close' column. Skipping.
2025-01-09 02:12:39,660 - DEBUG - Entering download()
2025-01-09 02:12:39,660 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:39,660 - DEBUG -  Entering history()
2025-01-09 02:12:39,661 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ORLY', 1, 0])
2025-01-09 02:12:39,661 - DEBUG -   Entering history()
2025-01-09 02:12:39,662 - DEBUG - ORLY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:39,662 - DEBUG -    Entering get()
2025-01-09 02:12:39,662 - DEBUG -     Entering _make_request()
2025-01-09 02:12:39,662 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ORLY
2025-01-09 02:12:39,662 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:39,662 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:39,662 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:39,662 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:39,662 - DEBUG - reusing cookie
2025-01-09 02:12:39,662 - DEBUG - reusing crumb
2025-01-09 02:12:39,662 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:39,662 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:39,805 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ORLY?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1037
2025-01-09 02:12:39,805 - DEBUG - response code=200
2025-01-09 02:12:39,806 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:39,806 - DEBUG -    Exiting get()
2025-01-09 02:12:39,808 - ERROR - 
1 Failed download:
2025-01-09 02:12:39,808 - ERROR - ['ORLY']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:39,808 - DEBUG - ['ORLY']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:39,810 - DEBUG - Exiting download()
2025-01-09 02:12:39,924 - ERROR - Error writing data for ORLY to DB: schema "np" does not exist
LINE 4:             VALUES ('ORLY','2020-01-02'::date,np.float64(438...
                                                      ^

2025-01-09 02:12:39,924 - DEBUG - Entering download()
2025-01-09 02:12:39,924 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:39,925 - DEBUG -  Entering history()
2025-01-09 02:12:39,925 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['OXY', 1, 0])
2025-01-09 02:12:39,925 - DEBUG -   Entering history()
2025-01-09 02:12:39,926 - DEBUG - OXY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:39,926 - DEBUG -    Entering get()
2025-01-09 02:12:39,926 - DEBUG -     Entering _make_request()
2025-01-09 02:12:39,926 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/OXY
2025-01-09 02:12:39,926 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:39,926 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:39,926 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:39,926 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:39,926 - DEBUG - reusing cookie
2025-01-09 02:12:39,926 - DEBUG - reusing crumb
2025-01-09 02:12:39,926 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:39,926 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:40,106 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/OXY?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1035
2025-01-09 02:12:40,107 - DEBUG - response code=200
2025-01-09 02:12:40,107 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:40,108 - DEBUG -    Exiting get()
2025-01-09 02:12:40,114 - ERROR - 
1 Failed download:
2025-01-09 02:12:40,114 - ERROR - ['OXY']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:40,114 - DEBUG - ['OXY']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:40,121 - DEBUG - Exiting download()
2025-01-09 02:12:40,261 - ERROR - Error writing data for OXY to DB: schema "np" does not exist
LINE 4:             VALUES ('OXY','2020-01-02'::date,np.float64(38.8...
                                                     ^

2025-01-09 02:12:40,261 - DEBUG - Entering download()
2025-01-09 02:12:40,261 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:40,262 - DEBUG -  Entering history()
2025-01-09 02:12:40,262 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ODFL', 1, 0])
2025-01-09 02:12:40,262 - DEBUG -   Entering history()
2025-01-09 02:12:40,263 - DEBUG - ODFL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:40,263 - DEBUG -    Entering get()
2025-01-09 02:12:40,263 - DEBUG -     Entering _make_request()
2025-01-09 02:12:40,263 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ODFL
2025-01-09 02:12:40,263 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:40,263 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:40,263 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:40,263 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:40,263 - DEBUG - reusing cookie
2025-01-09 02:12:40,263 - DEBUG - reusing crumb
2025-01-09 02:12:40,263 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:40,264 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:40,406 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ODFL?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1045
2025-01-09 02:12:40,406 - DEBUG - response code=200
2025-01-09 02:12:40,406 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:40,406 - DEBUG -    Exiting get()
2025-01-09 02:12:40,409 - ERROR - 
1 Failed download:
2025-01-09 02:12:40,409 - ERROR - ['ODFL']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:40,409 - DEBUG - ['ODFL']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:40,412 - DEBUG - Exiting download()
2025-01-09 02:12:40,656 - ERROR - Error writing data for ODFL to DB: schema "np" does not exist
LINE 4:             VALUES ('ODFL','2020-01-02'::date,np.float64(62....
                                                      ^

2025-01-09 02:12:40,657 - DEBUG - Entering download()
2025-01-09 02:12:40,657 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:40,657 - DEBUG -  Entering history()
2025-01-09 02:12:40,657 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['OMC', 1, 0])
2025-01-09 02:12:40,658 - DEBUG -   Entering history()
2025-01-09 02:12:40,658 - DEBUG - OMC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:40,659 - DEBUG -    Entering get()
2025-01-09 02:12:40,659 - DEBUG -     Entering _make_request()
2025-01-09 02:12:40,659 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/OMC
2025-01-09 02:12:40,659 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:40,659 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:40,659 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:40,659 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:40,659 - DEBUG - reusing cookie
2025-01-09 02:12:40,659 - DEBUG - reusing crumb
2025-01-09 02:12:40,659 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:40,659 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:40,833 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/OMC?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1009
2025-01-09 02:12:40,834 - DEBUG - response code=200
2025-01-09 02:12:40,835 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:40,835 - DEBUG -    Exiting get()
2025-01-09 02:12:40,841 - ERROR - 
1 Failed download:
2025-01-09 02:12:40,841 - ERROR - ['OMC']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:40,841 - DEBUG - ['OMC']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:40,849 - DEBUG - Exiting download()
2025-01-09 02:12:40,963 - ERROR - Error writing data for OMC to DB: schema "np" does not exist
LINE 4:             VALUES ('OMC','2020-01-02'::date,np.float64(67.6...
                                                     ^

2025-01-09 02:12:40,964 - DEBUG - Entering download()
2025-01-09 02:12:40,964 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:40,964 - DEBUG -  Entering history()
2025-01-09 02:12:40,964 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ON', 1, 0])
2025-01-09 02:12:40,965 - DEBUG -   Entering history()
2025-01-09 02:12:40,965 - DEBUG - ON: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:40,965 - DEBUG -    Entering get()
2025-01-09 02:12:40,965 - DEBUG -     Entering _make_request()
2025-01-09 02:12:40,966 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ON
2025-01-09 02:12:40,966 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:40,966 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:40,966 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:40,966 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:40,966 - DEBUG - reusing cookie
2025-01-09 02:12:40,966 - DEBUG - reusing crumb
2025-01-09 02:12:40,966 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:40,966 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:41,103 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ON?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1033
2025-01-09 02:12:41,104 - DEBUG - response code=200
2025-01-09 02:12:41,104 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:41,104 - DEBUG -    Exiting get()
2025-01-09 02:12:41,110 - ERROR - 
1 Failed download:
2025-01-09 02:12:41,110 - ERROR - ['ON']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:41,111 - DEBUG - ['ON']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:41,118 - DEBUG - Exiting download()
2025-01-09 02:12:41,237 - ERROR - Error writing data for ON to DB: schema "np" does not exist
LINE 4:             VALUES ('ON','2020-01-02'::date,np.float64(24.75...
                                                    ^

2025-01-09 02:12:41,238 - DEBUG - Entering download()
2025-01-09 02:12:41,238 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:41,238 - DEBUG -  Entering history()
2025-01-09 02:12:41,238 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['OKE', 1, 0])
2025-01-09 02:12:41,238 - DEBUG -   Entering history()
2025-01-09 02:12:41,239 - DEBUG - OKE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:41,239 - DEBUG -    Entering get()
2025-01-09 02:12:41,239 - DEBUG -     Entering _make_request()
2025-01-09 02:12:41,239 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/OKE
2025-01-09 02:12:41,239 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:41,239 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:41,239 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:41,239 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:41,239 - DEBUG - reusing cookie
2025-01-09 02:12:41,239 - DEBUG - reusing crumb
2025-01-09 02:12:41,239 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:41,239 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:41,419 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/OKE?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1000
2025-01-09 02:12:41,420 - DEBUG - response code=200
2025-01-09 02:12:41,421 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:41,421 - DEBUG -    Exiting get()
2025-01-09 02:12:41,427 - ERROR - 
1 Failed download:
2025-01-09 02:12:41,427 - ERROR - ['OKE']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:41,427 - DEBUG - ['OKE']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:41,434 - DEBUG - Exiting download()
2025-01-09 02:12:41,553 - ERROR - Error writing data for OKE to DB: schema "np" does not exist
LINE 4:             VALUES ('OKE','2020-01-02'::date,np.float64(53.5...
                                                     ^

2025-01-09 02:12:41,553 - DEBUG - Entering download()
2025-01-09 02:12:41,553 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:41,554 - DEBUG -  Entering history()
2025-01-09 02:12:41,554 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ORCL', 1, 0])
2025-01-09 02:12:41,554 - DEBUG -   Entering history()
2025-01-09 02:12:41,555 - DEBUG - ORCL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:41,555 - DEBUG -    Entering get()
2025-01-09 02:12:41,555 - DEBUG -     Entering _make_request()
2025-01-09 02:12:41,555 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ORCL
2025-01-09 02:12:41,555 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:41,555 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:41,555 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:41,555 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:41,555 - DEBUG - reusing cookie
2025-01-09 02:12:41,555 - DEBUG - reusing crumb
2025-01-09 02:12:41,555 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:41,555 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:41,704 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ORCL?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1015
2025-01-09 02:12:41,705 - DEBUG - response code=200
2025-01-09 02:12:41,706 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:41,706 - DEBUG -    Exiting get()
2025-01-09 02:12:41,712 - ERROR - 
1 Failed download:
2025-01-09 02:12:41,712 - ERROR - ['ORCL']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:41,713 - DEBUG - ['ORCL']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:41,720 - DEBUG - Exiting download()
2025-01-09 02:12:41,720 - WARNING - Ticker ORCL is missing 'Close' column. Skipping.
2025-01-09 02:12:41,720 - DEBUG - Entering download()
2025-01-09 02:12:41,721 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:41,721 - DEBUG -  Entering history()
2025-01-09 02:12:41,722 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['OTIS', 1, 0])
2025-01-09 02:12:41,722 - DEBUG -   Entering history()
2025-01-09 02:12:41,724 - DEBUG - OTIS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:41,724 - DEBUG -    Entering get()
2025-01-09 02:12:41,724 - DEBUG -     Entering _make_request()
2025-01-09 02:12:41,724 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/OTIS
2025-01-09 02:12:41,724 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:41,725 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:41,725 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:41,725 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:41,725 - DEBUG - reusing cookie
2025-01-09 02:12:41,725 - DEBUG - reusing crumb
2025-01-09 02:12:41,725 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:41,725 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:41,854 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/OTIS?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:12:41,855 - DEBUG - response code=400
2025-01-09 02:12:41,855 - DEBUG - toggling cookie strategy basic -> csrf
2025-01-09 02:12:41,855 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:41,856 - DEBUG - cookie_mode = 'csrf'
2025-01-09 02:12:41,856 - DEBUG -       Entering _get_crumb_csrf()
2025-01-09 02:12:41,857 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['csrf', 1, 0])
2025-01-09 02:12:42,038 - DEBUG - https://guce.yahoo.com:443 "GET /consent HTTP/1.1" 302 0
2025-01-09 02:12:42,353 - DEBUG - https://www.yahoo.com:443 "GET /?guccounter=1 HTTP/1.1" 200 None
2025-01-09 02:12:42,802 - DEBUG - Failed to find "csrfToken" in response
2025-01-09 02:12:42,802 - DEBUG -       Exiting _get_crumb_csrf()
2025-01-09 02:12:42,802 - DEBUG - toggling cookie strategy csrf -> basic
2025-01-09 02:12:42,802 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:42,802 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['basic', 1, 0])
2025-01-09 02:12:42,803 - DEBUG - loaded persistent cookie
2025-01-09 02:12:42,803 - DEBUG - reusing cookie
2025-01-09 02:12:42,933 - DEBUG - https://query1.finance.yahoo.com:443 "GET /v1/test/getcrumb HTTP/1.1" 200 11
2025-01-09 02:12:42,934 - DEBUG - crumb = 'mbrlfmeSllh'
2025-01-09 02:12:42,934 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:42,934 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:43,069 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/OTIS?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:12:43,070 - DEBUG - response code=400
2025-01-09 02:12:43,071 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:43,071 - DEBUG -    Exiting get()
2025-01-09 02:12:43,075 - ERROR - 
1 Failed download:
2025-01-09 02:12:43,075 - ERROR - ['OTIS']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn\'t exist for startDate = 1577854800, endDate = 1577941200")')
2025-01-09 02:12:43,075 - DEBUG - ['OTIS']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn't exist for startDate = 1577854800, endDate = 1577941200")

2025-01-09 02:12:43,077 - DEBUG - Exiting download()
2025-01-09 02:12:43,178 - ERROR - Error writing data for OTIS to DB: schema "np" does not exist
LINE 4:             VALUES ('OTIS','2020-03-19'::date,np.float64(37....
                                                      ^

2025-01-09 02:12:43,178 - DEBUG - Entering download()
2025-01-09 02:12:43,178 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:43,179 - DEBUG -  Entering history()
2025-01-09 02:12:43,179 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PCAR', 1, 0])
2025-01-09 02:12:43,179 - DEBUG -   Entering history()
2025-01-09 02:12:43,180 - DEBUG - PCAR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:43,180 - DEBUG -    Entering get()
2025-01-09 02:12:43,180 - DEBUG -     Entering _make_request()
2025-01-09 02:12:43,180 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PCAR
2025-01-09 02:12:43,180 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:43,180 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:43,180 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:43,180 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:43,180 - DEBUG - reusing cookie
2025-01-09 02:12:43,180 - DEBUG - reusing crumb
2025-01-09 02:12:43,180 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:43,180 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:43,341 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PCAR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1002
2025-01-09 02:12:43,342 - DEBUG - response code=200
2025-01-09 02:12:43,342 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:43,342 - DEBUG -    Exiting get()
2025-01-09 02:12:43,348 - ERROR - 
1 Failed download:
2025-01-09 02:12:43,348 - ERROR - ['PCAR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:43,349 - DEBUG - ['PCAR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:43,356 - DEBUG - Exiting download()
2025-01-09 02:12:43,356 - WARNING - Ticker PCAR is missing 'Close' column. Skipping.
2025-01-09 02:12:43,357 - DEBUG - Entering download()
2025-01-09 02:12:43,357 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:43,357 - DEBUG -  Entering history()
2025-01-09 02:12:43,358 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PKG', 1, 0])
2025-01-09 02:12:43,358 - DEBUG -   Entering history()
2025-01-09 02:12:43,360 - DEBUG - PKG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:43,360 - DEBUG -    Entering get()
2025-01-09 02:12:43,360 - DEBUG -     Entering _make_request()
2025-01-09 02:12:43,360 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PKG
2025-01-09 02:12:43,361 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:43,361 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:43,361 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:43,361 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:43,361 - DEBUG - reusing cookie
2025-01-09 02:12:43,361 - DEBUG - reusing crumb
2025-01-09 02:12:43,361 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:43,361 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:43,517 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PKG?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1042
2025-01-09 02:12:43,518 - DEBUG - response code=200
2025-01-09 02:12:43,518 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:43,518 - DEBUG -    Exiting get()
2025-01-09 02:12:43,522 - ERROR - 
1 Failed download:
2025-01-09 02:12:43,522 - ERROR - ['PKG']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:43,522 - DEBUG - ['PKG']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:43,524 - DEBUG - Exiting download()
2025-01-09 02:12:43,779 - ERROR - Error writing data for PKG to DB: schema "np" does not exist
LINE 4:             VALUES ('PKG','2020-01-02'::date,np.float64(96.5...
                                                     ^

2025-01-09 02:12:43,779 - DEBUG - Entering download()
2025-01-09 02:12:43,779 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:43,780 - DEBUG -  Entering history()
2025-01-09 02:12:43,780 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PLTR', 1, 0])
2025-01-09 02:12:43,780 - DEBUG -   Entering history()
2025-01-09 02:12:43,781 - DEBUG - PLTR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:43,781 - DEBUG -    Entering get()
2025-01-09 02:12:43,781 - DEBUG -     Entering _make_request()
2025-01-09 02:12:43,781 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PLTR
2025-01-09 02:12:43,781 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:43,781 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:43,781 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:43,781 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:43,781 - DEBUG - reusing cookie
2025-01-09 02:12:43,781 - DEBUG - reusing crumb
2025-01-09 02:12:43,781 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:43,781 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:43,927 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PLTR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:12:43,928 - DEBUG - response code=400
2025-01-09 02:12:43,929 - DEBUG - toggling cookie strategy basic -> csrf
2025-01-09 02:12:43,929 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:43,929 - DEBUG - cookie_mode = 'csrf'
2025-01-09 02:12:43,929 - DEBUG -       Entering _get_crumb_csrf()
2025-01-09 02:12:43,930 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['csrf', 1, 0])
2025-01-09 02:12:44,098 - DEBUG - https://guce.yahoo.com:443 "GET /consent HTTP/1.1" 302 0
2025-01-09 02:12:44,622 - DEBUG - https://www.yahoo.com:443 "GET /?guccounter=1 HTTP/1.1" 200 None
2025-01-09 02:12:45,132 - DEBUG - Failed to find "csrfToken" in response
2025-01-09 02:12:45,132 - DEBUG -       Exiting _get_crumb_csrf()
2025-01-09 02:12:45,132 - DEBUG - toggling cookie strategy csrf -> basic
2025-01-09 02:12:45,132 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:45,132 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['basic', 1, 0])
2025-01-09 02:12:45,133 - DEBUG - loaded persistent cookie
2025-01-09 02:12:45,133 - DEBUG - reusing cookie
2025-01-09 02:12:45,265 - DEBUG - https://query1.finance.yahoo.com:443 "GET /v1/test/getcrumb HTTP/1.1" 200 11
2025-01-09 02:12:45,265 - DEBUG - crumb = 'mbrlfmeSllh'
2025-01-09 02:12:45,265 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:45,265 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:45,408 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PLTR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:12:45,409 - DEBUG - response code=400
2025-01-09 02:12:45,409 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:45,409 - DEBUG -    Exiting get()
2025-01-09 02:12:45,414 - ERROR - 
1 Failed download:
2025-01-09 02:12:45,414 - ERROR - ['PLTR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn\'t exist for startDate = 1577854800, endDate = 1577941200")')
2025-01-09 02:12:45,414 - DEBUG - ['PLTR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn't exist for startDate = 1577854800, endDate = 1577941200")

2025-01-09 02:12:45,416 - DEBUG - Exiting download()
2025-01-09 02:12:45,512 - ERROR - Error writing data for PLTR to DB: schema "np" does not exist
LINE 4:             VALUES ('PLTR','2020-09-30'::date,np.float64(10....
                                                      ^

2025-01-09 02:12:45,512 - DEBUG - Entering download()
2025-01-09 02:12:45,513 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:45,513 - DEBUG -  Entering history()
2025-01-09 02:12:45,513 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PANW', 1, 0])
2025-01-09 02:12:45,513 - DEBUG -   Entering history()
2025-01-09 02:12:45,514 - DEBUG - PANW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:45,514 - DEBUG -    Entering get()
2025-01-09 02:12:45,514 - DEBUG -     Entering _make_request()
2025-01-09 02:12:45,514 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PANW
2025-01-09 02:12:45,514 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:45,514 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:45,514 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:45,514 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:45,514 - DEBUG - reusing cookie
2025-01-09 02:12:45,514 - DEBUG - reusing crumb
2025-01-09 02:12:45,514 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:45,514 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:45,649 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PANW?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1035
2025-01-09 02:12:45,650 - DEBUG - response code=200
2025-01-09 02:12:45,650 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:45,650 - DEBUG -    Exiting get()
2025-01-09 02:12:45,655 - ERROR - 
1 Failed download:
2025-01-09 02:12:45,656 - ERROR - ['PANW']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:45,656 - DEBUG - ['PANW']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:45,661 - DEBUG - Exiting download()
2025-01-09 02:12:45,894 - ERROR - Error writing data for PANW to DB: schema "np" does not exist
LINE 4:             VALUES ('PANW','2020-01-02'::date,np.float64(38....
                                                      ^

2025-01-09 02:12:45,894 - DEBUG - Entering download()
2025-01-09 02:12:45,894 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:45,894 - DEBUG -  Entering history()
2025-01-09 02:12:45,895 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PARA', 1, 0])
2025-01-09 02:12:45,895 - DEBUG -   Entering history()
2025-01-09 02:12:45,896 - DEBUG - PARA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:45,896 - DEBUG -    Entering get()
2025-01-09 02:12:45,896 - DEBUG -     Entering _make_request()
2025-01-09 02:12:45,896 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PARA
2025-01-09 02:12:45,896 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:45,896 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:45,896 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:45,896 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:45,896 - DEBUG - reusing cookie
2025-01-09 02:12:45,896 - DEBUG - reusing crumb
2025-01-09 02:12:45,896 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:45,896 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:46,061 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PARA?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1009
2025-01-09 02:12:46,062 - DEBUG - response code=200
2025-01-09 02:12:46,063 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:46,063 - DEBUG -    Exiting get()
2025-01-09 02:12:46,068 - ERROR - 
1 Failed download:
2025-01-09 02:12:46,068 - ERROR - ['PARA']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:46,069 - DEBUG - ['PARA']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:46,075 - DEBUG - Exiting download()
2025-01-09 02:12:46,196 - ERROR - Error writing data for PARA to DB: schema "np" does not exist
LINE 4:             VALUES ('PARA','2020-01-02'::date,np.float64(36....
                                                      ^

2025-01-09 02:12:46,196 - DEBUG - Entering download()
2025-01-09 02:12:46,196 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:46,196 - DEBUG -  Entering history()
2025-01-09 02:12:46,197 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PH', 1, 0])
2025-01-09 02:12:46,197 - DEBUG -   Entering history()
2025-01-09 02:12:46,197 - DEBUG - PH: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:46,197 - DEBUG -    Entering get()
2025-01-09 02:12:46,197 - DEBUG -     Entering _make_request()
2025-01-09 02:12:46,197 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PH
2025-01-09 02:12:46,197 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:46,198 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:46,198 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:46,198 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:46,198 - DEBUG - reusing cookie
2025-01-09 02:12:46,198 - DEBUG - reusing crumb
2025-01-09 02:12:46,198 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:46,198 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:46,372 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PH?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1031
2025-01-09 02:12:46,373 - DEBUG - response code=200
2025-01-09 02:12:46,373 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:46,374 - DEBUG -    Exiting get()
2025-01-09 02:12:46,380 - ERROR - 
1 Failed download:
2025-01-09 02:12:46,380 - ERROR - ['PH']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:46,380 - DEBUG - ['PH']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:46,387 - DEBUG - Exiting download()
2025-01-09 02:12:46,388 - WARNING - Ticker PH is missing 'Close' column. Skipping.
2025-01-09 02:12:46,388 - DEBUG - Entering download()
2025-01-09 02:12:46,388 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:46,388 - DEBUG -  Entering history()
2025-01-09 02:12:46,389 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PAYX', 1, 0])
2025-01-09 02:12:46,389 - DEBUG -   Entering history()
2025-01-09 02:12:46,391 - DEBUG - PAYX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:46,391 - DEBUG -    Entering get()
2025-01-09 02:12:46,391 - DEBUG -     Entering _make_request()
2025-01-09 02:12:46,391 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PAYX
2025-01-09 02:12:46,392 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:46,392 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:46,392 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:46,392 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:46,392 - DEBUG - reusing cookie
2025-01-09 02:12:46,392 - DEBUG - reusing crumb
2025-01-09 02:12:46,392 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:46,392 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:46,567 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PAYX?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1010
2025-01-09 02:12:46,568 - DEBUG - response code=200
2025-01-09 02:12:46,568 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:46,569 - DEBUG -    Exiting get()
2025-01-09 02:12:46,572 - ERROR - 
1 Failed download:
2025-01-09 02:12:46,572 - ERROR - ['PAYX']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:46,572 - DEBUG - ['PAYX']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:46,574 - DEBUG - Exiting download()
2025-01-09 02:12:46,828 - ERROR - Error writing data for PAYX to DB: schema "np" does not exist
LINE 4:             VALUES ('PAYX','2020-01-02'::date,np.float64(74....
                                                      ^

2025-01-09 02:12:46,828 - DEBUG - Entering download()
2025-01-09 02:12:46,828 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:46,828 - DEBUG -  Entering history()
2025-01-09 02:12:46,829 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PAYC', 1, 0])
2025-01-09 02:12:46,829 - DEBUG -   Entering history()
2025-01-09 02:12:46,829 - DEBUG - PAYC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:46,829 - DEBUG -    Entering get()
2025-01-09 02:12:46,830 - DEBUG -     Entering _make_request()
2025-01-09 02:12:46,830 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PAYC
2025-01-09 02:12:46,830 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:46,830 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:46,830 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:46,830 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:46,830 - DEBUG - reusing cookie
2025-01-09 02:12:46,830 - DEBUG - reusing crumb
2025-01-09 02:12:46,830 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:46,830 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:46,978 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PAYC?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1021
2025-01-09 02:12:46,979 - DEBUG - response code=200
2025-01-09 02:12:46,979 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:46,979 - DEBUG -    Exiting get()
2025-01-09 02:12:46,983 - ERROR - 
1 Failed download:
2025-01-09 02:12:46,983 - ERROR - ['PAYC']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:46,983 - DEBUG - ['PAYC']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:46,985 - DEBUG - Exiting download()
2025-01-09 02:12:46,985 - WARNING - Ticker PAYC is missing 'Close' column. Skipping.
2025-01-09 02:12:46,985 - DEBUG - Entering download()
2025-01-09 02:12:46,985 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:46,985 - DEBUG -  Entering history()
2025-01-09 02:12:46,985 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PYPL', 1, 0])
2025-01-09 02:12:46,986 - DEBUG -   Entering history()
2025-01-09 02:12:46,986 - DEBUG - PYPL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:46,986 - DEBUG -    Entering get()
2025-01-09 02:12:46,986 - DEBUG -     Entering _make_request()
2025-01-09 02:12:46,986 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PYPL
2025-01-09 02:12:46,986 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:46,986 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:46,987 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:46,987 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:46,987 - DEBUG - reusing cookie
2025-01-09 02:12:46,987 - DEBUG - reusing crumb
2025-01-09 02:12:46,987 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:46,987 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:47,131 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PYPL?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1022
2025-01-09 02:12:47,132 - DEBUG - response code=200
2025-01-09 02:12:47,133 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:47,133 - DEBUG -    Exiting get()
2025-01-09 02:12:47,139 - ERROR - 
1 Failed download:
2025-01-09 02:12:47,139 - ERROR - ['PYPL']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:47,140 - DEBUG - ['PYPL']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:47,147 - DEBUG - Exiting download()
2025-01-09 02:12:47,397 - ERROR - Error writing data for PYPL to DB: schema "np" does not exist
LINE 4:             VALUES ('PYPL','2020-01-02'::date,np.float64(109...
                                                      ^

2025-01-09 02:12:47,397 - DEBUG - Entering download()
2025-01-09 02:12:47,398 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:47,398 - DEBUG -  Entering history()
2025-01-09 02:12:47,398 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PNR', 1, 0])
2025-01-09 02:12:47,398 - DEBUG -   Entering history()
2025-01-09 02:12:47,399 - DEBUG - PNR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:47,399 - DEBUG -    Entering get()
2025-01-09 02:12:47,399 - DEBUG -     Entering _make_request()
2025-01-09 02:12:47,399 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PNR
2025-01-09 02:12:47,400 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:47,400 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:47,400 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:47,400 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:47,400 - DEBUG - reusing cookie
2025-01-09 02:12:47,400 - DEBUG - reusing crumb
2025-01-09 02:12:47,400 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:47,400 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:47,583 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PNR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 996
2025-01-09 02:12:47,584 - DEBUG - response code=200
2025-01-09 02:12:47,585 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:47,585 - DEBUG -    Exiting get()
2025-01-09 02:12:47,591 - ERROR - 
1 Failed download:
2025-01-09 02:12:47,591 - ERROR - ['PNR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:47,591 - DEBUG - ['PNR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:47,599 - DEBUG - Exiting download()
2025-01-09 02:12:47,599 - WARNING - Ticker PNR is missing 'Close' column. Skipping.
2025-01-09 02:12:47,599 - DEBUG - Entering download()
2025-01-09 02:12:47,600 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:47,600 - DEBUG -  Entering history()
2025-01-09 02:12:47,601 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PEP', 1, 0])
2025-01-09 02:12:47,601 - DEBUG -   Entering history()
2025-01-09 02:12:47,603 - DEBUG - PEP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:47,604 - DEBUG -    Entering get()
2025-01-09 02:12:47,604 - DEBUG -     Entering _make_request()
2025-01-09 02:12:47,604 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PEP
2025-01-09 02:12:47,604 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:47,604 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:47,604 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:47,604 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:47,605 - DEBUG - reusing cookie
2025-01-09 02:12:47,605 - DEBUG - reusing crumb
2025-01-09 02:12:47,605 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:47,605 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:47,809 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PEP?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1008
2025-01-09 02:12:47,810 - DEBUG - response code=200
2025-01-09 02:12:47,810 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:47,811 - DEBUG -    Exiting get()
2025-01-09 02:12:47,817 - ERROR - 
1 Failed download:
2025-01-09 02:12:47,817 - ERROR - ['PEP']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:47,817 - DEBUG - ['PEP']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:47,824 - DEBUG - Exiting download()
2025-01-09 02:12:47,825 - WARNING - Ticker PEP is missing 'Close' column. Skipping.
2025-01-09 02:12:47,825 - DEBUG - Entering download()
2025-01-09 02:12:47,825 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:47,826 - DEBUG -  Entering history()
2025-01-09 02:12:47,826 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PFE', 1, 0])
2025-01-09 02:12:47,827 - DEBUG -   Entering history()
2025-01-09 02:12:47,828 - DEBUG - PFE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:47,829 - DEBUG -    Entering get()
2025-01-09 02:12:47,829 - DEBUG -     Entering _make_request()
2025-01-09 02:12:47,829 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PFE
2025-01-09 02:12:47,829 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:47,829 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:47,829 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:47,829 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:47,830 - DEBUG - reusing cookie
2025-01-09 02:12:47,830 - DEBUG - reusing crumb
2025-01-09 02:12:47,830 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:47,830 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:48,018 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PFE?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 997
2025-01-09 02:12:48,019 - DEBUG - response code=200
2025-01-09 02:12:48,019 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:48,020 - DEBUG -    Exiting get()
2025-01-09 02:12:48,026 - ERROR - 
1 Failed download:
2025-01-09 02:12:48,026 - ERROR - ['PFE']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:48,026 - DEBUG - ['PFE']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:48,033 - DEBUG - Exiting download()
2025-01-09 02:12:48,145 - ERROR - Error writing data for PFE to DB: schema "np" does not exist
LINE 4:             VALUES ('PFE','2020-01-02'::date,np.float64(30.1...
                                                     ^

2025-01-09 02:12:48,145 - DEBUG - Entering download()
2025-01-09 02:12:48,146 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:48,146 - DEBUG -  Entering history()
2025-01-09 02:12:48,146 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PCG', 1, 0])
2025-01-09 02:12:48,146 - DEBUG -   Entering history()
2025-01-09 02:12:48,147 - DEBUG - PCG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:48,147 - DEBUG -    Entering get()
2025-01-09 02:12:48,147 - DEBUG -     Entering _make_request()
2025-01-09 02:12:48,147 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PCG
2025-01-09 02:12:48,147 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:48,147 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:48,147 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:48,147 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:48,147 - DEBUG - reusing cookie
2025-01-09 02:12:48,147 - DEBUG - reusing crumb
2025-01-09 02:12:48,147 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:48,147 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:48,336 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PCG?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1016
2025-01-09 02:12:48,337 - DEBUG - response code=200
2025-01-09 02:12:48,338 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:48,338 - DEBUG -    Exiting get()
2025-01-09 02:12:48,344 - ERROR - 
1 Failed download:
2025-01-09 02:12:48,344 - ERROR - ['PCG']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:48,345 - DEBUG - ['PCG']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:48,352 - DEBUG - Exiting download()
2025-01-09 02:12:48,352 - WARNING - Ticker PCG is missing 'Close' column. Skipping.
2025-01-09 02:12:48,353 - DEBUG - Entering download()
2025-01-09 02:12:48,353 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:48,353 - DEBUG -  Entering history()
2025-01-09 02:12:48,354 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PM', 1, 0])
2025-01-09 02:12:48,354 - DEBUG -   Entering history()
2025-01-09 02:12:48,356 - DEBUG - PM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:48,356 - DEBUG -    Entering get()
2025-01-09 02:12:48,356 - DEBUG -     Entering _make_request()
2025-01-09 02:12:48,356 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PM
2025-01-09 02:12:48,357 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:48,357 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:48,357 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:48,357 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:48,357 - DEBUG - reusing cookie
2025-01-09 02:12:48,357 - DEBUG - reusing crumb
2025-01-09 02:12:48,357 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:48,357 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:48,514 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PM?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1039
2025-01-09 02:12:48,515 - DEBUG - response code=200
2025-01-09 02:12:48,515 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:48,516 - DEBUG -    Exiting get()
2025-01-09 02:12:48,522 - ERROR - 
1 Failed download:
2025-01-09 02:12:48,522 - ERROR - ['PM']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:48,522 - DEBUG - ['PM']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:48,529 - DEBUG - Exiting download()
2025-01-09 02:12:48,801 - ERROR - Error writing data for PM to DB: schema "np" does not exist
LINE 4:             VALUES ('PM','2020-01-02'::date,np.float64(65.22...
                                                    ^

2025-01-09 02:12:48,801 - DEBUG - Entering download()
2025-01-09 02:12:48,801 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:48,801 - DEBUG -  Entering history()
2025-01-09 02:12:48,802 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PSX', 1, 0])
2025-01-09 02:12:48,802 - DEBUG -   Entering history()
2025-01-09 02:12:48,803 - DEBUG - PSX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:48,803 - DEBUG -    Entering get()
2025-01-09 02:12:48,803 - DEBUG -     Entering _make_request()
2025-01-09 02:12:48,803 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PSX
2025-01-09 02:12:48,803 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:48,803 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:48,803 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:48,803 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:48,803 - DEBUG - reusing cookie
2025-01-09 02:12:48,803 - DEBUG - reusing crumb
2025-01-09 02:12:48,803 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:48,803 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:48,967 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PSX?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1001
2025-01-09 02:12:48,968 - DEBUG - response code=200
2025-01-09 02:12:48,969 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:48,969 - DEBUG -    Exiting get()
2025-01-09 02:12:48,975 - ERROR - 
1 Failed download:
2025-01-09 02:12:48,975 - ERROR - ['PSX']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:48,976 - DEBUG - ['PSX']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:48,983 - DEBUG - Exiting download()
2025-01-09 02:12:49,239 - ERROR - Error writing data for PSX to DB: schema "np" does not exist
LINE 4:             VALUES ('PSX','2020-01-02'::date,np.float64(90.7...
                                                     ^

2025-01-09 02:12:49,239 - DEBUG - Entering download()
2025-01-09 02:12:49,239 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:49,239 - DEBUG -  Entering history()
2025-01-09 02:12:49,240 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PNW', 1, 0])
2025-01-09 02:12:49,240 - DEBUG -   Entering history()
2025-01-09 02:12:49,241 - DEBUG - PNW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:49,241 - DEBUG -    Entering get()
2025-01-09 02:12:49,241 - DEBUG -     Entering _make_request()
2025-01-09 02:12:49,241 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PNW
2025-01-09 02:12:49,241 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:49,241 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:49,241 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:49,241 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:49,241 - DEBUG - reusing cookie
2025-01-09 02:12:49,241 - DEBUG - reusing crumb
2025-01-09 02:12:49,241 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:49,241 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:49,452 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PNW?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1034
2025-01-09 02:12:49,453 - DEBUG - response code=200
2025-01-09 02:12:49,453 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:49,453 - DEBUG -    Exiting get()
2025-01-09 02:12:49,459 - ERROR - 
1 Failed download:
2025-01-09 02:12:49,459 - ERROR - ['PNW']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:49,460 - DEBUG - ['PNW']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:49,467 - DEBUG - Exiting download()
2025-01-09 02:12:49,467 - WARNING - Ticker PNW is missing 'Close' column. Skipping.
2025-01-09 02:12:49,468 - DEBUG - Entering download()
2025-01-09 02:12:49,468 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:49,468 - DEBUG -  Entering history()
2025-01-09 02:12:49,469 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PNC', 1, 0])
2025-01-09 02:12:49,470 - DEBUG -   Entering history()
2025-01-09 02:12:49,472 - DEBUG - PNC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:49,472 - DEBUG -    Entering get()
2025-01-09 02:12:49,472 - DEBUG -     Entering _make_request()
2025-01-09 02:12:49,473 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PNC
2025-01-09 02:12:49,473 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:49,473 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:49,473 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:49,473 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:49,473 - DEBUG - reusing cookie
2025-01-09 02:12:49,473 - DEBUG - reusing crumb
2025-01-09 02:12:49,473 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:49,473 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:49,648 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PNC?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1048
2025-01-09 02:12:49,649 - DEBUG - response code=200
2025-01-09 02:12:49,650 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:49,650 - DEBUG -    Exiting get()
2025-01-09 02:12:49,656 - ERROR - 
1 Failed download:
2025-01-09 02:12:49,657 - ERROR - ['PNC']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:49,657 - DEBUG - ['PNC']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:49,664 - DEBUG - Exiting download()
2025-01-09 02:12:49,665 - WARNING - Ticker PNC is missing 'Close' column. Skipping.
2025-01-09 02:12:49,665 - DEBUG - Entering download()
2025-01-09 02:12:49,665 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:49,666 - DEBUG -  Entering history()
2025-01-09 02:12:49,666 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['POOL', 1, 0])
2025-01-09 02:12:49,667 - DEBUG -   Entering history()
2025-01-09 02:12:49,668 - DEBUG - POOL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:49,668 - DEBUG -    Entering get()
2025-01-09 02:12:49,669 - DEBUG -     Entering _make_request()
2025-01-09 02:12:49,669 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/POOL
2025-01-09 02:12:49,669 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:49,669 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:49,669 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:49,669 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:49,669 - DEBUG - reusing cookie
2025-01-09 02:12:49,669 - DEBUG - reusing crumb
2025-01-09 02:12:49,670 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:49,670 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:49,832 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/POOL?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1016
2025-01-09 02:12:49,833 - DEBUG - response code=200
2025-01-09 02:12:49,833 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:49,833 - DEBUG -    Exiting get()
2025-01-09 02:12:49,839 - ERROR - 
1 Failed download:
2025-01-09 02:12:49,839 - ERROR - ['POOL']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:49,840 - DEBUG - ['POOL']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:49,847 - DEBUG - Exiting download()
2025-01-09 02:12:49,957 - ERROR - Error writing data for POOL to DB: schema "np" does not exist
LINE 4:             VALUES ('POOL','2020-01-02'::date,np.float64(201...
                                                      ^

2025-01-09 02:12:49,957 - DEBUG - Entering download()
2025-01-09 02:12:49,957 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:49,957 - DEBUG -  Entering history()
2025-01-09 02:12:49,958 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PPG', 1, 0])
2025-01-09 02:12:49,958 - DEBUG -   Entering history()
2025-01-09 02:12:49,959 - DEBUG - PPG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:49,959 - DEBUG -    Entering get()
2025-01-09 02:12:49,959 - DEBUG -     Entering _make_request()
2025-01-09 02:12:49,959 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PPG
2025-01-09 02:12:49,959 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:49,959 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:49,959 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:49,959 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:49,959 - DEBUG - reusing cookie
2025-01-09 02:12:49,959 - DEBUG - reusing crumb
2025-01-09 02:12:49,959 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:49,959 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:50,136 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PPG?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1020
2025-01-09 02:12:50,137 - DEBUG - response code=200
2025-01-09 02:12:50,138 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:50,138 - DEBUG -    Exiting get()
2025-01-09 02:12:50,144 - ERROR - 
1 Failed download:
2025-01-09 02:12:50,144 - ERROR - ['PPG']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:50,144 - DEBUG - ['PPG']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:50,152 - DEBUG - Exiting download()
2025-01-09 02:12:50,365 - ERROR - Error writing data for PPG to DB: schema "np" does not exist
LINE 4:             VALUES ('PPG','2020-01-02'::date,np.float64(122....
                                                     ^

2025-01-09 02:12:50,366 - DEBUG - Entering download()
2025-01-09 02:12:50,366 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:50,366 - DEBUG -  Entering history()
2025-01-09 02:12:50,366 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PPL', 1, 0])
2025-01-09 02:12:50,367 - DEBUG -   Entering history()
2025-01-09 02:12:50,367 - DEBUG - PPL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:50,367 - DEBUG -    Entering get()
2025-01-09 02:12:50,367 - DEBUG -     Entering _make_request()
2025-01-09 02:12:50,367 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PPL
2025-01-09 02:12:50,367 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:50,368 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:50,368 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:50,368 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:50,368 - DEBUG - reusing cookie
2025-01-09 02:12:50,368 - DEBUG - reusing crumb
2025-01-09 02:12:50,368 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:50,368 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:50,522 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PPL?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1004
2025-01-09 02:12:50,523 - DEBUG - response code=200
2025-01-09 02:12:50,523 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:50,523 - DEBUG -    Exiting get()
2025-01-09 02:12:50,529 - ERROR - 
1 Failed download:
2025-01-09 02:12:50,529 - ERROR - ['PPL']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:50,530 - DEBUG - ['PPL']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:50,537 - DEBUG - Exiting download()
2025-01-09 02:12:50,537 - WARNING - Ticker PPL is missing 'Close' column. Skipping.
2025-01-09 02:12:50,538 - DEBUG - Entering download()
2025-01-09 02:12:50,538 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:50,538 - DEBUG -  Entering history()
2025-01-09 02:12:50,539 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PFG', 1, 0])
2025-01-09 02:12:50,540 - DEBUG -   Entering history()
2025-01-09 02:12:50,541 - DEBUG - PFG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:50,542 - DEBUG -    Entering get()
2025-01-09 02:12:50,542 - DEBUG -     Entering _make_request()
2025-01-09 02:12:50,542 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PFG
2025-01-09 02:12:50,542 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:50,543 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:50,543 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:50,543 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:50,543 - DEBUG - reusing cookie
2025-01-09 02:12:50,543 - DEBUG - reusing crumb
2025-01-09 02:12:50,543 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:50,544 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:50,696 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PFG?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1037
2025-01-09 02:12:50,697 - DEBUG - response code=200
2025-01-09 02:12:50,697 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:50,697 - DEBUG -    Exiting get()
2025-01-09 02:12:50,703 - ERROR - 
1 Failed download:
2025-01-09 02:12:50,704 - ERROR - ['PFG']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:50,704 - DEBUG - ['PFG']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:50,711 - DEBUG - Exiting download()
2025-01-09 02:12:50,712 - WARNING - Ticker PFG is missing 'Close' column. Skipping.
2025-01-09 02:12:50,712 - DEBUG - Entering download()
2025-01-09 02:12:50,712 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:50,712 - DEBUG -  Entering history()
2025-01-09 02:12:50,713 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PG', 1, 0])
2025-01-09 02:12:50,714 - DEBUG -   Entering history()
2025-01-09 02:12:50,715 - DEBUG - PG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:50,716 - DEBUG -    Entering get()
2025-01-09 02:12:50,716 - DEBUG -     Entering _make_request()
2025-01-09 02:12:50,716 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PG
2025-01-09 02:12:50,716 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:50,716 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:50,716 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:50,716 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:50,716 - DEBUG - reusing cookie
2025-01-09 02:12:50,717 - DEBUG - reusing crumb
2025-01-09 02:12:50,717 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:50,717 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:51,018 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PG?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1035
2025-01-09 02:12:51,019 - DEBUG - response code=200
2025-01-09 02:12:51,020 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:51,020 - DEBUG -    Exiting get()
2025-01-09 02:12:51,024 - ERROR - 
1 Failed download:
2025-01-09 02:12:51,024 - ERROR - ['PG']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:51,024 - DEBUG - ['PG']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:51,026 - DEBUG - Exiting download()
2025-01-09 02:12:51,026 - WARNING - Ticker PG is missing 'Close' column. Skipping.
2025-01-09 02:12:51,026 - DEBUG - Entering download()
2025-01-09 02:12:51,026 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:51,026 - DEBUG -  Entering history()
2025-01-09 02:12:51,027 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PGR', 1, 0])
2025-01-09 02:12:51,027 - DEBUG -   Entering history()
2025-01-09 02:12:51,027 - DEBUG - PGR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:51,028 - DEBUG -    Entering get()
2025-01-09 02:12:51,028 - DEBUG -     Entering _make_request()
2025-01-09 02:12:51,028 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PGR
2025-01-09 02:12:51,028 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:51,028 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:51,028 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:51,028 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:51,028 - DEBUG - reusing cookie
2025-01-09 02:12:51,028 - DEBUG - reusing crumb
2025-01-09 02:12:51,028 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:51,028 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:51,229 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PGR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1035
2025-01-09 02:12:51,230 - DEBUG - response code=200
2025-01-09 02:12:51,231 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:51,231 - DEBUG -    Exiting get()
2025-01-09 02:12:51,235 - ERROR - 
1 Failed download:
2025-01-09 02:12:51,235 - ERROR - ['PGR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:51,235 - DEBUG - ['PGR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:51,237 - DEBUG - Exiting download()
2025-01-09 02:12:51,340 - ERROR - Error writing data for PGR to DB: schema "np" does not exist
LINE 4:             VALUES ('PGR','2020-01-02'::date,np.float64(65.9...
                                                     ^

2025-01-09 02:12:51,341 - DEBUG - Entering download()
2025-01-09 02:12:51,341 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:51,341 - DEBUG -  Entering history()
2025-01-09 02:12:51,341 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PLD', 1, 0])
2025-01-09 02:12:51,342 - DEBUG -   Entering history()
2025-01-09 02:12:51,342 - DEBUG - PLD: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:51,342 - DEBUG -    Entering get()
2025-01-09 02:12:51,342 - DEBUG -     Entering _make_request()
2025-01-09 02:12:51,342 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PLD
2025-01-09 02:12:51,342 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:51,342 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:51,342 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:51,343 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:51,343 - DEBUG - reusing cookie
2025-01-09 02:12:51,343 - DEBUG - reusing crumb
2025-01-09 02:12:51,343 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:51,343 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:51,534 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PLD?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1006
2025-01-09 02:12:51,535 - DEBUG - response code=200
2025-01-09 02:12:51,536 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:51,536 - DEBUG -    Exiting get()
2025-01-09 02:12:51,542 - ERROR - 
1 Failed download:
2025-01-09 02:12:51,542 - ERROR - ['PLD']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:51,542 - DEBUG - ['PLD']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:51,550 - DEBUG - Exiting download()
2025-01-09 02:12:51,550 - WARNING - Ticker PLD is missing 'Close' column. Skipping.
2025-01-09 02:12:51,550 - DEBUG - Entering download()
2025-01-09 02:12:51,551 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:51,551 - DEBUG -  Entering history()
2025-01-09 02:12:51,552 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PRU', 1, 0])
2025-01-09 02:12:51,552 - DEBUG -   Entering history()
2025-01-09 02:12:51,555 - DEBUG - PRU: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:51,555 - DEBUG -    Entering get()
2025-01-09 02:12:51,555 - DEBUG -     Entering _make_request()
2025-01-09 02:12:51,555 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PRU
2025-01-09 02:12:51,556 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:51,556 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:51,556 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:51,556 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:51,556 - DEBUG - reusing cookie
2025-01-09 02:12:51,556 - DEBUG - reusing crumb
2025-01-09 02:12:51,556 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:51,556 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:51,726 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PRU?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1031
2025-01-09 02:12:51,727 - DEBUG - response code=200
2025-01-09 02:12:51,728 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:51,728 - DEBUG -    Exiting get()
2025-01-09 02:12:51,734 - ERROR - 
1 Failed download:
2025-01-09 02:12:51,734 - ERROR - ['PRU']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:51,734 - DEBUG - ['PRU']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:51,741 - DEBUG - Exiting download()
2025-01-09 02:12:51,871 - ERROR - Error writing data for PRU to DB: schema "np" does not exist
LINE 4:             VALUES ('PRU','2020-01-02'::date,np.float64(73.0...
                                                     ^

2025-01-09 02:12:51,871 - DEBUG - Entering download()
2025-01-09 02:12:51,871 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:51,872 - DEBUG -  Entering history()
2025-01-09 02:12:51,872 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PEG', 1, 0])
2025-01-09 02:12:51,872 - DEBUG -   Entering history()
2025-01-09 02:12:51,873 - DEBUG - PEG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:51,873 - DEBUG -    Entering get()
2025-01-09 02:12:51,873 - DEBUG -     Entering _make_request()
2025-01-09 02:12:51,873 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PEG
2025-01-09 02:12:51,873 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:51,873 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:51,873 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:51,873 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:51,873 - DEBUG - reusing cookie
2025-01-09 02:12:51,873 - DEBUG - reusing crumb
2025-01-09 02:12:51,873 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:51,873 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:52,087 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PEG?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1048
2025-01-09 02:12:52,088 - DEBUG - response code=200
2025-01-09 02:12:52,088 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:52,088 - DEBUG -    Exiting get()
2025-01-09 02:12:52,091 - ERROR - 
1 Failed download:
2025-01-09 02:12:52,092 - ERROR - ['PEG']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:52,092 - DEBUG - ['PEG']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:52,094 - DEBUG - Exiting download()
2025-01-09 02:12:52,094 - WARNING - Ticker PEG is missing 'Close' column. Skipping.
2025-01-09 02:12:52,094 - DEBUG - Entering download()
2025-01-09 02:12:52,094 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:52,094 - DEBUG -  Entering history()
2025-01-09 02:12:52,094 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PTC', 1, 0])
2025-01-09 02:12:52,094 - DEBUG -   Entering history()
2025-01-09 02:12:52,095 - DEBUG - PTC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:52,095 - DEBUG -    Entering get()
2025-01-09 02:12:52,095 - DEBUG -     Entering _make_request()
2025-01-09 02:12:52,095 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PTC
2025-01-09 02:12:52,095 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:52,095 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:52,095 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:52,095 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:52,095 - DEBUG - reusing cookie
2025-01-09 02:12:52,095 - DEBUG - reusing crumb
2025-01-09 02:12:52,095 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:52,095 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:52,229 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PTC?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 996
2025-01-09 02:12:52,237 - DEBUG - response code=200
2025-01-09 02:12:52,238 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:52,238 - DEBUG -    Exiting get()
2025-01-09 02:12:52,242 - ERROR - 
1 Failed download:
2025-01-09 02:12:52,243 - ERROR - ['PTC']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:52,243 - DEBUG - ['PTC']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:52,245 - DEBUG - Exiting download()
2025-01-09 02:12:52,346 - ERROR - Error writing data for PTC to DB: schema "np" does not exist
LINE 4:             VALUES ('PTC','2020-01-02'::date,np.float64(75.4...
                                                     ^

2025-01-09 02:12:52,346 - DEBUG - Entering download()
2025-01-09 02:12:52,346 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:52,347 - DEBUG -  Entering history()
2025-01-09 02:12:52,347 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PSA', 1, 0])
2025-01-09 02:12:52,347 - DEBUG -   Entering history()
2025-01-09 02:12:52,348 - DEBUG - PSA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:52,348 - DEBUG -    Entering get()
2025-01-09 02:12:52,348 - DEBUG -     Entering _make_request()
2025-01-09 02:12:52,348 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PSA
2025-01-09 02:12:52,348 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:52,348 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:52,348 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:52,348 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:52,348 - DEBUG - reusing cookie
2025-01-09 02:12:52,348 - DEBUG - reusing crumb
2025-01-09 02:12:52,348 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:52,348 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:52,558 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PSA?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1007
2025-01-09 02:12:52,559 - DEBUG - response code=200
2025-01-09 02:12:52,559 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:52,559 - DEBUG -    Exiting get()
2025-01-09 02:12:52,565 - ERROR - 
1 Failed download:
2025-01-09 02:12:52,566 - ERROR - ['PSA']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:52,566 - DEBUG - ['PSA']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:52,573 - DEBUG - Exiting download()
2025-01-09 02:12:52,573 - WARNING - Ticker PSA is missing 'Close' column. Skipping.
2025-01-09 02:12:52,574 - DEBUG - Entering download()
2025-01-09 02:12:52,574 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:52,574 - DEBUG -  Entering history()
2025-01-09 02:12:52,575 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PHM', 1, 0])
2025-01-09 02:12:52,575 - DEBUG -   Entering history()
2025-01-09 02:12:52,577 - DEBUG - PHM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:52,577 - DEBUG -    Entering get()
2025-01-09 02:12:52,577 - DEBUG -     Entering _make_request()
2025-01-09 02:12:52,577 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PHM
2025-01-09 02:12:52,577 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:52,578 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:52,578 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:52,578 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:52,578 - DEBUG - reusing cookie
2025-01-09 02:12:52,578 - DEBUG - reusing crumb
2025-01-09 02:12:52,578 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:52,578 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:52,752 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PHM?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1010
2025-01-09 02:12:52,753 - DEBUG - response code=200
2025-01-09 02:12:52,753 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:52,753 - DEBUG -    Exiting get()
2025-01-09 02:12:52,759 - ERROR - 
1 Failed download:
2025-01-09 02:12:52,759 - ERROR - ['PHM']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:52,760 - DEBUG - ['PHM']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:52,767 - DEBUG - Exiting download()
2025-01-09 02:12:52,767 - WARNING - Ticker PHM is missing 'Close' column. Skipping.
2025-01-09 02:12:52,768 - DEBUG - Entering download()
2025-01-09 02:12:52,768 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:52,768 - DEBUG -  Entering history()
2025-01-09 02:12:52,769 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PWR', 1, 0])
2025-01-09 02:12:52,769 - DEBUG -   Entering history()
2025-01-09 02:12:52,771 - DEBUG - PWR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:52,771 - DEBUG -    Entering get()
2025-01-09 02:12:52,771 - DEBUG -     Entering _make_request()
2025-01-09 02:12:52,771 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PWR
2025-01-09 02:12:52,771 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:52,772 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:52,772 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:52,772 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:52,772 - DEBUG - reusing cookie
2025-01-09 02:12:52,772 - DEBUG - reusing crumb
2025-01-09 02:12:52,772 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:52,772 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:52,938 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PWR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1020
2025-01-09 02:12:52,939 - DEBUG - response code=200
2025-01-09 02:12:52,940 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:52,940 - DEBUG -    Exiting get()
2025-01-09 02:12:52,946 - ERROR - 
1 Failed download:
2025-01-09 02:12:52,946 - ERROR - ['PWR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:52,946 - DEBUG - ['PWR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:52,953 - DEBUG - Exiting download()
2025-01-09 02:12:52,954 - WARNING - Ticker PWR is missing 'Close' column. Skipping.
2025-01-09 02:12:52,954 - DEBUG - Entering download()
2025-01-09 02:12:52,954 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:52,955 - DEBUG -  Entering history()
2025-01-09 02:12:52,956 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['QCOM', 1, 0])
2025-01-09 02:12:52,956 - DEBUG -   Entering history()
2025-01-09 02:12:52,958 - DEBUG - QCOM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:52,958 - DEBUG -    Entering get()
2025-01-09 02:12:52,958 - DEBUG -     Entering _make_request()
2025-01-09 02:12:52,958 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/QCOM
2025-01-09 02:12:52,958 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:52,958 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:52,959 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:52,959 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:52,959 - DEBUG - reusing cookie
2025-01-09 02:12:52,959 - DEBUG - reusing crumb
2025-01-09 02:12:52,959 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:52,959 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:53,118 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/QCOM?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1025
2025-01-09 02:12:53,118 - DEBUG - response code=200
2025-01-09 02:12:53,118 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:53,118 - DEBUG -    Exiting get()
2025-01-09 02:12:53,121 - ERROR - 
1 Failed download:
2025-01-09 02:12:53,121 - ERROR - ['QCOM']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:53,121 - DEBUG - ['QCOM']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:53,124 - DEBUG - Exiting download()
2025-01-09 02:12:53,125 - WARNING - Ticker QCOM is missing 'Close' column. Skipping.
2025-01-09 02:12:53,125 - DEBUG - Entering download()
2025-01-09 02:12:53,125 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:53,125 - DEBUG -  Entering history()
2025-01-09 02:12:53,125 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DGX', 1, 0])
2025-01-09 02:12:53,126 - DEBUG -   Entering history()
2025-01-09 02:12:53,127 - DEBUG - DGX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:53,127 - DEBUG -    Entering get()
2025-01-09 02:12:53,127 - DEBUG -     Entering _make_request()
2025-01-09 02:12:53,127 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DGX
2025-01-09 02:12:53,127 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:53,127 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:53,127 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:53,127 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:53,127 - DEBUG - reusing cookie
2025-01-09 02:12:53,127 - DEBUG - reusing crumb
2025-01-09 02:12:53,128 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:53,128 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:53,293 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DGX?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1038
2025-01-09 02:12:53,294 - DEBUG - response code=200
2025-01-09 02:12:53,294 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:53,294 - DEBUG -    Exiting get()
2025-01-09 02:12:53,300 - ERROR - 
1 Failed download:
2025-01-09 02:12:53,301 - ERROR - ['DGX']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:53,301 - DEBUG - ['DGX']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:53,308 - DEBUG - Exiting download()
2025-01-09 02:12:53,417 - ERROR - Error writing data for DGX to DB: schema "np" does not exist
LINE 4:             VALUES ('DGX','2020-01-02'::date,np.float64(96.4...
                                                     ^

2025-01-09 02:12:53,418 - DEBUG - Entering download()
2025-01-09 02:12:53,418 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:53,418 - DEBUG -  Entering history()
2025-01-09 02:12:53,418 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['RL', 1, 0])
2025-01-09 02:12:53,419 - DEBUG -   Entering history()
2025-01-09 02:12:53,419 - DEBUG - RL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:53,419 - DEBUG -    Entering get()
2025-01-09 02:12:53,420 - DEBUG -     Entering _make_request()
2025-01-09 02:12:53,420 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/RL
2025-01-09 02:12:53,420 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:53,420 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:53,420 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:53,420 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:53,420 - DEBUG - reusing cookie
2025-01-09 02:12:53,420 - DEBUG - reusing crumb
2025-01-09 02:12:53,420 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:53,420 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:53,587 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/RL?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1024
2025-01-09 02:12:53,588 - DEBUG - response code=200
2025-01-09 02:12:53,588 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:53,588 - DEBUG -    Exiting get()
2025-01-09 02:12:53,594 - ERROR - 
1 Failed download:
2025-01-09 02:12:53,594 - ERROR - ['RL']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:53,594 - DEBUG - ['RL']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:53,601 - DEBUG - Exiting download()
2025-01-09 02:12:53,718 - ERROR - Error writing data for RL to DB: schema "np" does not exist
LINE 4:             VALUES ('RL','2020-01-02'::date,np.float64(106.8...
                                                    ^

2025-01-09 02:12:53,718 - DEBUG - Entering download()
2025-01-09 02:12:53,719 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:53,719 - DEBUG -  Entering history()
2025-01-09 02:12:53,719 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['RJF', 1, 0])
2025-01-09 02:12:53,719 - DEBUG -   Entering history()
2025-01-09 02:12:53,720 - DEBUG - RJF: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:53,720 - DEBUG -    Entering get()
2025-01-09 02:12:53,720 - DEBUG -     Entering _make_request()
2025-01-09 02:12:53,720 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/RJF
2025-01-09 02:12:53,720 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:53,720 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:53,720 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:53,720 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:53,721 - DEBUG - reusing cookie
2025-01-09 02:12:53,721 - DEBUG - reusing crumb
2025-01-09 02:12:53,721 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:53,721 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:53,912 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/RJF?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1036
2025-01-09 02:12:53,913 - DEBUG - response code=200
2025-01-09 02:12:53,913 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:53,913 - DEBUG -    Exiting get()
2025-01-09 02:12:53,919 - ERROR - 
1 Failed download:
2025-01-09 02:12:53,919 - ERROR - ['RJF']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:53,920 - DEBUG - ['RJF']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:53,927 - DEBUG - Exiting download()
2025-01-09 02:12:54,041 - ERROR - Error writing data for RJF to DB: schema "np" does not exist
LINE 4:             VALUES ('RJF','2020-01-02'::date,np.float64(55.5...
                                                     ^

2025-01-09 02:12:54,042 - DEBUG - Entering download()
2025-01-09 02:12:54,042 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:54,042 - DEBUG -  Entering history()
2025-01-09 02:12:54,042 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['RTX', 1, 0])
2025-01-09 02:12:54,042 - DEBUG -   Entering history()
2025-01-09 02:12:54,043 - DEBUG - RTX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:54,043 - DEBUG -    Entering get()
2025-01-09 02:12:54,043 - DEBUG -     Entering _make_request()
2025-01-09 02:12:54,043 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/RTX
2025-01-09 02:12:54,043 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:54,043 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:54,043 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:54,043 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:54,043 - DEBUG - reusing cookie
2025-01-09 02:12:54,043 - DEBUG - reusing crumb
2025-01-09 02:12:54,044 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:54,044 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:54,253 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/RTX?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1008
2025-01-09 02:12:54,254 - DEBUG - response code=200
2025-01-09 02:12:54,254 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:54,254 - DEBUG -    Exiting get()
2025-01-09 02:12:54,260 - ERROR - 
1 Failed download:
2025-01-09 02:12:54,261 - ERROR - ['RTX']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:54,261 - DEBUG - ['RTX']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:54,268 - DEBUG - Exiting download()
2025-01-09 02:12:54,549 - ERROR - Error writing data for RTX to DB: schema "np" does not exist
LINE 4:             VALUES ('RTX','2020-01-02'::date,np.float64(83.2...
                                                     ^

2025-01-09 02:12:54,549 - DEBUG - Entering download()
2025-01-09 02:12:54,549 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:54,550 - DEBUG -  Entering history()
2025-01-09 02:12:54,550 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['O', 1, 0])
2025-01-09 02:12:54,550 - DEBUG -   Entering history()
2025-01-09 02:12:54,551 - DEBUG - O: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:54,551 - DEBUG -    Entering get()
2025-01-09 02:12:54,551 - DEBUG -     Entering _make_request()
2025-01-09 02:12:54,551 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/O
2025-01-09 02:12:54,551 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:54,551 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:54,551 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:54,551 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:54,551 - DEBUG - reusing cookie
2025-01-09 02:12:54,551 - DEBUG - reusing crumb
2025-01-09 02:12:54,551 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:54,551 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:54,709 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/O?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1022
2025-01-09 02:12:54,710 - DEBUG - response code=200
2025-01-09 02:12:54,710 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:54,711 - DEBUG -    Exiting get()
2025-01-09 02:12:54,717 - ERROR - 
1 Failed download:
2025-01-09 02:12:54,717 - ERROR - ['O']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:54,717 - DEBUG - ['O']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:54,724 - DEBUG - Exiting download()
2025-01-09 02:12:54,724 - WARNING - Ticker O is missing 'Close' column. Skipping.
2025-01-09 02:12:54,724 - DEBUG - Entering download()
2025-01-09 02:12:54,724 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:54,725 - DEBUG -  Entering history()
2025-01-09 02:12:54,725 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['REG', 1, 0])
2025-01-09 02:12:54,726 - DEBUG -   Entering history()
2025-01-09 02:12:54,727 - DEBUG - REG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:54,727 - DEBUG -    Entering get()
2025-01-09 02:12:54,727 - DEBUG -     Entering _make_request()
2025-01-09 02:12:54,728 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/REG
2025-01-09 02:12:54,728 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:54,728 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:54,728 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:54,728 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:54,728 - DEBUG - reusing cookie
2025-01-09 02:12:54,728 - DEBUG - reusing crumb
2025-01-09 02:12:54,728 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:54,728 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:54,907 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/REG?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1030
2025-01-09 02:12:54,908 - DEBUG - response code=200
2025-01-09 02:12:54,909 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:54,909 - DEBUG -    Exiting get()
2025-01-09 02:12:54,915 - ERROR - 
1 Failed download:
2025-01-09 02:12:54,915 - ERROR - ['REG']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:54,916 - DEBUG - ['REG']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:54,923 - DEBUG - Exiting download()
2025-01-09 02:12:54,923 - WARNING - Ticker REG is missing 'Close' column. Skipping.
2025-01-09 02:12:54,923 - DEBUG - Entering download()
2025-01-09 02:12:54,923 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:54,924 - DEBUG -  Entering history()
2025-01-09 02:12:54,924 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['REGN', 1, 0])
2025-01-09 02:12:54,925 - DEBUG -   Entering history()
2025-01-09 02:12:54,926 - DEBUG - REGN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:54,926 - DEBUG -    Entering get()
2025-01-09 02:12:54,927 - DEBUG -     Entering _make_request()
2025-01-09 02:12:54,927 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/REGN
2025-01-09 02:12:54,927 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:54,927 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:54,927 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:54,927 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:54,927 - DEBUG - reusing cookie
2025-01-09 02:12:54,927 - DEBUG - reusing crumb
2025-01-09 02:12:54,928 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:54,928 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:55,071 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/REGN?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1043
2025-01-09 02:12:55,072 - DEBUG - response code=200
2025-01-09 02:12:55,073 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:55,073 - DEBUG -    Exiting get()
2025-01-09 02:12:55,079 - ERROR - 
1 Failed download:
2025-01-09 02:12:55,079 - ERROR - ['REGN']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:55,079 - DEBUG - ['REGN']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:55,086 - DEBUG - Exiting download()
2025-01-09 02:12:55,196 - ERROR - Error writing data for REGN to DB: schema "np" does not exist
LINE 4:             VALUES ('REGN','2020-01-02'::date,np.float64(378...
                                                      ^

2025-01-09 02:12:55,197 - DEBUG - Entering download()
2025-01-09 02:12:55,197 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:55,197 - DEBUG -  Entering history()
2025-01-09 02:12:55,197 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['RF', 1, 0])
2025-01-09 02:12:55,197 - DEBUG -   Entering history()
2025-01-09 02:12:55,198 - DEBUG - RF: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:55,198 - DEBUG -    Entering get()
2025-01-09 02:12:55,198 - DEBUG -     Entering _make_request()
2025-01-09 02:12:55,198 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/RF
2025-01-09 02:12:55,198 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:55,198 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:55,198 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:55,198 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:55,198 - DEBUG - reusing cookie
2025-01-09 02:12:55,198 - DEBUG - reusing crumb
2025-01-09 02:12:55,198 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:55,198 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:55,373 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/RF?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1030
2025-01-09 02:12:55,374 - DEBUG - response code=200
2025-01-09 02:12:55,374 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:55,375 - DEBUG -    Exiting get()
2025-01-09 02:12:55,378 - ERROR - 
1 Failed download:
2025-01-09 02:12:55,378 - ERROR - ['RF']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:55,378 - DEBUG - ['RF']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:55,380 - DEBUG - Exiting download()
2025-01-09 02:12:55,482 - ERROR - Error writing data for RF to DB: schema "np" does not exist
LINE 4:             VALUES ('RF','2020-01-02'::date,np.float64(14.07...
                                                    ^

2025-01-09 02:12:55,483 - DEBUG - Entering download()
2025-01-09 02:12:55,483 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:55,483 - DEBUG -  Entering history()
2025-01-09 02:12:55,484 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['RSG', 1, 0])
2025-01-09 02:12:55,484 - DEBUG -   Entering history()
2025-01-09 02:12:55,484 - DEBUG - RSG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:55,485 - DEBUG -    Entering get()
2025-01-09 02:12:55,485 - DEBUG -     Entering _make_request()
2025-01-09 02:12:55,485 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/RSG
2025-01-09 02:12:55,485 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:55,485 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:55,485 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:55,485 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:55,485 - DEBUG - reusing cookie
2025-01-09 02:12:55,485 - DEBUG - reusing crumb
2025-01-09 02:12:55,485 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:55,485 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:55,653 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/RSG?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1025
2025-01-09 02:12:55,654 - DEBUG - response code=200
2025-01-09 02:12:55,654 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:55,654 - DEBUG -    Exiting get()
2025-01-09 02:12:55,660 - ERROR - 
1 Failed download:
2025-01-09 02:12:55,660 - ERROR - ['RSG']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:55,660 - DEBUG - ['RSG']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:55,666 - DEBUG - Exiting download()
2025-01-09 02:12:55,666 - WARNING - Ticker RSG is missing 'Close' column. Skipping.
2025-01-09 02:12:55,666 - DEBUG - Entering download()
2025-01-09 02:12:55,667 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:55,667 - DEBUG -  Entering history()
2025-01-09 02:12:55,668 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['RMD', 1, 0])
2025-01-09 02:12:55,668 - DEBUG -   Entering history()
2025-01-09 02:12:55,670 - DEBUG - RMD: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:55,670 - DEBUG -    Entering get()
2025-01-09 02:12:55,670 - DEBUG -     Entering _make_request()
2025-01-09 02:12:55,671 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/RMD
2025-01-09 02:12:55,671 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:55,671 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:55,671 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:55,671 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:55,671 - DEBUG - reusing cookie
2025-01-09 02:12:55,671 - DEBUG - reusing crumb
2025-01-09 02:12:55,671 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:55,672 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:55,824 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/RMD?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1000
2025-01-09 02:12:55,825 - DEBUG - response code=200
2025-01-09 02:12:55,825 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:55,825 - DEBUG -    Exiting get()
2025-01-09 02:12:55,831 - ERROR - 
1 Failed download:
2025-01-09 02:12:55,831 - ERROR - ['RMD']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:55,832 - DEBUG - ['RMD']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:55,839 - DEBUG - Exiting download()
2025-01-09 02:12:55,955 - ERROR - Error writing data for RMD to DB: schema "np" does not exist
LINE 4:             VALUES ('RMD','2020-01-02'::date,np.float64(148....
                                                     ^

2025-01-09 02:12:55,955 - DEBUG - Entering download()
2025-01-09 02:12:55,955 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:55,955 - DEBUG -  Entering history()
2025-01-09 02:12:55,956 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['RVTY', 1, 0])
2025-01-09 02:12:55,956 - DEBUG -   Entering history()
2025-01-09 02:12:55,957 - DEBUG - RVTY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:55,957 - DEBUG -    Entering get()
2025-01-09 02:12:55,957 - DEBUG -     Entering _make_request()
2025-01-09 02:12:55,957 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/RVTY
2025-01-09 02:12:55,957 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:55,957 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:55,957 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:55,957 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:55,957 - DEBUG - reusing cookie
2025-01-09 02:12:55,958 - DEBUG - reusing crumb
2025-01-09 02:12:55,958 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:55,958 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:56,154 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/RVTY?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1000
2025-01-09 02:12:56,155 - DEBUG - response code=200
2025-01-09 02:12:56,155 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:56,155 - DEBUG -    Exiting get()
2025-01-09 02:12:56,161 - ERROR - 
1 Failed download:
2025-01-09 02:12:56,161 - ERROR - ['RVTY']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:56,162 - DEBUG - ['RVTY']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:56,169 - DEBUG - Exiting download()
2025-01-09 02:12:56,169 - WARNING - Ticker RVTY is missing 'Close' column. Skipping.
2025-01-09 02:12:56,170 - DEBUG - Entering download()
2025-01-09 02:12:56,170 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:56,170 - DEBUG -  Entering history()
2025-01-09 02:12:56,171 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ROK', 1, 0])
2025-01-09 02:12:56,172 - DEBUG -   Entering history()
2025-01-09 02:12:56,174 - DEBUG - ROK: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:56,174 - DEBUG -    Entering get()
2025-01-09 02:12:56,175 - DEBUG -     Entering _make_request()
2025-01-09 02:12:56,175 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ROK
2025-01-09 02:12:56,175 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:56,175 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:56,175 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:56,176 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:56,176 - DEBUG - reusing cookie
2025-01-09 02:12:56,176 - DEBUG - reusing crumb
2025-01-09 02:12:56,176 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:56,176 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:56,382 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ROK?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1029
2025-01-09 02:12:56,383 - DEBUG - response code=200
2025-01-09 02:12:56,383 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:56,383 - DEBUG -    Exiting get()
2025-01-09 02:12:56,390 - ERROR - 
1 Failed download:
2025-01-09 02:12:56,390 - ERROR - ['ROK']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:56,390 - DEBUG - ['ROK']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:56,397 - DEBUG - Exiting download()
2025-01-09 02:12:56,398 - WARNING - Ticker ROK is missing 'Close' column. Skipping.
2025-01-09 02:12:56,398 - DEBUG - Entering download()
2025-01-09 02:12:56,398 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:56,398 - DEBUG -  Entering history()
2025-01-09 02:12:56,399 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ROL', 1, 0])
2025-01-09 02:12:56,400 - DEBUG -   Entering history()
2025-01-09 02:12:56,401 - DEBUG - ROL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:56,401 - DEBUG -    Entering get()
2025-01-09 02:12:56,402 - DEBUG -     Entering _make_request()
2025-01-09 02:12:56,402 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ROL
2025-01-09 02:12:56,402 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:56,402 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:56,402 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:56,402 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:56,402 - DEBUG - reusing cookie
2025-01-09 02:12:56,403 - DEBUG - reusing crumb
2025-01-09 02:12:56,403 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:56,403 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:56,579 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ROL?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1001
2025-01-09 02:12:56,580 - DEBUG - response code=200
2025-01-09 02:12:56,580 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:56,580 - DEBUG -    Exiting get()
2025-01-09 02:12:56,585 - ERROR - 
1 Failed download:
2025-01-09 02:12:56,585 - ERROR - ['ROL']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:56,585 - DEBUG - ['ROL']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:56,587 - DEBUG - Exiting download()
2025-01-09 02:12:56,691 - ERROR - Error writing data for ROL to DB: schema "np" does not exist
LINE 4:             VALUES ('ROL','2020-01-02'::date,np.float64(20.8...
                                                     ^

2025-01-09 02:12:56,692 - DEBUG - Entering download()
2025-01-09 02:12:56,692 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:56,692 - DEBUG -  Entering history()
2025-01-09 02:12:56,692 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ROP', 1, 0])
2025-01-09 02:12:56,693 - DEBUG -   Entering history()
2025-01-09 02:12:56,693 - DEBUG - ROP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:56,693 - DEBUG -    Entering get()
2025-01-09 02:12:56,693 - DEBUG -     Entering _make_request()
2025-01-09 02:12:56,693 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ROP
2025-01-09 02:12:56,693 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:56,694 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:56,694 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:56,694 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:56,694 - DEBUG - reusing cookie
2025-01-09 02:12:56,694 - DEBUG - reusing crumb
2025-01-09 02:12:56,694 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:56,694 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:56,861 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ROP?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1031
2025-01-09 02:12:56,862 - DEBUG - response code=200
2025-01-09 02:12:56,862 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:56,862 - DEBUG -    Exiting get()
2025-01-09 02:12:56,866 - ERROR - 
1 Failed download:
2025-01-09 02:12:56,867 - ERROR - ['ROP']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:56,867 - DEBUG - ['ROP']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:56,869 - DEBUG - Exiting download()
2025-01-09 02:12:56,969 - ERROR - Error writing data for ROP to DB: schema "np" does not exist
LINE 4:             VALUES ('ROP','2020-01-02'::date,np.float64(343....
                                                     ^

2025-01-09 02:12:56,969 - DEBUG - Entering download()
2025-01-09 02:12:56,969 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:56,970 - DEBUG -  Entering history()
2025-01-09 02:12:56,970 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ROST', 1, 0])
2025-01-09 02:12:56,970 - DEBUG -   Entering history()
2025-01-09 02:12:56,971 - DEBUG - ROST: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:56,971 - DEBUG -    Entering get()
2025-01-09 02:12:56,971 - DEBUG -     Entering _make_request()
2025-01-09 02:12:56,971 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ROST
2025-01-09 02:12:56,971 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:56,971 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:56,971 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:56,971 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:56,971 - DEBUG - reusing cookie
2025-01-09 02:12:56,971 - DEBUG - reusing crumb
2025-01-09 02:12:56,971 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:56,971 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:57,164 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ROST?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1016
2025-01-09 02:12:57,165 - DEBUG - response code=200
2025-01-09 02:12:57,166 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:57,166 - DEBUG -    Exiting get()
2025-01-09 02:12:57,171 - ERROR - 
1 Failed download:
2025-01-09 02:12:57,172 - ERROR - ['ROST']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:57,172 - DEBUG - ['ROST']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:57,178 - DEBUG - Exiting download()
2025-01-09 02:12:57,179 - WARNING - Ticker ROST is missing 'Close' column. Skipping.
2025-01-09 02:12:57,179 - DEBUG - Entering download()
2025-01-09 02:12:57,179 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:57,180 - DEBUG -  Entering history()
2025-01-09 02:12:57,180 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['RCL', 1, 0])
2025-01-09 02:12:57,181 - DEBUG -   Entering history()
2025-01-09 02:12:57,182 - DEBUG - RCL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:57,182 - DEBUG -    Entering get()
2025-01-09 02:12:57,183 - DEBUG -     Entering _make_request()
2025-01-09 02:12:57,183 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/RCL
2025-01-09 02:12:57,183 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:57,183 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:57,183 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:57,183 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:57,183 - DEBUG - reusing cookie
2025-01-09 02:12:57,183 - DEBUG - reusing crumb
2025-01-09 02:12:57,183 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:57,183 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:57,367 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/RCL?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1033
2025-01-09 02:12:57,368 - DEBUG - response code=200
2025-01-09 02:12:57,368 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:57,368 - DEBUG -    Exiting get()
2025-01-09 02:12:57,374 - ERROR - 
1 Failed download:
2025-01-09 02:12:57,374 - ERROR - ['RCL']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:57,375 - DEBUG - ['RCL']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:57,382 - DEBUG - Exiting download()
2025-01-09 02:12:57,382 - WARNING - Ticker RCL is missing 'Close' column. Skipping.
2025-01-09 02:12:57,383 - DEBUG - Entering download()
2025-01-09 02:12:57,383 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:57,383 - DEBUG -  Entering history()
2025-01-09 02:12:57,384 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SPGI', 1, 0])
2025-01-09 02:12:57,384 - DEBUG -   Entering history()
2025-01-09 02:12:57,386 - DEBUG - SPGI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:57,386 - DEBUG -    Entering get()
2025-01-09 02:12:57,386 - DEBUG -     Entering _make_request()
2025-01-09 02:12:57,386 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SPGI
2025-01-09 02:12:57,387 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:57,387 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:57,387 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:57,387 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:57,387 - DEBUG - reusing cookie
2025-01-09 02:12:57,387 - DEBUG - reusing crumb
2025-01-09 02:12:57,387 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:57,387 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:57,592 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SPGI?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1008
2025-01-09 02:12:57,593 - DEBUG - response code=200
2025-01-09 02:12:57,594 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:57,594 - DEBUG -    Exiting get()
2025-01-09 02:12:57,596 - ERROR - 
1 Failed download:
2025-01-09 02:12:57,596 - ERROR - ['SPGI']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:57,596 - DEBUG - ['SPGI']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:57,599 - DEBUG - Exiting download()
2025-01-09 02:12:57,599 - WARNING - Ticker SPGI is missing 'Close' column. Skipping.
2025-01-09 02:12:57,599 - DEBUG - Entering download()
2025-01-09 02:12:57,599 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:57,599 - DEBUG -  Entering history()
2025-01-09 02:12:57,599 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CRM', 1, 0])
2025-01-09 02:12:57,599 - DEBUG -   Entering history()
2025-01-09 02:12:57,600 - DEBUG - CRM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:57,600 - DEBUG -    Entering get()
2025-01-09 02:12:57,600 - DEBUG -     Entering _make_request()
2025-01-09 02:12:57,600 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CRM
2025-01-09 02:12:57,600 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:57,600 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:57,600 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:57,601 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:57,601 - DEBUG - reusing cookie
2025-01-09 02:12:57,601 - DEBUG - reusing crumb
2025-01-09 02:12:57,601 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:57,601 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:57,745 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CRM?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1010
2025-01-09 02:12:57,746 - DEBUG - response code=200
2025-01-09 02:12:57,747 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:57,747 - DEBUG -    Exiting get()
2025-01-09 02:12:57,751 - ERROR - 
1 Failed download:
2025-01-09 02:12:57,751 - ERROR - ['CRM']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:57,751 - DEBUG - ['CRM']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:57,753 - DEBUG - Exiting download()
2025-01-09 02:12:57,753 - WARNING - Ticker CRM is missing 'Close' column. Skipping.
2025-01-09 02:12:57,753 - DEBUG - Entering download()
2025-01-09 02:12:57,753 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:57,753 - DEBUG -  Entering history()
2025-01-09 02:12:57,753 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SBAC', 1, 0])
2025-01-09 02:12:57,753 - DEBUG -   Entering history()
2025-01-09 02:12:57,754 - DEBUG - SBAC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:57,754 - DEBUG -    Entering get()
2025-01-09 02:12:57,754 - DEBUG -     Entering _make_request()
2025-01-09 02:12:57,754 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SBAC
2025-01-09 02:12:57,754 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:57,754 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:57,754 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:57,754 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:57,754 - DEBUG - reusing cookie
2025-01-09 02:12:57,755 - DEBUG - reusing crumb
2025-01-09 02:12:57,755 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:57,755 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:57,886 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SBAC?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1045
2025-01-09 02:12:57,887 - DEBUG - response code=200
2025-01-09 02:12:57,888 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:57,888 - DEBUG -    Exiting get()
2025-01-09 02:12:57,894 - ERROR - 
1 Failed download:
2025-01-09 02:12:57,894 - ERROR - ['SBAC']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:57,894 - DEBUG - ['SBAC']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:57,902 - DEBUG - Exiting download()
2025-01-09 02:12:58,012 - ERROR - Error writing data for SBAC to DB: schema "np" does not exist
LINE 4:             VALUES ('SBAC','2020-01-02'::date,np.float64(228...
                                                      ^

2025-01-09 02:12:58,012 - DEBUG - Entering download()
2025-01-09 02:12:58,012 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:58,012 - DEBUG -  Entering history()
2025-01-09 02:12:58,013 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SLB', 1, 0])
2025-01-09 02:12:58,013 - DEBUG -   Entering history()
2025-01-09 02:12:58,013 - DEBUG - SLB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:58,014 - DEBUG -    Entering get()
2025-01-09 02:12:58,014 - DEBUG -     Entering _make_request()
2025-01-09 02:12:58,014 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SLB
2025-01-09 02:12:58,014 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:58,014 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:58,014 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:58,014 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:58,014 - DEBUG - reusing cookie
2025-01-09 02:12:58,014 - DEBUG - reusing crumb
2025-01-09 02:12:58,014 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:58,014 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:58,204 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SLB?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1012
2025-01-09 02:12:58,205 - DEBUG - response code=200
2025-01-09 02:12:58,205 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:58,205 - DEBUG -    Exiting get()
2025-01-09 02:12:58,211 - ERROR - 
1 Failed download:
2025-01-09 02:12:58,212 - ERROR - ['SLB']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:58,212 - DEBUG - ['SLB']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:58,219 - DEBUG - Exiting download()
2025-01-09 02:12:58,473 - ERROR - Error writing data for SLB to DB: schema "np" does not exist
LINE 4:             VALUES ('SLB','2020-01-02'::date,np.float64(36.2...
                                                     ^

2025-01-09 02:12:58,474 - DEBUG - Entering download()
2025-01-09 02:12:58,474 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:58,474 - DEBUG -  Entering history()
2025-01-09 02:12:58,474 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['STX', 1, 0])
2025-01-09 02:12:58,474 - DEBUG -   Entering history()
2025-01-09 02:12:58,475 - DEBUG - STX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:58,475 - DEBUG -    Entering get()
2025-01-09 02:12:58,475 - DEBUG -     Entering _make_request()
2025-01-09 02:12:58,475 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/STX
2025-01-09 02:12:58,475 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:58,475 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:58,476 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:58,476 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:58,476 - DEBUG - reusing cookie
2025-01-09 02:12:58,476 - DEBUG - reusing crumb
2025-01-09 02:12:58,476 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:58,476 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:58,624 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/STX?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1039
2025-01-09 02:12:58,625 - DEBUG - response code=200
2025-01-09 02:12:58,625 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:58,625 - DEBUG -    Exiting get()
2025-01-09 02:12:58,631 - ERROR - 
1 Failed download:
2025-01-09 02:12:58,632 - ERROR - ['STX']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:58,632 - DEBUG - ['STX']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:58,639 - DEBUG - Exiting download()
2025-01-09 02:12:58,752 - ERROR - Error writing data for STX to DB: schema "np" does not exist
LINE 4:             VALUES ('STX','2020-01-02'::date,np.float64(49.1...
                                                     ^

2025-01-09 02:12:58,753 - DEBUG - Entering download()
2025-01-09 02:12:58,753 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:58,753 - DEBUG -  Entering history()
2025-01-09 02:12:58,753 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SRE', 1, 0])
2025-01-09 02:12:58,754 - DEBUG -   Entering history()
2025-01-09 02:12:58,754 - DEBUG - SRE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:58,754 - DEBUG -    Entering get()
2025-01-09 02:12:58,754 - DEBUG -     Entering _make_request()
2025-01-09 02:12:58,755 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SRE
2025-01-09 02:12:58,755 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:58,755 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:58,755 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:58,755 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:58,755 - DEBUG - reusing cookie
2025-01-09 02:12:58,755 - DEBUG - reusing crumb
2025-01-09 02:12:58,755 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:58,755 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:58,927 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SRE?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 987
2025-01-09 02:12:58,928 - DEBUG - response code=200
2025-01-09 02:12:58,928 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:58,928 - DEBUG -    Exiting get()
2025-01-09 02:12:58,934 - ERROR - 
1 Failed download:
2025-01-09 02:12:58,935 - ERROR - ['SRE']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:58,935 - DEBUG - ['SRE']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:58,942 - DEBUG - Exiting download()
2025-01-09 02:12:59,065 - ERROR - Error writing data for SRE to DB: schema "np" does not exist
LINE 4:             VALUES ('SRE','2020-01-02'::date,np.float64(64.2...
                                                     ^

2025-01-09 02:12:59,066 - DEBUG - Entering download()
2025-01-09 02:12:59,066 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:59,066 - DEBUG -  Entering history()
2025-01-09 02:12:59,066 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NOW', 1, 0])
2025-01-09 02:12:59,067 - DEBUG -   Entering history()
2025-01-09 02:12:59,067 - DEBUG - NOW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:59,067 - DEBUG -    Entering get()
2025-01-09 02:12:59,067 - DEBUG -     Entering _make_request()
2025-01-09 02:12:59,067 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NOW
2025-01-09 02:12:59,067 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:59,068 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:59,068 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:59,068 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:59,068 - DEBUG - reusing cookie
2025-01-09 02:12:59,068 - DEBUG - reusing crumb
2025-01-09 02:12:59,068 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:59,068 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:59,211 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NOW?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1013
2025-01-09 02:12:59,212 - DEBUG - response code=200
2025-01-09 02:12:59,212 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:59,212 - DEBUG -    Exiting get()
2025-01-09 02:12:59,216 - ERROR - 
1 Failed download:
2025-01-09 02:12:59,216 - ERROR - ['NOW']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:59,216 - DEBUG - ['NOW']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:59,220 - DEBUG - Exiting download()
2025-01-09 02:12:59,341 - ERROR - Error writing data for NOW to DB: schema "np" does not exist
LINE 4:             VALUES ('NOW','2020-01-02'::date,np.float64(284....
                                                     ^

2025-01-09 02:12:59,342 - DEBUG - Entering download()
2025-01-09 02:12:59,342 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:59,342 - DEBUG -  Entering history()
2025-01-09 02:12:59,342 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SHW', 1, 0])
2025-01-09 02:12:59,342 - DEBUG -   Entering history()
2025-01-09 02:12:59,343 - DEBUG - SHW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:59,343 - DEBUG -    Entering get()
2025-01-09 02:12:59,343 - DEBUG -     Entering _make_request()
2025-01-09 02:12:59,343 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SHW
2025-01-09 02:12:59,343 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:59,343 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:59,343 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:59,343 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:59,344 - DEBUG - reusing cookie
2025-01-09 02:12:59,344 - DEBUG - reusing crumb
2025-01-09 02:12:59,344 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:59,344 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:59,518 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SHW?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1038
2025-01-09 02:12:59,519 - DEBUG - response code=200
2025-01-09 02:12:59,519 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:59,519 - DEBUG -    Exiting get()
2025-01-09 02:12:59,525 - ERROR - 
1 Failed download:
2025-01-09 02:12:59,526 - ERROR - ['SHW']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:59,526 - DEBUG - ['SHW']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:59,532 - DEBUG - Exiting download()
2025-01-09 02:12:59,646 - ERROR - Error writing data for SHW to DB: schema "np" does not exist
LINE 4:             VALUES ('SHW','2020-01-02'::date,np.float64(186....
                                                     ^

2025-01-09 02:12:59,647 - DEBUG - Entering download()
2025-01-09 02:12:59,647 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:59,647 - DEBUG -  Entering history()
2025-01-09 02:12:59,647 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SPG', 1, 0])
2025-01-09 02:12:59,648 - DEBUG -   Entering history()
2025-01-09 02:12:59,648 - DEBUG - SPG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:59,648 - DEBUG -    Entering get()
2025-01-09 02:12:59,648 - DEBUG -     Entering _make_request()
2025-01-09 02:12:59,649 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SPG
2025-01-09 02:12:59,649 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:59,649 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:59,649 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:59,649 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:59,649 - DEBUG - reusing cookie
2025-01-09 02:12:59,649 - DEBUG - reusing crumb
2025-01-09 02:12:59,649 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:59,649 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:12:59,823 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SPG?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1030
2025-01-09 02:12:59,824 - DEBUG - response code=200
2025-01-09 02:12:59,824 - DEBUG -     Exiting _make_request()
2025-01-09 02:12:59,825 - DEBUG -    Exiting get()
2025-01-09 02:12:59,831 - ERROR - 
1 Failed download:
2025-01-09 02:12:59,831 - ERROR - ['SPG']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:12:59,831 - DEBUG - ['SPG']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:12:59,838 - DEBUG - Exiting download()
2025-01-09 02:12:59,971 - ERROR - Error writing data for SPG to DB: schema "np" does not exist
LINE 4:             VALUES ('SPG','2020-01-02'::date,np.float64(112....
                                                     ^

2025-01-09 02:12:59,972 - DEBUG - Entering download()
2025-01-09 02:12:59,972 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:12:59,972 - DEBUG -  Entering history()
2025-01-09 02:12:59,972 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SWKS', 1, 0])
2025-01-09 02:12:59,973 - DEBUG -   Entering history()
2025-01-09 02:12:59,973 - DEBUG - SWKS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:12:59,973 - DEBUG -    Entering get()
2025-01-09 02:12:59,974 - DEBUG -     Entering _make_request()
2025-01-09 02:12:59,974 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SWKS
2025-01-09 02:12:59,974 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:12:59,974 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:12:59,974 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:12:59,974 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:12:59,974 - DEBUG - reusing cookie
2025-01-09 02:12:59,974 - DEBUG - reusing crumb
2025-01-09 02:12:59,974 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:12:59,974 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:00,111 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SWKS?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1028
2025-01-09 02:13:00,111 - DEBUG - response code=200
2025-01-09 02:13:00,111 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:00,112 - DEBUG -    Exiting get()
2025-01-09 02:13:00,115 - ERROR - 
1 Failed download:
2025-01-09 02:13:00,115 - ERROR - ['SWKS']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:00,115 - DEBUG - ['SWKS']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:00,119 - DEBUG - Exiting download()
2025-01-09 02:13:00,233 - ERROR - Error writing data for SWKS to DB: schema "np" does not exist
LINE 4:             VALUES ('SWKS','2020-01-02'::date,np.float64(110...
                                                      ^

2025-01-09 02:13:00,234 - DEBUG - Entering download()
2025-01-09 02:13:00,234 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:00,234 - DEBUG -  Entering history()
2025-01-09 02:13:00,234 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SJM', 1, 0])
2025-01-09 02:13:00,235 - DEBUG -   Entering history()
2025-01-09 02:13:00,235 - DEBUG - SJM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:00,235 - DEBUG -    Entering get()
2025-01-09 02:13:00,235 - DEBUG -     Entering _make_request()
2025-01-09 02:13:00,235 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SJM
2025-01-09 02:13:00,235 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:00,236 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:00,236 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:00,236 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:00,236 - DEBUG - reusing cookie
2025-01-09 02:13:00,236 - DEBUG - reusing crumb
2025-01-09 02:13:00,236 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:00,236 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:00,391 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SJM?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1030
2025-01-09 02:13:00,392 - DEBUG - response code=200
2025-01-09 02:13:00,392 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:00,392 - DEBUG -    Exiting get()
2025-01-09 02:13:00,398 - ERROR - 
1 Failed download:
2025-01-09 02:13:00,398 - ERROR - ['SJM']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:00,398 - DEBUG - ['SJM']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:00,405 - DEBUG - Exiting download()
2025-01-09 02:13:00,405 - WARNING - Ticker SJM is missing 'Close' column. Skipping.
2025-01-09 02:13:00,405 - DEBUG - Entering download()
2025-01-09 02:13:00,406 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:00,406 - DEBUG -  Entering history()
2025-01-09 02:13:00,407 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SW', 1, 0])
2025-01-09 02:13:00,407 - DEBUG -   Entering history()
2025-01-09 02:13:00,409 - DEBUG - SW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:00,410 - DEBUG -    Entering get()
2025-01-09 02:13:00,410 - DEBUG -     Entering _make_request()
2025-01-09 02:13:00,410 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SW
2025-01-09 02:13:00,410 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:00,410 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:00,411 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:00,411 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:00,411 - DEBUG - reusing cookie
2025-01-09 02:13:00,411 - DEBUG - reusing crumb
2025-01-09 02:13:00,411 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:00,411 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:00,568 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SW?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:13:00,569 - DEBUG - response code=400
2025-01-09 02:13:00,570 - DEBUG - toggling cookie strategy basic -> csrf
2025-01-09 02:13:00,570 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:00,570 - DEBUG - cookie_mode = 'csrf'
2025-01-09 02:13:00,570 - DEBUG -       Entering _get_crumb_csrf()
2025-01-09 02:13:00,571 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['csrf', 1, 0])
2025-01-09 02:13:00,736 - DEBUG - https://guce.yahoo.com:443 "GET /consent HTTP/1.1" 302 0
2025-01-09 02:13:01,071 - DEBUG - https://www.yahoo.com:443 "GET /?guccounter=1 HTTP/1.1" 200 None
2025-01-09 02:13:01,571 - DEBUG - Failed to find "csrfToken" in response
2025-01-09 02:13:01,572 - DEBUG -       Exiting _get_crumb_csrf()
2025-01-09 02:13:01,572 - DEBUG - toggling cookie strategy csrf -> basic
2025-01-09 02:13:01,572 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:01,572 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['basic', 1, 0])
2025-01-09 02:13:01,572 - DEBUG - loaded persistent cookie
2025-01-09 02:13:01,572 - DEBUG - reusing cookie
2025-01-09 02:13:01,702 - DEBUG - https://query1.finance.yahoo.com:443 "GET /v1/test/getcrumb HTTP/1.1" 200 11
2025-01-09 02:13:01,703 - DEBUG - crumb = 'mbrlfmeSllh'
2025-01-09 02:13:01,703 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:01,703 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:01,854 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SW?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:13:01,855 - DEBUG - response code=400
2025-01-09 02:13:01,855 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:01,855 - DEBUG -    Exiting get()
2025-01-09 02:13:01,861 - ERROR - 
1 Failed download:
2025-01-09 02:13:01,862 - ERROR - ['SW']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn\'t exist for startDate = 1577854800, endDate = 1577941200")')
2025-01-09 02:13:01,862 - DEBUG - ['SW']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn't exist for startDate = 1577854800, endDate = 1577941200")

2025-01-09 02:13:01,869 - DEBUG - Exiting download()
2025-01-09 02:13:01,870 - WARNING - Ticker SW is missing 'Close' column. Skipping.
2025-01-09 02:13:01,870 - DEBUG - Entering download()
2025-01-09 02:13:01,870 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:01,871 - DEBUG -  Entering history()
2025-01-09 02:13:01,872 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SNA', 1, 0])
2025-01-09 02:13:01,872 - DEBUG -   Entering history()
2025-01-09 02:13:01,874 - DEBUG - SNA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:01,875 - DEBUG -    Entering get()
2025-01-09 02:13:01,875 - DEBUG -     Entering _make_request()
2025-01-09 02:13:01,875 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SNA
2025-01-09 02:13:01,875 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:01,876 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:01,876 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:01,876 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:01,876 - DEBUG - reusing cookie
2025-01-09 02:13:01,876 - DEBUG - reusing crumb
2025-01-09 02:13:01,876 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:01,876 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:02,074 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SNA?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1015
2025-01-09 02:13:02,075 - DEBUG - response code=200
2025-01-09 02:13:02,075 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:02,075 - DEBUG -    Exiting get()
2025-01-09 02:13:02,079 - ERROR - 
1 Failed download:
2025-01-09 02:13:02,079 - ERROR - ['SNA']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:02,079 - DEBUG - ['SNA']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:02,081 - DEBUG - Exiting download()
2025-01-09 02:13:02,081 - WARNING - Ticker SNA is missing 'Close' column. Skipping.
2025-01-09 02:13:02,081 - DEBUG - Entering download()
2025-01-09 02:13:02,082 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:02,082 - DEBUG -  Entering history()
2025-01-09 02:13:02,082 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SOLV', 1, 0])
2025-01-09 02:13:02,082 - DEBUG -   Entering history()
2025-01-09 02:13:02,083 - DEBUG - SOLV: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:02,083 - DEBUG -    Entering get()
2025-01-09 02:13:02,083 - DEBUG -     Entering _make_request()
2025-01-09 02:13:02,083 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SOLV
2025-01-09 02:13:02,083 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:02,083 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:02,083 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:02,083 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:02,083 - DEBUG - reusing cookie
2025-01-09 02:13:02,083 - DEBUG - reusing crumb
2025-01-09 02:13:02,083 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:02,083 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:02,228 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SOLV?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:13:02,229 - DEBUG - response code=400
2025-01-09 02:13:02,229 - DEBUG - toggling cookie strategy basic -> csrf
2025-01-09 02:13:02,229 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:02,229 - DEBUG - cookie_mode = 'csrf'
2025-01-09 02:13:02,230 - DEBUG -       Entering _get_crumb_csrf()
2025-01-09 02:13:02,230 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['csrf', 1, 0])
2025-01-09 02:13:02,397 - DEBUG - https://guce.yahoo.com:443 "GET /consent HTTP/1.1" 302 0
2025-01-09 02:13:02,735 - DEBUG - https://www.yahoo.com:443 "GET /?guccounter=1 HTTP/1.1" 200 None
2025-01-09 02:13:03,169 - DEBUG - Failed to find "csrfToken" in response
2025-01-09 02:13:03,169 - DEBUG -       Exiting _get_crumb_csrf()
2025-01-09 02:13:03,169 - DEBUG - toggling cookie strategy csrf -> basic
2025-01-09 02:13:03,169 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:03,170 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['basic', 1, 0])
2025-01-09 02:13:03,170 - DEBUG - loaded persistent cookie
2025-01-09 02:13:03,170 - DEBUG - reusing cookie
2025-01-09 02:13:03,304 - DEBUG - https://query1.finance.yahoo.com:443 "GET /v1/test/getcrumb HTTP/1.1" 200 11
2025-01-09 02:13:03,304 - DEBUG - crumb = 'mbrlfmeSllh'
2025-01-09 02:13:03,304 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:03,305 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:03,448 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SOLV?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:13:03,449 - DEBUG - response code=400
2025-01-09 02:13:03,449 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:03,449 - DEBUG -    Exiting get()
2025-01-09 02:13:03,455 - ERROR - 
1 Failed download:
2025-01-09 02:13:03,456 - ERROR - ['SOLV']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn\'t exist for startDate = 1577854800, endDate = 1577941200")')
2025-01-09 02:13:03,456 - DEBUG - ['SOLV']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn't exist for startDate = 1577854800, endDate = 1577941200")

2025-01-09 02:13:03,463 - DEBUG - Exiting download()
2025-01-09 02:13:03,624 - ERROR - Error writing data for SOLV to DB: schema "np" does not exist
LINE 4:             VALUES ('SOLV','2024-04-01'::date,np.float64(69....
                                                      ^

2025-01-09 02:13:03,624 - DEBUG - Entering download()
2025-01-09 02:13:03,625 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:03,625 - DEBUG -  Entering history()
2025-01-09 02:13:03,625 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SO', 1, 0])
2025-01-09 02:13:03,625 - DEBUG -   Entering history()
2025-01-09 02:13:03,626 - DEBUG - SO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:03,626 - DEBUG -    Entering get()
2025-01-09 02:13:03,626 - DEBUG -     Entering _make_request()
2025-01-09 02:13:03,626 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SO
2025-01-09 02:13:03,626 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:03,626 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:03,626 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:03,626 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:03,626 - DEBUG - reusing cookie
2025-01-09 02:13:03,626 - DEBUG - reusing crumb
2025-01-09 02:13:03,626 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:03,626 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:03,817 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SO?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1012
2025-01-09 02:13:03,818 - DEBUG - response code=200
2025-01-09 02:13:03,818 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:03,819 - DEBUG -    Exiting get()
2025-01-09 02:13:03,825 - ERROR - 
1 Failed download:
2025-01-09 02:13:03,825 - ERROR - ['SO']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:03,825 - DEBUG - ['SO']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:03,833 - DEBUG - Exiting download()
2025-01-09 02:13:03,951 - ERROR - Error writing data for SO to DB: schema "np" does not exist
LINE 4:             VALUES ('SO','2020-01-02'::date,np.float64(52.17...
                                                    ^

2025-01-09 02:13:03,951 - DEBUG - Entering download()
2025-01-09 02:13:03,951 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:03,952 - DEBUG -  Entering history()
2025-01-09 02:13:03,952 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LUV', 1, 0])
2025-01-09 02:13:03,952 - DEBUG -   Entering history()
2025-01-09 02:13:03,953 - DEBUG - LUV: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:03,953 - DEBUG -    Entering get()
2025-01-09 02:13:03,953 - DEBUG -     Entering _make_request()
2025-01-09 02:13:03,953 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LUV
2025-01-09 02:13:03,953 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:03,953 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:03,953 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:03,953 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:03,953 - DEBUG - reusing cookie
2025-01-09 02:13:03,953 - DEBUG - reusing crumb
2025-01-09 02:13:03,954 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:03,954 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:04,140 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LUV?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1021
2025-01-09 02:13:04,141 - DEBUG - response code=200
2025-01-09 02:13:04,141 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:04,141 - DEBUG -    Exiting get()
2025-01-09 02:13:04,147 - ERROR - 
1 Failed download:
2025-01-09 02:13:04,148 - ERROR - ['LUV']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:04,148 - DEBUG - ['LUV']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:04,155 - DEBUG - Exiting download()
2025-01-09 02:13:04,263 - ERROR - Error writing data for LUV to DB: schema "np" does not exist
LINE 4:             VALUES ('LUV','2020-01-02'::date,np.float64(51.5...
                                                     ^

2025-01-09 02:13:04,264 - DEBUG - Entering download()
2025-01-09 02:13:04,264 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:04,264 - DEBUG -  Entering history()
2025-01-09 02:13:04,264 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SWK', 1, 0])
2025-01-09 02:13:04,264 - DEBUG -   Entering history()
2025-01-09 02:13:04,265 - DEBUG - SWK: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:04,265 - DEBUG -    Entering get()
2025-01-09 02:13:04,265 - DEBUG -     Entering _make_request()
2025-01-09 02:13:04,265 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SWK
2025-01-09 02:13:04,265 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:04,265 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:04,266 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:04,266 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:04,266 - DEBUG - reusing cookie
2025-01-09 02:13:04,266 - DEBUG - reusing crumb
2025-01-09 02:13:04,266 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:04,266 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:04,454 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SWK?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1030
2025-01-09 02:13:04,456 - DEBUG - response code=200
2025-01-09 02:13:04,456 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:04,456 - DEBUG -    Exiting get()
2025-01-09 02:13:04,462 - ERROR - 
1 Failed download:
2025-01-09 02:13:04,462 - ERROR - ['SWK']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:04,463 - DEBUG - ['SWK']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:04,469 - DEBUG - Exiting download()
2025-01-09 02:13:04,583 - ERROR - Error writing data for SWK to DB: schema "np" does not exist
LINE 4:             VALUES ('SWK','2020-01-02'::date,np.float64(145....
                                                     ^

2025-01-09 02:13:04,583 - DEBUG - Entering download()
2025-01-09 02:13:04,583 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:04,583 - DEBUG -  Entering history()
2025-01-09 02:13:04,584 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SBUX', 1, 0])
2025-01-09 02:13:04,584 - DEBUG -   Entering history()
2025-01-09 02:13:04,584 - DEBUG - SBUX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:04,585 - DEBUG -    Entering get()
2025-01-09 02:13:04,585 - DEBUG -     Entering _make_request()
2025-01-09 02:13:04,585 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SBUX
2025-01-09 02:13:04,585 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:04,585 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:04,585 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:04,585 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:04,585 - DEBUG - reusing cookie
2025-01-09 02:13:04,585 - DEBUG - reusing crumb
2025-01-09 02:13:04,585 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:04,585 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:04,758 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SBUX?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1022
2025-01-09 02:13:04,759 - DEBUG - response code=200
2025-01-09 02:13:04,759 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:04,759 - DEBUG -    Exiting get()
2025-01-09 02:13:04,765 - ERROR - 
1 Failed download:
2025-01-09 02:13:04,765 - ERROR - ['SBUX']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:04,766 - DEBUG - ['SBUX']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:04,774 - DEBUG - Exiting download()
2025-01-09 02:13:04,775 - WARNING - Ticker SBUX is missing 'Close' column. Skipping.
2025-01-09 02:13:04,775 - DEBUG - Entering download()
2025-01-09 02:13:04,775 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:04,776 - DEBUG -  Entering history()
2025-01-09 02:13:04,777 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['STT', 1, 0])
2025-01-09 02:13:04,777 - DEBUG -   Entering history()
2025-01-09 02:13:04,779 - DEBUG - STT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:04,780 - DEBUG -    Entering get()
2025-01-09 02:13:04,780 - DEBUG -     Entering _make_request()
2025-01-09 02:13:04,780 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/STT
2025-01-09 02:13:04,781 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:04,781 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:04,781 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:04,781 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:04,781 - DEBUG - reusing cookie
2025-01-09 02:13:04,781 - DEBUG - reusing crumb
2025-01-09 02:13:04,781 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:04,781 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:04,967 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/STT?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1021
2025-01-09 02:13:04,968 - DEBUG - response code=200
2025-01-09 02:13:04,969 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:04,969 - DEBUG -    Exiting get()
2025-01-09 02:13:04,975 - ERROR - 
1 Failed download:
2025-01-09 02:13:04,975 - ERROR - ['STT']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:04,975 - DEBUG - ['STT']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:04,983 - DEBUG - Exiting download()
2025-01-09 02:13:05,090 - ERROR - Error writing data for STT to DB: schema "np" does not exist
LINE 4:             VALUES ('STT','2020-01-02'::date,np.float64(67.3...
                                                     ^

2025-01-09 02:13:05,091 - DEBUG - Entering download()
2025-01-09 02:13:05,091 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:05,091 - DEBUG -  Entering history()
2025-01-09 02:13:05,092 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['STLD', 1, 0])
2025-01-09 02:13:05,092 - DEBUG -   Entering history()
2025-01-09 02:13:05,092 - DEBUG - STLD: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:05,092 - DEBUG -    Entering get()
2025-01-09 02:13:05,093 - DEBUG -     Entering _make_request()
2025-01-09 02:13:05,093 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/STLD
2025-01-09 02:13:05,093 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:05,093 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:05,093 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:05,093 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:05,093 - DEBUG - reusing cookie
2025-01-09 02:13:05,093 - DEBUG - reusing crumb
2025-01-09 02:13:05,093 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:05,093 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:05,251 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/STLD?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1023
2025-01-09 02:13:05,252 - DEBUG - response code=200
2025-01-09 02:13:05,252 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:05,253 - DEBUG -    Exiting get()
2025-01-09 02:13:05,259 - ERROR - 
1 Failed download:
2025-01-09 02:13:05,259 - ERROR - ['STLD']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:05,259 - DEBUG - ['STLD']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:05,266 - DEBUG - Exiting download()
2025-01-09 02:13:05,267 - WARNING - Ticker STLD is missing 'Close' column. Skipping.
2025-01-09 02:13:05,267 - DEBUG - Entering download()
2025-01-09 02:13:05,267 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:05,268 - DEBUG -  Entering history()
2025-01-09 02:13:05,269 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['STE', 1, 0])
2025-01-09 02:13:05,269 - DEBUG -   Entering history()
2025-01-09 02:13:05,271 - DEBUG - STE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:05,271 - DEBUG -    Entering get()
2025-01-09 02:13:05,271 - DEBUG -     Entering _make_request()
2025-01-09 02:13:05,271 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/STE
2025-01-09 02:13:05,271 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:05,272 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:05,272 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:05,272 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:05,272 - DEBUG - reusing cookie
2025-01-09 02:13:05,272 - DEBUG - reusing crumb
2025-01-09 02:13:05,272 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:05,272 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:05,431 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/STE?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1008
2025-01-09 02:13:05,433 - DEBUG - response code=200
2025-01-09 02:13:05,433 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:05,433 - DEBUG -    Exiting get()
2025-01-09 02:13:05,439 - ERROR - 
1 Failed download:
2025-01-09 02:13:05,439 - ERROR - ['STE']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:05,439 - DEBUG - ['STE']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:05,447 - DEBUG - Exiting download()
2025-01-09 02:13:05,447 - WARNING - Ticker STE is missing 'Close' column. Skipping.
2025-01-09 02:13:05,448 - DEBUG - Entering download()
2025-01-09 02:13:05,448 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:05,448 - DEBUG -  Entering history()
2025-01-09 02:13:05,449 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SYK', 1, 0])
2025-01-09 02:13:05,449 - DEBUG -   Entering history()
2025-01-09 02:13:05,451 - DEBUG - SYK: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:05,451 - DEBUG -    Entering get()
2025-01-09 02:13:05,451 - DEBUG -     Entering _make_request()
2025-01-09 02:13:05,451 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SYK
2025-01-09 02:13:05,451 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:05,452 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:05,452 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:05,452 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:05,452 - DEBUG - reusing cookie
2025-01-09 02:13:05,452 - DEBUG - reusing crumb
2025-01-09 02:13:05,452 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:05,452 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:05,623 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SYK?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1015
2025-01-09 02:13:05,624 - DEBUG - response code=200
2025-01-09 02:13:05,624 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:05,624 - DEBUG -    Exiting get()
2025-01-09 02:13:05,630 - ERROR - 
1 Failed download:
2025-01-09 02:13:05,631 - ERROR - ['SYK']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:05,631 - DEBUG - ['SYK']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:05,638 - DEBUG - Exiting download()
2025-01-09 02:13:05,638 - WARNING - Ticker SYK is missing 'Close' column. Skipping.
2025-01-09 02:13:05,639 - DEBUG - Entering download()
2025-01-09 02:13:05,639 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:05,639 - DEBUG -  Entering history()
2025-01-09 02:13:05,640 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SMCI', 1, 0])
2025-01-09 02:13:05,641 - DEBUG -   Entering history()
2025-01-09 02:13:05,642 - DEBUG - SMCI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:05,642 - DEBUG -    Entering get()
2025-01-09 02:13:05,643 - DEBUG -     Entering _make_request()
2025-01-09 02:13:05,643 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SMCI
2025-01-09 02:13:05,643 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:05,643 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:05,643 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:05,643 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:05,643 - DEBUG - reusing cookie
2025-01-09 02:13:05,643 - DEBUG - reusing crumb
2025-01-09 02:13:05,644 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:05,644 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:05,791 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SMCI?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1032
2025-01-09 02:13:05,792 - DEBUG - response code=200
2025-01-09 02:13:05,793 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:05,793 - DEBUG -    Exiting get()
2025-01-09 02:13:05,797 - ERROR - 
1 Failed download:
2025-01-09 02:13:05,797 - ERROR - ['SMCI']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:05,797 - DEBUG - ['SMCI']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:05,799 - DEBUG - Exiting download()
2025-01-09 02:13:05,799 - WARNING - Ticker SMCI is missing 'Close' column. Skipping.
2025-01-09 02:13:05,799 - DEBUG - Entering download()
2025-01-09 02:13:05,799 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:05,799 - DEBUG -  Entering history()
2025-01-09 02:13:05,800 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SYF', 1, 0])
2025-01-09 02:13:05,800 - DEBUG -   Entering history()
2025-01-09 02:13:05,800 - DEBUG - SYF: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:05,801 - DEBUG -    Entering get()
2025-01-09 02:13:05,801 - DEBUG -     Entering _make_request()
2025-01-09 02:13:05,801 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SYF
2025-01-09 02:13:05,801 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:05,801 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:05,801 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:05,801 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:05,801 - DEBUG - reusing cookie
2025-01-09 02:13:05,801 - DEBUG - reusing crumb
2025-01-09 02:13:05,801 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:05,801 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:05,951 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SYF?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1014
2025-01-09 02:13:05,952 - DEBUG - response code=200
2025-01-09 02:13:05,953 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:05,953 - DEBUG -    Exiting get()
2025-01-09 02:13:05,957 - ERROR - 
1 Failed download:
2025-01-09 02:13:05,957 - ERROR - ['SYF']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:05,957 - DEBUG - ['SYF']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:05,959 - DEBUG - Exiting download()
2025-01-09 02:13:06,063 - ERROR - Error writing data for SYF to DB: schema "np" does not exist
LINE 4:             VALUES ('SYF','2020-01-02'::date,np.float64(31.6...
                                                     ^

2025-01-09 02:13:06,063 - DEBUG - Entering download()
2025-01-09 02:13:06,063 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:06,064 - DEBUG -  Entering history()
2025-01-09 02:13:06,064 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SNPS', 1, 0])
2025-01-09 02:13:06,064 - DEBUG -   Entering history()
2025-01-09 02:13:06,065 - DEBUG - SNPS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:06,065 - DEBUG -    Entering get()
2025-01-09 02:13:06,065 - DEBUG -     Entering _make_request()
2025-01-09 02:13:06,065 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SNPS
2025-01-09 02:13:06,065 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:06,065 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:06,065 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:06,065 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:06,065 - DEBUG - reusing cookie
2025-01-09 02:13:06,065 - DEBUG - reusing crumb
2025-01-09 02:13:06,065 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:06,065 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:06,209 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SNPS?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1010
2025-01-09 02:13:06,210 - DEBUG - response code=200
2025-01-09 02:13:06,210 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:06,210 - DEBUG -    Exiting get()
2025-01-09 02:13:06,216 - ERROR - 
1 Failed download:
2025-01-09 02:13:06,216 - ERROR - ['SNPS']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:06,217 - DEBUG - ['SNPS']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:06,224 - DEBUG - Exiting download()
2025-01-09 02:13:06,358 - ERROR - Error writing data for SNPS to DB: schema "np" does not exist
LINE 4:             VALUES ('SNPS','2020-01-02'::date,np.float64(140...
                                                      ^

2025-01-09 02:13:06,358 - DEBUG - Entering download()
2025-01-09 02:13:06,358 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:06,358 - DEBUG -  Entering history()
2025-01-09 02:13:06,359 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SYY', 1, 0])
2025-01-09 02:13:06,359 - DEBUG -   Entering history()
2025-01-09 02:13:06,360 - DEBUG - SYY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:06,360 - DEBUG -    Entering get()
2025-01-09 02:13:06,360 - DEBUG -     Entering _make_request()
2025-01-09 02:13:06,360 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SYY
2025-01-09 02:13:06,360 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:06,361 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:06,361 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:06,361 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:06,361 - DEBUG - reusing cookie
2025-01-09 02:13:06,361 - DEBUG - reusing crumb
2025-01-09 02:13:06,361 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:06,361 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:06,547 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SYY?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1035
2025-01-09 02:13:06,548 - DEBUG - response code=200
2025-01-09 02:13:06,548 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:06,549 - DEBUG -    Exiting get()
2025-01-09 02:13:06,555 - ERROR - 
1 Failed download:
2025-01-09 02:13:06,555 - ERROR - ['SYY']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:06,555 - DEBUG - ['SYY']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:06,563 - DEBUG - Exiting download()
2025-01-09 02:13:06,679 - ERROR - Error writing data for SYY to DB: schema "np" does not exist
LINE 4:             VALUES ('SYY','2020-01-02'::date,np.float64(74.3...
                                                     ^

2025-01-09 02:13:06,680 - DEBUG - Entering download()
2025-01-09 02:13:06,680 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:06,680 - DEBUG -  Entering history()
2025-01-09 02:13:06,680 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TMUS', 1, 0])
2025-01-09 02:13:06,681 - DEBUG -   Entering history()
2025-01-09 02:13:06,681 - DEBUG - TMUS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:06,681 - DEBUG -    Entering get()
2025-01-09 02:13:06,682 - DEBUG -     Entering _make_request()
2025-01-09 02:13:06,682 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TMUS
2025-01-09 02:13:06,682 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:06,682 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:06,682 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:06,682 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:06,682 - DEBUG - reusing cookie
2025-01-09 02:13:06,682 - DEBUG - reusing crumb
2025-01-09 02:13:06,682 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:06,682 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:06,892 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TMUS?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1019
2025-01-09 02:13:06,893 - DEBUG - response code=200
2025-01-09 02:13:06,893 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:06,893 - DEBUG -    Exiting get()
2025-01-09 02:13:06,899 - ERROR - 
1 Failed download:
2025-01-09 02:13:06,900 - ERROR - ['TMUS']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:06,900 - DEBUG - ['TMUS']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:06,907 - DEBUG - Exiting download()
2025-01-09 02:13:07,023 - ERROR - Error writing data for TMUS to DB: schema "np" does not exist
LINE 4:             VALUES ('TMUS','2020-01-02'::date,np.float64(77....
                                                      ^

2025-01-09 02:13:07,023 - DEBUG - Entering download()
2025-01-09 02:13:07,023 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:07,024 - DEBUG -  Entering history()
2025-01-09 02:13:07,024 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TROW', 1, 0])
2025-01-09 02:13:07,024 - DEBUG -   Entering history()
2025-01-09 02:13:07,025 - DEBUG - TROW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:07,025 - DEBUG -    Entering get()
2025-01-09 02:13:07,025 - DEBUG -     Entering _make_request()
2025-01-09 02:13:07,025 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TROW
2025-01-09 02:13:07,025 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:07,025 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:07,025 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:07,025 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:07,025 - DEBUG - reusing cookie
2025-01-09 02:13:07,025 - DEBUG - reusing crumb
2025-01-09 02:13:07,025 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:07,025 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:07,243 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TROW?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1033
2025-01-09 02:13:07,244 - DEBUG - response code=200
2025-01-09 02:13:07,245 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:07,245 - DEBUG -    Exiting get()
2025-01-09 02:13:07,251 - ERROR - 
1 Failed download:
2025-01-09 02:13:07,251 - ERROR - ['TROW']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:07,251 - DEBUG - ['TROW']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:07,258 - DEBUG - Exiting download()
2025-01-09 02:13:07,259 - WARNING - Ticker TROW is missing 'Close' column. Skipping.
2025-01-09 02:13:07,259 - DEBUG - Entering download()
2025-01-09 02:13:07,259 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:07,260 - DEBUG -  Entering history()
2025-01-09 02:13:07,261 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TTWO', 1, 0])
2025-01-09 02:13:07,261 - DEBUG -   Entering history()
2025-01-09 02:13:07,262 - DEBUG - TTWO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:07,263 - DEBUG -    Entering get()
2025-01-09 02:13:07,263 - DEBUG -     Entering _make_request()
2025-01-09 02:13:07,263 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TTWO
2025-01-09 02:13:07,263 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:07,263 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:07,264 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:07,264 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:07,264 - DEBUG - reusing cookie
2025-01-09 02:13:07,264 - DEBUG - reusing crumb
2025-01-09 02:13:07,264 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:07,264 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:07,411 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TTWO?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1050
2025-01-09 02:13:07,412 - DEBUG - response code=200
2025-01-09 02:13:07,412 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:07,412 - DEBUG -    Exiting get()
2025-01-09 02:13:07,416 - ERROR - 
1 Failed download:
2025-01-09 02:13:07,416 - ERROR - ['TTWO']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:07,416 - DEBUG - ['TTWO']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:07,419 - DEBUG - Exiting download()
2025-01-09 02:13:07,523 - ERROR - Error writing data for TTWO to DB: schema "np" does not exist
LINE 4:             VALUES ('TTWO','2020-01-02'::date,np.float64(123...
                                                      ^

2025-01-09 02:13:07,523 - DEBUG - Entering download()
2025-01-09 02:13:07,523 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:07,523 - DEBUG -  Entering history()
2025-01-09 02:13:07,524 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TPR', 1, 0])
2025-01-09 02:13:07,524 - DEBUG -   Entering history()
2025-01-09 02:13:07,524 - DEBUG - TPR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:07,525 - DEBUG -    Entering get()
2025-01-09 02:13:07,525 - DEBUG -     Entering _make_request()
2025-01-09 02:13:07,525 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TPR
2025-01-09 02:13:07,525 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:07,525 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:07,525 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:07,525 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:07,525 - DEBUG - reusing cookie
2025-01-09 02:13:07,525 - DEBUG - reusing crumb
2025-01-09 02:13:07,525 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:07,525 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:07,672 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TPR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1001
2025-01-09 02:13:07,672 - DEBUG - response code=200
2025-01-09 02:13:07,673 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:07,673 - DEBUG -    Exiting get()
2025-01-09 02:13:07,678 - ERROR - 
1 Failed download:
2025-01-09 02:13:07,678 - ERROR - ['TPR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:07,678 - DEBUG - ['TPR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:07,684 - DEBUG - Exiting download()
2025-01-09 02:13:07,684 - WARNING - Ticker TPR is missing 'Close' column. Skipping.
2025-01-09 02:13:07,684 - DEBUG - Entering download()
2025-01-09 02:13:07,685 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:07,685 - DEBUG -  Entering history()
2025-01-09 02:13:07,686 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TRGP', 1, 0])
2025-01-09 02:13:07,686 - DEBUG -   Entering history()
2025-01-09 02:13:07,688 - DEBUG - TRGP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:07,688 - DEBUG -    Entering get()
2025-01-09 02:13:07,688 - DEBUG -     Entering _make_request()
2025-01-09 02:13:07,689 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TRGP
2025-01-09 02:13:07,689 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:07,689 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:07,689 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:07,689 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:07,689 - DEBUG - reusing cookie
2025-01-09 02:13:07,689 - DEBUG - reusing crumb
2025-01-09 02:13:07,689 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:07,689 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:07,842 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TRGP?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1021
2025-01-09 02:13:07,843 - DEBUG - response code=200
2025-01-09 02:13:07,843 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:07,843 - DEBUG -    Exiting get()
2025-01-09 02:13:07,847 - ERROR - 
1 Failed download:
2025-01-09 02:13:07,847 - ERROR - ['TRGP']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:07,847 - DEBUG - ['TRGP']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:07,849 - DEBUG - Exiting download()
2025-01-09 02:13:07,950 - ERROR - Error writing data for TRGP to DB: schema "np" does not exist
LINE 4:             VALUES ('TRGP','2020-01-02'::date,np.float64(36....
                                                      ^

2025-01-09 02:13:07,950 - DEBUG - Entering download()
2025-01-09 02:13:07,950 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:07,951 - DEBUG -  Entering history()
2025-01-09 02:13:07,951 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TGT', 1, 0])
2025-01-09 02:13:07,951 - DEBUG -   Entering history()
2025-01-09 02:13:07,952 - DEBUG - TGT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:07,952 - DEBUG -    Entering get()
2025-01-09 02:13:07,952 - DEBUG -     Entering _make_request()
2025-01-09 02:13:07,952 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TGT
2025-01-09 02:13:07,952 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:07,952 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:07,952 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:07,952 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:07,952 - DEBUG - reusing cookie
2025-01-09 02:13:07,952 - DEBUG - reusing crumb
2025-01-09 02:13:07,952 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:07,952 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:08,161 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TGT?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1015
2025-01-09 02:13:08,162 - DEBUG - response code=200
2025-01-09 02:13:08,163 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:08,163 - DEBUG -    Exiting get()
2025-01-09 02:13:08,169 - ERROR - 
1 Failed download:
2025-01-09 02:13:08,169 - ERROR - ['TGT']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:08,169 - DEBUG - ['TGT']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:08,177 - DEBUG - Exiting download()
2025-01-09 02:13:08,177 - WARNING - Ticker TGT is missing 'Close' column. Skipping.
2025-01-09 02:13:08,177 - DEBUG - Entering download()
2025-01-09 02:13:08,178 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:08,178 - DEBUG -  Entering history()
2025-01-09 02:13:08,179 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TEL', 1, 0])
2025-01-09 02:13:08,179 - DEBUG -   Entering history()
2025-01-09 02:13:08,181 - DEBUG - TEL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:08,181 - DEBUG -    Entering get()
2025-01-09 02:13:08,181 - DEBUG -     Entering _make_request()
2025-01-09 02:13:08,181 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TEL
2025-01-09 02:13:08,181 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:08,182 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:08,182 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:08,182 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:08,182 - DEBUG - reusing cookie
2025-01-09 02:13:08,182 - DEBUG - reusing crumb
2025-01-09 02:13:08,182 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:08,182 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:08,346 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TEL?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1016
2025-01-09 02:13:08,347 - DEBUG - response code=200
2025-01-09 02:13:08,348 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:08,348 - DEBUG -    Exiting get()
2025-01-09 02:13:08,354 - ERROR - 
1 Failed download:
2025-01-09 02:13:08,354 - ERROR - ['TEL']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:08,354 - DEBUG - ['TEL']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:08,361 - DEBUG - Exiting download()
2025-01-09 02:13:08,476 - ERROR - Error writing data for TEL to DB: schema "np" does not exist
LINE 4:             VALUES ('TEL','2020-01-02'::date,np.float64(89.2...
                                                     ^

2025-01-09 02:13:08,476 - DEBUG - Entering download()
2025-01-09 02:13:08,476 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:08,477 - DEBUG -  Entering history()
2025-01-09 02:13:08,477 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TDY', 1, 0])
2025-01-09 02:13:08,477 - DEBUG -   Entering history()
2025-01-09 02:13:08,478 - DEBUG - TDY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:08,478 - DEBUG -    Entering get()
2025-01-09 02:13:08,478 - DEBUG -     Entering _make_request()
2025-01-09 02:13:08,478 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TDY
2025-01-09 02:13:08,478 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:08,478 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:08,478 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:08,478 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:08,478 - DEBUG - reusing cookie
2025-01-09 02:13:08,478 - DEBUG - reusing crumb
2025-01-09 02:13:08,478 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:08,478 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:08,621 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TDY?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1042
2025-01-09 02:13:08,622 - DEBUG - response code=200
2025-01-09 02:13:08,622 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:08,622 - DEBUG -    Exiting get()
2025-01-09 02:13:08,627 - ERROR - 
1 Failed download:
2025-01-09 02:13:08,627 - ERROR - ['TDY']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:08,628 - DEBUG - ['TDY']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:08,633 - DEBUG - Exiting download()
2025-01-09 02:13:08,758 - ERROR - Error writing data for TDY to DB: schema "np" does not exist
LINE 4:             VALUES ('TDY','2020-01-02'::date,np.float64(348....
                                                     ^

2025-01-09 02:13:08,759 - DEBUG - Entering download()
2025-01-09 02:13:08,759 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:08,759 - DEBUG -  Entering history()
2025-01-09 02:13:08,759 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TFX', 1, 0])
2025-01-09 02:13:08,759 - DEBUG -   Entering history()
2025-01-09 02:13:08,760 - DEBUG - TFX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:08,760 - DEBUG -    Entering get()
2025-01-09 02:13:08,760 - DEBUG -     Entering _make_request()
2025-01-09 02:13:08,760 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TFX
2025-01-09 02:13:08,760 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:08,760 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:08,761 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:08,761 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:08,761 - DEBUG - reusing cookie
2025-01-09 02:13:08,761 - DEBUG - reusing crumb
2025-01-09 02:13:08,761 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:08,761 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:08,962 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TFX?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1020
2025-01-09 02:13:08,963 - DEBUG - response code=200
2025-01-09 02:13:08,963 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:08,964 - DEBUG -    Exiting get()
2025-01-09 02:13:08,970 - ERROR - 
1 Failed download:
2025-01-09 02:13:08,970 - ERROR - ['TFX']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:08,970 - DEBUG - ['TFX']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:08,977 - DEBUG - Exiting download()
2025-01-09 02:13:08,978 - WARNING - Ticker TFX is missing 'Close' column. Skipping.
2025-01-09 02:13:08,978 - DEBUG - Entering download()
2025-01-09 02:13:08,978 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:08,979 - DEBUG -  Entering history()
2025-01-09 02:13:08,979 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TER', 1, 0])
2025-01-09 02:13:08,980 - DEBUG -   Entering history()
2025-01-09 02:13:08,981 - DEBUG - TER: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:08,981 - DEBUG -    Entering get()
2025-01-09 02:13:08,982 - DEBUG -     Entering _make_request()
2025-01-09 02:13:08,982 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TER
2025-01-09 02:13:08,982 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:08,982 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:08,982 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:08,982 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:08,982 - DEBUG - reusing cookie
2025-01-09 02:13:08,982 - DEBUG - reusing crumb
2025-01-09 02:13:08,982 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:08,983 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:09,127 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TER?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1007
2025-01-09 02:13:09,128 - DEBUG - response code=200
2025-01-09 02:13:09,128 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:09,128 - DEBUG -    Exiting get()
2025-01-09 02:13:09,132 - ERROR - 
1 Failed download:
2025-01-09 02:13:09,132 - ERROR - ['TER']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:09,132 - DEBUG - ['TER']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:09,134 - DEBUG - Exiting download()
2025-01-09 02:13:09,235 - ERROR - Error writing data for TER to DB: schema "np" does not exist
LINE 4:             VALUES ('TER','2020-01-02'::date,np.float64(67.4...
                                                     ^

2025-01-09 02:13:09,236 - DEBUG - Entering download()
2025-01-09 02:13:09,236 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:09,236 - DEBUG -  Entering history()
2025-01-09 02:13:09,236 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TSLA', 1, 0])
2025-01-09 02:13:09,236 - DEBUG -   Entering history()
2025-01-09 02:13:09,237 - DEBUG - TSLA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:09,237 - DEBUG -    Entering get()
2025-01-09 02:13:09,237 - DEBUG -     Entering _make_request()
2025-01-09 02:13:09,237 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TSLA
2025-01-09 02:13:09,237 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:09,237 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:09,237 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:09,237 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:09,237 - DEBUG - reusing cookie
2025-01-09 02:13:09,237 - DEBUG - reusing crumb
2025-01-09 02:13:09,237 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:09,237 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:09,366 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TSLA?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1007
2025-01-09 02:13:09,367 - DEBUG - response code=200
2025-01-09 02:13:09,367 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:09,367 - DEBUG -    Exiting get()
2025-01-09 02:13:09,371 - ERROR - 
1 Failed download:
2025-01-09 02:13:09,371 - ERROR - ['TSLA']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:09,371 - DEBUG - ['TSLA']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:09,375 - DEBUG - Exiting download()
2025-01-09 02:13:09,482 - ERROR - Error writing data for TSLA to DB: schema "np" does not exist
LINE 4:             VALUES ('TSLA','2020-01-02'::date,np.float64(28....
                                                      ^

2025-01-09 02:13:09,482 - DEBUG - Entering download()
2025-01-09 02:13:09,482 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:09,483 - DEBUG -  Entering history()
2025-01-09 02:13:09,483 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TXN', 1, 0])
2025-01-09 02:13:09,483 - DEBUG -   Entering history()
2025-01-09 02:13:09,484 - DEBUG - TXN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:09,484 - DEBUG -    Entering get()
2025-01-09 02:13:09,484 - DEBUG -     Entering _make_request()
2025-01-09 02:13:09,484 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TXN
2025-01-09 02:13:09,484 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:09,484 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:09,484 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:09,484 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:09,484 - DEBUG - reusing cookie
2025-01-09 02:13:09,484 - DEBUG - reusing crumb
2025-01-09 02:13:09,484 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:09,484 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:09,671 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TXN?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1042
2025-01-09 02:13:09,672 - DEBUG - response code=200
2025-01-09 02:13:09,672 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:09,672 - DEBUG -    Exiting get()
2025-01-09 02:13:09,678 - ERROR - 
1 Failed download:
2025-01-09 02:13:09,679 - ERROR - ['TXN']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:09,679 - DEBUG - ['TXN']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:09,686 - DEBUG - Exiting download()
2025-01-09 02:13:09,796 - ERROR - Error writing data for TXN to DB: schema "np" does not exist
LINE 4:             VALUES ('TXN','2020-01-02'::date,np.float64(112....
                                                     ^

2025-01-09 02:13:09,797 - DEBUG - Entering download()
2025-01-09 02:13:09,797 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:09,797 - DEBUG -  Entering history()
2025-01-09 02:13:09,797 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TPL', 1, 0])
2025-01-09 02:13:09,797 - DEBUG -   Entering history()
2025-01-09 02:13:09,798 - DEBUG - TPL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:09,798 - DEBUG -    Entering get()
2025-01-09 02:13:09,798 - DEBUG -     Entering _make_request()
2025-01-09 02:13:09,798 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TPL
2025-01-09 02:13:09,798 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:09,798 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:09,798 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:09,798 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:09,798 - DEBUG - reusing cookie
2025-01-09 02:13:09,798 - DEBUG - reusing crumb
2025-01-09 02:13:09,798 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:09,799 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:09,983 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TPL?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1042
2025-01-09 02:13:09,984 - DEBUG - response code=200
2025-01-09 02:13:09,984 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:09,984 - DEBUG -    Exiting get()
2025-01-09 02:13:09,990 - ERROR - 
1 Failed download:
2025-01-09 02:13:09,990 - ERROR - ['TPL']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:09,991 - DEBUG - ['TPL']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:09,998 - DEBUG - Exiting download()
2025-01-09 02:13:10,135 - ERROR - Error writing data for TPL to DB: schema "np" does not exist
LINE 4:             VALUES ('TPL','2020-01-02'::date,np.float64(237....
                                                     ^

2025-01-09 02:13:10,135 - DEBUG - Entering download()
2025-01-09 02:13:10,135 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:10,136 - DEBUG -  Entering history()
2025-01-09 02:13:10,136 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TXT', 1, 0])
2025-01-09 02:13:10,136 - DEBUG -   Entering history()
2025-01-09 02:13:10,137 - DEBUG - TXT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:10,137 - DEBUG -    Entering get()
2025-01-09 02:13:10,137 - DEBUG -     Entering _make_request()
2025-01-09 02:13:10,137 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TXT
2025-01-09 02:13:10,137 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:10,137 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:10,137 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:10,137 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:10,137 - DEBUG - reusing cookie
2025-01-09 02:13:10,137 - DEBUG - reusing crumb
2025-01-09 02:13:10,137 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:10,137 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:10,328 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TXT?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 994
2025-01-09 02:13:10,329 - DEBUG - response code=200
2025-01-09 02:13:10,329 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:10,329 - DEBUG -    Exiting get()
2025-01-09 02:13:10,335 - ERROR - 
1 Failed download:
2025-01-09 02:13:10,335 - ERROR - ['TXT']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:10,336 - DEBUG - ['TXT']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:10,342 - DEBUG - Exiting download()
2025-01-09 02:13:10,342 - WARNING - Ticker TXT is missing 'Close' column. Skipping.
2025-01-09 02:13:10,343 - DEBUG - Entering download()
2025-01-09 02:13:10,343 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:10,343 - DEBUG -  Entering history()
2025-01-09 02:13:10,344 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TMO', 1, 0])
2025-01-09 02:13:10,345 - DEBUG -   Entering history()
2025-01-09 02:13:10,346 - DEBUG - TMO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:10,346 - DEBUG -    Entering get()
2025-01-09 02:13:10,347 - DEBUG -     Entering _make_request()
2025-01-09 02:13:10,347 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TMO
2025-01-09 02:13:10,347 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:10,347 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:10,347 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:10,347 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:10,347 - DEBUG - reusing cookie
2025-01-09 02:13:10,347 - DEBUG - reusing crumb
2025-01-09 02:13:10,347 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:10,348 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:10,526 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TMO?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1035
2025-01-09 02:13:10,527 - DEBUG - response code=200
2025-01-09 02:13:10,528 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:10,528 - DEBUG -    Exiting get()
2025-01-09 02:13:10,534 - ERROR - 
1 Failed download:
2025-01-09 02:13:10,534 - ERROR - ['TMO']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:10,534 - DEBUG - ['TMO']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:10,541 - DEBUG - Exiting download()
2025-01-09 02:13:10,542 - WARNING - Ticker TMO is missing 'Close' column. Skipping.
2025-01-09 02:13:10,542 - DEBUG - Entering download()
2025-01-09 02:13:10,542 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:10,543 - DEBUG -  Entering history()
2025-01-09 02:13:10,544 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TJX', 1, 0])
2025-01-09 02:13:10,544 - DEBUG -   Entering history()
2025-01-09 02:13:10,546 - DEBUG - TJX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:10,547 - DEBUG -    Entering get()
2025-01-09 02:13:10,547 - DEBUG -     Entering _make_request()
2025-01-09 02:13:10,547 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TJX
2025-01-09 02:13:10,547 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:10,548 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:10,548 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:10,548 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:10,548 - DEBUG - reusing cookie
2025-01-09 02:13:10,548 - DEBUG - reusing crumb
2025-01-09 02:13:10,548 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:10,548 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:10,714 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TJX?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1024
2025-01-09 02:13:10,715 - DEBUG - response code=200
2025-01-09 02:13:10,715 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:10,715 - DEBUG -    Exiting get()
2025-01-09 02:13:10,721 - ERROR - 
1 Failed download:
2025-01-09 02:13:10,721 - ERROR - ['TJX']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:10,722 - DEBUG - ['TJX']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:10,729 - DEBUG - Exiting download()
2025-01-09 02:13:10,835 - ERROR - Error writing data for TJX to DB: schema "np" does not exist
LINE 4:             VALUES ('TJX','2020-01-02'::date,np.float64(57.4...
                                                     ^

2025-01-09 02:13:10,836 - DEBUG - Entering download()
2025-01-09 02:13:10,836 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:10,836 - DEBUG -  Entering history()
2025-01-09 02:13:10,837 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TSCO', 1, 0])
2025-01-09 02:13:10,837 - DEBUG -   Entering history()
2025-01-09 02:13:10,837 - DEBUG - TSCO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:10,838 - DEBUG -    Entering get()
2025-01-09 02:13:10,838 - DEBUG -     Entering _make_request()
2025-01-09 02:13:10,838 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TSCO
2025-01-09 02:13:10,838 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:10,838 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:10,838 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:10,838 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:10,838 - DEBUG - reusing cookie
2025-01-09 02:13:10,838 - DEBUG - reusing crumb
2025-01-09 02:13:10,838 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:10,838 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:10,997 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TSCO?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1024
2025-01-09 02:13:10,998 - DEBUG - response code=200
2025-01-09 02:13:10,998 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:10,999 - DEBUG -    Exiting get()
2025-01-09 02:13:11,004 - ERROR - 
1 Failed download:
2025-01-09 02:13:11,005 - ERROR - ['TSCO']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:11,005 - DEBUG - ['TSCO']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:11,011 - DEBUG - Exiting download()
2025-01-09 02:13:11,123 - ERROR - Error writing data for TSCO to DB: schema "np" does not exist
LINE 4:             VALUES ('TSCO','2020-01-02'::date,np.float64(15....
                                                      ^

2025-01-09 02:13:11,123 - DEBUG - Entering download()
2025-01-09 02:13:11,124 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:11,124 - DEBUG -  Entering history()
2025-01-09 02:13:11,124 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TT', 1, 0])
2025-01-09 02:13:11,124 - DEBUG -   Entering history()
2025-01-09 02:13:11,125 - DEBUG - TT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:11,125 - DEBUG -    Entering get()
2025-01-09 02:13:11,125 - DEBUG -     Entering _make_request()
2025-01-09 02:13:11,125 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TT
2025-01-09 02:13:11,125 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:11,125 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:11,125 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:11,125 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:11,125 - DEBUG - reusing cookie
2025-01-09 02:13:11,125 - DEBUG - reusing crumb
2025-01-09 02:13:11,126 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:11,126 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:11,316 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TT?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1020
2025-01-09 02:13:11,317 - DEBUG - response code=200
2025-01-09 02:13:11,317 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:11,318 - DEBUG -    Exiting get()
2025-01-09 02:13:11,324 - ERROR - 
1 Failed download:
2025-01-09 02:13:11,324 - ERROR - ['TT']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:11,324 - DEBUG - ['TT']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:11,331 - DEBUG - Exiting download()
2025-01-09 02:13:11,456 - ERROR - Error writing data for TT to DB: schema "np" does not exist
LINE 4:             VALUES ('TT','2020-01-02'::date,np.float64(96.16...
                                                    ^

2025-01-09 02:13:11,456 - DEBUG - Entering download()
2025-01-09 02:13:11,457 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:11,457 - DEBUG -  Entering history()
2025-01-09 02:13:11,457 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TDG', 1, 0])
2025-01-09 02:13:11,457 - DEBUG -   Entering history()
2025-01-09 02:13:11,458 - DEBUG - TDG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:11,458 - DEBUG -    Entering get()
2025-01-09 02:13:11,458 - DEBUG -     Entering _make_request()
2025-01-09 02:13:11,458 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TDG
2025-01-09 02:13:11,458 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:11,458 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:11,458 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:11,458 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:11,458 - DEBUG - reusing cookie
2025-01-09 02:13:11,458 - DEBUG - reusing crumb
2025-01-09 02:13:11,458 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:11,458 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:11,610 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TDG?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1038
2025-01-09 02:13:11,611 - DEBUG - response code=200
2025-01-09 02:13:11,611 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:11,612 - DEBUG -    Exiting get()
2025-01-09 02:13:11,616 - ERROR - 
1 Failed download:
2025-01-09 02:13:11,616 - ERROR - ['TDG']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:11,616 - DEBUG - ['TDG']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:11,622 - DEBUG - Exiting download()
2025-01-09 02:13:11,622 - WARNING - Ticker TDG is missing 'Close' column. Skipping.
2025-01-09 02:13:11,622 - DEBUG - Entering download()
2025-01-09 02:13:11,622 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:11,623 - DEBUG -  Entering history()
2025-01-09 02:13:11,623 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TRV', 1, 0])
2025-01-09 02:13:11,624 - DEBUG -   Entering history()
2025-01-09 02:13:11,625 - DEBUG - TRV: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:11,626 - DEBUG -    Entering get()
2025-01-09 02:13:11,626 - DEBUG -     Entering _make_request()
2025-01-09 02:13:11,626 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TRV
2025-01-09 02:13:11,626 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:11,626 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:11,627 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:11,627 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:11,627 - DEBUG - reusing cookie
2025-01-09 02:13:11,627 - DEBUG - reusing crumb
2025-01-09 02:13:11,627 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:11,627 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:11,814 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TRV?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1037
2025-01-09 02:13:11,816 - DEBUG - response code=200
2025-01-09 02:13:11,816 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:11,816 - DEBUG -    Exiting get()
2025-01-09 02:13:11,822 - ERROR - 
1 Failed download:
2025-01-09 02:13:11,822 - ERROR - ['TRV']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:11,822 - DEBUG - ['TRV']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:11,830 - DEBUG - Exiting download()
2025-01-09 02:13:11,939 - ERROR - Error writing data for TRV to DB: schema "np" does not exist
LINE 4:             VALUES ('TRV','2020-01-02'::date,np.float64(123....
                                                     ^

2025-01-09 02:13:11,940 - DEBUG - Entering download()
2025-01-09 02:13:11,940 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:11,940 - DEBUG -  Entering history()
2025-01-09 02:13:11,940 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TRMB', 1, 0])
2025-01-09 02:13:11,940 - DEBUG -   Entering history()
2025-01-09 02:13:11,941 - DEBUG - TRMB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:11,941 - DEBUG -    Entering get()
2025-01-09 02:13:11,941 - DEBUG -     Entering _make_request()
2025-01-09 02:13:11,941 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TRMB
2025-01-09 02:13:11,942 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:11,942 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:11,942 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:11,942 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:11,942 - DEBUG - reusing cookie
2025-01-09 02:13:11,942 - DEBUG - reusing crumb
2025-01-09 02:13:11,942 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:11,942 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:12,070 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TRMB?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1001
2025-01-09 02:13:12,071 - DEBUG - response code=200
2025-01-09 02:13:12,071 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:12,071 - DEBUG -    Exiting get()
2025-01-09 02:13:12,075 - ERROR - 
1 Failed download:
2025-01-09 02:13:12,075 - ERROR - ['TRMB']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:12,075 - DEBUG - ['TRMB']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:12,079 - DEBUG - Exiting download()
2025-01-09 02:13:12,188 - ERROR - Error writing data for TRMB to DB: schema "np" does not exist
LINE 4:             VALUES ('TRMB','2020-01-02'::date,np.float64(41....
                                                      ^

2025-01-09 02:13:12,188 - DEBUG - Entering download()
2025-01-09 02:13:12,188 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:12,188 - DEBUG -  Entering history()
2025-01-09 02:13:12,189 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TFC', 1, 0])
2025-01-09 02:13:12,189 - DEBUG -   Entering history()
2025-01-09 02:13:12,190 - DEBUG - TFC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:12,190 - DEBUG -    Entering get()
2025-01-09 02:13:12,190 - DEBUG -     Entering _make_request()
2025-01-09 02:13:12,190 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TFC
2025-01-09 02:13:12,190 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:12,190 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:12,190 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:12,190 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:12,190 - DEBUG - reusing cookie
2025-01-09 02:13:12,190 - DEBUG - reusing crumb
2025-01-09 02:13:12,190 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:12,190 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:12,369 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TFC?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1030
2025-01-09 02:13:12,370 - DEBUG - response code=200
2025-01-09 02:13:12,370 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:12,370 - DEBUG -    Exiting get()
2025-01-09 02:13:12,376 - ERROR - 
1 Failed download:
2025-01-09 02:13:12,377 - ERROR - ['TFC']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:12,377 - DEBUG - ['TFC']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:12,384 - DEBUG - Exiting download()
2025-01-09 02:13:12,523 - ERROR - Error writing data for TFC to DB: schema "np" does not exist
LINE 4:             VALUES ('TFC','2020-01-02'::date,np.float64(44.8...
                                                     ^

2025-01-09 02:13:12,523 - DEBUG - Entering download()
2025-01-09 02:13:12,523 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:12,523 - DEBUG -  Entering history()
2025-01-09 02:13:12,524 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TYL', 1, 0])
2025-01-09 02:13:12,524 - DEBUG -   Entering history()
2025-01-09 02:13:12,525 - DEBUG - TYL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:12,525 - DEBUG -    Entering get()
2025-01-09 02:13:12,525 - DEBUG -     Entering _make_request()
2025-01-09 02:13:12,525 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TYL
2025-01-09 02:13:12,525 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:12,525 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:12,525 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:12,525 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:12,525 - DEBUG - reusing cookie
2025-01-09 02:13:12,525 - DEBUG - reusing crumb
2025-01-09 02:13:12,525 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:12,525 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:12,681 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TYL?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1026
2025-01-09 02:13:12,681 - DEBUG - response code=200
2025-01-09 02:13:12,682 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:12,682 - DEBUG -    Exiting get()
2025-01-09 02:13:12,685 - ERROR - 
1 Failed download:
2025-01-09 02:13:12,685 - ERROR - ['TYL']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:12,686 - DEBUG - ['TYL']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:12,688 - DEBUG - Exiting download()
2025-01-09 02:13:12,791 - ERROR - Error writing data for TYL to DB: schema "np" does not exist
LINE 4:             VALUES ('TYL','2020-01-02'::date,np.float64(301....
                                                     ^

2025-01-09 02:13:12,791 - DEBUG - Entering download()
2025-01-09 02:13:12,791 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:12,791 - DEBUG -  Entering history()
2025-01-09 02:13:12,792 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TSN', 1, 0])
2025-01-09 02:13:12,792 - DEBUG -   Entering history()
2025-01-09 02:13:12,793 - DEBUG - TSN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:12,793 - DEBUG -    Entering get()
2025-01-09 02:13:12,793 - DEBUG -     Entering _make_request()
2025-01-09 02:13:12,793 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TSN
2025-01-09 02:13:12,793 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:12,793 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:12,793 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:12,793 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:12,793 - DEBUG - reusing cookie
2025-01-09 02:13:12,793 - DEBUG - reusing crumb
2025-01-09 02:13:12,793 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:12,793 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:12,973 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TSN?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1007
2025-01-09 02:13:12,974 - DEBUG - response code=200
2025-01-09 02:13:12,974 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:12,975 - DEBUG -    Exiting get()
2025-01-09 02:13:12,981 - ERROR - 
1 Failed download:
2025-01-09 02:13:12,981 - ERROR - ['TSN']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:12,981 - DEBUG - ['TSN']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:12,988 - DEBUG - Exiting download()
2025-01-09 02:13:13,119 - ERROR - Error writing data for TSN to DB: schema "np" does not exist
LINE 4:             VALUES ('TSN','2020-01-02'::date,np.float64(78.9...
                                                     ^

2025-01-09 02:13:13,120 - DEBUG - Entering download()
2025-01-09 02:13:13,120 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:13,120 - DEBUG -  Entering history()
2025-01-09 02:13:13,120 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['USB', 1, 0])
2025-01-09 02:13:13,120 - DEBUG -   Entering history()
2025-01-09 02:13:13,121 - DEBUG - USB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:13,121 - DEBUG -    Entering get()
2025-01-09 02:13:13,121 - DEBUG -     Entering _make_request()
2025-01-09 02:13:13,121 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/USB
2025-01-09 02:13:13,121 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:13,121 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:13,121 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:13,121 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:13,121 - DEBUG - reusing cookie
2025-01-09 02:13:13,121 - DEBUG - reusing crumb
2025-01-09 02:13:13,121 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:13,122 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:13,301 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/USB?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 997
2025-01-09 02:13:13,302 - DEBUG - response code=200
2025-01-09 02:13:13,302 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:13,302 - DEBUG -    Exiting get()
2025-01-09 02:13:13,308 - ERROR - 
1 Failed download:
2025-01-09 02:13:13,309 - ERROR - ['USB']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:13,309 - DEBUG - ['USB']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:13,316 - DEBUG - Exiting download()
2025-01-09 02:13:13,438 - ERROR - Error writing data for USB to DB: schema "np" does not exist
LINE 4:             VALUES ('USB','2020-01-02'::date,np.float64(47.9...
                                                     ^

2025-01-09 02:13:13,439 - DEBUG - Entering download()
2025-01-09 02:13:13,439 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:13,439 - DEBUG -  Entering history()
2025-01-09 02:13:13,439 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['UBER', 1, 0])
2025-01-09 02:13:13,440 - DEBUG -   Entering history()
2025-01-09 02:13:13,440 - DEBUG - UBER: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:13,440 - DEBUG -    Entering get()
2025-01-09 02:13:13,440 - DEBUG -     Entering _make_request()
2025-01-09 02:13:13,440 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/UBER
2025-01-09 02:13:13,440 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:13,440 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:13,440 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:13,440 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:13,441 - DEBUG - reusing cookie
2025-01-09 02:13:13,441 - DEBUG - reusing crumb
2025-01-09 02:13:13,441 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:13,441 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:13,571 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/UBER?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1021
2025-01-09 02:13:13,572 - DEBUG - response code=200
2025-01-09 02:13:13,572 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:13,573 - DEBUG -    Exiting get()
2025-01-09 02:13:13,578 - ERROR - 
1 Failed download:
2025-01-09 02:13:13,578 - ERROR - ['UBER']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:13,579 - DEBUG - ['UBER']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:13,585 - DEBUG - Exiting download()
2025-01-09 02:13:13,706 - ERROR - Error writing data for UBER to DB: schema "np" does not exist
LINE 4:             VALUES ('UBER','2020-01-02'::date,np.float64(29....
                                                      ^

2025-01-09 02:13:13,706 - DEBUG - Entering download()
2025-01-09 02:13:13,706 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:13,706 - DEBUG -  Entering history()
2025-01-09 02:13:13,707 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['UDR', 1, 0])
2025-01-09 02:13:13,707 - DEBUG -   Entering history()
2025-01-09 02:13:13,707 - DEBUG - UDR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:13,707 - DEBUG -    Entering get()
2025-01-09 02:13:13,707 - DEBUG -     Entering _make_request()
2025-01-09 02:13:13,708 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/UDR
2025-01-09 02:13:13,708 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:13,708 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:13,708 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:13,708 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:13,708 - DEBUG - reusing cookie
2025-01-09 02:13:13,708 - DEBUG - reusing crumb
2025-01-09 02:13:13,708 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:13,708 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:13,896 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/UDR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 989
2025-01-09 02:13:13,897 - DEBUG - response code=200
2025-01-09 02:13:13,898 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:13,898 - DEBUG -    Exiting get()
2025-01-09 02:13:13,904 - ERROR - 
1 Failed download:
2025-01-09 02:13:13,904 - ERROR - ['UDR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:13,905 - DEBUG - ['UDR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:13,912 - DEBUG - Exiting download()
2025-01-09 02:13:14,020 - ERROR - Error writing data for UDR to DB: schema "np" does not exist
LINE 4:             VALUES ('UDR','2020-01-02'::date,np.float64(38.8...
                                                     ^

2025-01-09 02:13:14,020 - DEBUG - Entering download()
2025-01-09 02:13:14,021 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:14,021 - DEBUG -  Entering history()
2025-01-09 02:13:14,021 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ULTA', 1, 0])
2025-01-09 02:13:14,021 - DEBUG -   Entering history()
2025-01-09 02:13:14,022 - DEBUG - ULTA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:14,022 - DEBUG -    Entering get()
2025-01-09 02:13:14,022 - DEBUG -     Entering _make_request()
2025-01-09 02:13:14,022 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ULTA
2025-01-09 02:13:14,022 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:14,022 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:14,022 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:14,022 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:14,022 - DEBUG - reusing cookie
2025-01-09 02:13:14,023 - DEBUG - reusing crumb
2025-01-09 02:13:14,023 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:14,023 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:14,161 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ULTA?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1018
2025-01-09 02:13:14,161 - DEBUG - response code=200
2025-01-09 02:13:14,161 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:14,162 - DEBUG -    Exiting get()
2025-01-09 02:13:14,165 - ERROR - 
1 Failed download:
2025-01-09 02:13:14,165 - ERROR - ['ULTA']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:14,165 - DEBUG - ['ULTA']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:14,170 - DEBUG - Exiting download()
2025-01-09 02:13:14,293 - ERROR - Error writing data for ULTA to DB: schema "np" does not exist
LINE 4:             VALUES ('ULTA','2020-01-02'::date,np.float64(254...
                                                      ^

2025-01-09 02:13:14,293 - DEBUG - Entering download()
2025-01-09 02:13:14,294 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:14,294 - DEBUG -  Entering history()
2025-01-09 02:13:14,294 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['UNP', 1, 0])
2025-01-09 02:13:14,294 - DEBUG -   Entering history()
2025-01-09 02:13:14,295 - DEBUG - UNP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:14,295 - DEBUG -    Entering get()
2025-01-09 02:13:14,295 - DEBUG -     Entering _make_request()
2025-01-09 02:13:14,295 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/UNP
2025-01-09 02:13:14,295 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:14,295 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:14,295 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:14,295 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:14,295 - DEBUG - reusing cookie
2025-01-09 02:13:14,295 - DEBUG - reusing crumb
2025-01-09 02:13:14,295 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:14,295 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:14,469 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/UNP?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1029
2025-01-09 02:13:14,470 - DEBUG - response code=200
2025-01-09 02:13:14,470 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:14,471 - DEBUG -    Exiting get()
2025-01-09 02:13:14,477 - ERROR - 
1 Failed download:
2025-01-09 02:13:14,477 - ERROR - ['UNP']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:14,477 - DEBUG - ['UNP']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:14,484 - DEBUG - Exiting download()
2025-01-09 02:13:14,601 - ERROR - Error writing data for UNP to DB: schema "np" does not exist
LINE 4:             VALUES ('UNP','2020-01-02'::date,np.float64(162....
                                                     ^

2025-01-09 02:13:14,601 - DEBUG - Entering download()
2025-01-09 02:13:14,601 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:14,601 - DEBUG -  Entering history()
2025-01-09 02:13:14,602 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['UAL', 1, 0])
2025-01-09 02:13:14,602 - DEBUG -   Entering history()
2025-01-09 02:13:14,603 - DEBUG - UAL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:14,603 - DEBUG -    Entering get()
2025-01-09 02:13:14,603 - DEBUG -     Entering _make_request()
2025-01-09 02:13:14,603 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/UAL
2025-01-09 02:13:14,603 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:14,603 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:14,603 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:14,603 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:14,603 - DEBUG - reusing cookie
2025-01-09 02:13:14,603 - DEBUG - reusing crumb
2025-01-09 02:13:14,603 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:14,603 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:14,733 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/UAL?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1040
2025-01-09 02:13:14,734 - DEBUG - response code=200
2025-01-09 02:13:14,734 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:14,734 - DEBUG -    Exiting get()
2025-01-09 02:13:14,738 - ERROR - 
1 Failed download:
2025-01-09 02:13:14,739 - ERROR - ['UAL']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:14,739 - DEBUG - ['UAL']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:14,744 - DEBUG - Exiting download()
2025-01-09 02:13:14,744 - WARNING - Ticker UAL is missing 'Close' column. Skipping.
2025-01-09 02:13:14,744 - DEBUG - Entering download()
2025-01-09 02:13:14,744 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:14,745 - DEBUG -  Entering history()
2025-01-09 02:13:14,745 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['UPS', 1, 0])
2025-01-09 02:13:14,746 - DEBUG -   Entering history()
2025-01-09 02:13:14,747 - DEBUG - UPS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:14,747 - DEBUG -    Entering get()
2025-01-09 02:13:14,747 - DEBUG -     Entering _make_request()
2025-01-09 02:13:14,748 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/UPS
2025-01-09 02:13:14,748 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:14,748 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:14,748 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:14,748 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:14,748 - DEBUG - reusing cookie
2025-01-09 02:13:14,748 - DEBUG - reusing crumb
2025-01-09 02:13:14,748 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:14,749 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:14,927 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/UPS?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1033
2025-01-09 02:13:14,928 - DEBUG - response code=200
2025-01-09 02:13:14,928 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:14,928 - DEBUG -    Exiting get()
2025-01-09 02:13:14,932 - ERROR - 
1 Failed download:
2025-01-09 02:13:14,932 - ERROR - ['UPS']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:14,932 - DEBUG - ['UPS']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:14,934 - DEBUG - Exiting download()
2025-01-09 02:13:14,934 - WARNING - Ticker UPS is missing 'Close' column. Skipping.
2025-01-09 02:13:14,934 - DEBUG - Entering download()
2025-01-09 02:13:14,934 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:14,934 - DEBUG -  Entering history()
2025-01-09 02:13:14,934 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['URI', 1, 0])
2025-01-09 02:13:14,935 - DEBUG -   Entering history()
2025-01-09 02:13:14,935 - DEBUG - URI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:14,935 - DEBUG -    Entering get()
2025-01-09 02:13:14,935 - DEBUG -     Entering _make_request()
2025-01-09 02:13:14,935 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/URI
2025-01-09 02:13:14,935 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:14,936 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:14,936 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:14,936 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:14,936 - DEBUG - reusing cookie
2025-01-09 02:13:14,936 - DEBUG - reusing crumb
2025-01-09 02:13:14,936 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:14,936 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:15,093 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/URI?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1017
2025-01-09 02:13:15,094 - DEBUG - response code=200
2025-01-09 02:13:15,094 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:15,094 - DEBUG -    Exiting get()
2025-01-09 02:13:15,100 - ERROR - 
1 Failed download:
2025-01-09 02:13:15,100 - ERROR - ['URI']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:15,101 - DEBUG - ['URI']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:15,108 - DEBUG - Exiting download()
2025-01-09 02:13:15,216 - ERROR - Error writing data for URI to DB: schema "np" does not exist
LINE 4:             VALUES ('URI','2020-01-02'::date,np.float64(164....
                                                     ^

2025-01-09 02:13:15,216 - DEBUG - Entering download()
2025-01-09 02:13:15,216 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:15,216 - DEBUG -  Entering history()
2025-01-09 02:13:15,217 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['UNH', 1, 0])
2025-01-09 02:13:15,217 - DEBUG -   Entering history()
2025-01-09 02:13:15,218 - DEBUG - UNH: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:15,218 - DEBUG -    Entering get()
2025-01-09 02:13:15,218 - DEBUG -     Entering _make_request()
2025-01-09 02:13:15,218 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/UNH
2025-01-09 02:13:15,218 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:15,218 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:15,218 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:15,218 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:15,218 - DEBUG - reusing cookie
2025-01-09 02:13:15,218 - DEBUG - reusing crumb
2025-01-09 02:13:15,218 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:15,218 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:15,398 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/UNH?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1042
2025-01-09 02:13:15,399 - DEBUG - response code=200
2025-01-09 02:13:15,400 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:15,400 - DEBUG -    Exiting get()
2025-01-09 02:13:15,406 - ERROR - 
1 Failed download:
2025-01-09 02:13:15,406 - ERROR - ['UNH']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:15,406 - DEBUG - ['UNH']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:15,413 - DEBUG - Exiting download()
2025-01-09 02:13:15,414 - WARNING - Ticker UNH is missing 'Close' column. Skipping.
2025-01-09 02:13:15,414 - DEBUG - Entering download()
2025-01-09 02:13:15,414 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:15,415 - DEBUG -  Entering history()
2025-01-09 02:13:15,416 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['UHS', 1, 0])
2025-01-09 02:13:15,416 - DEBUG -   Entering history()
2025-01-09 02:13:15,417 - DEBUG - UHS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:15,418 - DEBUG -    Entering get()
2025-01-09 02:13:15,418 - DEBUG -     Entering _make_request()
2025-01-09 02:13:15,418 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/UHS
2025-01-09 02:13:15,418 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:15,418 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:15,418 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:15,419 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:15,419 - DEBUG - reusing cookie
2025-01-09 02:13:15,419 - DEBUG - reusing crumb
2025-01-09 02:13:15,419 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:15,419 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:15,629 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/UHS?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1041
2025-01-09 02:13:15,630 - DEBUG - response code=200
2025-01-09 02:13:15,631 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:15,631 - DEBUG -    Exiting get()
2025-01-09 02:13:15,634 - ERROR - 
1 Failed download:
2025-01-09 02:13:15,634 - ERROR - ['UHS']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:15,634 - DEBUG - ['UHS']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:15,636 - DEBUG - Exiting download()
2025-01-09 02:13:15,740 - ERROR - Error writing data for UHS to DB: schema "np" does not exist
LINE 4:             VALUES ('UHS','2020-01-02'::date,np.float64(140....
                                                     ^

2025-01-09 02:13:15,741 - DEBUG - Entering download()
2025-01-09 02:13:15,741 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:15,741 - DEBUG -  Entering history()
2025-01-09 02:13:15,741 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['VLO', 1, 0])
2025-01-09 02:13:15,742 - DEBUG -   Entering history()
2025-01-09 02:13:15,743 - DEBUG - VLO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:15,743 - DEBUG -    Entering get()
2025-01-09 02:13:15,743 - DEBUG -     Entering _make_request()
2025-01-09 02:13:15,743 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/VLO
2025-01-09 02:13:15,743 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:15,743 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:15,743 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:15,743 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:15,743 - DEBUG - reusing cookie
2025-01-09 02:13:15,743 - DEBUG - reusing crumb
2025-01-09 02:13:15,743 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:15,743 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:15,935 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/VLO?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1029
2025-01-09 02:13:15,936 - DEBUG - response code=200
2025-01-09 02:13:15,936 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:15,936 - DEBUG -    Exiting get()
2025-01-09 02:13:15,942 - ERROR - 
1 Failed download:
2025-01-09 02:13:15,942 - ERROR - ['VLO']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:15,943 - DEBUG - ['VLO']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:15,950 - DEBUG - Exiting download()
2025-01-09 02:13:15,950 - WARNING - Ticker VLO is missing 'Close' column. Skipping.
2025-01-09 02:13:15,951 - DEBUG - Entering download()
2025-01-09 02:13:15,951 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:15,951 - DEBUG -  Entering history()
2025-01-09 02:13:15,952 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['VTR', 1, 0])
2025-01-09 02:13:15,952 - DEBUG -   Entering history()
2025-01-09 02:13:15,954 - DEBUG - VTR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:15,954 - DEBUG -    Entering get()
2025-01-09 02:13:15,954 - DEBUG -     Entering _make_request()
2025-01-09 02:13:15,954 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/VTR
2025-01-09 02:13:15,954 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:15,955 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:15,955 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:15,955 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:15,955 - DEBUG - reusing cookie
2025-01-09 02:13:15,955 - DEBUG - reusing crumb
2025-01-09 02:13:15,955 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:15,955 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:16,135 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/VTR?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 998
2025-01-09 02:13:16,136 - DEBUG - response code=200
2025-01-09 02:13:16,136 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:16,136 - DEBUG -    Exiting get()
2025-01-09 02:13:16,142 - ERROR - 
1 Failed download:
2025-01-09 02:13:16,142 - ERROR - ['VTR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:16,143 - DEBUG - ['VTR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:16,150 - DEBUG - Exiting download()
2025-01-09 02:13:16,262 - ERROR - Error writing data for VTR to DB: schema "np" does not exist
LINE 4:             VALUES ('VTR','2020-01-02'::date,np.float64(47.3...
                                                     ^

2025-01-09 02:13:16,263 - DEBUG - Entering download()
2025-01-09 02:13:16,263 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:16,263 - DEBUG -  Entering history()
2025-01-09 02:13:16,263 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['VLTO', 1, 0])
2025-01-09 02:13:16,263 - DEBUG -   Entering history()
2025-01-09 02:13:16,264 - DEBUG - VLTO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:16,264 - DEBUG -    Entering get()
2025-01-09 02:13:16,264 - DEBUG -     Entering _make_request()
2025-01-09 02:13:16,264 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/VLTO
2025-01-09 02:13:16,264 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:16,264 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:16,264 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:16,264 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:16,264 - DEBUG - reusing cookie
2025-01-09 02:13:16,264 - DEBUG - reusing crumb
2025-01-09 02:13:16,264 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:16,264 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:16,396 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/VLTO?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:13:16,397 - DEBUG - response code=400
2025-01-09 02:13:16,397 - DEBUG - toggling cookie strategy basic -> csrf
2025-01-09 02:13:16,397 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:16,397 - DEBUG - cookie_mode = 'csrf'
2025-01-09 02:13:16,397 - DEBUG -       Entering _get_crumb_csrf()
2025-01-09 02:13:16,398 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['csrf', 1, 0])
2025-01-09 02:13:16,557 - DEBUG - https://guce.yahoo.com:443 "GET /consent HTTP/1.1" 302 0
2025-01-09 02:13:16,944 - DEBUG - https://www.yahoo.com:443 "GET /?guccounter=1 HTTP/1.1" 200 None
2025-01-09 02:13:17,417 - DEBUG - Failed to find "csrfToken" in response
2025-01-09 02:13:17,417 - DEBUG -       Exiting _get_crumb_csrf()
2025-01-09 02:13:17,417 - DEBUG - toggling cookie strategy csrf -> basic
2025-01-09 02:13:17,417 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:17,417 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['basic', 1, 0])
2025-01-09 02:13:17,418 - DEBUG - loaded persistent cookie
2025-01-09 02:13:17,418 - DEBUG - reusing cookie
2025-01-09 02:13:17,546 - DEBUG - https://query1.finance.yahoo.com:443 "GET /v1/test/getcrumb HTTP/1.1" 200 11
2025-01-09 02:13:17,546 - DEBUG - crumb = 'mbrlfmeSllh'
2025-01-09 02:13:17,547 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:17,547 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:17,690 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/VLTO?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:13:17,691 - DEBUG - response code=400
2025-01-09 02:13:17,691 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:17,692 - DEBUG -    Exiting get()
2025-01-09 02:13:17,695 - ERROR - 
1 Failed download:
2025-01-09 02:13:17,695 - ERROR - ['VLTO']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn\'t exist for startDate = 1577854800, endDate = 1577941200")')
2025-01-09 02:13:17,695 - DEBUG - ['VLTO']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn't exist for startDate = 1577854800, endDate = 1577941200")

2025-01-09 02:13:17,697 - DEBUG - Exiting download()
2025-01-09 02:13:17,761 - ERROR - Error writing data for VLTO to DB: schema "np" does not exist
LINE 4:             VALUES ('VLTO','2023-10-04'::date,np.float64(76....
                                                      ^

2025-01-09 02:13:17,761 - DEBUG - Entering download()
2025-01-09 02:13:17,761 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:17,761 - DEBUG -  Entering history()
2025-01-09 02:13:17,761 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['VRSN', 1, 0])
2025-01-09 02:13:17,762 - DEBUG -   Entering history()
2025-01-09 02:13:17,762 - DEBUG - VRSN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:17,762 - DEBUG -    Entering get()
2025-01-09 02:13:17,763 - DEBUG -     Entering _make_request()
2025-01-09 02:13:17,763 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/VRSN
2025-01-09 02:13:17,763 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:17,763 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:17,763 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:17,763 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:17,763 - DEBUG - reusing cookie
2025-01-09 02:13:17,763 - DEBUG - reusing crumb
2025-01-09 02:13:17,763 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:17,763 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:17,918 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/VRSN?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1010
2025-01-09 02:13:17,919 - DEBUG - response code=200
2025-01-09 02:13:17,919 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:17,919 - DEBUG -    Exiting get()
2025-01-09 02:13:17,925 - ERROR - 
1 Failed download:
2025-01-09 02:13:17,926 - ERROR - ['VRSN']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:17,926 - DEBUG - ['VRSN']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:17,933 - DEBUG - Exiting download()
2025-01-09 02:13:18,051 - ERROR - Error writing data for VRSN to DB: schema "np" does not exist
LINE 4:             VALUES ('VRSN','2020-01-02'::date,np.float64(194...
                                                      ^

2025-01-09 02:13:18,052 - DEBUG - Entering download()
2025-01-09 02:13:18,052 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:18,052 - DEBUG -  Entering history()
2025-01-09 02:13:18,052 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['VRSK', 1, 0])
2025-01-09 02:13:18,052 - DEBUG -   Entering history()
2025-01-09 02:13:18,053 - DEBUG - VRSK: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:18,053 - DEBUG -    Entering get()
2025-01-09 02:13:18,053 - DEBUG -     Entering _make_request()
2025-01-09 02:13:18,053 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/VRSK
2025-01-09 02:13:18,053 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:18,054 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:18,054 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:18,054 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:18,054 - DEBUG - reusing cookie
2025-01-09 02:13:18,054 - DEBUG - reusing crumb
2025-01-09 02:13:18,054 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:18,054 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:18,197 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/VRSK?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1028
2025-01-09 02:13:18,198 - DEBUG - response code=200
2025-01-09 02:13:18,199 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:18,199 - DEBUG -    Exiting get()
2025-01-09 02:13:18,204 - ERROR - 
1 Failed download:
2025-01-09 02:13:18,204 - ERROR - ['VRSK']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:18,205 - DEBUG - ['VRSK']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:18,211 - DEBUG - Exiting download()
2025-01-09 02:13:18,337 - ERROR - Error writing data for VRSK to DB: schema "np" does not exist
LINE 4:             VALUES ('VRSK','2020-01-02'::date,np.float64(144...
                                                      ^

2025-01-09 02:13:18,337 - DEBUG - Entering download()
2025-01-09 02:13:18,337 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:18,337 - DEBUG -  Entering history()
2025-01-09 02:13:18,338 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['VZ', 1, 0])
2025-01-09 02:13:18,338 - DEBUG -   Entering history()
2025-01-09 02:13:18,339 - DEBUG - VZ: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:18,339 - DEBUG -    Entering get()
2025-01-09 02:13:18,339 - DEBUG -     Entering _make_request()
2025-01-09 02:13:18,339 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/VZ
2025-01-09 02:13:18,339 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:18,339 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:18,339 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:18,339 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:18,339 - DEBUG - reusing cookie
2025-01-09 02:13:18,339 - DEBUG - reusing crumb
2025-01-09 02:13:18,339 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:18,339 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:18,526 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/VZ?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1027
2025-01-09 02:13:18,527 - DEBUG - response code=200
2025-01-09 02:13:18,527 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:18,527 - DEBUG -    Exiting get()
2025-01-09 02:13:18,533 - ERROR - 
1 Failed download:
2025-01-09 02:13:18,534 - ERROR - ['VZ']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:18,534 - DEBUG - ['VZ']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:18,541 - DEBUG - Exiting download()
2025-01-09 02:13:18,676 - ERROR - Error writing data for VZ to DB: schema "np" does not exist
LINE 4:             VALUES ('VZ','2020-01-02'::date,np.float64(46.58...
                                                    ^

2025-01-09 02:13:18,677 - DEBUG - Entering download()
2025-01-09 02:13:18,677 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:18,677 - DEBUG -  Entering history()
2025-01-09 02:13:18,677 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['VRTX', 1, 0])
2025-01-09 02:13:18,677 - DEBUG -   Entering history()
2025-01-09 02:13:18,678 - DEBUG - VRTX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:18,678 - DEBUG -    Entering get()
2025-01-09 02:13:18,678 - DEBUG -     Entering _make_request()
2025-01-09 02:13:18,678 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/VRTX
2025-01-09 02:13:18,678 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:18,678 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:18,678 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:18,678 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:18,678 - DEBUG - reusing cookie
2025-01-09 02:13:18,678 - DEBUG - reusing crumb
2025-01-09 02:13:18,678 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:18,678 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:18,811 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/VRTX?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1050
2025-01-09 02:13:18,812 - DEBUG - response code=200
2025-01-09 02:13:18,812 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:18,812 - DEBUG -    Exiting get()
2025-01-09 02:13:18,817 - ERROR - 
1 Failed download:
2025-01-09 02:13:18,817 - ERROR - ['VRTX']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:18,817 - DEBUG - ['VRTX']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:18,823 - DEBUG - Exiting download()
2025-01-09 02:13:19,085 - ERROR - Error writing data for VRTX to DB: schema "np" does not exist
LINE 4:             VALUES ('VRTX','2020-01-02'::date,np.float64(220...
                                                      ^

2025-01-09 02:13:19,086 - DEBUG - Entering download()
2025-01-09 02:13:19,086 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:19,086 - DEBUG -  Entering history()
2025-01-09 02:13:19,086 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['VTRS', 1, 0])
2025-01-09 02:13:19,086 - DEBUG -   Entering history()
2025-01-09 02:13:19,087 - DEBUG - VTRS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:19,087 - DEBUG -    Entering get()
2025-01-09 02:13:19,087 - DEBUG -     Entering _make_request()
2025-01-09 02:13:19,087 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/VTRS
2025-01-09 02:13:19,087 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:19,087 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:19,087 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:19,087 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:19,087 - DEBUG - reusing cookie
2025-01-09 02:13:19,087 - DEBUG - reusing crumb
2025-01-09 02:13:19,088 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:19,088 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:19,266 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/VTRS?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1000
2025-01-09 02:13:19,267 - DEBUG - response code=200
2025-01-09 02:13:19,267 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:19,267 - DEBUG -    Exiting get()
2025-01-09 02:13:19,273 - ERROR - 
1 Failed download:
2025-01-09 02:13:19,274 - ERROR - ['VTRS']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:19,274 - DEBUG - ['VTRS']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:19,281 - DEBUG - Exiting download()
2025-01-09 02:13:19,390 - ERROR - Error writing data for VTRS to DB: schema "np" does not exist
LINE 4:             VALUES ('VTRS','2020-01-02'::date,np.float64(17....
                                                      ^

2025-01-09 02:13:19,390 - DEBUG - Entering download()
2025-01-09 02:13:19,390 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:19,390 - DEBUG -  Entering history()
2025-01-09 02:13:19,391 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['VICI', 1, 0])
2025-01-09 02:13:19,391 - DEBUG -   Entering history()
2025-01-09 02:13:19,391 - DEBUG - VICI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:19,392 - DEBUG -    Entering get()
2025-01-09 02:13:19,392 - DEBUG -     Entering _make_request()
2025-01-09 02:13:19,392 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/VICI
2025-01-09 02:13:19,392 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:19,392 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:19,392 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:19,392 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:19,392 - DEBUG - reusing cookie
2025-01-09 02:13:19,392 - DEBUG - reusing crumb
2025-01-09 02:13:19,392 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:19,392 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:19,537 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/VICI?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1016
2025-01-09 02:13:19,538 - DEBUG - response code=200
2025-01-09 02:13:19,538 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:19,538 - DEBUG -    Exiting get()
2025-01-09 02:13:19,542 - ERROR - 
1 Failed download:
2025-01-09 02:13:19,542 - ERROR - ['VICI']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:19,542 - DEBUG - ['VICI']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:19,547 - DEBUG - Exiting download()
2025-01-09 02:13:19,548 - WARNING - Ticker VICI is missing 'Close' column. Skipping.
2025-01-09 02:13:19,548 - DEBUG - Entering download()
2025-01-09 02:13:19,548 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:19,548 - DEBUG -  Entering history()
2025-01-09 02:13:19,549 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['V', 1, 0])
2025-01-09 02:13:19,549 - DEBUG -   Entering history()
2025-01-09 02:13:19,551 - DEBUG - V: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:19,551 - DEBUG -    Entering get()
2025-01-09 02:13:19,551 - DEBUG -     Entering _make_request()
2025-01-09 02:13:19,551 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/V
2025-01-09 02:13:19,552 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:19,552 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:19,552 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:19,552 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:19,552 - DEBUG - reusing cookie
2025-01-09 02:13:19,552 - DEBUG - reusing crumb
2025-01-09 02:13:19,552 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:19,552 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:19,706 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/V?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 994
2025-01-09 02:13:19,707 - DEBUG - response code=200
2025-01-09 02:13:19,708 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:19,708 - DEBUG -    Exiting get()
2025-01-09 02:13:19,714 - ERROR - 
1 Failed download:
2025-01-09 02:13:19,715 - ERROR - ['V']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:19,715 - DEBUG - ['V']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:19,722 - DEBUG - Exiting download()
2025-01-09 02:13:19,830 - ERROR - Error writing data for V to DB: schema "np" does not exist
LINE 4:             VALUES ('V','2020-01-02'::date,np.float64(182.44...
                                                   ^

2025-01-09 02:13:19,831 - DEBUG - Entering download()
2025-01-09 02:13:19,831 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:19,831 - DEBUG -  Entering history()
2025-01-09 02:13:19,831 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['VST', 1, 0])
2025-01-09 02:13:19,831 - DEBUG -   Entering history()
2025-01-09 02:13:19,832 - DEBUG - VST: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:19,832 - DEBUG -    Entering get()
2025-01-09 02:13:19,833 - DEBUG -     Entering _make_request()
2025-01-09 02:13:19,833 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/VST
2025-01-09 02:13:19,833 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:19,833 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:19,833 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:19,833 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:19,833 - DEBUG - reusing cookie
2025-01-09 02:13:19,833 - DEBUG - reusing crumb
2025-01-09 02:13:19,833 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:19,833 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:19,989 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/VST?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1002
2025-01-09 02:13:19,990 - DEBUG - response code=200
2025-01-09 02:13:19,990 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:19,990 - DEBUG -    Exiting get()
2025-01-09 02:13:19,995 - ERROR - 
1 Failed download:
2025-01-09 02:13:19,996 - ERROR - ['VST']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:19,996 - DEBUG - ['VST']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:20,002 - DEBUG - Exiting download()
2025-01-09 02:13:20,131 - ERROR - Error writing data for VST to DB: schema "np" does not exist
LINE 4:             VALUES ('VST','2020-01-02'::date,np.float64(20.2...
                                                     ^

2025-01-09 02:13:20,131 - DEBUG - Entering download()
2025-01-09 02:13:20,131 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:20,132 - DEBUG -  Entering history()
2025-01-09 02:13:20,132 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['VMC', 1, 0])
2025-01-09 02:13:20,132 - DEBUG -   Entering history()
2025-01-09 02:13:20,133 - DEBUG - VMC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:20,133 - DEBUG -    Entering get()
2025-01-09 02:13:20,133 - DEBUG -     Entering _make_request()
2025-01-09 02:13:20,133 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/VMC
2025-01-09 02:13:20,133 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:20,133 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:20,133 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:20,133 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:20,133 - DEBUG - reusing cookie
2025-01-09 02:13:20,133 - DEBUG - reusing crumb
2025-01-09 02:13:20,133 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:20,134 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:20,318 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/VMC?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1033
2025-01-09 02:13:20,319 - DEBUG - response code=200
2025-01-09 02:13:20,319 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:20,319 - DEBUG -    Exiting get()
2025-01-09 02:13:20,326 - ERROR - 
1 Failed download:
2025-01-09 02:13:20,326 - ERROR - ['VMC']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:20,326 - DEBUG - ['VMC']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:20,333 - DEBUG - Exiting download()
2025-01-09 02:13:20,442 - ERROR - Error writing data for VMC to DB: schema "np" does not exist
LINE 4:             VALUES ('VMC','2020-01-02'::date,np.float64(138....
                                                     ^

2025-01-09 02:13:20,443 - DEBUG - Entering download()
2025-01-09 02:13:20,443 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:20,443 - DEBUG -  Entering history()
2025-01-09 02:13:20,443 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WRB', 1, 0])
2025-01-09 02:13:20,443 - DEBUG -   Entering history()
2025-01-09 02:13:20,444 - DEBUG - WRB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:20,444 - DEBUG -    Entering get()
2025-01-09 02:13:20,444 - DEBUG -     Entering _make_request()
2025-01-09 02:13:20,444 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WRB
2025-01-09 02:13:20,444 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:20,444 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:20,444 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:20,444 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:20,445 - DEBUG - reusing cookie
2025-01-09 02:13:20,445 - DEBUG - reusing crumb
2025-01-09 02:13:20,445 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:20,445 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:20,634 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WRB?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1025
2025-01-09 02:13:20,635 - DEBUG - response code=200
2025-01-09 02:13:20,636 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:20,636 - DEBUG -    Exiting get()
2025-01-09 02:13:20,642 - ERROR - 
1 Failed download:
2025-01-09 02:13:20,642 - ERROR - ['WRB']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:20,642 - DEBUG - ['WRB']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:20,648 - DEBUG - Exiting download()
2025-01-09 02:13:20,649 - WARNING - Ticker WRB is missing 'Close' column. Skipping.
2025-01-09 02:13:20,649 - DEBUG - Entering download()
2025-01-09 02:13:20,649 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:20,650 - DEBUG -  Entering history()
2025-01-09 02:13:20,651 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GWW', 1, 0])
2025-01-09 02:13:20,651 - DEBUG -   Entering history()
2025-01-09 02:13:20,653 - DEBUG - GWW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:20,653 - DEBUG -    Entering get()
2025-01-09 02:13:20,653 - DEBUG -     Entering _make_request()
2025-01-09 02:13:20,653 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GWW
2025-01-09 02:13:20,654 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:20,654 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:20,654 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:20,654 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:20,654 - DEBUG - reusing cookie
2025-01-09 02:13:20,654 - DEBUG - reusing crumb
2025-01-09 02:13:20,654 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:20,654 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:20,826 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GWW?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1019
2025-01-09 02:13:20,827 - DEBUG - response code=200
2025-01-09 02:13:20,828 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:20,828 - DEBUG -    Exiting get()
2025-01-09 02:13:20,834 - ERROR - 
1 Failed download:
2025-01-09 02:13:20,834 - ERROR - ['GWW']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:20,834 - DEBUG - ['GWW']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:20,842 - DEBUG - Exiting download()
2025-01-09 02:13:20,842 - WARNING - Ticker GWW is missing 'Close' column. Skipping.
2025-01-09 02:13:20,842 - DEBUG - Entering download()
2025-01-09 02:13:20,843 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:20,843 - DEBUG -  Entering history()
2025-01-09 02:13:20,844 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WAB', 1, 0])
2025-01-09 02:13:20,844 - DEBUG -   Entering history()
2025-01-09 02:13:20,846 - DEBUG - WAB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:20,846 - DEBUG -    Entering get()
2025-01-09 02:13:20,846 - DEBUG -     Entering _make_request()
2025-01-09 02:13:20,847 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WAB
2025-01-09 02:13:20,847 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:20,847 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:20,847 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:20,847 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:20,847 - DEBUG - reusing cookie
2025-01-09 02:13:20,847 - DEBUG - reusing crumb
2025-01-09 02:13:20,847 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:20,847 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:21,002 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WAB?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1053
2025-01-09 02:13:21,003 - DEBUG - response code=200
2025-01-09 02:13:21,003 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:21,003 - DEBUG -    Exiting get()
2025-01-09 02:13:21,009 - ERROR - 
1 Failed download:
2025-01-09 02:13:21,009 - ERROR - ['WAB']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:21,010 - DEBUG - ['WAB']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:21,017 - DEBUG - Exiting download()
2025-01-09 02:13:21,017 - WARNING - Ticker WAB is missing 'Close' column. Skipping.
2025-01-09 02:13:21,018 - DEBUG - Entering download()
2025-01-09 02:13:21,018 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:21,018 - DEBUG -  Entering history()
2025-01-09 02:13:21,019 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WBA', 1, 0])
2025-01-09 02:13:21,019 - DEBUG -   Entering history()
2025-01-09 02:13:21,021 - DEBUG - WBA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:21,021 - DEBUG -    Entering get()
2025-01-09 02:13:21,021 - DEBUG -     Entering _make_request()
2025-01-09 02:13:21,021 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WBA
2025-01-09 02:13:21,021 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:21,022 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:21,022 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:21,022 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:21,022 - DEBUG - reusing cookie
2025-01-09 02:13:21,022 - DEBUG - reusing crumb
2025-01-09 02:13:21,022 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:21,022 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:21,212 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WBA?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1033
2025-01-09 02:13:21,213 - DEBUG - response code=200
2025-01-09 02:13:21,214 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:21,214 - DEBUG -    Exiting get()
2025-01-09 02:13:21,217 - ERROR - 
1 Failed download:
2025-01-09 02:13:21,217 - ERROR - ['WBA']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:21,217 - DEBUG - ['WBA']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:21,219 - DEBUG - Exiting download()
2025-01-09 02:13:21,219 - WARNING - Ticker WBA is missing 'Close' column. Skipping.
2025-01-09 02:13:21,219 - DEBUG - Entering download()
2025-01-09 02:13:21,219 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:21,220 - DEBUG -  Entering history()
2025-01-09 02:13:21,220 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WMT', 1, 0])
2025-01-09 02:13:21,220 - DEBUG -   Entering history()
2025-01-09 02:13:21,221 - DEBUG - WMT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:21,221 - DEBUG -    Entering get()
2025-01-09 02:13:21,221 - DEBUG -     Entering _make_request()
2025-01-09 02:13:21,221 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WMT
2025-01-09 02:13:21,221 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:21,221 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:21,221 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:21,221 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:21,221 - DEBUG - reusing cookie
2025-01-09 02:13:21,221 - DEBUG - reusing crumb
2025-01-09 02:13:21,221 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:21,221 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:21,404 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WMT?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 997
2025-01-09 02:13:21,405 - DEBUG - response code=200
2025-01-09 02:13:21,406 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:21,406 - DEBUG -    Exiting get()
2025-01-09 02:13:21,412 - ERROR - 
1 Failed download:
2025-01-09 02:13:21,412 - ERROR - ['WMT']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:21,412 - DEBUG - ['WMT']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:21,419 - DEBUG - Exiting download()
2025-01-09 02:13:21,420 - WARNING - Ticker WMT is missing 'Close' column. Skipping.
2025-01-09 02:13:21,420 - DEBUG - Entering download()
2025-01-09 02:13:21,420 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:21,421 - DEBUG -  Entering history()
2025-01-09 02:13:21,421 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DIS', 1, 0])
2025-01-09 02:13:21,422 - DEBUG -   Entering history()
2025-01-09 02:13:21,424 - DEBUG - DIS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:21,425 - DEBUG -    Entering get()
2025-01-09 02:13:21,425 - DEBUG -     Entering _make_request()
2025-01-09 02:13:21,425 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DIS
2025-01-09 02:13:21,425 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:21,425 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:21,426 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:21,426 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:21,426 - DEBUG - reusing cookie
2025-01-09 02:13:21,426 - DEBUG - reusing crumb
2025-01-09 02:13:21,426 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:21,426 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:21,692 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DIS?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1028
2025-01-09 02:13:21,693 - DEBUG - response code=200
2025-01-09 02:13:21,693 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:21,693 - DEBUG -    Exiting get()
2025-01-09 02:13:21,700 - ERROR - 
1 Failed download:
2025-01-09 02:13:21,700 - ERROR - ['DIS']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:21,700 - DEBUG - ['DIS']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:21,707 - DEBUG - Exiting download()
2025-01-09 02:13:21,708 - WARNING - Ticker DIS is missing 'Close' column. Skipping.
2025-01-09 02:13:21,708 - DEBUG - Entering download()
2025-01-09 02:13:21,708 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:21,709 - DEBUG -  Entering history()
2025-01-09 02:13:21,710 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WBD', 1, 0])
2025-01-09 02:13:21,710 - DEBUG -   Entering history()
2025-01-09 02:13:21,712 - DEBUG - WBD: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:21,713 - DEBUG -    Entering get()
2025-01-09 02:13:21,713 - DEBUG -     Entering _make_request()
2025-01-09 02:13:21,713 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WBD
2025-01-09 02:13:21,713 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:21,714 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:21,714 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:21,714 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:21,714 - DEBUG - reusing cookie
2025-01-09 02:13:21,714 - DEBUG - reusing crumb
2025-01-09 02:13:21,714 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:21,714 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:21,852 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WBD?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1035
2025-01-09 02:13:21,853 - DEBUG - response code=200
2025-01-09 02:13:21,854 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:21,854 - DEBUG -    Exiting get()
2025-01-09 02:13:21,858 - ERROR - 
1 Failed download:
2025-01-09 02:13:21,858 - ERROR - ['WBD']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:21,858 - DEBUG - ['WBD']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:21,860 - DEBUG - Exiting download()
2025-01-09 02:13:21,961 - ERROR - Error writing data for WBD to DB: schema "np" does not exist
LINE 4:             VALUES ('WBD','2020-01-02'::date,np.float64(32.8...
                                                     ^

2025-01-09 02:13:21,961 - DEBUG - Entering download()
2025-01-09 02:13:21,961 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:21,961 - DEBUG -  Entering history()
2025-01-09 02:13:21,962 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WM', 1, 0])
2025-01-09 02:13:21,962 - DEBUG -   Entering history()
2025-01-09 02:13:21,963 - DEBUG - WM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:21,963 - DEBUG -    Entering get()
2025-01-09 02:13:21,963 - DEBUG -     Entering _make_request()
2025-01-09 02:13:21,963 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WM
2025-01-09 02:13:21,963 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:21,963 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:21,963 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:21,963 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:21,963 - DEBUG - reusing cookie
2025-01-09 02:13:21,963 - DEBUG - reusing crumb
2025-01-09 02:13:21,963 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:21,963 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:22,121 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WM?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1022
2025-01-09 02:13:22,122 - DEBUG - response code=200
2025-01-09 02:13:22,122 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:22,123 - DEBUG -    Exiting get()
2025-01-09 02:13:22,129 - ERROR - 
1 Failed download:
2025-01-09 02:13:22,129 - ERROR - ['WM']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:22,129 - DEBUG - ['WM']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:22,136 - DEBUG - Exiting download()
2025-01-09 02:13:22,245 - ERROR - Error writing data for WM to DB: schema "np" does not exist
LINE 4:             VALUES ('WM','2020-01-02'::date,np.float64(105.0...
                                                    ^

2025-01-09 02:13:22,246 - DEBUG - Entering download()
2025-01-09 02:13:22,246 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:22,246 - DEBUG -  Entering history()
2025-01-09 02:13:22,247 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WAT', 1, 0])
2025-01-09 02:13:22,247 - DEBUG -   Entering history()
2025-01-09 02:13:22,248 - DEBUG - WAT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:22,248 - DEBUG -    Entering get()
2025-01-09 02:13:22,248 - DEBUG -     Entering _make_request()
2025-01-09 02:13:22,248 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WAT
2025-01-09 02:13:22,248 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:22,248 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:22,248 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:22,248 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:22,248 - DEBUG - reusing cookie
2025-01-09 02:13:22,248 - DEBUG - reusing crumb
2025-01-09 02:13:22,249 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:22,249 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:22,392 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WAT?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1013
2025-01-09 02:13:22,393 - DEBUG - response code=200
2025-01-09 02:13:22,393 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:22,393 - DEBUG -    Exiting get()
2025-01-09 02:13:22,399 - ERROR - 
1 Failed download:
2025-01-09 02:13:22,400 - ERROR - ['WAT']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:22,400 - DEBUG - ['WAT']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:22,406 - DEBUG - Exiting download()
2025-01-09 02:13:22,527 - ERROR - Error writing data for WAT to DB: schema "np" does not exist
LINE 4:             VALUES ('WAT','2020-01-02'::date,np.float64(234....
                                                     ^

2025-01-09 02:13:22,527 - DEBUG - Entering download()
2025-01-09 02:13:22,527 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:22,528 - DEBUG -  Entering history()
2025-01-09 02:13:22,528 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WEC', 1, 0])
2025-01-09 02:13:22,528 - DEBUG -   Entering history()
2025-01-09 02:13:22,529 - DEBUG - WEC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:22,529 - DEBUG -    Entering get()
2025-01-09 02:13:22,529 - DEBUG -     Entering _make_request()
2025-01-09 02:13:22,529 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WEC
2025-01-09 02:13:22,529 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:22,529 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:22,529 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:22,529 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:22,529 - DEBUG - reusing cookie
2025-01-09 02:13:22,529 - DEBUG - reusing crumb
2025-01-09 02:13:22,529 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:22,529 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:22,719 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WEC?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1018
2025-01-09 02:13:22,721 - DEBUG - response code=200
2025-01-09 02:13:22,721 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:22,721 - DEBUG -    Exiting get()
2025-01-09 02:13:22,727 - ERROR - 
1 Failed download:
2025-01-09 02:13:22,728 - ERROR - ['WEC']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:22,728 - DEBUG - ['WEC']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:22,735 - DEBUG - Exiting download()
2025-01-09 02:13:22,843 - ERROR - Error writing data for WEC to DB: schema "np" does not exist
LINE 4:             VALUES ('WEC','2020-01-02'::date,np.float64(78.6...
                                                     ^

2025-01-09 02:13:22,844 - DEBUG - Entering download()
2025-01-09 02:13:22,844 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:22,844 - DEBUG -  Entering history()
2025-01-09 02:13:22,844 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WFC', 1, 0])
2025-01-09 02:13:22,844 - DEBUG -   Entering history()
2025-01-09 02:13:22,845 - DEBUG - WFC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:22,845 - DEBUG -    Entering get()
2025-01-09 02:13:22,845 - DEBUG -     Entering _make_request()
2025-01-09 02:13:22,845 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WFC
2025-01-09 02:13:22,845 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:22,845 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:22,845 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:22,845 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:22,845 - DEBUG - reusing cookie
2025-01-09 02:13:22,845 - DEBUG - reusing crumb
2025-01-09 02:13:22,845 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:22,846 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:23,042 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WFC?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1014
2025-01-09 02:13:23,043 - DEBUG - response code=200
2025-01-09 02:13:23,043 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:23,043 - DEBUG -    Exiting get()
2025-01-09 02:13:23,049 - ERROR - 
1 Failed download:
2025-01-09 02:13:23,049 - ERROR - ['WFC']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:23,050 - DEBUG - ['WFC']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:23,057 - DEBUG - Exiting download()
2025-01-09 02:13:23,188 - ERROR - Error writing data for WFC to DB: schema "np" does not exist
LINE 4:             VALUES ('WFC','2020-01-02'::date,np.float64(47.1...
                                                     ^

2025-01-09 02:13:23,188 - DEBUG - Entering download()
2025-01-09 02:13:23,188 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:23,188 - DEBUG -  Entering history()
2025-01-09 02:13:23,189 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WELL', 1, 0])
2025-01-09 02:13:23,189 - DEBUG -   Entering history()
2025-01-09 02:13:23,190 - DEBUG - WELL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:23,190 - DEBUG -    Entering get()
2025-01-09 02:13:23,190 - DEBUG -     Entering _make_request()
2025-01-09 02:13:23,190 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WELL
2025-01-09 02:13:23,190 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:23,190 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:23,190 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:23,190 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:23,190 - DEBUG - reusing cookie
2025-01-09 02:13:23,190 - DEBUG - reusing crumb
2025-01-09 02:13:23,190 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:23,190 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:23,354 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WELL?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1005
2025-01-09 02:13:23,355 - DEBUG - response code=200
2025-01-09 02:13:23,355 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:23,355 - DEBUG -    Exiting get()
2025-01-09 02:13:23,361 - ERROR - 
1 Failed download:
2025-01-09 02:13:23,361 - ERROR - ['WELL']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:23,361 - DEBUG - ['WELL']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:23,368 - DEBUG - Exiting download()
2025-01-09 02:13:23,368 - WARNING - Ticker WELL is missing 'Close' column. Skipping.
2025-01-09 02:13:23,368 - DEBUG - Entering download()
2025-01-09 02:13:23,369 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:23,369 - DEBUG -  Entering history()
2025-01-09 02:13:23,370 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WST', 1, 0])
2025-01-09 02:13:23,370 - DEBUG -   Entering history()
2025-01-09 02:13:23,372 - DEBUG - WST: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:23,372 - DEBUG -    Entering get()
2025-01-09 02:13:23,372 - DEBUG -     Entering _make_request()
2025-01-09 02:13:23,373 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WST
2025-01-09 02:13:23,373 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:23,373 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:23,373 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:23,373 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:23,373 - DEBUG - reusing cookie
2025-01-09 02:13:23,373 - DEBUG - reusing crumb
2025-01-09 02:13:23,373 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:23,373 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:23,558 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WST?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1042
2025-01-09 02:13:23,559 - DEBUG - response code=200
2025-01-09 02:13:23,560 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:23,560 - DEBUG -    Exiting get()
2025-01-09 02:13:23,566 - ERROR - 
1 Failed download:
2025-01-09 02:13:23,566 - ERROR - ['WST']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:23,566 - DEBUG - ['WST']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:23,573 - DEBUG - Exiting download()
2025-01-09 02:13:23,683 - ERROR - Error writing data for WST to DB: schema "np" does not exist
LINE 4:             VALUES ('WST','2020-01-02'::date,np.float64(148....
                                                     ^

2025-01-09 02:13:23,683 - DEBUG - Entering download()
2025-01-09 02:13:23,683 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:23,683 - DEBUG -  Entering history()
2025-01-09 02:13:23,684 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WDC', 1, 0])
2025-01-09 02:13:23,684 - DEBUG -   Entering history()
2025-01-09 02:13:23,684 - DEBUG - WDC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:23,684 - DEBUG -    Entering get()
2025-01-09 02:13:23,685 - DEBUG -     Entering _make_request()
2025-01-09 02:13:23,685 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WDC
2025-01-09 02:13:23,685 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:23,685 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:23,685 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:23,685 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:23,685 - DEBUG - reusing cookie
2025-01-09 02:13:23,685 - DEBUG - reusing crumb
2025-01-09 02:13:23,685 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:23,685 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:23,839 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WDC?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1057
2025-01-09 02:13:23,840 - DEBUG - response code=200
2025-01-09 02:13:23,840 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:23,841 - DEBUG -    Exiting get()
2025-01-09 02:13:23,847 - ERROR - 
1 Failed download:
2025-01-09 02:13:23,847 - ERROR - ['WDC']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:23,847 - DEBUG - ['WDC']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:23,854 - DEBUG - Exiting download()
2025-01-09 02:13:23,855 - WARNING - Ticker WDC is missing 'Close' column. Skipping.
2025-01-09 02:13:23,855 - DEBUG - Entering download()
2025-01-09 02:13:23,855 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:23,856 - DEBUG -  Entering history()
2025-01-09 02:13:23,857 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WY', 1, 0])
2025-01-09 02:13:23,857 - DEBUG -   Entering history()
2025-01-09 02:13:23,859 - DEBUG - WY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:23,859 - DEBUG -    Entering get()
2025-01-09 02:13:23,859 - DEBUG -     Entering _make_request()
2025-01-09 02:13:23,859 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WY
2025-01-09 02:13:23,859 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:23,859 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:23,860 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:23,860 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:23,860 - DEBUG - reusing cookie
2025-01-09 02:13:23,860 - DEBUG - reusing crumb
2025-01-09 02:13:23,860 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:23,860 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:24,051 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WY?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1012
2025-01-09 02:13:24,052 - DEBUG - response code=200
2025-01-09 02:13:24,053 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:24,053 - DEBUG -    Exiting get()
2025-01-09 02:13:24,059 - ERROR - 
1 Failed download:
2025-01-09 02:13:24,059 - ERROR - ['WY']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:24,059 - DEBUG - ['WY']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:24,066 - DEBUG - Exiting download()
2025-01-09 02:13:24,175 - ERROR - Error writing data for WY to DB: schema "np" does not exist
LINE 4:             VALUES ('WY','2020-01-02'::date,np.float64(25.06...
                                                    ^

2025-01-09 02:13:24,175 - DEBUG - Entering download()
2025-01-09 02:13:24,175 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:24,176 - DEBUG -  Entering history()
2025-01-09 02:13:24,176 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WMB', 1, 0])
2025-01-09 02:13:24,176 - DEBUG -   Entering history()
2025-01-09 02:13:24,177 - DEBUG - WMB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:24,177 - DEBUG -    Entering get()
2025-01-09 02:13:24,177 - DEBUG -     Entering _make_request()
2025-01-09 02:13:24,178 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WMB
2025-01-09 02:13:24,178 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:24,178 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:24,178 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:24,178 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:24,178 - DEBUG - reusing cookie
2025-01-09 02:13:24,178 - DEBUG - reusing crumb
2025-01-09 02:13:24,178 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:24,178 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:24,385 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WMB?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1032
2025-01-09 02:13:24,386 - DEBUG - response code=200
2025-01-09 02:13:24,387 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:24,387 - DEBUG -    Exiting get()
2025-01-09 02:13:24,393 - ERROR - 
1 Failed download:
2025-01-09 02:13:24,393 - ERROR - ['WMB']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:24,393 - DEBUG - ['WMB']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:24,400 - DEBUG - Exiting download()
2025-01-09 02:13:24,513 - ERROR - Error writing data for WMB to DB: schema "np" does not exist
LINE 4:             VALUES ('WMB','2020-01-02'::date,np.float64(17.8...
                                                     ^

2025-01-09 02:13:24,514 - DEBUG - Entering download()
2025-01-09 02:13:24,514 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:24,514 - DEBUG -  Entering history()
2025-01-09 02:13:24,514 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WTW', 1, 0])
2025-01-09 02:13:24,515 - DEBUG -   Entering history()
2025-01-09 02:13:24,515 - DEBUG - WTW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:24,515 - DEBUG -    Entering get()
2025-01-09 02:13:24,515 - DEBUG -     Entering _make_request()
2025-01-09 02:13:24,515 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WTW
2025-01-09 02:13:24,515 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:24,515 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:24,516 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:24,516 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:24,516 - DEBUG - reusing cookie
2025-01-09 02:13:24,516 - DEBUG - reusing crumb
2025-01-09 02:13:24,516 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:24,516 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:24,707 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WTW?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1056
2025-01-09 02:13:24,708 - DEBUG - response code=200
2025-01-09 02:13:24,708 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:24,709 - DEBUG -    Exiting get()
2025-01-09 02:13:24,715 - ERROR - 
1 Failed download:
2025-01-09 02:13:24,715 - ERROR - ['WTW']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:24,715 - DEBUG - ['WTW']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:24,722 - DEBUG - Exiting download()
2025-01-09 02:13:24,723 - WARNING - Ticker WTW is missing 'Close' column. Skipping.
2025-01-09 02:13:24,723 - DEBUG - Entering download()
2025-01-09 02:13:24,723 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:24,724 - DEBUG -  Entering history()
2025-01-09 02:13:24,725 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WDAY', 1, 0])
2025-01-09 02:13:24,725 - DEBUG -   Entering history()
2025-01-09 02:13:24,727 - DEBUG - WDAY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:24,728 - DEBUG -    Entering get()
2025-01-09 02:13:24,728 - DEBUG -     Entering _make_request()
2025-01-09 02:13:24,728 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WDAY
2025-01-09 02:13:24,728 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:24,728 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:24,728 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:24,728 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:24,729 - DEBUG - reusing cookie
2025-01-09 02:13:24,729 - DEBUG - reusing crumb
2025-01-09 02:13:24,729 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:24,729 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:24,874 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WDAY?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1011
2025-01-09 02:13:24,875 - DEBUG - response code=200
2025-01-09 02:13:24,876 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:24,876 - DEBUG -    Exiting get()
2025-01-09 02:13:24,882 - ERROR - 
1 Failed download:
2025-01-09 02:13:24,882 - ERROR - ['WDAY']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:24,882 - DEBUG - ['WDAY']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:24,890 - DEBUG - Exiting download()
2025-01-09 02:13:24,890 - WARNING - Ticker WDAY is missing 'Close' column. Skipping.
2025-01-09 02:13:24,890 - DEBUG - Entering download()
2025-01-09 02:13:24,891 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:24,891 - DEBUG -  Entering history()
2025-01-09 02:13:24,892 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WYNN', 1, 0])
2025-01-09 02:13:24,892 - DEBUG -   Entering history()
2025-01-09 02:13:24,894 - DEBUG - WYNN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:24,894 - DEBUG -    Entering get()
2025-01-09 02:13:24,894 - DEBUG -     Entering _make_request()
2025-01-09 02:13:24,894 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WYNN
2025-01-09 02:13:24,895 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:24,895 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:24,895 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:24,895 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:24,895 - DEBUG - reusing cookie
2025-01-09 02:13:24,895 - DEBUG - reusing crumb
2025-01-09 02:13:24,895 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:24,895 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:25,073 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WYNN?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1022
2025-01-09 02:13:25,074 - DEBUG - response code=200
2025-01-09 02:13:25,074 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:25,075 - DEBUG -    Exiting get()
2025-01-09 02:13:25,081 - ERROR - 
1 Failed download:
2025-01-09 02:13:25,081 - ERROR - ['WYNN']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:25,081 - DEBUG - ['WYNN']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:25,089 - DEBUG - Exiting download()
2025-01-09 02:13:25,089 - WARNING - Ticker WYNN is missing 'Close' column. Skipping.
2025-01-09 02:13:25,089 - DEBUG - Entering download()
2025-01-09 02:13:25,090 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:25,090 - DEBUG -  Entering history()
2025-01-09 02:13:25,091 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['XEL', 1, 0])
2025-01-09 02:13:25,091 - DEBUG -   Entering history()
2025-01-09 02:13:25,093 - DEBUG - XEL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:25,093 - DEBUG -    Entering get()
2025-01-09 02:13:25,093 - DEBUG -     Entering _make_request()
2025-01-09 02:13:25,093 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/XEL
2025-01-09 02:13:25,093 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:25,094 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:25,094 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:25,094 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:25,094 - DEBUG - reusing cookie
2025-01-09 02:13:25,094 - DEBUG - reusing crumb
2025-01-09 02:13:25,094 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:25,094 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:25,306 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/XEL?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1008
2025-01-09 02:13:25,307 - DEBUG - response code=200
2025-01-09 02:13:25,307 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:25,307 - DEBUG -    Exiting get()
2025-01-09 02:13:25,311 - ERROR - 
1 Failed download:
2025-01-09 02:13:25,311 - ERROR - ['XEL']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:25,311 - DEBUG - ['XEL']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:25,314 - DEBUG - Exiting download()
2025-01-09 02:13:25,419 - ERROR - Error writing data for XEL to DB: schema "np" does not exist
LINE 4:             VALUES ('XEL','2020-01-02'::date,np.float64(54.5...
                                                     ^

2025-01-09 02:13:25,419 - DEBUG - Entering download()
2025-01-09 02:13:25,420 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:25,420 - DEBUG -  Entering history()
2025-01-09 02:13:25,420 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['XYL', 1, 0])
2025-01-09 02:13:25,420 - DEBUG -   Entering history()
2025-01-09 02:13:25,421 - DEBUG - XYL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:25,421 - DEBUG -    Entering get()
2025-01-09 02:13:25,421 - DEBUG -     Entering _make_request()
2025-01-09 02:13:25,421 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/XYL
2025-01-09 02:13:25,421 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:25,421 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:25,422 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:25,422 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:25,422 - DEBUG - reusing cookie
2025-01-09 02:13:25,422 - DEBUG - reusing crumb
2025-01-09 02:13:25,422 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:25,422 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:25,571 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/XYL?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1000
2025-01-09 02:13:25,572 - DEBUG - response code=200
2025-01-09 02:13:25,572 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:25,572 - DEBUG -    Exiting get()
2025-01-09 02:13:25,578 - ERROR - 
1 Failed download:
2025-01-09 02:13:25,578 - ERROR - ['XYL']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:25,578 - DEBUG - ['XYL']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:25,585 - DEBUG - Exiting download()
2025-01-09 02:13:25,695 - ERROR - Error writing data for XYL to DB: schema "np" does not exist
LINE 4:             VALUES ('XYL','2020-01-02'::date,np.float64(74.5...
                                                     ^

2025-01-09 02:13:25,695 - DEBUG - Entering download()
2025-01-09 02:13:25,695 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:25,696 - DEBUG -  Entering history()
2025-01-09 02:13:25,696 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['YUM', 1, 0])
2025-01-09 02:13:25,696 - DEBUG -   Entering history()
2025-01-09 02:13:25,697 - DEBUG - YUM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:25,697 - DEBUG -    Entering get()
2025-01-09 02:13:25,697 - DEBUG -     Entering _make_request()
2025-01-09 02:13:25,697 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/YUM
2025-01-09 02:13:25,697 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:25,697 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:25,697 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:25,697 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:25,697 - DEBUG - reusing cookie
2025-01-09 02:13:25,697 - DEBUG - reusing crumb
2025-01-09 02:13:25,697 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:25,697 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:25,861 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/YUM?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1013
2025-01-09 02:13:25,862 - DEBUG - response code=200
2025-01-09 02:13:25,863 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:25,863 - DEBUG -    Exiting get()
2025-01-09 02:13:25,869 - ERROR - 
1 Failed download:
2025-01-09 02:13:25,869 - ERROR - ['YUM']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:25,869 - DEBUG - ['YUM']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:25,876 - DEBUG - Exiting download()
2025-01-09 02:13:25,984 - ERROR - Error writing data for YUM to DB: schema "np" does not exist
LINE 4:             VALUES ('YUM','2020-01-02'::date,np.float64(91.9...
                                                     ^

2025-01-09 02:13:25,984 - DEBUG - Entering download()
2025-01-09 02:13:25,984 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:25,984 - DEBUG -  Entering history()
2025-01-09 02:13:25,985 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ZBRA', 1, 0])
2025-01-09 02:13:25,985 - DEBUG -   Entering history()
2025-01-09 02:13:25,985 - DEBUG - ZBRA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:25,986 - DEBUG -    Entering get()
2025-01-09 02:13:25,986 - DEBUG -     Entering _make_request()
2025-01-09 02:13:25,986 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ZBRA
2025-01-09 02:13:25,986 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:25,986 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:25,986 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:25,986 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:25,986 - DEBUG - reusing cookie
2025-01-09 02:13:25,986 - DEBUG - reusing crumb
2025-01-09 02:13:25,986 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:25,986 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:26,114 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ZBRA?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1042
2025-01-09 02:13:26,115 - DEBUG - response code=200
2025-01-09 02:13:26,115 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:26,115 - DEBUG -    Exiting get()
2025-01-09 02:13:26,119 - ERROR - 
1 Failed download:
2025-01-09 02:13:26,119 - ERROR - ['ZBRA']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:26,119 - DEBUG - ['ZBRA']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:26,124 - DEBUG - Exiting download()
2025-01-09 02:13:26,125 - WARNING - Ticker ZBRA is missing 'Close' column. Skipping.
2025-01-09 02:13:26,125 - DEBUG - Entering download()
2025-01-09 02:13:26,125 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:26,125 - DEBUG -  Entering history()
2025-01-09 02:13:26,126 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ZBH', 1, 0])
2025-01-09 02:13:26,126 - DEBUG -   Entering history()
2025-01-09 02:13:26,128 - DEBUG - ZBH: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:26,128 - DEBUG -    Entering get()
2025-01-09 02:13:26,128 - DEBUG -     Entering _make_request()
2025-01-09 02:13:26,128 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ZBH
2025-01-09 02:13:26,128 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:26,129 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:26,129 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:26,129 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:26,129 - DEBUG - reusing cookie
2025-01-09 02:13:26,129 - DEBUG - reusing crumb
2025-01-09 02:13:26,129 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:26,129 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:26,276 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ZBH?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1037
2025-01-09 02:13:26,277 - DEBUG - response code=200
2025-01-09 02:13:26,278 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:26,278 - DEBUG -    Exiting get()
2025-01-09 02:13:26,281 - ERROR - 
1 Failed download:
2025-01-09 02:13:26,282 - ERROR - ['ZBH']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:26,282 - DEBUG - ['ZBH']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:26,284 - DEBUG - Exiting download()
2025-01-09 02:13:26,284 - WARNING - Ticker ZBH is missing 'Close' column. Skipping.
2025-01-09 02:13:26,284 - DEBUG - Entering download()
2025-01-09 02:13:26,284 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:13:26,284 - DEBUG -  Entering history()
2025-01-09 02:13:26,284 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ZTS', 1, 0])
2025-01-09 02:13:26,284 - DEBUG -   Entering history()
2025-01-09 02:13:26,285 - DEBUG - ZTS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:13:26,285 - DEBUG -    Entering get()
2025-01-09 02:13:26,285 - DEBUG -     Entering _make_request()
2025-01-09 02:13:26,285 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ZTS
2025-01-09 02:13:26,285 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1d', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:13:26,285 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:13:26,285 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:13:26,285 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:13:26,285 - DEBUG - reusing cookie
2025-01-09 02:13:26,285 - DEBUG - reusing crumb
2025-01-09 02:13:26,286 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:13:26,286 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:13:26,439 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ZTS?period1=1577854800&period2=1577941200&interval=1d&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1001
2025-01-09 02:13:26,440 - DEBUG - response code=200
2025-01-09 02:13:26,440 - DEBUG -     Exiting _make_request()
2025-01-09 02:13:26,441 - DEBUG -    Exiting get()
2025-01-09 02:13:26,444 - ERROR - 
1 Failed download:
2025-01-09 02:13:26,444 - ERROR - ['ZTS']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)')
2025-01-09 02:13:26,444 - DEBUG - ['ZTS']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1d 2020-01-01 00:00:00 -> 2020-01-02 00:00:00)

2025-01-09 02:13:26,446 - DEBUG - Exiting download()
2025-01-09 02:13:26,446 - WARNING - Ticker ZTS is missing 'Close' column. Skipping.
2025-01-09 02:13:26,447 - DEBUG - DEBUG: MMM 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,448 - DEBUG - DEBUG: ABT 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,450 - DEBUG - DEBUG: ADBE 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,451 - DEBUG - DEBUG: AFL 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,452 - DEBUG - DEBUG: ABNB 'Close' is Series of shape (1025,)
2025-01-09 02:13:26,453 - DEBUG - DEBUG: AKAM 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,454 - DEBUG - DEBUG: ARE 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,455 - DEBUG - DEBUG: GOOGL 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,456 - DEBUG - DEBUG: GOOG 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,457 - DEBUG - DEBUG: MO 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,458 - DEBUG - DEBUG: AMCR 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,459 - DEBUG - DEBUG: AEE 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,460 - DEBUG - DEBUG: AEP 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,461 - DEBUG - DEBUG: AIG 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,463 - DEBUG - DEBUG: AWK 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,464 - DEBUG - DEBUG: AMGN 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,465 - DEBUG - DEBUG: APH 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,466 - DEBUG - DEBUG: ADI 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,467 - DEBUG - DEBUG: ANSS 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,468 - DEBUG - DEBUG: AON 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,469 - DEBUG - DEBUG: APO 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,470 - DEBUG - DEBUG: AAPL 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,471 - DEBUG - DEBUG: AMAT 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,472 - DEBUG - DEBUG: APTV 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,473 - DEBUG - DEBUG: ADM 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,474 - DEBUG - DEBUG: AJG 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,475 - DEBUG - DEBUG: AIZ 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,476 - DEBUG - DEBUG: ADSK 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,477 - DEBUG - DEBUG: ADP 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,478 - DEBUG - DEBUG: AZO 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,479 - DEBUG - DEBUG: AXON 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,480 - DEBUG - DEBUG: BKR 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,481 - DEBUG - DEBUG: BALL 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,482 - DEBUG - DEBUG: BAC 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,483 - DEBUG - DEBUG: BAX 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,483 - DEBUG - DEBUG: BRK-B 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,484 - DEBUG - DEBUG: BBY 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,485 - DEBUG - DEBUG: TECH 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,486 - DEBUG - DEBUG: BIIB 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,487 - DEBUG - DEBUG: BX 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,488 - DEBUG - DEBUG: BA 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,489 - DEBUG - DEBUG: BKNG 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,490 - DEBUG - DEBUG: BWA 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,490 - DEBUG - DEBUG: BSX 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,491 - DEBUG - DEBUG: BMY 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,492 - DEBUG - DEBUG: AVGO 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,493 - DEBUG - DEBUG: BRO 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,494 - DEBUG - DEBUG: BF-B 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,495 - DEBUG - DEBUG: BLDR 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,495 - DEBUG - DEBUG: BG 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,496 - DEBUG - DEBUG: CHRW 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,497 - DEBUG - DEBUG: CDNS 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,498 - DEBUG - DEBUG: CZR 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,499 - DEBUG - DEBUG: CPT 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,500 - DEBUG - DEBUG: CAH 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,500 - DEBUG - DEBUG: CCL 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,501 - DEBUG - DEBUG: CARR 'Close' is Series of shape (1210,)
2025-01-09 02:13:26,502 - DEBUG - DEBUG: CDW 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,503 - DEBUG - DEBUG: CE 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,504 - DEBUG - DEBUG: CNC 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,504 - DEBUG - DEBUG: CNP 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,505 - DEBUG - DEBUG: CF 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,506 - DEBUG - DEBUG: CRL 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,507 - DEBUG - DEBUG: SCHW 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,508 - DEBUG - DEBUG: CHTR 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,509 - DEBUG - DEBUG: CVX 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,509 - DEBUG - DEBUG: CHD 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,510 - DEBUG - DEBUG: CI 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,511 - DEBUG - DEBUG: CINF 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,512 - DEBUG - DEBUG: CTAS 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,513 - DEBUG - DEBUG: C 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,513 - DEBUG - DEBUG: CLX 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,514 - DEBUG - DEBUG: CME 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,515 - DEBUG - DEBUG: CTSH 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,516 - DEBUG - DEBUG: CL 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,517 - DEBUG - DEBUG: COP 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,517 - DEBUG - DEBUG: ED 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,518 - DEBUG - DEBUG: CEG 'Close' is Series of shape (747,)
2025-01-09 02:13:26,519 - DEBUG - DEBUG: CPRT 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,520 - DEBUG - DEBUG: GLW 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,521 - DEBUG - DEBUG: CTVA 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,521 - DEBUG - DEBUG: CSGP 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,522 - DEBUG - DEBUG: COST 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,523 - DEBUG - DEBUG: CTRA 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,524 - DEBUG - DEBUG: CRWD 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,525 - DEBUG - DEBUG: CCI 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,525 - DEBUG - DEBUG: CMI 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,526 - DEBUG - DEBUG: CVS 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,527 - DEBUG - DEBUG: DAY 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,528 - DEBUG - DEBUG: DELL 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,529 - DEBUG - DEBUG: DAL 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,530 - DEBUG - DEBUG: DVN 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,530 - DEBUG - DEBUG: FANG 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,531 - DEBUG - DEBUG: DLR 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,532 - DEBUG - DEBUG: DG 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,533 - DEBUG - DEBUG: DLTR 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,534 - DEBUG - DEBUG: DPZ 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,534 - DEBUG - DEBUG: DOV 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,535 - DEBUG - DEBUG: DOW 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,536 - DEBUG - DEBUG: DHI 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,537 - DEBUG - DEBUG: DTE 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,538 - DEBUG - DEBUG: DD 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,539 - DEBUG - DEBUG: EMN 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,542 - DEBUG - DEBUG: ETN 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,543 - DEBUG - DEBUG: EBAY 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,543 - DEBUG - DEBUG: ECL 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,544 - DEBUG - DEBUG: EIX 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,545 - DEBUG - DEBUG: EW 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,546 - DEBUG - DEBUG: ELV 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,547 - DEBUG - DEBUG: EMR 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,548 - DEBUG - DEBUG: ENPH 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,548 - DEBUG - DEBUG: ETR 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,549 - DEBUG - DEBUG: EOG 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,550 - DEBUG - DEBUG: EPAM 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,551 - DEBUG - DEBUG: EFX 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,552 - DEBUG - DEBUG: EQIX 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,552 - DEBUG - DEBUG: ESS 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,553 - DEBUG - DEBUG: EG 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,554 - DEBUG - DEBUG: EVRG 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,555 - DEBUG - DEBUG: ES 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,555 - DEBUG - DEBUG: EXC 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,556 - DEBUG - DEBUG: EXPE 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,557 - DEBUG - DEBUG: EXPD 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,558 - DEBUG - DEBUG: EXR 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,559 - DEBUG - DEBUG: XOM 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,559 - DEBUG - DEBUG: FICO 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,561 - DEBUG - DEBUG: FRT 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,561 - DEBUG - DEBUG: FDX 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,562 - DEBUG - DEBUG: FIS 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,563 - DEBUG - DEBUG: FITB 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,564 - DEBUG - DEBUG: FSLR 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,565 - DEBUG - DEBUG: FI 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,566 - DEBUG - DEBUG: FMC 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,566 - DEBUG - DEBUG: F 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,567 - DEBUG - DEBUG: FTNT 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,568 - DEBUG - DEBUG: FTV 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,569 - DEBUG - DEBUG: FOX 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,569 - DEBUG - DEBUG: GRMN 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,570 - DEBUG - DEBUG: IT 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,571 - DEBUG - DEBUG: GEV 'Close' is Series of shape (196,)
2025-01-09 02:13:26,572 - DEBUG - DEBUG: GEN 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,573 - DEBUG - DEBUG: GD 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,573 - DEBUG - DEBUG: GIS 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,574 - DEBUG - DEBUG: GM 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,575 - DEBUG - DEBUG: GPC 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,576 - DEBUG - DEBUG: GILD 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,580 - DEBUG - DEBUG: GPN 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,581 - DEBUG - DEBUG: GL 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,582 - DEBUG - DEBUG: GDDY 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,583 - DEBUG - DEBUG: GS 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,583 - DEBUG - DEBUG: HAL 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,584 - DEBUG - DEBUG: HIG 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,585 - DEBUG - DEBUG: HAS 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,586 - DEBUG - DEBUG: DOC 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,587 - DEBUG - DEBUG: HSIC 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,588 - DEBUG - DEBUG: HES 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,589 - DEBUG - DEBUG: HPE 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,590 - DEBUG - DEBUG: HLT 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,591 - DEBUG - DEBUG: HOLX 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,592 - DEBUG - DEBUG: HD 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,593 - DEBUG - DEBUG: HON 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,594 - DEBUG - DEBUG: HST 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,595 - DEBUG - DEBUG: HWM 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,596 - DEBUG - DEBUG: HUBB 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,597 - DEBUG - DEBUG: HUM 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,598 - DEBUG - DEBUG: HBAN 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,599 - DEBUG - DEBUG: HII 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,600 - DEBUG - DEBUG: IBM 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,601 - DEBUG - DEBUG: IEX 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,602 - DEBUG - DEBUG: IDXX 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,603 - DEBUG - DEBUG: ITW 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,603 - DEBUG - DEBUG: INCY 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,604 - DEBUG - DEBUG: IR 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,605 - DEBUG - DEBUG: INTC 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,606 - DEBUG - DEBUG: IFF 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,607 - DEBUG - DEBUG: IPG 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,608 - DEBUG - DEBUG: INTU 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,609 - DEBUG - DEBUG: IVZ 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,610 - DEBUG - DEBUG: INVH 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,611 - DEBUG - DEBUG: IQV 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,612 - DEBUG - DEBUG: IRM 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,613 - DEBUG - DEBUG: JBHT 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,614 - DEBUG - DEBUG: J 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,615 - DEBUG - DEBUG: JNJ 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,615 - DEBUG - DEBUG: JCI 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,616 - DEBUG - DEBUG: K 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,617 - DEBUG - DEBUG: KVUE 'Close' is Series of shape (423,)
2025-01-09 02:13:26,618 - DEBUG - DEBUG: KDP 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,619 - DEBUG - DEBUG: KEY 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,620 - DEBUG - DEBUG: KEYS 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,620 - DEBUG - DEBUG: KMB 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,621 - DEBUG - DEBUG: KIM 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,622 - DEBUG - DEBUG: KMI 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,623 - DEBUG - DEBUG: KKR 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,624 - DEBUG - DEBUG: KLAC 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,625 - DEBUG - DEBUG: KHC 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,626 - DEBUG - DEBUG: KR 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,627 - DEBUG - DEBUG: LH 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,628 - DEBUG - DEBUG: LVS 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,629 - DEBUG - DEBUG: LDOS 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,630 - DEBUG - DEBUG: LEN 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,631 - DEBUG - DEBUG: LII 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,631 - DEBUG - DEBUG: LKQ 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,632 - DEBUG - DEBUG: L 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,633 - DEBUG - DEBUG: LOW 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,634 - DEBUG - DEBUG: LULU 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,635 - DEBUG - DEBUG: LYB 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,636 - DEBUG - DEBUG: MTB 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,637 - DEBUG - DEBUG: MKTX 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,638 - DEBUG - DEBUG: MAR 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,639 - DEBUG - DEBUG: MLM 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,640 - DEBUG - DEBUG: MA 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,641 - DEBUG - DEBUG: MTCH 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,642 - DEBUG - DEBUG: MKC 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,643 - DEBUG - DEBUG: MCD 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,644 - DEBUG - DEBUG: MCK 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,645 - DEBUG - DEBUG: MRK 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,646 - DEBUG - DEBUG: MTD 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,647 - DEBUG - DEBUG: MGM 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,648 - DEBUG - DEBUG: MCHP 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,649 - DEBUG - DEBUG: MU 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,650 - DEBUG - DEBUG: MSFT 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,651 - DEBUG - DEBUG: MAA 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,652 - DEBUG - DEBUG: MRNA 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,653 - DEBUG - DEBUG: MHK 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,654 - DEBUG - DEBUG: MOH 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,655 - DEBUG - DEBUG: TAP 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,656 - DEBUG - DEBUG: MDLZ 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,657 - DEBUG - DEBUG: MS 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,658 - DEBUG - DEBUG: MOS 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,659 - DEBUG - DEBUG: MSI 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,660 - DEBUG - DEBUG: MSCI 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,661 - DEBUG - DEBUG: NDAQ 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,662 - DEBUG - DEBUG: NTAP 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,662 - DEBUG - DEBUG: NWSA 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,663 - DEBUG - DEBUG: NEE 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,664 - DEBUG - DEBUG: NKE 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,665 - DEBUG - DEBUG: NDSN 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,666 - DEBUG - DEBUG: NSC 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,667 - DEBUG - DEBUG: NOC 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,668 - DEBUG - DEBUG: NCLH 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,668 - DEBUG - DEBUG: ORLY 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,669 - DEBUG - DEBUG: OXY 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,670 - DEBUG - DEBUG: ODFL 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,671 - DEBUG - DEBUG: OMC 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,672 - DEBUG - DEBUG: ON 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,673 - DEBUG - DEBUG: OKE 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,673 - DEBUG - DEBUG: OTIS 'Close' is Series of shape (1210,)
2025-01-09 02:13:26,674 - DEBUG - DEBUG: PKG 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,675 - DEBUG - DEBUG: PLTR 'Close' is Series of shape (1075,)
2025-01-09 02:13:26,676 - DEBUG - DEBUG: PANW 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,677 - DEBUG - DEBUG: PARA 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,678 - DEBUG - DEBUG: PAYX 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,678 - DEBUG - DEBUG: PYPL 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,679 - DEBUG - DEBUG: PFE 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,680 - DEBUG - DEBUG: PM 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,681 - DEBUG - DEBUG: PSX 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,682 - DEBUG - DEBUG: POOL 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,683 - DEBUG - DEBUG: PPG 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,683 - DEBUG - DEBUG: PGR 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,684 - DEBUG - DEBUG: PRU 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,685 - DEBUG - DEBUG: PTC 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,686 - DEBUG - DEBUG: DGX 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,687 - DEBUG - DEBUG: RL 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,688 - DEBUG - DEBUG: RJF 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,689 - DEBUG - DEBUG: RTX 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,690 - DEBUG - DEBUG: REGN 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,690 - DEBUG - DEBUG: RF 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,691 - DEBUG - DEBUG: RMD 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,692 - DEBUG - DEBUG: ROL 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,693 - DEBUG - DEBUG: ROP 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,694 - DEBUG - DEBUG: SBAC 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,695 - DEBUG - DEBUG: SLB 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,695 - DEBUG - DEBUG: STX 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,696 - DEBUG - DEBUG: SRE 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,697 - DEBUG - DEBUG: NOW 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,698 - DEBUG - DEBUG: SHW 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,699 - DEBUG - DEBUG: SPG 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,700 - DEBUG - DEBUG: SWKS 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,700 - DEBUG - DEBUG: SOLV 'Close' is Series of shape (196,)
2025-01-09 02:13:26,701 - DEBUG - DEBUG: SO 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,703 - DEBUG - DEBUG: LUV 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,704 - DEBUG - DEBUG: SWK 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,705 - DEBUG - DEBUG: STT 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,706 - DEBUG - DEBUG: SYF 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,707 - DEBUG - DEBUG: SNPS 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,708 - DEBUG - DEBUG: SYY 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,708 - DEBUG - DEBUG: TMUS 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,709 - DEBUG - DEBUG: TTWO 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,710 - DEBUG - DEBUG: TRGP 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,711 - DEBUG - DEBUG: TEL 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,712 - DEBUG - DEBUG: TDY 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,712 - DEBUG - DEBUG: TER 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,713 - DEBUG - DEBUG: TSLA 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,714 - DEBUG - DEBUG: TXN 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,715 - DEBUG - DEBUG: TPL 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,716 - DEBUG - DEBUG: TJX 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,717 - DEBUG - DEBUG: TSCO 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,718 - DEBUG - DEBUG: TT 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,718 - DEBUG - DEBUG: TRV 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,719 - DEBUG - DEBUG: TRMB 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,720 - DEBUG - DEBUG: TFC 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,721 - DEBUG - DEBUG: TYL 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,722 - DEBUG - DEBUG: TSN 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,723 - DEBUG - DEBUG: USB 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,723 - DEBUG - DEBUG: UBER 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,724 - DEBUG - DEBUG: UDR 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,725 - DEBUG - DEBUG: ULTA 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,726 - DEBUG - DEBUG: UNP 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,727 - DEBUG - DEBUG: URI 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,728 - DEBUG - DEBUG: UHS 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,728 - DEBUG - DEBUG: VTR 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,729 - DEBUG - DEBUG: VLTO 'Close' is Series of shape (318,)
2025-01-09 02:13:26,730 - DEBUG - DEBUG: VRSN 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,731 - DEBUG - DEBUG: VRSK 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,732 - DEBUG - DEBUG: VZ 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,733 - DEBUG - DEBUG: VRTX 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,733 - DEBUG - DEBUG: VTRS 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,734 - DEBUG - DEBUG: V 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,735 - DEBUG - DEBUG: VST 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,736 - DEBUG - DEBUG: VMC 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,737 - DEBUG - DEBUG: WBD 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,738 - DEBUG - DEBUG: WM 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,739 - DEBUG - DEBUG: WAT 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,739 - DEBUG - DEBUG: WEC 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,740 - DEBUG - DEBUG: WFC 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,741 - DEBUG - DEBUG: WST 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,742 - DEBUG - DEBUG: WY 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,743 - DEBUG - DEBUG: WMB 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,744 - DEBUG - DEBUG: XEL 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,745 - DEBUG - DEBUG: XYL 'Close' is Series of shape (1263,)
2025-01-09 02:13:26,745 - DEBUG - DEBUG: YUM 'Close' is Series of shape (1263,)
2025-01-09 02:13:34,301 - INFO - No new data was fetched. Creating missing plots (if any) then exiting.
2025-01-09 02:13:34,302 - INFO - Creating missing plot for phase: Bullish
2025-01-09 02:13:34,304 - DEBUG - Loaded backend Agg version v2.2.
2025-01-09 02:13:34,306 - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-01-09 02:13:34,306 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,306 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-01-09 02:13:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-01-09 02:13:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-01-09 02:13:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-01-09 02:13:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamCLM-Book.ttf', name='Miriam CLM', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:13:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:13:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:13:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2025-01-09 02:13:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:13:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msuighur.ttf', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuehlCLM-BoldOblique.ttf', name='Frank Ruehl CLM', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:13:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-LightIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:13:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawb.ttf', name='Glasgow', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-It.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 0.5349999999999999
2025-01-09 02:13:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:13:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:13:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Medium.ttf', name='Source Code Pro', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NachlieliCLM-Bold.otf', name='Nachlieli CLM', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:13:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Scheherazade-Bold.ttf', name='Scheherazade', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidLibre-Regular.ttf', name='David Libre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RBI_G.ttf', name='Linux Libertine G', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifLao-Bold.ttf', name='Noto Serif Lao', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trado.ttf', name='Traditional Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2025-01-09 02:13:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawli.ttf', name='Glasgow', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:13:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-09 02:13:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamMonoCLM-Bold.ttf', name='Miriam Mono CLM', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-It.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamLibre-Regular.otf', name='Miriam Libre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Regular.ttf', name='Source Code Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasB.ttf', name='Gentium Basic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-01-09 02:13:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:13:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamMonoCLM-BoldOblique.ttf', name='Miriam Mono CLM', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuhlHofshi-Bold.otf', name='Frank Ruhl Hofshi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 0.25
2025-01-09 02:13:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tradbdo.ttf', name='Traditional Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:13:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:13:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2025-01-09 02:13:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RB_G.ttf', name='Linux Libertine G', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-BlackIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:13:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawl.ttf', name='Glasgow', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansGeorgian-Bold.ttf', name='Noto Sans Georgian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinBiolinum_R_G.ttf', name='Linux Biolinum G', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\toleb.ttf', name='Toledo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-01-09 02:13:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:13:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Regular.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2025-01-09 02:13:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Semibold.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:13:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:13:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-01-09 02:13:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Amiri-Regular.ttf', name='Amiri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 1.25
2025-01-09 02:13:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:13:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-ExtraLightIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=200, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:13:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:13:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansLao-Regular.ttf', name='Noto Sans Lao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Alef-Bold.ttf', name='Alef', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansHebrew-Regular.ttf', name='Noto Sans Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:13:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:13:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tolel.ttf', name='Toledo', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\toleli.ttf', name='Toledo', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:13:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RZ_G.ttf', name='Linux Libertine G', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:13:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoNaskhArabic-Bold.ttf', name='Noto Naskh Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpbdo.ttf', name='Simplified Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Amiri-BoldSlanted.ttf', name='Amiri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasBI.ttf', name='Gentium Basic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:13:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:13:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-01-09 02:13:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-BoldIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpfxo.ttf', name='Simplified Arabic Fixed', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Microsoft\\Windows\\Fonts\\OpenDyslexic3-Regular.ttf', name='OpenDyslexic3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamCLM-Bold.ttf', name='Miriam CLM', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Condensed.ttf', name='Noto Sans', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:13:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RI_G.ttf', name='Linux Libertine G', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-ExtraLightIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=200, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:13:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Light.ttf', name='Noto Serif', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-01-09 02:13:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Light.ttf', name='Noto Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasR.ttf', name='Gentium Book Basic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-Italic.ttf', name='Caladea', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:13:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinBiolinum_RI_G.ttf', name='Linux Biolinum G', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Regular.ttf', name='Noto Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-CondensedBoldItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-09 02:13:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Bold.ttf', name='Noto Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-01-09 02:13:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tolebi.ttf', name='Toledo', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasI.ttf', name='Gentium Book Basic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-Regular.ttf', name='Carlito', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Black.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:13:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:13:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-LightItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:13:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-01-09 02:13:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasB.ttf', name='Gentium Book Basic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansGeorgian-Regular.ttf', name='Noto Sans Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Regular.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifGeorgian-Bold.ttf', name='Noto Serif Georgian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_R_G.ttf', name='Linux Libertine G', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seagi.ttf', name='Seagull', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-09 02:13:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tolehi.ttf', name='Toledo', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:13:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 1.535
2025-01-09 02:13:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawh.ttf', name='Glasgow', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:13:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawhi.ttf', name='Glasgow', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:13:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seag.ttf', name='Seagull', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arabtype.ttf', name='Arabic Typesetting', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:13:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:13:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoNaskhArabicUI-Bold.ttf', name='Noto Naskh Arabic UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:13:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Semibold.ttf', name='Source Code Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:13:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-CondensedItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-09 02:13:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:13:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NachlieliCLM-Light.otf', name='Nachlieli CLM', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micrbi.ttf', name='MicroSquare', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-CondensedBold.ttf', name='Noto Sans', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:13:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Bold.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-Bold.ttf', name='Caladea', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UrdType.ttf', name='Urdu Typesetting', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-ExtraLight.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 0.24
2025-01-09 02:13:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RZI_G.ttf', name='Linux Libertine G', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:13:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoKufiArabic-Bold.ttf', name='Noto Kufi Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawbi.ttf', name='Glasgow', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidCLM-MediumItalic.ttf', name='David CLM', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:13:34,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-01-09 02:13:34,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tole.ttf', name='Toledo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Bold.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifArmenian-Regular.ttf', name='Noto Serif Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-01-09 02:13:34,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:13:34,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifHebrew-Regular.ttf', name='Noto Serif Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-MediumIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:13:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamLibre-Bold.otf', name='Miriam Libre', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-01-09 02:13:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AmiriQuran.ttf', name='Amiri Quran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArabic-Regular.ttf', name='Noto Sans Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasI.ttf', name='Gentium Basic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Black.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:13:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-BoldIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaI.ttc', name='Sitka Small', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-01-09 02:13:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidCLM-BoldItalic.ttf', name='David CLM', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidCLM-Bold.ttf', name='David CLM', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:13:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\andlso.ttf', name='Andalus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArabicUI-Regular.ttf', name='Noto Sans Arabic UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Light.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-Italic.ttf', name='Carlito', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-BoldItalic.ttf', name='Caladea', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-It.ttf', name='Source Code Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ReemKufi-Regular.ttf', name='Reem Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:13:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UrdTypeb.ttf', name='Urdu Typesetting', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-BoldItalic.ttf', name='Carlito', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-BoldItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msuighub.ttf', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Amiri-Bold.ttf', name='Amiri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NachlieliCLM-BoldOblique.otf', name='Nachlieli CLM', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:13:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuhlHofshi-Regular.otf', name='Frank Ruhl Hofshi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaZ.ttc', name='Sitka Small', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-01-09 02:13:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-ExtraLightIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=200, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:13:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidLibre-Bold.ttf', name='David Libre', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-SemiboldIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:13:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROGFonts-Regular.otf', name='ROG Fonts', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:13:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaB.ttc', name='Sitka Small', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifLao-Regular.ttf', name='Noto Serif Lao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Bold.ttf', name='Noto Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Condensed.ttf', name='Noto Serif', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:13:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Bold.ttf', name='Source Code Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-01-09 02:13:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoKufiArabic-Regular.ttf', name='Noto Kufi Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifArmenian-Bold.ttf', name='Noto Serif Armenian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\aldhabi.ttf', name='Aldhabi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Rubik-Bold.ttf', name='Rubik', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArmenian-Regular.ttf', name='Noto Sans Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-ExtraLight.ttf', name='Source Code Pro', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:13:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArabic-Bold.ttf', name='Noto Sans Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-01-09 02:13:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-LightItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:13:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Regular.ttf', name='Noto Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-01-09 02:13:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\toleh.ttf', name='Toledo', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:13:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-ExtraLight.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:13:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micr.ttf', name='MicroSquare', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Black.ttf', name='Source Code Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:13:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Alef-Regular.ttf', name='Alef', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasBI.ttf', name='Gentium Book Basic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-01-09 02:13:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoNaskhArabicUI-Regular.ttf', name='Noto Naskh Arabic UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansLao-Bold.ttf', name='Noto Sans Lao', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-09 02:13:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:13:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArmenian-Bold.ttf', name='Noto Sans Armenian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-01-09 02:13:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-01-09 02:13:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-01-09 02:13:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Amiri-Slanted.ttf', name='Amiri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinBiolinum_RB_G.ttf', name='Linux Biolinum G', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-09 02:13:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_DR_G.ttf', name='Linux Libertine Display G', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-CondensedItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-09 02:13:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-CondensedBold.ttf', name='Noto Serif', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:13:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuehlCLM-MediumOblique.ttf', name='Frank Ruehl CLM', style='oblique', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:13:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansHebrew-Bold.ttf', name='Noto Sans Hebrew', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seagb.ttf', name='Seagull', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-BlackIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:13:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:13:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\EmojiOneColor-SVGinOT.ttf', name='EmojiOne Color', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:13:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-LightIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:13:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-CondensedBoldItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-09 02:13:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-01-09 02:13:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpo.ttf', name='Simplified Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-Regular.ttf', name='Caladea', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamMonoCLM-Book.ttf', name='Miriam Mono CLM', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Rubik-BoldItalic.ttf', name='Rubik', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArabicUI-Bold.ttf', name='Noto Sans Arabic UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-SemiboldIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:13:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\majallab.ttf', name='Sakkal Majalla', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Italic.ttf', name='Noto Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seagbi.ttf', name='Seagull', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Light.ttf', name='Source Code Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:13:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasR.ttf', name='Gentium Basic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-01-09 02:13:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoNaskhArabic-Regular.ttf', name='Noto Naskh Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Semibold.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:13:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-Bold.ttf', name='Carlito', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\majalla.ttf', name='Sakkal Majalla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:13:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micri.ttf', name='MicroSquare', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifHebrew-Bold.ttf', name='Noto Serif Hebrew', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-BoldItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamMonoCLM-BookOblique.ttf', name='Miriam Mono CLM', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NachlieliCLM-LightOblique.otf', name='Nachlieli CLM', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:13:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-BlackIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:13:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:13:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Light.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-09 02:13:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:13:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuehlCLM-Bold.ttf', name='Frank Ruehl CLM', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:13:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:13:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Sitka.ttc', name='Sitka Small', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawi.ttf', name='Glasgow', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidCLM-Medium.ttf', name='David CLM', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-BoldIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-09 02:13:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-LightIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:13:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifGeorgian-Regular.ttf', name='Noto Serif Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micrb.ttf', name='MicroSquare', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-SemiboldIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:13:34,337 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,337 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,337 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Rubik-Regular.ttf', name='Rubik', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,337 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,337 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Rubik-Italic.ttf', name='Rubik', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,337 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-01-09 02:13:34,337 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,337 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Scheherazade-Regular.ttf', name='Scheherazade', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,337 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuehlCLM-Medium.ttf', name='Frank Ruehl CLM', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,337 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,337 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tolei.ttf', name='Toledo', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,337 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glaw.ttf', name='Glasgow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,337 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:13:34,337 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-ExtraLight.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:13:34,337 - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-01-09 02:13:34,361 - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2025-01-09 02:13:34,361 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,361 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-01-09 02:13:34,361 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,361 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,361 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,361 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,361 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,361 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-01-09 02:13:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-01-09 02:13:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-01-09 02:13:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamCLM-Book.ttf', name='Miriam CLM', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:13:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:13:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:13:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2025-01-09 02:13:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:13:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msuighur.ttf', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuehlCLM-BoldOblique.ttf', name='Frank Ruehl CLM', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:13:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-LightIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:13:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawb.ttf', name='Glasgow', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-It.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 0.5349999999999999
2025-01-09 02:13:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:13:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:13:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Medium.ttf', name='Source Code Pro', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NachlieliCLM-Bold.otf', name='Nachlieli CLM', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:13:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Scheherazade-Bold.ttf', name='Scheherazade', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidLibre-Regular.ttf', name='David Libre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RBI_G.ttf', name='Linux Libertine G', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifLao-Bold.ttf', name='Noto Serif Lao', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trado.ttf', name='Traditional Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2025-01-09 02:13:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawli.ttf', name='Glasgow', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:13:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-09 02:13:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamMonoCLM-Bold.ttf', name='Miriam Mono CLM', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-It.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamLibre-Regular.otf', name='Miriam Libre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Regular.ttf', name='Source Code Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasB.ttf', name='Gentium Basic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-01-09 02:13:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:13:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamMonoCLM-BoldOblique.ttf', name='Miriam Mono CLM', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuhlHofshi-Bold.otf', name='Frank Ruhl Hofshi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 0.25
2025-01-09 02:13:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tradbdo.ttf', name='Traditional Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:13:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:13:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2025-01-09 02:13:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RB_G.ttf', name='Linux Libertine G', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,368 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-BlackIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:13:34,368 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawl.ttf', name='Glasgow', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,368 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,368 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,368 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,368 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,368 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,368 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansGeorgian-Bold.ttf', name='Noto Sans Georgian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,368 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinBiolinum_R_G.ttf', name='Linux Biolinum G', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,368 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\toleb.ttf', name='Toledo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,368 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,368 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-01-09 02:13:34,368 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:13:34,368 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Regular.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,368 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,368 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2025-01-09 02:13:34,368 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Semibold.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:13:34,368 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:13:34,368 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-01-09 02:13:34,368 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Amiri-Regular.ttf', name='Amiri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,369 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 1.25
2025-01-09 02:13:34,369 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,369 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,369 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,369 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,369 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:13:34,369 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,369 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-ExtraLightIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=200, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:13:34,369 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:13:34,369 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,369 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,369 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansLao-Regular.ttf', name='Noto Sans Lao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,369 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Alef-Bold.ttf', name='Alef', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,369 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansHebrew-Regular.ttf', name='Noto Sans Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,369 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,369 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:13:34,369 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,369 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:13:34,369 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,369 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tolel.ttf', name='Toledo', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\toleli.ttf', name='Toledo', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:13:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RZ_G.ttf', name='Linux Libertine G', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:13:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoNaskhArabic-Bold.ttf', name='Noto Naskh Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpbdo.ttf', name='Simplified Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Amiri-BoldSlanted.ttf', name='Amiri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasBI.ttf', name='Gentium Basic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:13:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:13:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-01-09 02:13:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-BoldIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpfxo.ttf', name='Simplified Arabic Fixed', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Microsoft\\Windows\\Fonts\\OpenDyslexic3-Regular.ttf', name='OpenDyslexic3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamCLM-Bold.ttf', name='Miriam CLM', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Condensed.ttf', name='Noto Sans', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:13:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RI_G.ttf', name='Linux Libertine G', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-ExtraLightIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=200, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:13:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Light.ttf', name='Noto Serif', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-01-09 02:13:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Light.ttf', name='Noto Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasR.ttf', name='Gentium Book Basic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-Italic.ttf', name='Caladea', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:13:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinBiolinum_RI_G.ttf', name='Linux Biolinum G', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Regular.ttf', name='Noto Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-CondensedBoldItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-09 02:13:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Bold.ttf', name='Noto Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-01-09 02:13:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tolebi.ttf', name='Toledo', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasI.ttf', name='Gentium Book Basic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-Regular.ttf', name='Carlito', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Black.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:13:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:13:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-LightItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:13:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-01-09 02:13:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasB.ttf', name='Gentium Book Basic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansGeorgian-Regular.ttf', name='Noto Sans Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Regular.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifGeorgian-Bold.ttf', name='Noto Serif Georgian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_R_G.ttf', name='Linux Libertine G', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seagi.ttf', name='Seagull', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-09 02:13:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tolehi.ttf', name='Toledo', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:13:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 1.535
2025-01-09 02:13:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawh.ttf', name='Glasgow', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:13:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawhi.ttf', name='Glasgow', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:13:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seag.ttf', name='Seagull', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arabtype.ttf', name='Arabic Typesetting', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:13:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:13:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoNaskhArabicUI-Bold.ttf', name='Noto Naskh Arabic UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:13:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Semibold.ttf', name='Source Code Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:13:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-CondensedItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-09 02:13:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:13:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NachlieliCLM-Light.otf', name='Nachlieli CLM', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micrbi.ttf', name='MicroSquare', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-CondensedBold.ttf', name='Noto Sans', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:13:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Bold.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-Bold.ttf', name='Caladea', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UrdType.ttf', name='Urdu Typesetting', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-ExtraLight.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 0.24
2025-01-09 02:13:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RZI_G.ttf', name='Linux Libertine G', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:13:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoKufiArabic-Bold.ttf', name='Noto Kufi Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawbi.ttf', name='Glasgow', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidCLM-MediumItalic.ttf', name='David CLM', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:13:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-01-09 02:13:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tole.ttf', name='Toledo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Bold.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifArmenian-Regular.ttf', name='Noto Serif Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-01-09 02:13:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:13:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifHebrew-Regular.ttf', name='Noto Serif Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-MediumIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:13:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamLibre-Bold.otf', name='Miriam Libre', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-01-09 02:13:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AmiriQuran.ttf', name='Amiri Quran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArabic-Regular.ttf', name='Noto Sans Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasI.ttf', name='Gentium Basic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Black.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:13:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-BoldIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaI.ttc', name='Sitka Small', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-01-09 02:13:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidCLM-BoldItalic.ttf', name='David CLM', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidCLM-Bold.ttf', name='David CLM', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:13:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\andlso.ttf', name='Andalus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArabicUI-Regular.ttf', name='Noto Sans Arabic UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Light.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-Italic.ttf', name='Carlito', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-BoldItalic.ttf', name='Caladea', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-It.ttf', name='Source Code Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ReemKufi-Regular.ttf', name='Reem Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:13:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UrdTypeb.ttf', name='Urdu Typesetting', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-BoldItalic.ttf', name='Carlito', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-BoldItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msuighub.ttf', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Amiri-Bold.ttf', name='Amiri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NachlieliCLM-BoldOblique.otf', name='Nachlieli CLM', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:13:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuhlHofshi-Regular.otf', name='Frank Ruhl Hofshi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaZ.ttc', name='Sitka Small', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-01-09 02:13:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-ExtraLightIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=200, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:13:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidLibre-Bold.ttf', name='David Libre', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-SemiboldIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:13:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROGFonts-Regular.otf', name='ROG Fonts', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:13:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaB.ttc', name='Sitka Small', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifLao-Regular.ttf', name='Noto Serif Lao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Bold.ttf', name='Noto Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Condensed.ttf', name='Noto Serif', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:13:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Bold.ttf', name='Source Code Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-01-09 02:13:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoKufiArabic-Regular.ttf', name='Noto Kufi Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifArmenian-Bold.ttf', name='Noto Serif Armenian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\aldhabi.ttf', name='Aldhabi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Rubik-Bold.ttf', name='Rubik', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArmenian-Regular.ttf', name='Noto Sans Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-ExtraLight.ttf', name='Source Code Pro', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:13:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArabic-Bold.ttf', name='Noto Sans Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-01-09 02:13:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-LightItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:13:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Regular.ttf', name='Noto Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-01-09 02:13:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\toleh.ttf', name='Toledo', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:13:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-ExtraLight.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:13:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micr.ttf', name='MicroSquare', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Black.ttf', name='Source Code Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:13:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Alef-Regular.ttf', name='Alef', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasBI.ttf', name='Gentium Book Basic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-01-09 02:13:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoNaskhArabicUI-Regular.ttf', name='Noto Naskh Arabic UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansLao-Bold.ttf', name='Noto Sans Lao', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-09 02:13:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:13:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArmenian-Bold.ttf', name='Noto Sans Armenian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-01-09 02:13:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-01-09 02:13:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-01-09 02:13:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Amiri-Slanted.ttf', name='Amiri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinBiolinum_RB_G.ttf', name='Linux Biolinum G', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-09 02:13:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_DR_G.ttf', name='Linux Libertine Display G', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-CondensedItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-09 02:13:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-CondensedBold.ttf', name='Noto Serif', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:13:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuehlCLM-MediumOblique.ttf', name='Frank Ruehl CLM', style='oblique', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:13:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansHebrew-Bold.ttf', name='Noto Sans Hebrew', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seagb.ttf', name='Seagull', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-BlackIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:13:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:13:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\EmojiOneColor-SVGinOT.ttf', name='EmojiOne Color', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:13:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-LightIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:13:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-CondensedBoldItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-09 02:13:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-01-09 02:13:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpo.ttf', name='Simplified Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-Regular.ttf', name='Caladea', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamMonoCLM-Book.ttf', name='Miriam Mono CLM', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Rubik-BoldItalic.ttf', name='Rubik', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArabicUI-Bold.ttf', name='Noto Sans Arabic UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-SemiboldIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:13:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\majallab.ttf', name='Sakkal Majalla', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Italic.ttf', name='Noto Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seagbi.ttf', name='Seagull', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Light.ttf', name='Source Code Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:13:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasR.ttf', name='Gentium Basic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-01-09 02:13:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoNaskhArabic-Regular.ttf', name='Noto Naskh Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Semibold.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:13:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-Bold.ttf', name='Carlito', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\majalla.ttf', name='Sakkal Majalla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:13:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micri.ttf', name='MicroSquare', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifHebrew-Bold.ttf', name='Noto Serif Hebrew', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-BoldItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamMonoCLM-BookOblique.ttf', name='Miriam Mono CLM', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NachlieliCLM-LightOblique.otf', name='Nachlieli CLM', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:13:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-BlackIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:13:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:13:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Light.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-09 02:13:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:13:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuehlCLM-Bold.ttf', name='Frank Ruehl CLM', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,391 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:13:34,391 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:13:34,391 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Sitka.ttc', name='Sitka Small', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,391 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawi.ttf', name='Glasgow', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,391 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidCLM-Medium.ttf', name='David CLM', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,391 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,391 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,391 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,391 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,391 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-BoldIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,391 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,391 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,391 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-09 02:13:34,391 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,391 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,391 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-LightIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:13:34,391 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifGeorgian-Regular.ttf', name='Noto Serif Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,391 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,391 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,391 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,392 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micrb.ttf', name='MicroSquare', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,392 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,392 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-SemiboldIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:13:34,392 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,392 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:13:34,392 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Rubik-Regular.ttf', name='Rubik', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,392 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,392 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Rubik-Italic.ttf', name='Rubik', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,392 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-01-09 02:13:34,392 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,392 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Scheherazade-Regular.ttf', name='Scheherazade', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,392 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuehlCLM-Medium.ttf', name='Frank Ruehl CLM', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:13:34,392 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:13:34,392 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tolei.ttf', name='Toledo', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:13:34,392 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glaw.ttf', name='Glasgow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:13:34,392 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:13:34,392 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-ExtraLight.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:13:34,392 - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-01-09 02:13:34,501 - INFO - Saved plot for phase: Bullish at results\phase_bullish.png
2025-01-09 02:13:34,501 - INFO - Missing plots created. Exiting.
2025-01-09 02:17:16,116 - DEBUG - Starting new HTTPS connection (1): en.wikipedia.org:443
2025-01-09 02:17:16,525 - DEBUG - https://en.wikipedia.org:443 "GET /wiki/List_of_S%26P_500_companies HTTP/1.1" 200 100530
2025-01-09 02:17:17,510 - INFO - Checking for missing data in DB, may fetch from Yahoo Finance...
2025-01-09 02:17:17,647 - DEBUG - Entering download()
2025-01-09 02:17:17,647 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:17,647 - DEBUG -  Entering history()
2025-01-09 02:17:17,650 - DEBUG - ('CREATE TABLE IF NOT EXISTS "_kv" ("key" VARCHAR(255) NOT NULL PRIMARY KEY, "value" VARCHAR(255)) WITHOUT ROWID', [])
2025-01-09 02:17:17,651 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MMM', 1, 0])
2025-01-09 02:17:19,047 - DEBUG -   Entering history()
2025-01-09 02:17:19,155 - DEBUG - MMM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:19,155 - DEBUG -    Entering get()
2025-01-09 02:17:19,155 - DEBUG -     Entering _make_request()
2025-01-09 02:17:19,155 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MMM
2025-01-09 02:17:19,156 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:19,195 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:19,197 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:19,198 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:19,200 - DEBUG - ('CREATE TABLE IF NOT EXISTS "_cookieschema" ("strategy" VARCHAR(255) NOT NULL PRIMARY KEY, "fetch_date" DATETIME NOT NULL, "cookie_bytes" BLOB NOT NULL) WITHOUT ROWID', [])
2025-01-09 02:17:19,201 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['basic', 1, 0])
2025-01-09 02:17:19,201 - DEBUG - loaded persistent cookie
2025-01-09 02:17:19,201 - DEBUG - reusing cookie
2025-01-09 02:17:19,205 - DEBUG - Starting new HTTPS connection (1): query1.finance.yahoo.com:443
2025-01-09 02:17:19,733 - DEBUG - https://query1.finance.yahoo.com:443 "GET /v1/test/getcrumb HTTP/1.1" 200 11
2025-01-09 02:17:19,744 - DEBUG - crumb = 'mbrlfmeSllh'
2025-01-09 02:17:19,751 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:19,751 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:19,756 - DEBUG - Starting new HTTPS connection (1): query2.finance.yahoo.com:443
2025-01-09 02:17:20,442 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MMM?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1188
2025-01-09 02:17:20,452 - DEBUG - response code=200
2025-01-09 02:17:20,455 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:20,455 - DEBUG -    Exiting get()
2025-01-09 02:17:20,460 - DEBUG - MMM: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:20,466 - DEBUG - MMM: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:20,472 - DEBUG - MMM: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:20,487 - DEBUG - MMM: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:20,487 - DEBUG -   Exiting history()
2025-01-09 02:17:20,487 - DEBUG -  Exiting history()
2025-01-09 02:17:20,492 - DEBUG - Exiting download()
2025-01-09 02:17:20,732 - ERROR - Error writing data for MMM to DB: schema "np" does not exist
LINE 4:             VALUES ('MMM','2020-01-01'::date,np.float64(121....
                                                     ^

2025-01-09 02:17:20,734 - DEBUG - Entering download()
2025-01-09 02:17:20,735 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:20,735 - DEBUG -  Entering history()
2025-01-09 02:17:20,735 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AOS', 1, 0])
2025-01-09 02:17:20,735 - DEBUG -   Entering history()
2025-01-09 02:17:20,736 - DEBUG - AOS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:20,736 - DEBUG -    Entering get()
2025-01-09 02:17:20,737 - DEBUG -     Entering _make_request()
2025-01-09 02:17:20,737 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AOS
2025-01-09 02:17:20,737 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:20,737 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:20,737 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:20,737 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:20,737 - DEBUG - reusing cookie
2025-01-09 02:17:20,737 - DEBUG - reusing crumb
2025-01-09 02:17:20,737 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:20,737 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:20,927 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AOS?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1202
2025-01-09 02:17:20,928 - DEBUG - response code=200
2025-01-09 02:17:20,928 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:20,928 - DEBUG -    Exiting get()
2025-01-09 02:17:20,931 - DEBUG - AOS: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:20,934 - DEBUG - AOS: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:20,984 - DEBUG - AOS: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:20,997 - DEBUG - AOS: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:20,997 - DEBUG -   Exiting history()
2025-01-09 02:17:20,997 - DEBUG -  Exiting history()
2025-01-09 02:17:21,001 - DEBUG - Exiting download()
2025-01-09 02:17:21,071 - DEBUG - Entering download()
2025-01-09 02:17:21,071 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:21,071 - DEBUG -  Entering history()
2025-01-09 02:17:21,072 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ABT', 1, 0])
2025-01-09 02:17:21,073 - DEBUG -   Entering history()
2025-01-09 02:17:21,074 - DEBUG - ABT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:21,074 - DEBUG -    Entering get()
2025-01-09 02:17:21,074 - DEBUG -     Entering _make_request()
2025-01-09 02:17:21,074 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ABT
2025-01-09 02:17:21,074 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:21,074 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:21,074 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:21,075 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:21,075 - DEBUG - reusing cookie
2025-01-09 02:17:21,075 - DEBUG - reusing crumb
2025-01-09 02:17:21,075 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:21,075 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:21,275 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ABT?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1197
2025-01-09 02:17:21,276 - DEBUG - response code=200
2025-01-09 02:17:21,276 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:21,276 - DEBUG -    Exiting get()
2025-01-09 02:17:21,278 - DEBUG - ABT: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:21,280 - DEBUG - ABT: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:21,286 - DEBUG - ABT: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:21,294 - DEBUG - ABT: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:21,295 - DEBUG -   Exiting history()
2025-01-09 02:17:21,295 - DEBUG -  Exiting history()
2025-01-09 02:17:21,305 - DEBUG - Exiting download()
2025-01-09 02:17:21,532 - ERROR - Error writing data for ABT to DB: schema "np" does not exist
LINE 4:             VALUES ('ABT','2020-01-01'::date,np.float64(78.8...
                                                     ^

2025-01-09 02:17:21,532 - DEBUG - Entering download()
2025-01-09 02:17:21,554 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:21,556 - DEBUG -  Entering history()
2025-01-09 02:17:21,565 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ABBV', 1, 0])
2025-01-09 02:17:21,578 - DEBUG -   Entering history()
2025-01-09 02:17:21,579 - DEBUG - ABBV: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:21,581 - DEBUG -    Entering get()
2025-01-09 02:17:21,582 - DEBUG -     Entering _make_request()
2025-01-09 02:17:21,582 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ABBV
2025-01-09 02:17:21,582 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:21,582 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:21,583 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:21,583 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:21,583 - DEBUG - reusing cookie
2025-01-09 02:17:21,583 - DEBUG - reusing crumb
2025-01-09 02:17:21,583 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:21,583 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:21,778 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ABBV?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1181
2025-01-09 02:17:21,780 - DEBUG - response code=200
2025-01-09 02:17:21,781 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:21,781 - DEBUG -    Exiting get()
2025-01-09 02:17:21,783 - DEBUG - ABBV: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:21,784 - DEBUG - ABBV: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:21,790 - DEBUG - ABBV: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:21,796 - DEBUG - ABBV: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:21,796 - DEBUG -   Exiting history()
2025-01-09 02:17:21,796 - DEBUG -  Exiting history()
2025-01-09 02:17:21,798 - DEBUG - Exiting download()
2025-01-09 02:17:21,888 - DEBUG - Entering download()
2025-01-09 02:17:21,892 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:21,893 - DEBUG -  Entering history()
2025-01-09 02:17:21,893 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ACN', 1, 0])
2025-01-09 02:17:21,893 - DEBUG -   Entering history()
2025-01-09 02:17:21,894 - DEBUG - ACN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:21,895 - DEBUG -    Entering get()
2025-01-09 02:17:21,895 - DEBUG -     Entering _make_request()
2025-01-09 02:17:21,895 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ACN
2025-01-09 02:17:21,895 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:21,895 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:21,895 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:21,895 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:21,895 - DEBUG - reusing cookie
2025-01-09 02:17:21,895 - DEBUG - reusing crumb
2025-01-09 02:17:21,895 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:21,896 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:22,116 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ACN?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1193
2025-01-09 02:17:22,116 - DEBUG - response code=200
2025-01-09 02:17:22,117 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:22,117 - DEBUG -    Exiting get()
2025-01-09 02:17:22,118 - DEBUG - ACN: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:22,120 - DEBUG - ACN: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:22,126 - DEBUG - ACN: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:22,135 - DEBUG - ACN: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:22,135 - DEBUG -   Exiting history()
2025-01-09 02:17:22,136 - DEBUG -  Exiting history()
2025-01-09 02:17:22,139 - DEBUG - Exiting download()
2025-01-09 02:17:22,223 - DEBUG - Entering download()
2025-01-09 02:17:22,226 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:22,228 - DEBUG -  Entering history()
2025-01-09 02:17:22,228 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ADBE', 1, 0])
2025-01-09 02:17:22,231 - DEBUG -   Entering history()
2025-01-09 02:17:22,232 - DEBUG - ADBE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:22,233 - DEBUG -    Entering get()
2025-01-09 02:17:22,233 - DEBUG -     Entering _make_request()
2025-01-09 02:17:22,233 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ADBE
2025-01-09 02:17:22,233 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:22,234 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:22,234 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:22,234 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:22,234 - DEBUG - reusing cookie
2025-01-09 02:17:22,234 - DEBUG - reusing crumb
2025-01-09 02:17:22,234 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:22,234 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:22,413 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ADBE?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1176
2025-01-09 02:17:22,419 - DEBUG - response code=200
2025-01-09 02:17:22,419 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:22,419 - DEBUG -    Exiting get()
2025-01-09 02:17:22,421 - DEBUG - ADBE: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:22,422 - DEBUG - ADBE: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:22,428 - DEBUG - ADBE: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:22,437 - DEBUG - ADBE: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:22,437 - DEBUG -   Exiting history()
2025-01-09 02:17:22,437 - DEBUG -  Exiting history()
2025-01-09 02:17:22,441 - DEBUG - Exiting download()
2025-01-09 02:17:22,603 - ERROR - Error writing data for ADBE to DB: schema "np" does not exist
LINE 4:             VALUES ('ADBE','2020-01-01'::date,np.float64(330...
                                                      ^

2025-01-09 02:17:22,623 - DEBUG - Entering download()
2025-01-09 02:17:22,640 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:22,640 - DEBUG -  Entering history()
2025-01-09 02:17:22,643 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AMD', 1, 0])
2025-01-09 02:17:22,644 - DEBUG -   Entering history()
2025-01-09 02:17:22,645 - DEBUG - AMD: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:22,645 - DEBUG -    Entering get()
2025-01-09 02:17:22,646 - DEBUG -     Entering _make_request()
2025-01-09 02:17:22,646 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AMD
2025-01-09 02:17:22,646 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:22,646 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:22,646 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:22,646 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:22,647 - DEBUG - reusing cookie
2025-01-09 02:17:22,647 - DEBUG - reusing crumb
2025-01-09 02:17:22,647 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:22,647 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:22,825 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AMD?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1210
2025-01-09 02:17:22,839 - DEBUG - response code=200
2025-01-09 02:17:22,845 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:22,845 - DEBUG -    Exiting get()
2025-01-09 02:17:22,854 - DEBUG - AMD: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:22,855 - DEBUG - AMD: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:22,860 - DEBUG - AMD: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:22,871 - DEBUG - AMD: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:22,871 - DEBUG -   Exiting history()
2025-01-09 02:17:22,871 - DEBUG -  Exiting history()
2025-01-09 02:17:22,874 - DEBUG - Exiting download()
2025-01-09 02:17:22,967 - DEBUG - Entering download()
2025-01-09 02:17:22,968 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:22,968 - DEBUG -  Entering history()
2025-01-09 02:17:22,969 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AES', 1, 0])
2025-01-09 02:17:22,969 - DEBUG -   Entering history()
2025-01-09 02:17:22,970 - DEBUG - AES: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:22,970 - DEBUG -    Entering get()
2025-01-09 02:17:22,970 - DEBUG -     Entering _make_request()
2025-01-09 02:17:22,970 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AES
2025-01-09 02:17:22,970 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:22,971 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:22,971 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:22,971 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:22,971 - DEBUG - reusing cookie
2025-01-09 02:17:22,971 - DEBUG - reusing crumb
2025-01-09 02:17:22,971 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:22,971 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:23,194 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AES?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1195
2025-01-09 02:17:23,195 - DEBUG - response code=200
2025-01-09 02:17:23,195 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:23,195 - DEBUG -    Exiting get()
2025-01-09 02:17:23,196 - DEBUG - AES: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:23,197 - DEBUG - AES: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:23,201 - DEBUG - AES: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:23,210 - DEBUG - AES: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:23,210 - DEBUG -   Exiting history()
2025-01-09 02:17:23,211 - DEBUG -  Exiting history()
2025-01-09 02:17:23,213 - DEBUG - Exiting download()
2025-01-09 02:17:23,280 - DEBUG - Entering download()
2025-01-09 02:17:23,280 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:23,280 - DEBUG -  Entering history()
2025-01-09 02:17:23,281 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AFL', 1, 0])
2025-01-09 02:17:23,281 - DEBUG -   Entering history()
2025-01-09 02:17:23,282 - DEBUG - AFL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:23,282 - DEBUG -    Entering get()
2025-01-09 02:17:23,282 - DEBUG -     Entering _make_request()
2025-01-09 02:17:23,283 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AFL
2025-01-09 02:17:23,283 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:23,283 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:23,283 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:23,283 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:23,283 - DEBUG - reusing cookie
2025-01-09 02:17:23,283 - DEBUG - reusing crumb
2025-01-09 02:17:23,283 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:23,283 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:23,578 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AFL?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1197
2025-01-09 02:17:23,583 - DEBUG - response code=200
2025-01-09 02:17:23,584 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:23,587 - DEBUG -    Exiting get()
2025-01-09 02:17:23,588 - DEBUG - AFL: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:23,589 - DEBUG - AFL: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:23,595 - DEBUG - AFL: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:23,604 - DEBUG - AFL: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:23,605 - DEBUG -   Exiting history()
2025-01-09 02:17:23,605 - DEBUG -  Exiting history()
2025-01-09 02:17:23,608 - DEBUG - Exiting download()
2025-01-09 02:17:23,748 - ERROR - Error writing data for AFL to DB: schema "np" does not exist
LINE 4:             VALUES ('AFL','2020-01-01'::date,np.float64(46.9...
                                                     ^

2025-01-09 02:17:23,750 - DEBUG - Entering download()
2025-01-09 02:17:23,751 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:23,751 - DEBUG -  Entering history()
2025-01-09 02:17:23,761 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['A', 1, 0])
2025-01-09 02:17:23,779 - DEBUG -   Entering history()
2025-01-09 02:17:23,780 - DEBUG - A: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:23,782 - DEBUG -    Entering get()
2025-01-09 02:17:23,782 - DEBUG -     Entering _make_request()
2025-01-09 02:17:23,782 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/A
2025-01-09 02:17:23,782 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:23,782 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:23,782 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:23,783 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:23,783 - DEBUG - reusing cookie
2025-01-09 02:17:23,783 - DEBUG - reusing crumb
2025-01-09 02:17:23,783 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:23,783 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:24,005 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/A?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1207
2025-01-09 02:17:24,006 - DEBUG - response code=200
2025-01-09 02:17:24,006 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:24,006 - DEBUG -    Exiting get()
2025-01-09 02:17:24,007 - DEBUG - A: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:24,009 - DEBUG - A: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:24,017 - DEBUG - A: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:24,026 - DEBUG - A: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:24,026 - DEBUG -   Exiting history()
2025-01-09 02:17:24,027 - DEBUG -  Exiting history()
2025-01-09 02:17:24,031 - DEBUG - Exiting download()
2025-01-09 02:17:24,117 - DEBUG - Entering download()
2025-01-09 02:17:24,117 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:24,117 - DEBUG -  Entering history()
2025-01-09 02:17:24,117 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['APD', 1, 0])
2025-01-09 02:17:24,118 - DEBUG -   Entering history()
2025-01-09 02:17:24,119 - DEBUG - APD: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:24,120 - DEBUG -    Entering get()
2025-01-09 02:17:24,120 - DEBUG -     Entering _make_request()
2025-01-09 02:17:24,120 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/APD
2025-01-09 02:17:24,120 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:24,120 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:24,120 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:24,120 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:24,121 - DEBUG - reusing cookie
2025-01-09 02:17:24,121 - DEBUG - reusing crumb
2025-01-09 02:17:24,121 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:24,121 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:24,330 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/APD?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1214
2025-01-09 02:17:24,339 - DEBUG - response code=200
2025-01-09 02:17:24,341 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:24,341 - DEBUG -    Exiting get()
2025-01-09 02:17:24,344 - DEBUG - APD: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:24,345 - DEBUG - APD: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:24,351 - DEBUG - APD: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:24,363 - DEBUG - APD: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:24,363 - DEBUG -   Exiting history()
2025-01-09 02:17:24,364 - DEBUG -  Exiting history()
2025-01-09 02:17:24,367 - DEBUG - Exiting download()
2025-01-09 02:17:24,468 - DEBUG - Entering download()
2025-01-09 02:17:24,468 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:24,468 - DEBUG -  Entering history()
2025-01-09 02:17:24,469 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ABNB', 1, 0])
2025-01-09 02:17:24,469 - DEBUG -   Entering history()
2025-01-09 02:17:24,470 - DEBUG - ABNB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:24,470 - DEBUG -    Entering get()
2025-01-09 02:17:24,470 - DEBUG -     Entering _make_request()
2025-01-09 02:17:24,470 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ABNB
2025-01-09 02:17:24,470 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:24,489 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:24,496 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:24,496 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:24,496 - DEBUG - reusing cookie
2025-01-09 02:17:24,498 - DEBUG - reusing crumb
2025-01-09 02:17:24,499 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:24,499 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:24,659 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ABNB?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:17:24,660 - DEBUG - response code=400
2025-01-09 02:17:24,660 - DEBUG - toggling cookie strategy basic -> csrf
2025-01-09 02:17:24,660 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:24,660 - DEBUG - cookie_mode = 'csrf'
2025-01-09 02:17:24,660 - DEBUG -       Entering _get_crumb_csrf()
2025-01-09 02:17:24,660 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['csrf', 1, 0])
2025-01-09 02:17:24,662 - DEBUG - Starting new HTTPS connection (1): guce.yahoo.com:443
2025-01-09 02:17:25,246 - DEBUG - https://guce.yahoo.com:443 "GET /consent HTTP/1.1" 302 0
2025-01-09 02:17:25,249 - DEBUG - Starting new HTTPS connection (1): www.yahoo.com:443
2025-01-09 02:17:25,989 - DEBUG - https://www.yahoo.com:443 "GET /?guccounter=1 HTTP/1.1" 200 None
2025-01-09 02:17:26,519 - DEBUG - Failed to find "csrfToken" in response
2025-01-09 02:17:26,519 - DEBUG -       Exiting _get_crumb_csrf()
2025-01-09 02:17:26,519 - DEBUG - toggling cookie strategy csrf -> basic
2025-01-09 02:17:26,519 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:26,520 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['basic', 1, 0])
2025-01-09 02:17:26,520 - DEBUG - loaded persistent cookie
2025-01-09 02:17:26,520 - DEBUG - reusing cookie
2025-01-09 02:17:26,694 - DEBUG - https://query1.finance.yahoo.com:443 "GET /v1/test/getcrumb HTTP/1.1" 200 11
2025-01-09 02:17:26,725 - DEBUG - crumb = 'mbrlfmeSllh'
2025-01-09 02:17:26,727 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:26,727 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:26,872 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ABNB?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:17:26,873 - DEBUG - response code=400
2025-01-09 02:17:26,873 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:26,873 - DEBUG -    Exiting get()
2025-01-09 02:17:26,886 - ERROR - 
1 Failed download:
2025-01-09 02:17:26,886 - ERROR - ['ABNB']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1wk 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn\'t exist for startDate = 1577854800, endDate = 1577941200")')
2025-01-09 02:17:26,887 - DEBUG - ['ABNB']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1wk 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn't exist for startDate = 1577854800, endDate = 1577941200")

2025-01-09 02:17:26,895 - DEBUG - Exiting download()
2025-01-09 02:17:27,078 - ERROR - Error writing data for ABNB to DB: schema "np" does not exist
LINE 4:             VALUES ('ABNB','2020-12-10'::date,np.float64(146...
                                                      ^

2025-01-09 02:17:27,079 - DEBUG - Entering download()
2025-01-09 02:17:27,079 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:27,079 - DEBUG -  Entering history()
2025-01-09 02:17:27,079 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AKAM', 1, 0])
2025-01-09 02:17:27,079 - DEBUG -   Entering history()
2025-01-09 02:17:27,080 - DEBUG - AKAM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:27,080 - DEBUG -    Entering get()
2025-01-09 02:17:27,080 - DEBUG -     Entering _make_request()
2025-01-09 02:17:27,080 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AKAM
2025-01-09 02:17:27,080 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:27,080 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:27,080 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:27,080 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:27,081 - DEBUG - reusing cookie
2025-01-09 02:17:27,081 - DEBUG - reusing crumb
2025-01-09 02:17:27,081 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:27,081 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:27,231 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AKAM?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1209
2025-01-09 02:17:27,232 - DEBUG - response code=200
2025-01-09 02:17:27,232 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:27,232 - DEBUG -    Exiting get()
2025-01-09 02:17:27,236 - DEBUG - AKAM: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:27,239 - DEBUG - AKAM: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:27,247 - DEBUG - AKAM: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:27,257 - DEBUG - AKAM: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:27,257 - DEBUG -   Exiting history()
2025-01-09 02:17:27,257 - DEBUG -  Exiting history()
2025-01-09 02:17:27,260 - DEBUG - Exiting download()
2025-01-09 02:17:27,382 - ERROR - Error writing data for AKAM to DB: schema "np" does not exist
LINE 4:             VALUES ('AKAM','2020-01-01'::date,np.float64(86....
                                                      ^

2025-01-09 02:17:27,382 - DEBUG - Entering download()
2025-01-09 02:17:27,383 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:27,383 - DEBUG -  Entering history()
2025-01-09 02:17:27,383 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ALB', 1, 0])
2025-01-09 02:17:27,384 - DEBUG -   Entering history()
2025-01-09 02:17:27,385 - DEBUG - ALB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:27,385 - DEBUG -    Entering get()
2025-01-09 02:17:27,385 - DEBUG -     Entering _make_request()
2025-01-09 02:17:27,385 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ALB
2025-01-09 02:17:27,385 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:27,385 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:27,385 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:27,385 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:27,385 - DEBUG - reusing cookie
2025-01-09 02:17:27,385 - DEBUG - reusing crumb
2025-01-09 02:17:27,385 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:27,385 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:27,579 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ALB?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1186
2025-01-09 02:17:27,579 - DEBUG - response code=200
2025-01-09 02:17:27,580 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:27,580 - DEBUG -    Exiting get()
2025-01-09 02:17:27,582 - DEBUG - ALB: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:27,584 - DEBUG - ALB: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:27,592 - DEBUG - ALB: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:27,604 - DEBUG - ALB: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:27,604 - DEBUG -   Exiting history()
2025-01-09 02:17:27,604 - DEBUG -  Exiting history()
2025-01-09 02:17:27,608 - DEBUG - Exiting download()
2025-01-09 02:17:27,660 - DEBUG - Entering download()
2025-01-09 02:17:27,660 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:27,660 - DEBUG -  Entering history()
2025-01-09 02:17:27,660 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ARE', 1, 0])
2025-01-09 02:17:27,661 - DEBUG -   Entering history()
2025-01-09 02:17:27,661 - DEBUG - ARE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:27,661 - DEBUG -    Entering get()
2025-01-09 02:17:27,662 - DEBUG -     Entering _make_request()
2025-01-09 02:17:27,662 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ARE
2025-01-09 02:17:27,662 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:27,662 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:27,662 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:27,662 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:27,662 - DEBUG - reusing cookie
2025-01-09 02:17:27,662 - DEBUG - reusing crumb
2025-01-09 02:17:27,662 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:27,662 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:27,834 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ARE?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1228
2025-01-09 02:17:27,835 - DEBUG - response code=200
2025-01-09 02:17:27,836 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:27,836 - DEBUG -    Exiting get()
2025-01-09 02:17:27,840 - DEBUG - ARE: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:27,843 - DEBUG - ARE: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:27,854 - DEBUG - ARE: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:27,868 - DEBUG - ARE: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:27,868 - DEBUG -   Exiting history()
2025-01-09 02:17:27,868 - DEBUG -  Exiting history()
2025-01-09 02:17:27,872 - DEBUG - Exiting download()
2025-01-09 02:17:27,983 - ERROR - Error writing data for ARE to DB: schema "np" does not exist
LINE 4:             VALUES ('ARE','2020-01-01'::date,np.float64(136....
                                                     ^

2025-01-09 02:17:27,984 - DEBUG - Entering download()
2025-01-09 02:17:27,984 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:27,984 - DEBUG -  Entering history()
2025-01-09 02:17:27,984 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ALGN', 1, 0])
2025-01-09 02:17:27,984 - DEBUG -   Entering history()
2025-01-09 02:17:27,985 - DEBUG - ALGN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:27,985 - DEBUG -    Entering get()
2025-01-09 02:17:27,985 - DEBUG -     Entering _make_request()
2025-01-09 02:17:27,986 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ALGN
2025-01-09 02:17:27,986 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:27,986 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:27,986 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:27,986 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:27,986 - DEBUG - reusing cookie
2025-01-09 02:17:27,986 - DEBUG - reusing crumb
2025-01-09 02:17:27,986 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:27,986 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:28,153 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ALGN?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1210
2025-01-09 02:17:28,155 - DEBUG - response code=200
2025-01-09 02:17:28,155 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:28,155 - DEBUG -    Exiting get()
2025-01-09 02:17:28,159 - DEBUG - ALGN: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:28,161 - DEBUG - ALGN: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:28,173 - DEBUG - ALGN: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:28,186 - DEBUG - ALGN: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:28,187 - DEBUG -   Exiting history()
2025-01-09 02:17:28,187 - DEBUG -  Exiting history()
2025-01-09 02:17:28,191 - DEBUG - Exiting download()
2025-01-09 02:17:28,242 - DEBUG - Entering download()
2025-01-09 02:17:28,242 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:28,243 - DEBUG -  Entering history()
2025-01-09 02:17:28,243 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ALLE', 1, 0])
2025-01-09 02:17:28,243 - DEBUG -   Entering history()
2025-01-09 02:17:28,244 - DEBUG - ALLE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:28,244 - DEBUG -    Entering get()
2025-01-09 02:17:28,244 - DEBUG -     Entering _make_request()
2025-01-09 02:17:28,244 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ALLE
2025-01-09 02:17:28,244 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:28,244 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:28,244 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:28,244 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:28,244 - DEBUG - reusing cookie
2025-01-09 02:17:28,244 - DEBUG - reusing crumb
2025-01-09 02:17:28,245 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:28,245 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:28,437 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ALLE?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1189
2025-01-09 02:17:28,439 - DEBUG - response code=200
2025-01-09 02:17:28,439 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:28,439 - DEBUG -    Exiting get()
2025-01-09 02:17:28,443 - DEBUG - ALLE: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:28,446 - DEBUG - ALLE: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:28,453 - DEBUG - ALLE: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:28,462 - DEBUG - ALLE: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:28,463 - DEBUG -   Exiting history()
2025-01-09 02:17:28,463 - DEBUG -  Exiting history()
2025-01-09 02:17:28,466 - DEBUG - Exiting download()
2025-01-09 02:17:28,514 - DEBUG - Entering download()
2025-01-09 02:17:28,514 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:28,514 - DEBUG -  Entering history()
2025-01-09 02:17:28,515 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LNT', 1, 0])
2025-01-09 02:17:28,515 - DEBUG -   Entering history()
2025-01-09 02:17:28,515 - DEBUG - LNT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:28,516 - DEBUG -    Entering get()
2025-01-09 02:17:28,516 - DEBUG -     Entering _make_request()
2025-01-09 02:17:28,516 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LNT
2025-01-09 02:17:28,516 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:28,516 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:28,516 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:28,516 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:28,516 - DEBUG - reusing cookie
2025-01-09 02:17:28,516 - DEBUG - reusing crumb
2025-01-09 02:17:28,516 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:28,516 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:28,719 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LNT?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1210
2025-01-09 02:17:28,720 - DEBUG - response code=200
2025-01-09 02:17:28,721 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:28,721 - DEBUG -    Exiting get()
2025-01-09 02:17:28,725 - DEBUG - LNT: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:28,728 - DEBUG - LNT: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:28,743 - DEBUG - LNT: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:28,752 - DEBUG - LNT: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:28,752 - DEBUG -   Exiting history()
2025-01-09 02:17:28,752 - DEBUG -  Exiting history()
2025-01-09 02:17:28,754 - DEBUG - Exiting download()
2025-01-09 02:17:28,797 - DEBUG - Entering download()
2025-01-09 02:17:28,797 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:28,797 - DEBUG -  Entering history()
2025-01-09 02:17:28,797 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ALL', 1, 0])
2025-01-09 02:17:28,798 - DEBUG -   Entering history()
2025-01-09 02:17:28,798 - DEBUG - ALL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:28,798 - DEBUG -    Entering get()
2025-01-09 02:17:28,798 - DEBUG -     Entering _make_request()
2025-01-09 02:17:28,798 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ALL
2025-01-09 02:17:28,798 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:28,799 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:28,799 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:28,799 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:28,799 - DEBUG - reusing cookie
2025-01-09 02:17:28,799 - DEBUG - reusing crumb
2025-01-09 02:17:28,799 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:28,799 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:28,980 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ALL?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1200
2025-01-09 02:17:28,981 - DEBUG - response code=200
2025-01-09 02:17:28,981 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:28,981 - DEBUG -    Exiting get()
2025-01-09 02:17:28,982 - DEBUG - ALL: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:28,983 - DEBUG - ALL: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:28,987 - DEBUG - ALL: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:28,993 - DEBUG - ALL: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:28,993 - DEBUG -   Exiting history()
2025-01-09 02:17:28,993 - DEBUG -  Exiting history()
2025-01-09 02:17:28,996 - DEBUG - Exiting download()
2025-01-09 02:17:29,042 - DEBUG - Entering download()
2025-01-09 02:17:29,042 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:29,042 - DEBUG -  Entering history()
2025-01-09 02:17:29,042 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GOOGL', 1, 0])
2025-01-09 02:17:29,043 - DEBUG -   Entering history()
2025-01-09 02:17:29,043 - DEBUG - GOOGL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:29,043 - DEBUG -    Entering get()
2025-01-09 02:17:29,043 - DEBUG -     Entering _make_request()
2025-01-09 02:17:29,044 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GOOGL
2025-01-09 02:17:29,044 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:29,044 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:29,044 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:29,044 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:29,044 - DEBUG - reusing cookie
2025-01-09 02:17:29,044 - DEBUG - reusing crumb
2025-01-09 02:17:29,044 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:29,044 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:29,209 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GOOGL?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1196
2025-01-09 02:17:29,210 - DEBUG - response code=200
2025-01-09 02:17:29,211 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:29,211 - DEBUG -    Exiting get()
2025-01-09 02:17:29,215 - DEBUG - GOOGL: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:29,218 - DEBUG - GOOGL: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:29,227 - DEBUG - GOOGL: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:29,237 - DEBUG - GOOGL: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:29,237 - DEBUG -   Exiting history()
2025-01-09 02:17:29,237 - DEBUG -  Exiting history()
2025-01-09 02:17:29,241 - DEBUG - Exiting download()
2025-01-09 02:17:29,358 - ERROR - Error writing data for GOOGL to DB: schema "np" does not exist
LINE 4:             VALUES ('GOOGL','2020-01-01'::date,np.float64(67...
                                                       ^

2025-01-09 02:17:29,358 - DEBUG - Entering download()
2025-01-09 02:17:29,358 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:29,359 - DEBUG -  Entering history()
2025-01-09 02:17:29,359 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GOOG', 1, 0])
2025-01-09 02:17:29,359 - DEBUG -   Entering history()
2025-01-09 02:17:29,360 - DEBUG - GOOG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:29,360 - DEBUG -    Entering get()
2025-01-09 02:17:29,360 - DEBUG -     Entering _make_request()
2025-01-09 02:17:29,360 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GOOG
2025-01-09 02:17:29,360 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:29,360 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:29,360 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:29,360 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:29,360 - DEBUG - reusing cookie
2025-01-09 02:17:29,360 - DEBUG - reusing crumb
2025-01-09 02:17:29,360 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:29,360 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:29,520 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GOOG?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1195
2025-01-09 02:17:29,521 - DEBUG - response code=200
2025-01-09 02:17:29,521 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:29,522 - DEBUG -    Exiting get()
2025-01-09 02:17:29,526 - DEBUG - GOOG: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:29,529 - DEBUG - GOOG: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:29,540 - DEBUG - GOOG: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:29,551 - DEBUG - GOOG: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:29,552 - DEBUG -   Exiting history()
2025-01-09 02:17:29,552 - DEBUG -  Exiting history()
2025-01-09 02:17:29,556 - DEBUG - Exiting download()
2025-01-09 02:17:29,679 - ERROR - Error writing data for GOOG to DB: schema "np" does not exist
LINE 4:             VALUES ('GOOG','2020-01-01'::date,np.float64(66....
                                                      ^

2025-01-09 02:17:29,679 - DEBUG - Entering download()
2025-01-09 02:17:29,679 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:29,679 - DEBUG -  Entering history()
2025-01-09 02:17:29,680 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MO', 1, 0])
2025-01-09 02:17:29,680 - DEBUG -   Entering history()
2025-01-09 02:17:29,681 - DEBUG - MO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:29,681 - DEBUG -    Entering get()
2025-01-09 02:17:29,681 - DEBUG -     Entering _make_request()
2025-01-09 02:17:29,681 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MO
2025-01-09 02:17:29,681 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:29,681 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:29,681 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:29,681 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:29,681 - DEBUG - reusing cookie
2025-01-09 02:17:29,681 - DEBUG - reusing crumb
2025-01-09 02:17:29,681 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:29,681 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:29,901 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MO?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1182
2025-01-09 02:17:29,901 - DEBUG - response code=200
2025-01-09 02:17:29,901 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:29,901 - DEBUG -    Exiting get()
2025-01-09 02:17:29,903 - DEBUG - MO: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:29,903 - DEBUG - MO: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:29,907 - DEBUG - MO: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:29,913 - DEBUG - MO: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:29,913 - DEBUG -   Exiting history()
2025-01-09 02:17:29,913 - DEBUG -  Exiting history()
2025-01-09 02:17:29,915 - DEBUG - Exiting download()
2025-01-09 02:17:30,171 - ERROR - Error writing data for MO to DB: schema "np" does not exist
LINE 4:             VALUES ('MO','2020-01-01'::date,np.float64(33.33...
                                                    ^

2025-01-09 02:17:30,172 - DEBUG - Entering download()
2025-01-09 02:17:30,172 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:30,172 - DEBUG -  Entering history()
2025-01-09 02:17:30,172 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AMZN', 1, 0])
2025-01-09 02:17:30,172 - DEBUG -   Entering history()
2025-01-09 02:17:30,173 - DEBUG - AMZN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:30,173 - DEBUG -    Entering get()
2025-01-09 02:17:30,173 - DEBUG -     Entering _make_request()
2025-01-09 02:17:30,173 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AMZN
2025-01-09 02:17:30,173 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:30,173 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:30,173 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:30,173 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:30,174 - DEBUG - reusing cookie
2025-01-09 02:17:30,174 - DEBUG - reusing crumb
2025-01-09 02:17:30,174 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:30,174 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:30,329 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AMZN?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1185
2025-01-09 02:17:30,330 - DEBUG - response code=200
2025-01-09 02:17:30,331 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:30,331 - DEBUG -    Exiting get()
2025-01-09 02:17:30,334 - DEBUG - AMZN: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:30,337 - DEBUG - AMZN: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:30,348 - DEBUG - AMZN: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:30,359 - DEBUG - AMZN: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:30,359 - DEBUG -   Exiting history()
2025-01-09 02:17:30,359 - DEBUG -  Exiting history()
2025-01-09 02:17:30,363 - DEBUG - Exiting download()
2025-01-09 02:17:30,414 - DEBUG - Entering download()
2025-01-09 02:17:30,414 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:30,414 - DEBUG -  Entering history()
2025-01-09 02:17:30,414 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AMCR', 1, 0])
2025-01-09 02:17:30,414 - DEBUG -   Entering history()
2025-01-09 02:17:30,415 - DEBUG - AMCR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:30,415 - DEBUG -    Entering get()
2025-01-09 02:17:30,415 - DEBUG -     Entering _make_request()
2025-01-09 02:17:30,415 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AMCR
2025-01-09 02:17:30,415 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:30,415 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:30,415 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:30,415 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:30,416 - DEBUG - reusing cookie
2025-01-09 02:17:30,416 - DEBUG - reusing crumb
2025-01-09 02:17:30,416 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:30,416 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:30,578 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AMCR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1175
2025-01-09 02:17:30,579 - DEBUG - response code=200
2025-01-09 02:17:30,579 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:30,579 - DEBUG -    Exiting get()
2025-01-09 02:17:30,580 - DEBUG - AMCR: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:30,582 - DEBUG - AMCR: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:30,586 - DEBUG - AMCR: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:30,591 - DEBUG - AMCR: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:30,591 - DEBUG -   Exiting history()
2025-01-09 02:17:30,591 - DEBUG -  Exiting history()
2025-01-09 02:17:30,593 - DEBUG - Exiting download()
2025-01-09 02:17:30,741 - ERROR - Error writing data for AMCR to DB: schema "np" does not exist
LINE 4:             VALUES ('AMCR','2020-01-01'::date,np.float64(8.7...
                                                      ^

2025-01-09 02:17:30,741 - DEBUG - Entering download()
2025-01-09 02:17:30,741 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:30,742 - DEBUG -  Entering history()
2025-01-09 02:17:30,742 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AEE', 1, 0])
2025-01-09 02:17:30,742 - DEBUG -   Entering history()
2025-01-09 02:17:30,743 - DEBUG - AEE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:30,743 - DEBUG -    Entering get()
2025-01-09 02:17:30,743 - DEBUG -     Entering _make_request()
2025-01-09 02:17:30,743 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AEE
2025-01-09 02:17:30,743 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:30,744 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:30,744 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:30,744 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:30,744 - DEBUG - reusing cookie
2025-01-09 02:17:30,744 - DEBUG - reusing crumb
2025-01-09 02:17:30,744 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:30,744 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:30,940 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AEE?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1190
2025-01-09 02:17:30,941 - DEBUG - response code=200
2025-01-09 02:17:30,941 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:30,941 - DEBUG -    Exiting get()
2025-01-09 02:17:30,942 - DEBUG - AEE: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:30,943 - DEBUG - AEE: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:30,945 - DEBUG - AEE: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:30,952 - DEBUG - AEE: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:30,952 - DEBUG -   Exiting history()
2025-01-09 02:17:30,952 - DEBUG -  Exiting history()
2025-01-09 02:17:30,957 - DEBUG - Exiting download()
2025-01-09 02:17:31,130 - ERROR - Error writing data for AEE to DB: schema "np" does not exist
LINE 4:             VALUES ('AEE','2020-01-01'::date,np.float64(66.6...
                                                     ^

2025-01-09 02:17:31,131 - DEBUG - Entering download()
2025-01-09 02:17:31,131 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:31,131 - DEBUG -  Entering history()
2025-01-09 02:17:31,131 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AEP', 1, 0])
2025-01-09 02:17:31,131 - DEBUG -   Entering history()
2025-01-09 02:17:31,132 - DEBUG - AEP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:31,132 - DEBUG -    Entering get()
2025-01-09 02:17:31,132 - DEBUG -     Entering _make_request()
2025-01-09 02:17:31,132 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AEP
2025-01-09 02:17:31,132 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:31,132 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:31,132 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:31,133 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:31,133 - DEBUG - reusing cookie
2025-01-09 02:17:31,133 - DEBUG - reusing crumb
2025-01-09 02:17:31,133 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:31,133 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:31,403 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AEP?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1216
2025-01-09 02:17:31,403 - DEBUG - response code=200
2025-01-09 02:17:31,404 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:31,404 - DEBUG -    Exiting get()
2025-01-09 02:17:31,405 - DEBUG - AEP: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:31,406 - DEBUG - AEP: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:31,411 - DEBUG - AEP: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:31,417 - DEBUG - AEP: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:31,418 - DEBUG -   Exiting history()
2025-01-09 02:17:31,418 - DEBUG -  Exiting history()
2025-01-09 02:17:31,420 - DEBUG - Exiting download()
2025-01-09 02:17:31,666 - ERROR - Error writing data for AEP to DB: schema "np" does not exist
LINE 4:             VALUES ('AEP','2020-01-01'::date,np.float64(78.8...
                                                     ^

2025-01-09 02:17:31,666 - DEBUG - Entering download()
2025-01-09 02:17:31,666 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:31,667 - DEBUG -  Entering history()
2025-01-09 02:17:31,667 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AXP', 1, 0])
2025-01-09 02:17:31,667 - DEBUG -   Entering history()
2025-01-09 02:17:31,668 - DEBUG - AXP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:31,668 - DEBUG -    Entering get()
2025-01-09 02:17:31,668 - DEBUG -     Entering _make_request()
2025-01-09 02:17:31,669 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AXP
2025-01-09 02:17:31,669 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:31,669 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:31,669 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:31,669 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:31,669 - DEBUG - reusing cookie
2025-01-09 02:17:31,669 - DEBUG - reusing crumb
2025-01-09 02:17:31,669 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:31,669 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:31,875 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AXP?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1282
2025-01-09 02:17:31,876 - DEBUG - response code=200
2025-01-09 02:17:31,876 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:31,876 - DEBUG -    Exiting get()
2025-01-09 02:17:31,877 - DEBUG - AXP: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:31,878 - DEBUG - AXP: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:31,885 - DEBUG - AXP: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:31,891 - DEBUG - AXP: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:31,891 - DEBUG -   Exiting history()
2025-01-09 02:17:31,892 - DEBUG -  Exiting history()
2025-01-09 02:17:31,894 - DEBUG - Exiting download()
2025-01-09 02:17:32,064 - DEBUG - Entering download()
2025-01-09 02:17:32,064 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:32,064 - DEBUG -  Entering history()
2025-01-09 02:17:32,064 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AIG', 1, 0])
2025-01-09 02:17:32,065 - DEBUG -   Entering history()
2025-01-09 02:17:32,065 - DEBUG - AIG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:32,066 - DEBUG -    Entering get()
2025-01-09 02:17:32,066 - DEBUG -     Entering _make_request()
2025-01-09 02:17:32,066 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AIG
2025-01-09 02:17:32,066 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:32,066 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:32,066 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:32,066 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:32,066 - DEBUG - reusing cookie
2025-01-09 02:17:32,066 - DEBUG - reusing crumb
2025-01-09 02:17:32,066 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:32,066 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:32,278 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AIG?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1217
2025-01-09 02:17:32,278 - DEBUG - response code=200
2025-01-09 02:17:32,278 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:32,278 - DEBUG -    Exiting get()
2025-01-09 02:17:32,279 - DEBUG - AIG: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:32,281 - DEBUG - AIG: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:32,285 - DEBUG - AIG: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:32,290 - DEBUG - AIG: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:32,290 - DEBUG -   Exiting history()
2025-01-09 02:17:32,290 - DEBUG -  Exiting history()
2025-01-09 02:17:32,292 - DEBUG - Exiting download()
2025-01-09 02:17:32,456 - ERROR - Error writing data for AIG to DB: schema "np" does not exist
LINE 4:             VALUES ('AIG','2020-01-01'::date,np.float64(45.1...
                                                     ^

2025-01-09 02:17:32,457 - DEBUG - Entering download()
2025-01-09 02:17:32,457 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:32,457 - DEBUG -  Entering history()
2025-01-09 02:17:32,458 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AMT', 1, 0])
2025-01-09 02:17:32,458 - DEBUG -   Entering history()
2025-01-09 02:17:32,458 - DEBUG - AMT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:32,459 - DEBUG -    Entering get()
2025-01-09 02:17:32,459 - DEBUG -     Entering _make_request()
2025-01-09 02:17:32,459 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AMT
2025-01-09 02:17:32,459 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:32,459 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:32,459 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:32,459 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:32,459 - DEBUG - reusing cookie
2025-01-09 02:17:32,459 - DEBUG - reusing crumb
2025-01-09 02:17:32,459 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:32,459 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:32,621 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AMT?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1209
2025-01-09 02:17:32,622 - DEBUG - response code=200
2025-01-09 02:17:32,622 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:32,622 - DEBUG -    Exiting get()
2025-01-09 02:17:32,624 - DEBUG - AMT: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:32,625 - DEBUG - AMT: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:32,629 - DEBUG - AMT: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:32,634 - DEBUG - AMT: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:32,634 - DEBUG -   Exiting history()
2025-01-09 02:17:32,634 - DEBUG -  Exiting history()
2025-01-09 02:17:32,636 - DEBUG - Exiting download()
2025-01-09 02:17:32,685 - DEBUG - Entering download()
2025-01-09 02:17:32,685 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:32,685 - DEBUG -  Entering history()
2025-01-09 02:17:32,686 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AWK', 1, 0])
2025-01-09 02:17:32,686 - DEBUG -   Entering history()
2025-01-09 02:17:32,687 - DEBUG - AWK: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:32,687 - DEBUG -    Entering get()
2025-01-09 02:17:32,687 - DEBUG -     Entering _make_request()
2025-01-09 02:17:32,687 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AWK
2025-01-09 02:17:32,687 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:32,687 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:32,687 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:32,687 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:32,687 - DEBUG - reusing cookie
2025-01-09 02:17:32,687 - DEBUG - reusing crumb
2025-01-09 02:17:32,687 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:32,687 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:32,868 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AWK?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1218
2025-01-09 02:17:32,869 - DEBUG - response code=200
2025-01-09 02:17:32,869 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:32,869 - DEBUG -    Exiting get()
2025-01-09 02:17:32,870 - DEBUG - AWK: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:32,871 - DEBUG - AWK: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:32,875 - DEBUG - AWK: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:32,880 - DEBUG - AWK: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:32,880 - DEBUG -   Exiting history()
2025-01-09 02:17:32,880 - DEBUG -  Exiting history()
2025-01-09 02:17:32,883 - DEBUG - Exiting download()
2025-01-09 02:17:33,135 - ERROR - Error writing data for AWK to DB: schema "np" does not exist
LINE 4:             VALUES ('AWK','2020-01-01'::date,np.float64(112....
                                                     ^

2025-01-09 02:17:33,135 - DEBUG - Entering download()
2025-01-09 02:17:33,136 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:33,136 - DEBUG -  Entering history()
2025-01-09 02:17:33,136 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AMP', 1, 0])
2025-01-09 02:17:33,136 - DEBUG -   Entering history()
2025-01-09 02:17:33,137 - DEBUG - AMP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:33,137 - DEBUG -    Entering get()
2025-01-09 02:17:33,137 - DEBUG -     Entering _make_request()
2025-01-09 02:17:33,138 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AMP
2025-01-09 02:17:33,138 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:33,138 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:33,138 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:33,138 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:33,138 - DEBUG - reusing cookie
2025-01-09 02:17:33,138 - DEBUG - reusing crumb
2025-01-09 02:17:33,138 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:33,138 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:33,330 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AMP?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1215
2025-01-09 02:17:33,330 - DEBUG - response code=200
2025-01-09 02:17:33,330 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:33,330 - DEBUG -    Exiting get()
2025-01-09 02:17:33,331 - DEBUG - AMP: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:33,332 - DEBUG - AMP: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:33,336 - DEBUG - AMP: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:33,343 - DEBUG - AMP: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:33,343 - DEBUG -   Exiting history()
2025-01-09 02:17:33,343 - DEBUG -  Exiting history()
2025-01-09 02:17:33,346 - DEBUG - Exiting download()
2025-01-09 02:17:33,397 - DEBUG - Entering download()
2025-01-09 02:17:33,397 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:33,397 - DEBUG -  Entering history()
2025-01-09 02:17:33,397 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AME', 1, 0])
2025-01-09 02:17:33,397 - DEBUG -   Entering history()
2025-01-09 02:17:33,398 - DEBUG - AME: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:33,398 - DEBUG -    Entering get()
2025-01-09 02:17:33,398 - DEBUG -     Entering _make_request()
2025-01-09 02:17:33,398 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AME
2025-01-09 02:17:33,399 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:33,399 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:33,399 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:33,399 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:33,399 - DEBUG - reusing cookie
2025-01-09 02:17:33,399 - DEBUG - reusing crumb
2025-01-09 02:17:33,399 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:33,399 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:33,606 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AME?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1185
2025-01-09 02:17:33,607 - DEBUG - response code=200
2025-01-09 02:17:33,607 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:33,607 - DEBUG -    Exiting get()
2025-01-09 02:17:33,609 - DEBUG - AME: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:33,610 - DEBUG - AME: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:33,614 - DEBUG - AME: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:33,621 - DEBUG - AME: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:33,621 - DEBUG -   Exiting history()
2025-01-09 02:17:33,622 - DEBUG -  Exiting history()
2025-01-09 02:17:33,624 - DEBUG - Exiting download()
2025-01-09 02:17:33,773 - DEBUG - Entering download()
2025-01-09 02:17:33,773 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:33,774 - DEBUG -  Entering history()
2025-01-09 02:17:33,774 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AMGN', 1, 0])
2025-01-09 02:17:33,774 - DEBUG -   Entering history()
2025-01-09 02:17:33,775 - DEBUG - AMGN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:33,775 - DEBUG -    Entering get()
2025-01-09 02:17:33,775 - DEBUG -     Entering _make_request()
2025-01-09 02:17:33,775 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AMGN
2025-01-09 02:17:33,775 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:33,775 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:33,775 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:33,775 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:33,775 - DEBUG - reusing cookie
2025-01-09 02:17:33,775 - DEBUG - reusing crumb
2025-01-09 02:17:33,775 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:33,775 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:33,947 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AMGN?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1177
2025-01-09 02:17:33,948 - DEBUG - response code=200
2025-01-09 02:17:33,948 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:33,948 - DEBUG -    Exiting get()
2025-01-09 02:17:33,949 - DEBUG - AMGN: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:33,950 - DEBUG - AMGN: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:33,954 - DEBUG - AMGN: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:33,962 - DEBUG - AMGN: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:33,963 - DEBUG -   Exiting history()
2025-01-09 02:17:33,963 - DEBUG -  Exiting history()
2025-01-09 02:17:33,965 - DEBUG - Exiting download()
2025-01-09 02:17:34,119 - ERROR - Error writing data for AMGN to DB: schema "np" does not exist
LINE 4:             VALUES ('AMGN','2020-01-01'::date,np.float64(208...
                                                      ^

2025-01-09 02:17:34,120 - DEBUG - Entering download()
2025-01-09 02:17:34,120 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:34,120 - DEBUG -  Entering history()
2025-01-09 02:17:34,121 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['APH', 1, 0])
2025-01-09 02:17:34,121 - DEBUG -   Entering history()
2025-01-09 02:17:34,122 - DEBUG - APH: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:34,122 - DEBUG -    Entering get()
2025-01-09 02:17:34,122 - DEBUG -     Entering _make_request()
2025-01-09 02:17:34,122 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/APH
2025-01-09 02:17:34,122 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:34,122 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:34,122 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:34,122 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:34,122 - DEBUG - reusing cookie
2025-01-09 02:17:34,122 - DEBUG - reusing crumb
2025-01-09 02:17:34,122 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:34,122 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:34,317 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/APH?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1197
2025-01-09 02:17:34,318 - DEBUG - response code=200
2025-01-09 02:17:34,318 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:34,318 - DEBUG -    Exiting get()
2025-01-09 02:17:34,320 - DEBUG - APH: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:34,321 - DEBUG - APH: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:34,325 - DEBUG - APH: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:34,331 - DEBUG - APH: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:34,331 - DEBUG -   Exiting history()
2025-01-09 02:17:34,332 - DEBUG -  Exiting history()
2025-01-09 02:17:34,334 - DEBUG - Exiting download()
2025-01-09 02:17:34,589 - ERROR - Error writing data for APH to DB: schema "np" does not exist
LINE 4:             VALUES ('APH','2020-01-01'::date,np.float64(25.8...
                                                     ^

2025-01-09 02:17:34,590 - DEBUG - Entering download()
2025-01-09 02:17:34,590 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:34,591 - DEBUG -  Entering history()
2025-01-09 02:17:34,591 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ADI', 1, 0])
2025-01-09 02:17:34,591 - DEBUG -   Entering history()
2025-01-09 02:17:34,592 - DEBUG - ADI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:34,593 - DEBUG -    Entering get()
2025-01-09 02:17:34,593 - DEBUG -     Entering _make_request()
2025-01-09 02:17:34,593 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ADI
2025-01-09 02:17:34,593 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:34,593 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:34,593 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:34,593 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:34,593 - DEBUG - reusing cookie
2025-01-09 02:17:34,593 - DEBUG - reusing crumb
2025-01-09 02:17:34,593 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:34,593 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:34,782 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ADI?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1209
2025-01-09 02:17:34,783 - DEBUG - response code=200
2025-01-09 02:17:34,783 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:34,783 - DEBUG -    Exiting get()
2025-01-09 02:17:34,784 - DEBUG - ADI: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:34,785 - DEBUG - ADI: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:34,789 - DEBUG - ADI: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:34,797 - DEBUG - ADI: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:34,797 - DEBUG -   Exiting history()
2025-01-09 02:17:34,797 - DEBUG -  Exiting history()
2025-01-09 02:17:34,799 - DEBUG - Exiting download()
2025-01-09 02:17:35,061 - ERROR - Error writing data for ADI to DB: schema "np" does not exist
LINE 4:             VALUES ('ADI','2020-01-01'::date,np.float64(109....
                                                     ^

2025-01-09 02:17:35,062 - DEBUG - Entering download()
2025-01-09 02:17:35,062 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:35,062 - DEBUG -  Entering history()
2025-01-09 02:17:35,063 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ANSS', 1, 0])
2025-01-09 02:17:35,063 - DEBUG -   Entering history()
2025-01-09 02:17:35,064 - DEBUG - ANSS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:35,064 - DEBUG -    Entering get()
2025-01-09 02:17:35,064 - DEBUG -     Entering _make_request()
2025-01-09 02:17:35,064 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ANSS
2025-01-09 02:17:35,064 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:35,064 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:35,064 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:35,064 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:35,064 - DEBUG - reusing cookie
2025-01-09 02:17:35,064 - DEBUG - reusing crumb
2025-01-09 02:17:35,064 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:35,064 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:35,221 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ANSS?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1174
2025-01-09 02:17:35,221 - DEBUG - response code=200
2025-01-09 02:17:35,221 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:35,221 - DEBUG -    Exiting get()
2025-01-09 02:17:35,222 - DEBUG - ANSS: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:35,223 - DEBUG - ANSS: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:35,226 - DEBUG - ANSS: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:35,230 - DEBUG - ANSS: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:35,230 - DEBUG -   Exiting history()
2025-01-09 02:17:35,230 - DEBUG -  Exiting history()
2025-01-09 02:17:35,232 - DEBUG - Exiting download()
2025-01-09 02:17:35,378 - ERROR - Error writing data for ANSS to DB: schema "np" does not exist
LINE 4:             VALUES ('ANSS','2020-01-01'::date,np.float64(257...
                                                      ^

2025-01-09 02:17:35,378 - DEBUG - Entering download()
2025-01-09 02:17:35,378 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:35,379 - DEBUG -  Entering history()
2025-01-09 02:17:35,379 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AON', 1, 0])
2025-01-09 02:17:35,379 - DEBUG -   Entering history()
2025-01-09 02:17:35,380 - DEBUG - AON: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:35,380 - DEBUG -    Entering get()
2025-01-09 02:17:35,380 - DEBUG -     Entering _make_request()
2025-01-09 02:17:35,380 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AON
2025-01-09 02:17:35,380 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:35,380 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:35,380 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:35,380 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:35,381 - DEBUG - reusing cookie
2025-01-09 02:17:35,381 - DEBUG - reusing crumb
2025-01-09 02:17:35,381 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:35,381 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:35,598 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AON?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1176
2025-01-09 02:17:35,599 - DEBUG - response code=200
2025-01-09 02:17:35,599 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:35,599 - DEBUG -    Exiting get()
2025-01-09 02:17:35,600 - DEBUG - AON: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:35,601 - DEBUG - AON: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:35,606 - DEBUG - AON: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:35,612 - DEBUG - AON: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:35,612 - DEBUG -   Exiting history()
2025-01-09 02:17:35,612 - DEBUG -  Exiting history()
2025-01-09 02:17:35,615 - DEBUG - Exiting download()
2025-01-09 02:17:35,842 - ERROR - Error writing data for AON to DB: schema "np" does not exist
LINE 4:             VALUES ('AON','2020-01-01'::date,np.float64(200....
                                                     ^

2025-01-09 02:17:35,843 - DEBUG - Entering download()
2025-01-09 02:17:35,843 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:35,844 - DEBUG -  Entering history()
2025-01-09 02:17:35,844 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['APA', 1, 0])
2025-01-09 02:17:35,844 - DEBUG -   Entering history()
2025-01-09 02:17:35,845 - DEBUG - APA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:35,845 - DEBUG -    Entering get()
2025-01-09 02:17:35,845 - DEBUG -     Entering _make_request()
2025-01-09 02:17:35,845 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/APA
2025-01-09 02:17:35,846 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:35,846 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:35,846 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:35,846 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:35,846 - DEBUG - reusing cookie
2025-01-09 02:17:35,846 - DEBUG - reusing crumb
2025-01-09 02:17:35,846 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:35,846 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:36,055 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/APA?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1191
2025-01-09 02:17:36,056 - DEBUG - response code=200
2025-01-09 02:17:36,056 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:36,056 - DEBUG -    Exiting get()
2025-01-09 02:17:36,058 - DEBUG - APA: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:36,059 - DEBUG - APA: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:36,063 - DEBUG - APA: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:36,070 - DEBUG - APA: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:36,070 - DEBUG -   Exiting history()
2025-01-09 02:17:36,070 - DEBUG -  Exiting history()
2025-01-09 02:17:36,073 - DEBUG - Exiting download()
2025-01-09 02:17:36,120 - DEBUG - Entering download()
2025-01-09 02:17:36,120 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:36,121 - DEBUG -  Entering history()
2025-01-09 02:17:36,121 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['APO', 1, 0])
2025-01-09 02:17:36,121 - DEBUG -   Entering history()
2025-01-09 02:17:36,122 - DEBUG - APO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:36,122 - DEBUG -    Entering get()
2025-01-09 02:17:36,122 - DEBUG -     Entering _make_request()
2025-01-09 02:17:36,122 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/APO
2025-01-09 02:17:36,122 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:36,122 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:36,122 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:36,122 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:36,122 - DEBUG - reusing cookie
2025-01-09 02:17:36,123 - DEBUG - reusing crumb
2025-01-09 02:17:36,123 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:36,123 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:36,279 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/APO?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1218
2025-01-09 02:17:36,279 - DEBUG - response code=200
2025-01-09 02:17:36,279 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:36,279 - DEBUG -    Exiting get()
2025-01-09 02:17:36,280 - DEBUG - APO: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:36,281 - DEBUG - APO: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:36,285 - DEBUG - APO: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:36,291 - DEBUG - APO: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:36,291 - DEBUG -   Exiting history()
2025-01-09 02:17:36,291 - DEBUG -  Exiting history()
2025-01-09 02:17:36,294 - DEBUG - Exiting download()
2025-01-09 02:17:36,427 - ERROR - Error writing data for APO to DB: schema "np" does not exist
LINE 4:             VALUES ('APO','2020-01-01'::date,np.float64(41.1...
                                                     ^

2025-01-09 02:17:36,428 - DEBUG - Entering download()
2025-01-09 02:17:36,428 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:36,428 - DEBUG -  Entering history()
2025-01-09 02:17:36,429 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AAPL', 1, 0])
2025-01-09 02:17:36,429 - DEBUG -   Entering history()
2025-01-09 02:17:36,430 - DEBUG - AAPL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:36,430 - DEBUG -    Entering get()
2025-01-09 02:17:36,430 - DEBUG -     Entering _make_request()
2025-01-09 02:17:36,430 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AAPL
2025-01-09 02:17:36,430 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:36,430 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:36,430 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:36,430 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:36,430 - DEBUG - reusing cookie
2025-01-09 02:17:36,431 - DEBUG - reusing crumb
2025-01-09 02:17:36,431 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:36,431 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:36,624 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AAPL?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1185
2025-01-09 02:17:36,624 - DEBUG - response code=200
2025-01-09 02:17:36,624 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:36,625 - DEBUG -    Exiting get()
2025-01-09 02:17:36,626 - DEBUG - AAPL: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:36,627 - DEBUG - AAPL: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:36,631 - DEBUG - AAPL: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:36,637 - DEBUG - AAPL: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:36,637 - DEBUG -   Exiting history()
2025-01-09 02:17:36,637 - DEBUG -  Exiting history()
2025-01-09 02:17:36,639 - DEBUG - Exiting download()
2025-01-09 02:17:36,759 - ERROR - Error writing data for AAPL to DB: schema "np" does not exist
LINE 4:             VALUES ('AAPL','2020-01-01'::date,np.float64(71....
                                                      ^

2025-01-09 02:17:36,760 - DEBUG - Entering download()
2025-01-09 02:17:36,760 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:36,760 - DEBUG -  Entering history()
2025-01-09 02:17:36,761 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AMAT', 1, 0])
2025-01-09 02:17:36,761 - DEBUG -   Entering history()
2025-01-09 02:17:36,762 - DEBUG - AMAT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:36,762 - DEBUG -    Entering get()
2025-01-09 02:17:36,762 - DEBUG -     Entering _make_request()
2025-01-09 02:17:36,762 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AMAT
2025-01-09 02:17:36,762 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:36,762 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:36,762 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:36,762 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:36,762 - DEBUG - reusing cookie
2025-01-09 02:17:36,763 - DEBUG - reusing crumb
2025-01-09 02:17:36,763 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:36,763 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:36,955 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AMAT?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1200
2025-01-09 02:17:36,956 - DEBUG - response code=200
2025-01-09 02:17:36,956 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:36,956 - DEBUG -    Exiting get()
2025-01-09 02:17:36,957 - DEBUG - AMAT: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:36,959 - DEBUG - AMAT: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:36,963 - DEBUG - AMAT: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:36,970 - DEBUG - AMAT: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:36,970 - DEBUG -   Exiting history()
2025-01-09 02:17:36,970 - DEBUG -  Exiting history()
2025-01-09 02:17:36,972 - DEBUG - Exiting download()
2025-01-09 02:17:37,216 - ERROR - Error writing data for AMAT to DB: schema "np" does not exist
LINE 4:             VALUES ('AMAT','2020-01-01'::date,np.float64(59....
                                                      ^

2025-01-09 02:17:37,216 - DEBUG - Entering download()
2025-01-09 02:17:37,216 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:37,217 - DEBUG -  Entering history()
2025-01-09 02:17:37,217 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['APTV', 1, 0])
2025-01-09 02:17:37,217 - DEBUG -   Entering history()
2025-01-09 02:17:37,218 - DEBUG - APTV: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:37,218 - DEBUG -    Entering get()
2025-01-09 02:17:37,218 - DEBUG -     Entering _make_request()
2025-01-09 02:17:37,218 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/APTV
2025-01-09 02:17:37,218 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:37,218 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:37,218 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:37,218 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:37,219 - DEBUG - reusing cookie
2025-01-09 02:17:37,219 - DEBUG - reusing crumb
2025-01-09 02:17:37,219 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:37,219 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:37,399 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/APTV?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1173
2025-01-09 02:17:37,399 - DEBUG - response code=200
2025-01-09 02:17:37,399 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:37,400 - DEBUG -    Exiting get()
2025-01-09 02:17:37,400 - DEBUG - APTV: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:37,401 - DEBUG - APTV: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:37,404 - DEBUG - APTV: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:37,408 - DEBUG - APTV: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:37,408 - DEBUG -   Exiting history()
2025-01-09 02:17:37,409 - DEBUG -  Exiting history()
2025-01-09 02:17:37,410 - DEBUG - Exiting download()
2025-01-09 02:17:37,551 - ERROR - Error writing data for APTV to DB: schema "np" does not exist
LINE 4:             VALUES ('APTV','2020-01-01'::date,np.float64(95....
                                                      ^

2025-01-09 02:17:37,551 - DEBUG - Entering download()
2025-01-09 02:17:37,551 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:37,551 - DEBUG -  Entering history()
2025-01-09 02:17:37,552 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ACGL', 1, 0])
2025-01-09 02:17:37,552 - DEBUG -   Entering history()
2025-01-09 02:17:37,553 - DEBUG - ACGL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:37,553 - DEBUG -    Entering get()
2025-01-09 02:17:37,553 - DEBUG -     Entering _make_request()
2025-01-09 02:17:37,553 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ACGL
2025-01-09 02:17:37,553 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:37,553 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:37,553 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:37,553 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:37,553 - DEBUG - reusing cookie
2025-01-09 02:17:37,553 - DEBUG - reusing crumb
2025-01-09 02:17:37,554 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:37,554 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:37,712 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ACGL?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1209
2025-01-09 02:17:37,713 - DEBUG - response code=200
2025-01-09 02:17:37,713 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:37,713 - DEBUG -    Exiting get()
2025-01-09 02:17:37,714 - DEBUG - ACGL: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:37,715 - DEBUG - ACGL: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:37,719 - DEBUG - ACGL: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:37,725 - DEBUG - ACGL: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:37,725 - DEBUG -   Exiting history()
2025-01-09 02:17:37,725 - DEBUG -  Exiting history()
2025-01-09 02:17:37,727 - DEBUG - Exiting download()
2025-01-09 02:17:37,881 - DEBUG - Entering download()
2025-01-09 02:17:37,881 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:37,881 - DEBUG -  Entering history()
2025-01-09 02:17:37,882 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ADM', 1, 0])
2025-01-09 02:17:37,882 - DEBUG -   Entering history()
2025-01-09 02:17:37,882 - DEBUG - ADM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:37,882 - DEBUG -    Entering get()
2025-01-09 02:17:37,883 - DEBUG -     Entering _make_request()
2025-01-09 02:17:37,883 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ADM
2025-01-09 02:17:37,883 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:37,883 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:37,883 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:37,883 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:37,883 - DEBUG - reusing cookie
2025-01-09 02:17:37,883 - DEBUG - reusing crumb
2025-01-09 02:17:37,883 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:37,883 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:38,081 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ADM?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1215
2025-01-09 02:17:38,081 - DEBUG - response code=200
2025-01-09 02:17:38,081 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:38,081 - DEBUG -    Exiting get()
2025-01-09 02:17:38,082 - DEBUG - ADM: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:38,083 - DEBUG - ADM: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:38,087 - DEBUG - ADM: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:38,092 - DEBUG - ADM: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:38,092 - DEBUG -   Exiting history()
2025-01-09 02:17:38,093 - DEBUG -  Exiting history()
2025-01-09 02:17:38,095 - DEBUG - Exiting download()
2025-01-09 02:17:38,356 - ERROR - Error writing data for ADM to DB: schema "np" does not exist
LINE 4:             VALUES ('ADM','2020-01-01'::date,np.float64(40.7...
                                                     ^

2025-01-09 02:17:38,356 - DEBUG - Entering download()
2025-01-09 02:17:38,356 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:38,357 - DEBUG -  Entering history()
2025-01-09 02:17:38,357 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ANET', 1, 0])
2025-01-09 02:17:38,357 - DEBUG -   Entering history()
2025-01-09 02:17:38,358 - DEBUG - ANET: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:38,358 - DEBUG -    Entering get()
2025-01-09 02:17:38,358 - DEBUG -     Entering _make_request()
2025-01-09 02:17:38,358 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ANET
2025-01-09 02:17:38,358 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:38,358 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:38,359 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:38,359 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:38,359 - DEBUG - reusing cookie
2025-01-09 02:17:38,359 - DEBUG - reusing crumb
2025-01-09 02:17:38,359 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:38,359 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:38,516 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ANET?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1207
2025-01-09 02:17:38,516 - DEBUG - response code=200
2025-01-09 02:17:38,516 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:38,516 - DEBUG -    Exiting get()
2025-01-09 02:17:38,517 - DEBUG - ANET: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:38,519 - DEBUG - ANET: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:38,522 - DEBUG - ANET: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:38,528 - DEBUG - ANET: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:38,529 - DEBUG -   Exiting history()
2025-01-09 02:17:38,529 - DEBUG -  Exiting history()
2025-01-09 02:17:38,531 - DEBUG - Exiting download()
2025-01-09 02:17:38,581 - DEBUG - Entering download()
2025-01-09 02:17:38,581 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:38,581 - DEBUG -  Entering history()
2025-01-09 02:17:38,581 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AJG', 1, 0])
2025-01-09 02:17:38,582 - DEBUG -   Entering history()
2025-01-09 02:17:38,582 - DEBUG - AJG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:38,582 - DEBUG -    Entering get()
2025-01-09 02:17:38,582 - DEBUG -     Entering _make_request()
2025-01-09 02:17:38,582 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AJG
2025-01-09 02:17:38,582 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:38,582 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:38,582 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:38,583 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:38,583 - DEBUG - reusing cookie
2025-01-09 02:17:38,583 - DEBUG - reusing crumb
2025-01-09 02:17:38,583 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:38,583 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:38,782 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AJG?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1209
2025-01-09 02:17:38,783 - DEBUG - response code=200
2025-01-09 02:17:38,783 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:38,783 - DEBUG -    Exiting get()
2025-01-09 02:17:38,784 - DEBUG - AJG: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:38,785 - DEBUG - AJG: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:38,789 - DEBUG - AJG: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:38,796 - DEBUG - AJG: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:38,796 - DEBUG -   Exiting history()
2025-01-09 02:17:38,796 - DEBUG -  Exiting history()
2025-01-09 02:17:38,799 - DEBUG - Exiting download()
2025-01-09 02:17:38,924 - ERROR - Error writing data for AJG to DB: schema "np" does not exist
LINE 4:             VALUES ('AJG','2020-01-01'::date,np.float64(89.9...
                                                     ^

2025-01-09 02:17:38,925 - DEBUG - Entering download()
2025-01-09 02:17:38,925 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:38,925 - DEBUG -  Entering history()
2025-01-09 02:17:38,926 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AIZ', 1, 0])
2025-01-09 02:17:38,926 - DEBUG -   Entering history()
2025-01-09 02:17:38,927 - DEBUG - AIZ: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:38,927 - DEBUG -    Entering get()
2025-01-09 02:17:38,927 - DEBUG -     Entering _make_request()
2025-01-09 02:17:38,927 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AIZ
2025-01-09 02:17:38,927 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:38,927 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:38,927 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:38,927 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:38,928 - DEBUG - reusing cookie
2025-01-09 02:17:38,928 - DEBUG - reusing crumb
2025-01-09 02:17:38,928 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:38,928 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:39,128 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AIZ?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1192
2025-01-09 02:17:39,128 - DEBUG - response code=200
2025-01-09 02:17:39,128 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:39,128 - DEBUG -    Exiting get()
2025-01-09 02:17:39,130 - DEBUG - AIZ: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:39,131 - DEBUG - AIZ: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:39,135 - DEBUG - AIZ: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:39,140 - DEBUG - AIZ: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:39,140 - DEBUG -   Exiting history()
2025-01-09 02:17:39,140 - DEBUG -  Exiting history()
2025-01-09 02:17:39,142 - DEBUG - Exiting download()
2025-01-09 02:17:39,299 - ERROR - Error writing data for AIZ to DB: schema "np" does not exist
LINE 4:             VALUES ('AIZ','2020-01-01'::date,np.float64(119....
                                                     ^

2025-01-09 02:17:39,300 - DEBUG - Entering download()
2025-01-09 02:17:39,300 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:39,300 - DEBUG -  Entering history()
2025-01-09 02:17:39,300 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['T', 1, 0])
2025-01-09 02:17:39,301 - DEBUG -   Entering history()
2025-01-09 02:17:39,301 - DEBUG - T: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:39,302 - DEBUG -    Entering get()
2025-01-09 02:17:39,302 - DEBUG -     Entering _make_request()
2025-01-09 02:17:39,302 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/T
2025-01-09 02:17:39,302 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:39,302 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:39,302 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:39,302 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:39,302 - DEBUG - reusing cookie
2025-01-09 02:17:39,302 - DEBUG - reusing crumb
2025-01-09 02:17:39,302 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:39,302 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:39,508 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/T?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1180
2025-01-09 02:17:39,508 - DEBUG - response code=200
2025-01-09 02:17:39,508 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:39,508 - DEBUG -    Exiting get()
2025-01-09 02:17:39,510 - DEBUG - T: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:39,512 - DEBUG - T: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:39,518 - DEBUG - T: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:39,526 - DEBUG - T: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:39,526 - DEBUG -   Exiting history()
2025-01-09 02:17:39,526 - DEBUG -  Exiting history()
2025-01-09 02:17:39,529 - DEBUG - Exiting download()
2025-01-09 02:17:39,579 - DEBUG - Entering download()
2025-01-09 02:17:39,579 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:39,580 - DEBUG -  Entering history()
2025-01-09 02:17:39,580 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ATO', 1, 0])
2025-01-09 02:17:39,580 - DEBUG -   Entering history()
2025-01-09 02:17:39,581 - DEBUG - ATO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:39,581 - DEBUG -    Entering get()
2025-01-09 02:17:39,582 - DEBUG -     Entering _make_request()
2025-01-09 02:17:39,582 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ATO
2025-01-09 02:17:39,582 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:39,582 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:39,582 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:39,582 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:39,582 - DEBUG - reusing cookie
2025-01-09 02:17:39,582 - DEBUG - reusing crumb
2025-01-09 02:17:39,582 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:39,582 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:39,780 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ATO?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1212
2025-01-09 02:17:39,780 - DEBUG - response code=200
2025-01-09 02:17:39,780 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:39,780 - DEBUG -    Exiting get()
2025-01-09 02:17:39,782 - DEBUG - ATO: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:39,783 - DEBUG - ATO: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:39,787 - DEBUG - ATO: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:39,795 - DEBUG - ATO: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:39,795 - DEBUG -   Exiting history()
2025-01-09 02:17:39,795 - DEBUG -  Exiting history()
2025-01-09 02:17:39,797 - DEBUG - Exiting download()
2025-01-09 02:17:39,847 - DEBUG - Entering download()
2025-01-09 02:17:39,847 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:39,848 - DEBUG -  Entering history()
2025-01-09 02:17:39,848 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ADSK', 1, 0])
2025-01-09 02:17:39,848 - DEBUG -   Entering history()
2025-01-09 02:17:39,849 - DEBUG - ADSK: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:39,849 - DEBUG -    Entering get()
2025-01-09 02:17:39,849 - DEBUG -     Entering _make_request()
2025-01-09 02:17:39,849 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ADSK
2025-01-09 02:17:39,849 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:39,849 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:39,849 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:39,849 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:39,850 - DEBUG - reusing cookie
2025-01-09 02:17:39,850 - DEBUG - reusing crumb
2025-01-09 02:17:39,850 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:39,850 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:40,023 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ADSK?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1196
2025-01-09 02:17:40,024 - DEBUG - response code=200
2025-01-09 02:17:40,024 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:40,024 - DEBUG -    Exiting get()
2025-01-09 02:17:40,025 - DEBUG - ADSK: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:40,026 - DEBUG - ADSK: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:40,030 - DEBUG - ADSK: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:40,035 - DEBUG - ADSK: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:40,035 - DEBUG -   Exiting history()
2025-01-09 02:17:40,035 - DEBUG -  Exiting history()
2025-01-09 02:17:40,037 - DEBUG - Exiting download()
2025-01-09 02:17:40,263 - ERROR - Error writing data for ADSK to DB: schema "np" does not exist
LINE 4:             VALUES ('ADSK','2020-01-01'::date,np.float64(184...
                                                      ^

2025-01-09 02:17:40,264 - DEBUG - Entering download()
2025-01-09 02:17:40,264 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:40,264 - DEBUG -  Entering history()
2025-01-09 02:17:40,265 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ADP', 1, 0])
2025-01-09 02:17:40,265 - DEBUG -   Entering history()
2025-01-09 02:17:40,265 - DEBUG - ADP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:40,266 - DEBUG -    Entering get()
2025-01-09 02:17:40,266 - DEBUG -     Entering _make_request()
2025-01-09 02:17:40,266 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ADP
2025-01-09 02:17:40,266 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:40,266 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:40,266 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:40,266 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:40,266 - DEBUG - reusing cookie
2025-01-09 02:17:40,266 - DEBUG - reusing crumb
2025-01-09 02:17:40,266 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:40,266 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:40,482 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ADP?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1216
2025-01-09 02:17:40,483 - DEBUG - response code=200
2025-01-09 02:17:40,483 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:40,483 - DEBUG -    Exiting get()
2025-01-09 02:17:40,484 - DEBUG - ADP: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:40,485 - DEBUG - ADP: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:40,489 - DEBUG - ADP: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:40,495 - DEBUG - ADP: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:40,495 - DEBUG -   Exiting history()
2025-01-09 02:17:40,495 - DEBUG -  Exiting history()
2025-01-09 02:17:40,497 - DEBUG - Exiting download()
2025-01-09 02:17:40,733 - ERROR - Error writing data for ADP to DB: schema "np" does not exist
LINE 4:             VALUES ('ADP','2020-01-01'::date,np.float64(154....
                                                     ^

2025-01-09 02:17:40,733 - DEBUG - Entering download()
2025-01-09 02:17:40,734 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:40,734 - DEBUG -  Entering history()
2025-01-09 02:17:40,734 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AZO', 1, 0])
2025-01-09 02:17:40,734 - DEBUG -   Entering history()
2025-01-09 02:17:40,735 - DEBUG - AZO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:40,735 - DEBUG -    Entering get()
2025-01-09 02:17:40,735 - DEBUG -     Entering _make_request()
2025-01-09 02:17:40,735 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AZO
2025-01-09 02:17:40,735 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:40,736 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:40,736 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:40,736 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:40,736 - DEBUG - reusing cookie
2025-01-09 02:17:40,736 - DEBUG - reusing crumb
2025-01-09 02:17:40,736 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:40,736 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:40,895 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AZO?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1195
2025-01-09 02:17:40,896 - DEBUG - response code=200
2025-01-09 02:17:40,896 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:40,896 - DEBUG -    Exiting get()
2025-01-09 02:17:40,897 - DEBUG - AZO: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:40,899 - DEBUG - AZO: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:40,903 - DEBUG - AZO: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:40,911 - DEBUG - AZO: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:40,911 - DEBUG -   Exiting history()
2025-01-09 02:17:40,911 - DEBUG -  Exiting history()
2025-01-09 02:17:40,913 - DEBUG - Exiting download()
2025-01-09 02:17:41,042 - ERROR - Error writing data for AZO to DB: schema "np" does not exist
LINE 4:             VALUES ('AZO','2020-01-01'::date,np.float64(1194...
                                                     ^

2025-01-09 02:17:41,043 - DEBUG - Entering download()
2025-01-09 02:17:41,043 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:41,043 - DEBUG -  Entering history()
2025-01-09 02:17:41,043 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AVB', 1, 0])
2025-01-09 02:17:41,044 - DEBUG -   Entering history()
2025-01-09 02:17:41,045 - DEBUG - AVB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:41,045 - DEBUG -    Entering get()
2025-01-09 02:17:41,045 - DEBUG -     Entering _make_request()
2025-01-09 02:17:41,045 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AVB
2025-01-09 02:17:41,045 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:41,045 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:41,045 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:41,045 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:41,045 - DEBUG - reusing cookie
2025-01-09 02:17:41,045 - DEBUG - reusing crumb
2025-01-09 02:17:41,045 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:41,045 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:41,237 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AVB?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1216
2025-01-09 02:17:41,238 - DEBUG - response code=200
2025-01-09 02:17:41,238 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:41,238 - DEBUG -    Exiting get()
2025-01-09 02:17:41,239 - DEBUG - AVB: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:41,240 - DEBUG - AVB: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:41,243 - DEBUG - AVB: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:41,250 - DEBUG - AVB: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:41,250 - DEBUG -   Exiting history()
2025-01-09 02:17:41,250 - DEBUG -  Exiting history()
2025-01-09 02:17:41,252 - DEBUG - Exiting download()
2025-01-09 02:17:41,306 - DEBUG - Entering download()
2025-01-09 02:17:41,306 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:41,306 - DEBUG -  Entering history()
2025-01-09 02:17:41,307 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AVY', 1, 0])
2025-01-09 02:17:41,307 - DEBUG -   Entering history()
2025-01-09 02:17:41,308 - DEBUG - AVY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:41,308 - DEBUG -    Entering get()
2025-01-09 02:17:41,308 - DEBUG -     Entering _make_request()
2025-01-09 02:17:41,308 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AVY
2025-01-09 02:17:41,308 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:41,308 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:41,308 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:41,308 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:41,308 - DEBUG - reusing cookie
2025-01-09 02:17:41,308 - DEBUG - reusing crumb
2025-01-09 02:17:41,308 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:41,309 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:41,516 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AVY?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1202
2025-01-09 02:17:41,516 - DEBUG - response code=200
2025-01-09 02:17:41,516 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:41,516 - DEBUG -    Exiting get()
2025-01-09 02:17:41,517 - DEBUG - AVY: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:41,518 - DEBUG - AVY: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:41,522 - DEBUG - AVY: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:41,529 - DEBUG - AVY: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:41,529 - DEBUG -   Exiting history()
2025-01-09 02:17:41,529 - DEBUG -  Exiting history()
2025-01-09 02:17:41,533 - DEBUG - Exiting download()
2025-01-09 02:17:41,578 - DEBUG - Entering download()
2025-01-09 02:17:41,578 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:41,579 - DEBUG -  Entering history()
2025-01-09 02:17:41,579 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AXON', 1, 0])
2025-01-09 02:17:41,579 - DEBUG -   Entering history()
2025-01-09 02:17:41,580 - DEBUG - AXON: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:41,581 - DEBUG -    Entering get()
2025-01-09 02:17:41,581 - DEBUG -     Entering _make_request()
2025-01-09 02:17:41,581 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AXON
2025-01-09 02:17:41,581 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:41,581 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:41,581 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:41,581 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:41,581 - DEBUG - reusing cookie
2025-01-09 02:17:41,581 - DEBUG - reusing crumb
2025-01-09 02:17:41,581 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:41,581 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:41,723 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AXON?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1204
2025-01-09 02:17:41,723 - DEBUG - response code=200
2025-01-09 02:17:41,723 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:41,724 - DEBUG -    Exiting get()
2025-01-09 02:17:41,726 - DEBUG - AXON: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:41,727 - DEBUG - AXON: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:41,733 - DEBUG - AXON: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:41,742 - DEBUG - AXON: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:41,742 - DEBUG -   Exiting history()
2025-01-09 02:17:41,742 - DEBUG -  Exiting history()
2025-01-09 02:17:41,745 - DEBUG - Exiting download()
2025-01-09 02:17:41,892 - ERROR - Error writing data for AXON to DB: schema "np" does not exist
LINE 4:             VALUES ('AXON','2020-01-01'::date,np.float64(74....
                                                      ^

2025-01-09 02:17:41,892 - DEBUG - Entering download()
2025-01-09 02:17:41,892 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:41,893 - DEBUG -  Entering history()
2025-01-09 02:17:41,893 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BKR', 1, 0])
2025-01-09 02:17:41,893 - DEBUG -   Entering history()
2025-01-09 02:17:41,894 - DEBUG - BKR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:41,895 - DEBUG -    Entering get()
2025-01-09 02:17:41,895 - DEBUG -     Entering _make_request()
2025-01-09 02:17:41,895 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BKR
2025-01-09 02:17:41,895 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:41,895 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:41,895 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:41,895 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:41,895 - DEBUG - reusing cookie
2025-01-09 02:17:41,895 - DEBUG - reusing crumb
2025-01-09 02:17:41,895 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:41,895 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:42,080 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BKR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1202
2025-01-09 02:17:42,081 - DEBUG - response code=200
2025-01-09 02:17:42,081 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:42,081 - DEBUG -    Exiting get()
2025-01-09 02:17:42,082 - DEBUG - BKR: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:42,083 - DEBUG - BKR: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:42,087 - DEBUG - BKR: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:42,093 - DEBUG - BKR: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:42,093 - DEBUG -   Exiting history()
2025-01-09 02:17:42,093 - DEBUG -  Exiting history()
2025-01-09 02:17:42,096 - DEBUG - Exiting download()
2025-01-09 02:17:42,241 - ERROR - Error writing data for BKR to DB: schema "np" does not exist
LINE 4:             VALUES ('BKR','2020-01-01'::date,np.float64(22.1...
                                                     ^

2025-01-09 02:17:42,242 - DEBUG - Entering download()
2025-01-09 02:17:42,242 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:42,242 - DEBUG -  Entering history()
2025-01-09 02:17:42,242 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BALL', 1, 0])
2025-01-09 02:17:42,242 - DEBUG -   Entering history()
2025-01-09 02:17:42,243 - DEBUG - BALL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:42,244 - DEBUG -    Entering get()
2025-01-09 02:17:42,244 - DEBUG -     Entering _make_request()
2025-01-09 02:17:42,244 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BALL
2025-01-09 02:17:42,244 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:42,244 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:42,244 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:42,244 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:42,244 - DEBUG - reusing cookie
2025-01-09 02:17:42,244 - DEBUG - reusing crumb
2025-01-09 02:17:42,244 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:42,244 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:42,439 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BALL?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1189
2025-01-09 02:17:42,439 - DEBUG - response code=200
2025-01-09 02:17:42,439 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:42,439 - DEBUG -    Exiting get()
2025-01-09 02:17:42,441 - DEBUG - BALL: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:42,441 - DEBUG - BALL: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:42,445 - DEBUG - BALL: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:42,451 - DEBUG - BALL: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:42,451 - DEBUG -   Exiting history()
2025-01-09 02:17:42,451 - DEBUG -  Exiting history()
2025-01-09 02:17:42,454 - DEBUG - Exiting download()
2025-01-09 02:17:42,575 - ERROR - Error writing data for BALL to DB: schema "np" does not exist
LINE 4:             VALUES ('BALL','2020-01-01'::date,np.float64(61....
                                                      ^

2025-01-09 02:17:42,576 - DEBUG - Entering download()
2025-01-09 02:17:42,576 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:42,576 - DEBUG -  Entering history()
2025-01-09 02:17:42,576 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BAC', 1, 0])
2025-01-09 02:17:42,577 - DEBUG -   Entering history()
2025-01-09 02:17:42,577 - DEBUG - BAC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:42,578 - DEBUG -    Entering get()
2025-01-09 02:17:42,578 - DEBUG -     Entering _make_request()
2025-01-09 02:17:42,578 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BAC
2025-01-09 02:17:42,578 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:42,578 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:42,578 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:42,578 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:42,578 - DEBUG - reusing cookie
2025-01-09 02:17:42,578 - DEBUG - reusing crumb
2025-01-09 02:17:42,578 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:42,578 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:42,795 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BAC?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1214
2025-01-09 02:17:42,796 - DEBUG - response code=200
2025-01-09 02:17:42,796 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:42,796 - DEBUG -    Exiting get()
2025-01-09 02:17:42,797 - DEBUG - BAC: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:42,798 - DEBUG - BAC: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:42,802 - DEBUG - BAC: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:42,808 - DEBUG - BAC: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:42,808 - DEBUG -   Exiting history()
2025-01-09 02:17:42,808 - DEBUG -  Exiting history()
2025-01-09 02:17:42,810 - DEBUG - Exiting download()
2025-01-09 02:17:43,045 - ERROR - Error writing data for BAC to DB: schema "np" does not exist
LINE 4:             VALUES ('BAC','2020-01-01'::date,np.float64(31.2...
                                                     ^

2025-01-09 02:17:43,046 - DEBUG - Entering download()
2025-01-09 02:17:43,046 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:43,046 - DEBUG -  Entering history()
2025-01-09 02:17:43,046 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BAX', 1, 0])
2025-01-09 02:17:43,047 - DEBUG -   Entering history()
2025-01-09 02:17:43,047 - DEBUG - BAX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:43,047 - DEBUG -    Entering get()
2025-01-09 02:17:43,047 - DEBUG -     Entering _make_request()
2025-01-09 02:17:43,048 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BAX
2025-01-09 02:17:43,048 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:43,048 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:43,048 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:43,048 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:43,048 - DEBUG - reusing cookie
2025-01-09 02:17:43,048 - DEBUG - reusing crumb
2025-01-09 02:17:43,048 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:43,048 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:43,254 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BAX?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1193
2025-01-09 02:17:43,254 - DEBUG - response code=200
2025-01-09 02:17:43,255 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:43,255 - DEBUG -    Exiting get()
2025-01-09 02:17:43,256 - DEBUG - BAX: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:43,257 - DEBUG - BAX: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:43,260 - DEBUG - BAX: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:43,266 - DEBUG - BAX: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:43,266 - DEBUG -   Exiting history()
2025-01-09 02:17:43,266 - DEBUG -  Exiting history()
2025-01-09 02:17:43,268 - DEBUG - Exiting download()
2025-01-09 02:17:43,519 - ERROR - Error writing data for BAX to DB: schema "np" does not exist
LINE 4:             VALUES ('BAX','2020-01-01'::date,np.float64(76.8...
                                                     ^

2025-01-09 02:17:43,520 - DEBUG - Entering download()
2025-01-09 02:17:43,520 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:43,520 - DEBUG -  Entering history()
2025-01-09 02:17:43,521 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BDX', 1, 0])
2025-01-09 02:17:43,521 - DEBUG -   Entering history()
2025-01-09 02:17:43,522 - DEBUG - BDX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:43,522 - DEBUG -    Entering get()
2025-01-09 02:17:43,522 - DEBUG -     Entering _make_request()
2025-01-09 02:17:43,522 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BDX
2025-01-09 02:17:43,522 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:43,522 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:43,522 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:43,522 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:43,522 - DEBUG - reusing cookie
2025-01-09 02:17:43,522 - DEBUG - reusing crumb
2025-01-09 02:17:43,522 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:43,522 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:43,729 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BDX?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1218
2025-01-09 02:17:43,729 - DEBUG - response code=200
2025-01-09 02:17:43,729 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:43,730 - DEBUG -    Exiting get()
2025-01-09 02:17:43,731 - DEBUG - BDX: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:43,732 - DEBUG - BDX: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:43,735 - DEBUG - BDX: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:43,739 - DEBUG - BDX: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:43,739 - DEBUG -   Exiting history()
2025-01-09 02:17:43,739 - DEBUG -  Exiting history()
2025-01-09 02:17:43,741 - DEBUG - Exiting download()
2025-01-09 02:17:43,901 - DEBUG - Entering download()
2025-01-09 02:17:43,901 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:43,901 - DEBUG -  Entering history()
2025-01-09 02:17:43,902 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BRK-B', 1, 0])
2025-01-09 02:17:43,902 - DEBUG -   Entering history()
2025-01-09 02:17:43,902 - DEBUG - BRK-B: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:43,903 - DEBUG -    Entering get()
2025-01-09 02:17:43,903 - DEBUG -     Entering _make_request()
2025-01-09 02:17:43,903 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BRK-B
2025-01-09 02:17:43,903 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:43,903 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:43,903 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:43,903 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:43,903 - DEBUG - reusing cookie
2025-01-09 02:17:43,903 - DEBUG - reusing crumb
2025-01-09 02:17:43,903 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:43,903 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:44,065 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BRK-B?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1216
2025-01-09 02:17:44,065 - DEBUG - response code=200
2025-01-09 02:17:44,065 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:44,065 - DEBUG -    Exiting get()
2025-01-09 02:17:44,067 - DEBUG - BRK-B: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:44,068 - DEBUG - BRK-B: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:44,071 - DEBUG - BRK-B: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:44,077 - DEBUG - BRK-B: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:44,077 - DEBUG -   Exiting history()
2025-01-09 02:17:44,077 - DEBUG -  Exiting history()
2025-01-09 02:17:44,079 - DEBUG - Exiting download()
2025-01-09 02:17:44,221 - ERROR - Error writing data for BRK-B to DB: schema "np" does not exist
LINE 4:             VALUES ('BRK-B','2020-01-01'::date,np.float64(22...
                                                       ^

2025-01-09 02:17:44,222 - DEBUG - Entering download()
2025-01-09 02:17:44,222 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:44,222 - DEBUG -  Entering history()
2025-01-09 02:17:44,222 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BBY', 1, 0])
2025-01-09 02:17:44,223 - DEBUG -   Entering history()
2025-01-09 02:17:44,224 - DEBUG - BBY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:44,224 - DEBUG -    Entering get()
2025-01-09 02:17:44,224 - DEBUG -     Entering _make_request()
2025-01-09 02:17:44,224 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BBY
2025-01-09 02:17:44,224 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:44,224 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:44,224 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:44,224 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:44,224 - DEBUG - reusing cookie
2025-01-09 02:17:44,224 - DEBUG - reusing crumb
2025-01-09 02:17:44,224 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:44,224 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:44,413 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BBY?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1191
2025-01-09 02:17:44,413 - DEBUG - response code=200
2025-01-09 02:17:44,413 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:44,413 - DEBUG -    Exiting get()
2025-01-09 02:17:44,415 - DEBUG - BBY: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:44,416 - DEBUG - BBY: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:44,420 - DEBUG - BBY: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:44,425 - DEBUG - BBY: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:44,425 - DEBUG -   Exiting history()
2025-01-09 02:17:44,425 - DEBUG -  Exiting history()
2025-01-09 02:17:44,427 - DEBUG - Exiting download()
2025-01-09 02:17:44,682 - ERROR - Error writing data for BBY to DB: schema "np" does not exist
LINE 4:             VALUES ('BBY','2020-01-01'::date,np.float64(73.2...
                                                     ^

2025-01-09 02:17:44,682 - DEBUG - Entering download()
2025-01-09 02:17:44,682 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:44,682 - DEBUG -  Entering history()
2025-01-09 02:17:44,683 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TECH', 1, 0])
2025-01-09 02:17:44,683 - DEBUG -   Entering history()
2025-01-09 02:17:44,684 - DEBUG - TECH: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:44,684 - DEBUG -    Entering get()
2025-01-09 02:17:44,684 - DEBUG -     Entering _make_request()
2025-01-09 02:17:44,684 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TECH
2025-01-09 02:17:44,684 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:44,684 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:44,684 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:44,684 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:44,684 - DEBUG - reusing cookie
2025-01-09 02:17:44,684 - DEBUG - reusing crumb
2025-01-09 02:17:44,684 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:44,685 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:44,850 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TECH?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1198
2025-01-09 02:17:44,850 - DEBUG - response code=200
2025-01-09 02:17:44,850 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:44,851 - DEBUG -    Exiting get()
2025-01-09 02:17:44,852 - DEBUG - TECH: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:44,853 - DEBUG - TECH: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:44,856 - DEBUG - TECH: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:44,861 - DEBUG - TECH: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:44,861 - DEBUG -   Exiting history()
2025-01-09 02:17:44,861 - DEBUG -  Exiting history()
2025-01-09 02:17:44,863 - DEBUG - Exiting download()
2025-01-09 02:17:45,130 - ERROR - Error writing data for TECH to DB: schema "np" does not exist
LINE 4:             VALUES ('TECH','2020-01-01'::date,np.float64(54....
                                                      ^

2025-01-09 02:17:45,130 - DEBUG - Entering download()
2025-01-09 02:17:45,130 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:45,130 - DEBUG -  Entering history()
2025-01-09 02:17:45,131 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BIIB', 1, 0])
2025-01-09 02:17:45,131 - DEBUG -   Entering history()
2025-01-09 02:17:45,132 - DEBUG - BIIB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:45,132 - DEBUG -    Entering get()
2025-01-09 02:17:45,132 - DEBUG -     Entering _make_request()
2025-01-09 02:17:45,132 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BIIB
2025-01-09 02:17:45,132 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:45,132 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:45,132 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:45,132 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:45,132 - DEBUG - reusing cookie
2025-01-09 02:17:45,132 - DEBUG - reusing crumb
2025-01-09 02:17:45,132 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:45,132 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:45,285 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BIIB?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1186
2025-01-09 02:17:45,286 - DEBUG - response code=200
2025-01-09 02:17:45,286 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:45,286 - DEBUG -    Exiting get()
2025-01-09 02:17:45,289 - DEBUG - BIIB: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:45,290 - DEBUG - BIIB: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:45,293 - DEBUG - BIIB: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:45,299 - DEBUG - BIIB: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:45,299 - DEBUG -   Exiting history()
2025-01-09 02:17:45,299 - DEBUG -  Exiting history()
2025-01-09 02:17:45,303 - DEBUG - Exiting download()
2025-01-09 02:17:45,544 - ERROR - Error writing data for BIIB to DB: schema "np" does not exist
LINE 4:             VALUES ('BIIB','2020-01-01'::date,np.float64(299...
                                                      ^

2025-01-09 02:17:45,545 - DEBUG - Entering download()
2025-01-09 02:17:45,545 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:45,545 - DEBUG -  Entering history()
2025-01-09 02:17:45,545 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BLK', 1, 0])
2025-01-09 02:17:45,546 - DEBUG -   Entering history()
2025-01-09 02:17:45,547 - DEBUG - BLK: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:45,547 - DEBUG -    Entering get()
2025-01-09 02:17:45,547 - DEBUG -     Entering _make_request()
2025-01-09 02:17:45,547 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BLK
2025-01-09 02:17:45,547 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:45,547 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:45,547 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:45,547 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:45,547 - DEBUG - reusing cookie
2025-01-09 02:17:45,547 - DEBUG - reusing crumb
2025-01-09 02:17:45,548 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:45,548 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:45,730 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BLK?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1165
2025-01-09 02:17:45,732 - DEBUG - response code=200
2025-01-09 02:17:45,732 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:45,732 - DEBUG -    Exiting get()
2025-01-09 02:17:45,734 - DEBUG - BLK: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:45,735 - DEBUG - BLK: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:45,740 - DEBUG - BLK: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:45,746 - DEBUG - BLK: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:45,746 - DEBUG -   Exiting history()
2025-01-09 02:17:45,746 - DEBUG -  Exiting history()
2025-01-09 02:17:45,749 - DEBUG - Exiting download()
2025-01-09 02:17:45,909 - DEBUG - Entering download()
2025-01-09 02:17:45,909 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:45,909 - DEBUG -  Entering history()
2025-01-09 02:17:45,910 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BX', 1, 0])
2025-01-09 02:17:45,910 - DEBUG -   Entering history()
2025-01-09 02:17:45,911 - DEBUG - BX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:45,911 - DEBUG -    Entering get()
2025-01-09 02:17:45,911 - DEBUG -     Entering _make_request()
2025-01-09 02:17:45,911 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BX
2025-01-09 02:17:45,911 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:45,912 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:45,912 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:45,912 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:45,912 - DEBUG - reusing cookie
2025-01-09 02:17:45,912 - DEBUG - reusing crumb
2025-01-09 02:17:45,912 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:45,912 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:46,082 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BX?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1190
2025-01-09 02:17:46,083 - DEBUG - response code=200
2025-01-09 02:17:46,083 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:46,083 - DEBUG -    Exiting get()
2025-01-09 02:17:46,084 - DEBUG - BX: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:46,085 - DEBUG - BX: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:46,089 - DEBUG - BX: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:46,094 - DEBUG - BX: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:46,094 - DEBUG -   Exiting history()
2025-01-09 02:17:46,095 - DEBUG -  Exiting history()
2025-01-09 02:17:46,097 - DEBUG - Exiting download()
2025-01-09 02:17:46,244 - ERROR - Error writing data for BX to DB: schema "np" does not exist
LINE 4:             VALUES ('BX','2020-01-01'::date,np.float64(47.15...
                                                    ^

2025-01-09 02:17:46,244 - DEBUG - Entering download()
2025-01-09 02:17:46,244 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:46,244 - DEBUG -  Entering history()
2025-01-09 02:17:46,245 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BK', 1, 0])
2025-01-09 02:17:46,245 - DEBUG -   Entering history()
2025-01-09 02:17:46,246 - DEBUG - BK: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:46,246 - DEBUG -    Entering get()
2025-01-09 02:17:46,246 - DEBUG -     Entering _make_request()
2025-01-09 02:17:46,246 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BK
2025-01-09 02:17:46,246 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:46,246 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:46,247 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:46,247 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:46,247 - DEBUG - reusing cookie
2025-01-09 02:17:46,247 - DEBUG - reusing crumb
2025-01-09 02:17:46,247 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:46,247 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:46,465 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BK?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1227
2025-01-09 02:17:46,465 - DEBUG - response code=200
2025-01-09 02:17:46,465 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:46,466 - DEBUG -    Exiting get()
2025-01-09 02:17:46,467 - DEBUG - BK: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:46,468 - DEBUG - BK: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:46,472 - DEBUG - BK: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:46,479 - DEBUG - BK: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:46,479 - DEBUG -   Exiting history()
2025-01-09 02:17:46,479 - DEBUG -  Exiting history()
2025-01-09 02:17:46,482 - DEBUG - Exiting download()
2025-01-09 02:17:46,524 - DEBUG - Entering download()
2025-01-09 02:17:46,524 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:46,524 - DEBUG -  Entering history()
2025-01-09 02:17:46,525 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BA', 1, 0])
2025-01-09 02:17:46,525 - DEBUG -   Entering history()
2025-01-09 02:17:46,525 - DEBUG - BA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:46,526 - DEBUG -    Entering get()
2025-01-09 02:17:46,526 - DEBUG -     Entering _make_request()
2025-01-09 02:17:46,526 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BA
2025-01-09 02:17:46,526 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:46,526 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:46,526 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:46,526 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:46,526 - DEBUG - reusing cookie
2025-01-09 02:17:46,526 - DEBUG - reusing crumb
2025-01-09 02:17:46,526 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:46,526 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:46,737 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BA?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1204
2025-01-09 02:17:46,738 - DEBUG - response code=200
2025-01-09 02:17:46,738 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:46,738 - DEBUG -    Exiting get()
2025-01-09 02:17:46,739 - DEBUG - BA: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:46,740 - DEBUG - BA: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:46,742 - DEBUG - BA: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:46,746 - DEBUG - BA: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:46,746 - DEBUG -   Exiting history()
2025-01-09 02:17:46,746 - DEBUG -  Exiting history()
2025-01-09 02:17:46,748 - DEBUG - Exiting download()
2025-01-09 02:17:46,892 - ERROR - Error writing data for BA to DB: schema "np" does not exist
LINE 4:             VALUES ('BA','2020-01-01'::date,np.float64(326.6...
                                                    ^

2025-01-09 02:17:46,893 - DEBUG - Entering download()
2025-01-09 02:17:46,893 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:46,893 - DEBUG -  Entering history()
2025-01-09 02:17:46,893 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BKNG', 1, 0])
2025-01-09 02:17:46,894 - DEBUG -   Entering history()
2025-01-09 02:17:46,894 - DEBUG - BKNG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:46,895 - DEBUG -    Entering get()
2025-01-09 02:17:46,895 - DEBUG -     Entering _make_request()
2025-01-09 02:17:46,895 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BKNG
2025-01-09 02:17:46,895 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:46,895 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:46,895 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:46,895 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:46,895 - DEBUG - reusing cookie
2025-01-09 02:17:46,895 - DEBUG - reusing crumb
2025-01-09 02:17:46,895 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:46,895 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:47,053 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BKNG?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1212
2025-01-09 02:17:47,053 - DEBUG - response code=200
2025-01-09 02:17:47,053 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:47,053 - DEBUG -    Exiting get()
2025-01-09 02:17:47,054 - DEBUG - BKNG: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:47,055 - DEBUG - BKNG: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:47,059 - DEBUG - BKNG: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:47,065 - DEBUG - BKNG: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:47,066 - DEBUG -   Exiting history()
2025-01-09 02:17:47,066 - DEBUG -  Exiting history()
2025-01-09 02:17:47,068 - DEBUG - Exiting download()
2025-01-09 02:17:47,195 - ERROR - Error writing data for BKNG to DB: schema "np" does not exist
LINE 4:             VALUES ('BKNG','2020-01-01'::date,np.float64(205...
                                                      ^

2025-01-09 02:17:47,196 - DEBUG - Entering download()
2025-01-09 02:17:47,196 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:47,196 - DEBUG -  Entering history()
2025-01-09 02:17:47,197 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BWA', 1, 0])
2025-01-09 02:17:47,197 - DEBUG -   Entering history()
2025-01-09 02:17:47,198 - DEBUG - BWA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:47,198 - DEBUG -    Entering get()
2025-01-09 02:17:47,198 - DEBUG -     Entering _make_request()
2025-01-09 02:17:47,198 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BWA
2025-01-09 02:17:47,198 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:47,198 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:47,198 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:47,198 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:47,198 - DEBUG - reusing cookie
2025-01-09 02:17:47,198 - DEBUG - reusing crumb
2025-01-09 02:17:47,198 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:47,198 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:47,374 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BWA?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1186
2025-01-09 02:17:47,375 - DEBUG - response code=200
2025-01-09 02:17:47,375 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:47,375 - DEBUG -    Exiting get()
2025-01-09 02:17:47,376 - DEBUG - BWA: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:47,377 - DEBUG - BWA: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:47,381 - DEBUG - BWA: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:47,386 - DEBUG - BWA: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:47,386 - DEBUG -   Exiting history()
2025-01-09 02:17:47,386 - DEBUG -  Exiting history()
2025-01-09 02:17:47,388 - DEBUG - Exiting download()
2025-01-09 02:17:47,636 - ERROR - Error writing data for BWA to DB: schema "np" does not exist
LINE 4:             VALUES ('BWA','2020-01-01'::date,np.float64(35.8...
                                                     ^

2025-01-09 02:17:47,636 - DEBUG - Entering download()
2025-01-09 02:17:47,636 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:47,637 - DEBUG -  Entering history()
2025-01-09 02:17:47,637 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BSX', 1, 0])
2025-01-09 02:17:47,637 - DEBUG -   Entering history()
2025-01-09 02:17:47,638 - DEBUG - BSX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:47,638 - DEBUG -    Entering get()
2025-01-09 02:17:47,638 - DEBUG -     Entering _make_request()
2025-01-09 02:17:47,638 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BSX
2025-01-09 02:17:47,638 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:47,638 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:47,638 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:47,638 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:47,638 - DEBUG - reusing cookie
2025-01-09 02:17:47,638 - DEBUG - reusing crumb
2025-01-09 02:17:47,638 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:47,638 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:47,790 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BSX?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1203
2025-01-09 02:17:47,791 - DEBUG - response code=200
2025-01-09 02:17:47,791 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:47,791 - DEBUG -    Exiting get()
2025-01-09 02:17:47,792 - DEBUG - BSX: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:47,793 - DEBUG - BSX: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:47,797 - DEBUG - BSX: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:47,803 - DEBUG - BSX: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:47,804 - DEBUG -   Exiting history()
2025-01-09 02:17:47,804 - DEBUG -  Exiting history()
2025-01-09 02:17:47,807 - DEBUG - Exiting download()
2025-01-09 02:17:47,967 - ERROR - Error writing data for BSX to DB: schema "np" does not exist
LINE 4:             VALUES ('BSX','2020-01-01'::date,np.float64(45.5...
                                                     ^

2025-01-09 02:17:47,967 - DEBUG - Entering download()
2025-01-09 02:17:47,968 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:47,968 - DEBUG -  Entering history()
2025-01-09 02:17:47,968 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BMY', 1, 0])
2025-01-09 02:17:47,968 - DEBUG -   Entering history()
2025-01-09 02:17:47,969 - DEBUG - BMY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:47,969 - DEBUG -    Entering get()
2025-01-09 02:17:47,969 - DEBUG -     Entering _make_request()
2025-01-09 02:17:47,969 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BMY
2025-01-09 02:17:47,969 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:47,969 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:47,969 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:47,969 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:47,969 - DEBUG - reusing cookie
2025-01-09 02:17:47,969 - DEBUG - reusing crumb
2025-01-09 02:17:47,969 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:47,970 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:48,253 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BMY?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1273
2025-01-09 02:17:48,253 - DEBUG - response code=200
2025-01-09 02:17:48,253 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:48,253 - DEBUG -    Exiting get()
2025-01-09 02:17:48,255 - DEBUG - BMY: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:48,256 - DEBUG - BMY: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:48,261 - DEBUG - BMY: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:48,267 - DEBUG - BMY: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:48,268 - DEBUG -   Exiting history()
2025-01-09 02:17:48,268 - DEBUG -  Exiting history()
2025-01-09 02:17:48,270 - DEBUG - Exiting download()
2025-01-09 02:17:48,388 - ERROR - Error writing data for BMY to DB: schema "np" does not exist
LINE 4:             VALUES ('BMY','2020-01-01'::date,np.float64(52.9...
                                                     ^

2025-01-09 02:17:48,389 - DEBUG - Entering download()
2025-01-09 02:17:48,389 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:48,389 - DEBUG -  Entering history()
2025-01-09 02:17:48,390 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['AVGO', 1, 0])
2025-01-09 02:17:48,390 - DEBUG -   Entering history()
2025-01-09 02:17:48,391 - DEBUG - AVGO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:48,391 - DEBUG -    Entering get()
2025-01-09 02:17:48,391 - DEBUG -     Entering _make_request()
2025-01-09 02:17:48,391 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/AVGO
2025-01-09 02:17:48,391 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:48,391 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:48,391 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:48,391 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:48,391 - DEBUG - reusing cookie
2025-01-09 02:17:48,391 - DEBUG - reusing crumb
2025-01-09 02:17:48,391 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:48,391 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:48,571 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/AVGO?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1184
2025-01-09 02:17:48,571 - DEBUG - response code=200
2025-01-09 02:17:48,571 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:48,572 - DEBUG -    Exiting get()
2025-01-09 02:17:48,573 - DEBUG - AVGO: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:48,574 - DEBUG - AVGO: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:48,578 - DEBUG - AVGO: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:48,584 - DEBUG - AVGO: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:48,584 - DEBUG -   Exiting history()
2025-01-09 02:17:48,584 - DEBUG -  Exiting history()
2025-01-09 02:17:48,587 - DEBUG - Exiting download()
2025-01-09 02:17:48,731 - ERROR - Error writing data for AVGO to DB: schema "np" does not exist
LINE 4:             VALUES ('AVGO','2020-01-01'::date,np.float64(27....
                                                      ^

2025-01-09 02:17:48,731 - DEBUG - Entering download()
2025-01-09 02:17:48,732 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:48,732 - DEBUG -  Entering history()
2025-01-09 02:17:48,732 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BR', 1, 0])
2025-01-09 02:17:48,732 - DEBUG -   Entering history()
2025-01-09 02:17:48,733 - DEBUG - BR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:48,733 - DEBUG -    Entering get()
2025-01-09 02:17:48,734 - DEBUG -     Entering _make_request()
2025-01-09 02:17:48,734 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BR
2025-01-09 02:17:48,734 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:48,734 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:48,734 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:48,734 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:48,734 - DEBUG - reusing cookie
2025-01-09 02:17:48,734 - DEBUG - reusing crumb
2025-01-09 02:17:48,734 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:48,734 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:48,907 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1230
2025-01-09 02:17:48,908 - DEBUG - response code=200
2025-01-09 02:17:48,908 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:48,908 - DEBUG -    Exiting get()
2025-01-09 02:17:48,909 - DEBUG - BR: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:48,910 - DEBUG - BR: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:48,914 - DEBUG - BR: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:48,920 - DEBUG - BR: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:48,921 - DEBUG -   Exiting history()
2025-01-09 02:17:48,921 - DEBUG -  Exiting history()
2025-01-09 02:17:48,924 - DEBUG - Exiting download()
2025-01-09 02:17:48,974 - DEBUG - Entering download()
2025-01-09 02:17:48,974 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:48,974 - DEBUG -  Entering history()
2025-01-09 02:17:48,975 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BRO', 1, 0])
2025-01-09 02:17:48,975 - DEBUG -   Entering history()
2025-01-09 02:17:48,976 - DEBUG - BRO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:48,976 - DEBUG -    Entering get()
2025-01-09 02:17:48,976 - DEBUG -     Entering _make_request()
2025-01-09 02:17:48,976 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BRO
2025-01-09 02:17:48,976 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:48,976 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:48,976 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:48,976 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:48,977 - DEBUG - reusing cookie
2025-01-09 02:17:48,977 - DEBUG - reusing crumb
2025-01-09 02:17:48,977 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:48,977 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:49,173 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BRO?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1197
2025-01-09 02:17:49,174 - DEBUG - response code=200
2025-01-09 02:17:49,174 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:49,174 - DEBUG -    Exiting get()
2025-01-09 02:17:49,175 - DEBUG - BRO: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:49,176 - DEBUG - BRO: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:49,180 - DEBUG - BRO: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:49,186 - DEBUG - BRO: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:49,186 - DEBUG -   Exiting history()
2025-01-09 02:17:49,186 - DEBUG -  Exiting history()
2025-01-09 02:17:49,189 - DEBUG - Exiting download()
2025-01-09 02:17:49,325 - ERROR - Error writing data for BRO to DB: schema "np" does not exist
LINE 4:             VALUES ('BRO','2020-01-01'::date,np.float64(38.2...
                                                     ^

2025-01-09 02:17:49,326 - DEBUG - Entering download()
2025-01-09 02:17:49,326 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:49,326 - DEBUG -  Entering history()
2025-01-09 02:17:49,327 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BF-B', 1, 0])
2025-01-09 02:17:49,327 - DEBUG -   Entering history()
2025-01-09 02:17:49,328 - DEBUG - BF-B: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:49,328 - DEBUG -    Entering get()
2025-01-09 02:17:49,328 - DEBUG -     Entering _make_request()
2025-01-09 02:17:49,328 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BF-B
2025-01-09 02:17:49,328 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:49,328 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:49,328 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:49,328 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:49,328 - DEBUG - reusing cookie
2025-01-09 02:17:49,328 - DEBUG - reusing crumb
2025-01-09 02:17:49,328 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:49,328 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:49,555 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BF-B?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1193
2025-01-09 02:17:49,556 - DEBUG - response code=200
2025-01-09 02:17:49,556 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:49,556 - DEBUG -    Exiting get()
2025-01-09 02:17:49,557 - DEBUG - BF-B: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:49,558 - DEBUG - BF-B: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:49,562 - DEBUG - BF-B: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:49,566 - DEBUG - BF-B: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:49,566 - DEBUG -   Exiting history()
2025-01-09 02:17:49,566 - DEBUG -  Exiting history()
2025-01-09 02:17:49,568 - DEBUG - Exiting download()
2025-01-09 02:17:49,824 - ERROR - Error writing data for BF-B to DB: schema "np" does not exist
LINE 4:             VALUES ('BF-B','2020-01-01'::date,np.float64(62....
                                                      ^

2025-01-09 02:17:49,824 - DEBUG - Entering download()
2025-01-09 02:17:49,824 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:49,825 - DEBUG -  Entering history()
2025-01-09 02:17:49,825 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BLDR', 1, 0])
2025-01-09 02:17:49,825 - DEBUG -   Entering history()
2025-01-09 02:17:49,826 - DEBUG - BLDR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:49,826 - DEBUG -    Entering get()
2025-01-09 02:17:49,826 - DEBUG -     Entering _make_request()
2025-01-09 02:17:49,826 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BLDR
2025-01-09 02:17:49,826 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:49,826 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:49,826 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:49,826 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:49,827 - DEBUG - reusing cookie
2025-01-09 02:17:49,827 - DEBUG - reusing crumb
2025-01-09 02:17:49,827 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:49,827 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:50,013 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BLDR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1213
2025-01-09 02:17:50,013 - DEBUG - response code=200
2025-01-09 02:17:50,014 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:50,014 - DEBUG -    Exiting get()
2025-01-09 02:17:50,015 - DEBUG - BLDR: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:50,016 - DEBUG - BLDR: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:50,020 - DEBUG - BLDR: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:50,027 - DEBUG - BLDR: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:50,027 - DEBUG -   Exiting history()
2025-01-09 02:17:50,027 - DEBUG -  Exiting history()
2025-01-09 02:17:50,029 - DEBUG - Exiting download()
2025-01-09 02:17:50,175 - ERROR - Error writing data for BLDR to DB: schema "np" does not exist
LINE 4:             VALUES ('BLDR','2020-01-01'::date,np.float64(25....
                                                      ^

2025-01-09 02:17:50,176 - DEBUG - Entering download()
2025-01-09 02:17:50,176 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:50,176 - DEBUG -  Entering history()
2025-01-09 02:17:50,177 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BG', 1, 0])
2025-01-09 02:17:50,177 - DEBUG -   Entering history()
2025-01-09 02:17:50,178 - DEBUG - BG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:50,178 - DEBUG -    Entering get()
2025-01-09 02:17:50,178 - DEBUG -     Entering _make_request()
2025-01-09 02:17:50,178 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BG
2025-01-09 02:17:50,178 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:50,178 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:50,178 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:50,178 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:50,178 - DEBUG - reusing cookie
2025-01-09 02:17:50,178 - DEBUG - reusing crumb
2025-01-09 02:17:50,179 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:50,179 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:50,415 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BG?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1186
2025-01-09 02:17:50,417 - DEBUG - response code=200
2025-01-09 02:17:50,417 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:50,417 - DEBUG -    Exiting get()
2025-01-09 02:17:50,419 - DEBUG - BG: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:50,421 - DEBUG - BG: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:50,426 - DEBUG - BG: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:50,433 - DEBUG - BG: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:50,434 - DEBUG -   Exiting history()
2025-01-09 02:17:50,434 - DEBUG -  Exiting history()
2025-01-09 02:17:50,437 - DEBUG - Exiting download()
2025-01-09 02:17:50,585 - ERROR - Error writing data for BG to DB: schema "np" does not exist
LINE 4:             VALUES ('BG','2020-01-01'::date,np.float64(50.18...
                                                    ^

2025-01-09 02:17:50,586 - DEBUG - Entering download()
2025-01-09 02:17:50,586 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:50,586 - DEBUG -  Entering history()
2025-01-09 02:17:50,587 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BXP', 1, 0])
2025-01-09 02:17:50,587 - DEBUG -   Entering history()
2025-01-09 02:17:50,588 - DEBUG - BXP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:50,588 - DEBUG -    Entering get()
2025-01-09 02:17:50,588 - DEBUG -     Entering _make_request()
2025-01-09 02:17:50,588 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BXP
2025-01-09 02:17:50,588 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:50,588 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:50,588 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:50,588 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:50,588 - DEBUG - reusing cookie
2025-01-09 02:17:50,589 - DEBUG - reusing crumb
2025-01-09 02:17:50,589 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:50,589 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:50,878 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BXP?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1176
2025-01-09 02:17:50,879 - DEBUG - response code=200
2025-01-09 02:17:50,879 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:50,879 - DEBUG -    Exiting get()
2025-01-09 02:17:50,880 - DEBUG - BXP: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:50,882 - DEBUG - BXP: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:50,885 - DEBUG - BXP: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:50,892 - DEBUG - BXP: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:50,892 - DEBUG -   Exiting history()
2025-01-09 02:17:50,892 - DEBUG -  Exiting history()
2025-01-09 02:17:50,894 - DEBUG - Exiting download()
2025-01-09 02:17:50,936 - DEBUG - Entering download()
2025-01-09 02:17:50,936 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:50,936 - DEBUG -  Entering history()
2025-01-09 02:17:50,936 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CHRW', 1, 0])
2025-01-09 02:17:50,936 - DEBUG -   Entering history()
2025-01-09 02:17:50,937 - DEBUG - CHRW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:50,938 - DEBUG -    Entering get()
2025-01-09 02:17:50,938 - DEBUG -     Entering _make_request()
2025-01-09 02:17:50,938 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CHRW
2025-01-09 02:17:50,938 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:50,938 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:50,938 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:50,938 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:50,938 - DEBUG - reusing cookie
2025-01-09 02:17:50,938 - DEBUG - reusing crumb
2025-01-09 02:17:50,938 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:50,938 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:51,134 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CHRW?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1193
2025-01-09 02:17:51,134 - DEBUG - response code=200
2025-01-09 02:17:51,135 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:51,135 - DEBUG -    Exiting get()
2025-01-09 02:17:51,136 - DEBUG - CHRW: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:51,137 - DEBUG - CHRW: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:51,141 - DEBUG - CHRW: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:51,147 - DEBUG - CHRW: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:51,148 - DEBUG -   Exiting history()
2025-01-09 02:17:51,148 - DEBUG -  Exiting history()
2025-01-09 02:17:51,150 - DEBUG - Exiting download()
2025-01-09 02:17:51,403 - ERROR - Error writing data for CHRW to DB: schema "np" does not exist
LINE 4:             VALUES ('CHRW','2020-01-01'::date,np.float64(69....
                                                      ^

2025-01-09 02:17:51,404 - DEBUG - Entering download()
2025-01-09 02:17:51,404 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:51,404 - DEBUG -  Entering history()
2025-01-09 02:17:51,405 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CDNS', 1, 0])
2025-01-09 02:17:51,405 - DEBUG -   Entering history()
2025-01-09 02:17:51,406 - DEBUG - CDNS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:51,406 - DEBUG -    Entering get()
2025-01-09 02:17:51,406 - DEBUG -     Entering _make_request()
2025-01-09 02:17:51,406 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CDNS
2025-01-09 02:17:51,406 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:51,406 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:51,406 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:51,406 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:51,406 - DEBUG - reusing cookie
2025-01-09 02:17:51,407 - DEBUG - reusing crumb
2025-01-09 02:17:51,407 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:51,407 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:51,568 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CDNS?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1221
2025-01-09 02:17:51,568 - DEBUG - response code=200
2025-01-09 02:17:51,568 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:51,568 - DEBUG -    Exiting get()
2025-01-09 02:17:51,569 - DEBUG - CDNS: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:51,570 - DEBUG - CDNS: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:51,574 - DEBUG - CDNS: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:51,579 - DEBUG - CDNS: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:51,580 - DEBUG -   Exiting history()
2025-01-09 02:17:51,580 - DEBUG -  Exiting history()
2025-01-09 02:17:51,582 - DEBUG - Exiting download()
2025-01-09 02:17:51,831 - ERROR - Error writing data for CDNS to DB: schema "np" does not exist
LINE 4:             VALUES ('CDNS','2020-01-01'::date,np.float64(70....
                                                      ^

2025-01-09 02:17:51,832 - DEBUG - Entering download()
2025-01-09 02:17:51,832 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:51,832 - DEBUG -  Entering history()
2025-01-09 02:17:51,832 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CZR', 1, 0])
2025-01-09 02:17:51,833 - DEBUG -   Entering history()
2025-01-09 02:17:51,834 - DEBUG - CZR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:51,834 - DEBUG -    Entering get()
2025-01-09 02:17:51,834 - DEBUG -     Entering _make_request()
2025-01-09 02:17:51,834 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CZR
2025-01-09 02:17:51,834 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:51,834 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:51,834 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:51,834 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:51,834 - DEBUG - reusing cookie
2025-01-09 02:17:51,834 - DEBUG - reusing crumb
2025-01-09 02:17:51,834 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:51,834 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:51,989 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CZR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1211
2025-01-09 02:17:51,989 - DEBUG - response code=200
2025-01-09 02:17:51,989 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:51,989 - DEBUG -    Exiting get()
2025-01-09 02:17:51,991 - DEBUG - CZR: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:51,992 - DEBUG - CZR: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:51,996 - DEBUG - CZR: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:52,002 - DEBUG - CZR: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:52,002 - DEBUG -   Exiting history()
2025-01-09 02:17:52,002 - DEBUG -  Exiting history()
2025-01-09 02:17:52,004 - DEBUG - Exiting download()
2025-01-09 02:17:52,139 - ERROR - Error writing data for CZR to DB: schema "np" does not exist
LINE 4:             VALUES ('CZR','2020-01-01'::date,np.float64(60.2...
                                                     ^

2025-01-09 02:17:52,140 - DEBUG - Entering download()
2025-01-09 02:17:52,140 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:52,140 - DEBUG -  Entering history()
2025-01-09 02:17:52,140 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CPT', 1, 0])
2025-01-09 02:17:52,141 - DEBUG -   Entering history()
2025-01-09 02:17:52,142 - DEBUG - CPT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:52,142 - DEBUG -    Entering get()
2025-01-09 02:17:52,142 - DEBUG -     Entering _make_request()
2025-01-09 02:17:52,142 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CPT
2025-01-09 02:17:52,142 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:52,142 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:52,142 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:52,142 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:52,142 - DEBUG - reusing cookie
2025-01-09 02:17:52,142 - DEBUG - reusing crumb
2025-01-09 02:17:52,143 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:52,143 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:52,324 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CPT?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1201
2025-01-09 02:17:52,325 - DEBUG - response code=200
2025-01-09 02:17:52,325 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:52,325 - DEBUG -    Exiting get()
2025-01-09 02:17:52,326 - DEBUG - CPT: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:52,327 - DEBUG - CPT: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:52,331 - DEBUG - CPT: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:52,338 - DEBUG - CPT: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:52,338 - DEBUG -   Exiting history()
2025-01-09 02:17:52,338 - DEBUG -  Exiting history()
2025-01-09 02:17:52,341 - DEBUG - Exiting download()
2025-01-09 02:17:52,491 - ERROR - Error writing data for CPT to DB: schema "np" does not exist
LINE 4:             VALUES ('CPT','2020-01-01'::date,np.float64(90.2...
                                                     ^

2025-01-09 02:17:52,492 - DEBUG - Entering download()
2025-01-09 02:17:52,492 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:52,492 - DEBUG -  Entering history()
2025-01-09 02:17:52,492 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CPB', 1, 0])
2025-01-09 02:17:52,493 - DEBUG -   Entering history()
2025-01-09 02:17:52,493 - DEBUG - CPB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:52,494 - DEBUG -    Entering get()
2025-01-09 02:17:52,494 - DEBUG -     Entering _make_request()
2025-01-09 02:17:52,494 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CPB
2025-01-09 02:17:52,494 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:52,494 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:52,494 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:52,494 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:52,494 - DEBUG - reusing cookie
2025-01-09 02:17:52,494 - DEBUG - reusing crumb
2025-01-09 02:17:52,494 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:52,494 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:52,708 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CPB?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1202
2025-01-09 02:17:52,708 - DEBUG - response code=200
2025-01-09 02:17:52,708 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:52,709 - DEBUG -    Exiting get()
2025-01-09 02:17:52,710 - DEBUG - CPB: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:52,712 - DEBUG - CPB: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:52,717 - DEBUG - CPB: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:52,724 - DEBUG - CPB: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:52,724 - DEBUG -   Exiting history()
2025-01-09 02:17:52,725 - DEBUG -  Exiting history()
2025-01-09 02:17:52,728 - DEBUG - Exiting download()
2025-01-09 02:17:52,777 - DEBUG - Entering download()
2025-01-09 02:17:52,777 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:52,777 - DEBUG -  Entering history()
2025-01-09 02:17:52,777 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['COF', 1, 0])
2025-01-09 02:17:52,777 - DEBUG -   Entering history()
2025-01-09 02:17:52,778 - DEBUG - COF: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:52,778 - DEBUG -    Entering get()
2025-01-09 02:17:52,778 - DEBUG -     Entering _make_request()
2025-01-09 02:17:52,778 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/COF
2025-01-09 02:17:52,778 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:52,778 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:52,778 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:52,778 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:52,778 - DEBUG - reusing cookie
2025-01-09 02:17:52,778 - DEBUG - reusing crumb
2025-01-09 02:17:52,778 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:52,779 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:52,988 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/COF?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1227
2025-01-09 02:17:52,988 - DEBUG - response code=200
2025-01-09 02:17:52,989 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:52,989 - DEBUG -    Exiting get()
2025-01-09 02:17:52,990 - DEBUG - COF: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:52,991 - DEBUG - COF: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:52,994 - DEBUG - COF: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:52,999 - DEBUG - COF: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:52,999 - DEBUG -   Exiting history()
2025-01-09 02:17:52,999 - DEBUG -  Exiting history()
2025-01-09 02:17:53,001 - DEBUG - Exiting download()
2025-01-09 02:17:53,052 - DEBUG - Entering download()
2025-01-09 02:17:53,052 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:53,053 - DEBUG -  Entering history()
2025-01-09 02:17:53,053 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CAH', 1, 0])
2025-01-09 02:17:53,053 - DEBUG -   Entering history()
2025-01-09 02:17:53,054 - DEBUG - CAH: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:53,054 - DEBUG -    Entering get()
2025-01-09 02:17:53,054 - DEBUG -     Entering _make_request()
2025-01-09 02:17:53,054 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CAH
2025-01-09 02:17:53,054 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:53,054 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:53,054 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:53,054 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:53,054 - DEBUG - reusing cookie
2025-01-09 02:17:53,054 - DEBUG - reusing crumb
2025-01-09 02:17:53,054 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:53,054 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:53,252 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CAH?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1200
2025-01-09 02:17:53,252 - DEBUG - response code=200
2025-01-09 02:17:53,253 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:53,253 - DEBUG -    Exiting get()
2025-01-09 02:17:53,254 - DEBUG - CAH: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:53,255 - DEBUG - CAH: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:53,258 - DEBUG - CAH: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:53,264 - DEBUG - CAH: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:53,264 - DEBUG -   Exiting history()
2025-01-09 02:17:53,264 - DEBUG -  Exiting history()
2025-01-09 02:17:53,266 - DEBUG - Exiting download()
2025-01-09 02:17:53,418 - ERROR - Error writing data for CAH to DB: schema "np" does not exist
LINE 4:             VALUES ('CAH','2020-01-01'::date,np.float64(43.9...
                                                     ^

2025-01-09 02:17:53,419 - DEBUG - Entering download()
2025-01-09 02:17:53,419 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:53,419 - DEBUG -  Entering history()
2025-01-09 02:17:53,419 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['KMX', 1, 0])
2025-01-09 02:17:53,420 - DEBUG -   Entering history()
2025-01-09 02:17:53,420 - DEBUG - KMX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:53,421 - DEBUG -    Entering get()
2025-01-09 02:17:53,421 - DEBUG -     Entering _make_request()
2025-01-09 02:17:53,421 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/KMX
2025-01-09 02:17:53,421 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:53,421 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:53,421 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:53,421 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:53,421 - DEBUG - reusing cookie
2025-01-09 02:17:53,421 - DEBUG - reusing crumb
2025-01-09 02:17:53,421 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:53,421 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:53,590 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/KMX?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1177
2025-01-09 02:17:53,600 - DEBUG - response code=200
2025-01-09 02:17:53,600 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:53,600 - DEBUG -    Exiting get()
2025-01-09 02:17:53,602 - DEBUG - KMX: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:53,602 - DEBUG - KMX: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:53,607 - DEBUG - KMX: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:53,613 - DEBUG - KMX: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:53,614 - DEBUG -   Exiting history()
2025-01-09 02:17:53,614 - DEBUG -  Exiting history()
2025-01-09 02:17:53,616 - DEBUG - Exiting download()
2025-01-09 02:17:53,667 - DEBUG - Entering download()
2025-01-09 02:17:53,667 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:53,667 - DEBUG -  Entering history()
2025-01-09 02:17:53,667 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CCL', 1, 0])
2025-01-09 02:17:53,668 - DEBUG -   Entering history()
2025-01-09 02:17:53,669 - DEBUG - CCL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:53,669 - DEBUG -    Entering get()
2025-01-09 02:17:53,669 - DEBUG -     Entering _make_request()
2025-01-09 02:17:53,669 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CCL
2025-01-09 02:17:53,669 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:53,669 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:53,669 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:53,669 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:53,669 - DEBUG - reusing cookie
2025-01-09 02:17:53,669 - DEBUG - reusing crumb
2025-01-09 02:17:53,669 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:53,669 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:53,878 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CCL?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1205
2025-01-09 02:17:53,879 - DEBUG - response code=200
2025-01-09 02:17:53,879 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:53,879 - DEBUG -    Exiting get()
2025-01-09 02:17:53,880 - DEBUG - CCL: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:53,881 - DEBUG - CCL: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:53,885 - DEBUG - CCL: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:53,890 - DEBUG - CCL: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:53,890 - DEBUG -   Exiting history()
2025-01-09 02:17:53,890 - DEBUG -  Exiting history()
2025-01-09 02:17:53,893 - DEBUG - Exiting download()
2025-01-09 02:17:54,150 - ERROR - Error writing data for CCL to DB: schema "np" does not exist
LINE 4:             VALUES ('CCL','2020-01-01'::date,np.float64(50.7...
                                                     ^

2025-01-09 02:17:54,151 - DEBUG - Entering download()
2025-01-09 02:17:54,151 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:54,151 - DEBUG -  Entering history()
2025-01-09 02:17:54,151 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CARR', 1, 0])
2025-01-09 02:17:54,151 - DEBUG -   Entering history()
2025-01-09 02:17:54,152 - DEBUG - CARR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:54,152 - DEBUG -    Entering get()
2025-01-09 02:17:54,152 - DEBUG -     Entering _make_request()
2025-01-09 02:17:54,152 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CARR
2025-01-09 02:17:54,152 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:54,152 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:54,152 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:54,153 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:54,153 - DEBUG - reusing cookie
2025-01-09 02:17:54,153 - DEBUG - reusing crumb
2025-01-09 02:17:54,153 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:54,153 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:54,307 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CARR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:17:54,308 - DEBUG - response code=400
2025-01-09 02:17:54,308 - DEBUG - toggling cookie strategy basic -> csrf
2025-01-09 02:17:54,308 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:54,308 - DEBUG - cookie_mode = 'csrf'
2025-01-09 02:17:54,309 - DEBUG -       Entering _get_crumb_csrf()
2025-01-09 02:17:54,309 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['csrf', 1, 0])
2025-01-09 02:17:54,442 - DEBUG - https://guce.yahoo.com:443 "GET /consent HTTP/1.1" 302 0
2025-01-09 02:17:54,782 - DEBUG - https://www.yahoo.com:443 "GET /?guccounter=1 HTTP/1.1" 200 None
2025-01-09 02:17:55,309 - DEBUG - Failed to find "csrfToken" in response
2025-01-09 02:17:55,309 - DEBUG -       Exiting _get_crumb_csrf()
2025-01-09 02:17:55,309 - DEBUG - toggling cookie strategy csrf -> basic
2025-01-09 02:17:55,309 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:55,310 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['basic', 1, 0])
2025-01-09 02:17:55,310 - DEBUG - loaded persistent cookie
2025-01-09 02:17:55,310 - DEBUG - reusing cookie
2025-01-09 02:17:55,455 - DEBUG - https://query1.finance.yahoo.com:443 "GET /v1/test/getcrumb HTTP/1.1" 200 11
2025-01-09 02:17:55,456 - DEBUG - crumb = 'mbrlfmeSllh'
2025-01-09 02:17:55,457 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:55,457 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:55,607 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CARR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:17:55,608 - DEBUG - response code=400
2025-01-09 02:17:55,608 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:55,608 - DEBUG -    Exiting get()
2025-01-09 02:17:55,615 - ERROR - 
1 Failed download:
2025-01-09 02:17:55,615 - ERROR - ['CARR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1wk 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn\'t exist for startDate = 1577854800, endDate = 1577941200")')
2025-01-09 02:17:55,615 - DEBUG - ['CARR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1wk 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn't exist for startDate = 1577854800, endDate = 1577941200")

2025-01-09 02:17:55,623 - DEBUG - Exiting download()
2025-01-09 02:17:55,736 - ERROR - Error writing data for CARR to DB: schema "np" does not exist
LINE 4:             VALUES ('CARR','2020-03-19'::date,np.float64(11....
                                                      ^

2025-01-09 02:17:55,737 - DEBUG - Entering download()
2025-01-09 02:17:55,737 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:55,737 - DEBUG -  Entering history()
2025-01-09 02:17:55,738 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CAT', 1, 0])
2025-01-09 02:17:55,738 - DEBUG -   Entering history()
2025-01-09 02:17:55,738 - DEBUG - CAT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:55,738 - DEBUG -    Entering get()
2025-01-09 02:17:55,738 - DEBUG -     Entering _make_request()
2025-01-09 02:17:55,739 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CAT
2025-01-09 02:17:55,739 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:55,739 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:55,739 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:55,739 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:55,739 - DEBUG - reusing cookie
2025-01-09 02:17:55,739 - DEBUG - reusing crumb
2025-01-09 02:17:55,739 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:55,739 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:55,979 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CAT?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1184
2025-01-09 02:17:55,980 - DEBUG - response code=200
2025-01-09 02:17:55,981 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:55,981 - DEBUG -    Exiting get()
2025-01-09 02:17:55,984 - DEBUG - CAT: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:55,987 - DEBUG - CAT: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:55,997 - DEBUG - CAT: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:56,009 - DEBUG - CAT: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:56,009 - DEBUG -   Exiting history()
2025-01-09 02:17:56,009 - DEBUG -  Exiting history()
2025-01-09 02:17:56,013 - DEBUG - Exiting download()
2025-01-09 02:17:56,064 - DEBUG - Entering download()
2025-01-09 02:17:56,064 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:56,064 - DEBUG -  Entering history()
2025-01-09 02:17:56,064 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CBOE', 1, 0])
2025-01-09 02:17:56,065 - DEBUG -   Entering history()
2025-01-09 02:17:56,065 - DEBUG - CBOE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:56,065 - DEBUG -    Entering get()
2025-01-09 02:17:56,065 - DEBUG -     Entering _make_request()
2025-01-09 02:17:56,065 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CBOE
2025-01-09 02:17:56,065 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:56,065 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:56,065 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:56,066 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:56,066 - DEBUG - reusing cookie
2025-01-09 02:17:56,066 - DEBUG - reusing crumb
2025-01-09 02:17:56,066 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:56,066 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:56,245 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CBOE?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1217
2025-01-09 02:17:56,246 - DEBUG - response code=200
2025-01-09 02:17:56,246 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:56,246 - DEBUG -    Exiting get()
2025-01-09 02:17:56,249 - DEBUG - CBOE: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:56,252 - DEBUG - CBOE: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:56,263 - DEBUG - CBOE: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:56,275 - DEBUG - CBOE: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:56,275 - DEBUG -   Exiting history()
2025-01-09 02:17:56,275 - DEBUG -  Exiting history()
2025-01-09 02:17:56,279 - DEBUG - Exiting download()
2025-01-09 02:17:56,331 - DEBUG - Entering download()
2025-01-09 02:17:56,331 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:56,331 - DEBUG -  Entering history()
2025-01-09 02:17:56,331 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CBRE', 1, 0])
2025-01-09 02:17:56,332 - DEBUG -   Entering history()
2025-01-09 02:17:56,332 - DEBUG - CBRE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:56,332 - DEBUG -    Entering get()
2025-01-09 02:17:56,332 - DEBUG -     Entering _make_request()
2025-01-09 02:17:56,332 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CBRE
2025-01-09 02:17:56,332 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:56,332 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:56,333 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:56,333 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:56,333 - DEBUG - reusing cookie
2025-01-09 02:17:56,333 - DEBUG - reusing crumb
2025-01-09 02:17:56,333 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:56,333 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:56,489 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CBRE?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1192
2025-01-09 02:17:56,490 - DEBUG - response code=200
2025-01-09 02:17:56,490 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:56,490 - DEBUG -    Exiting get()
2025-01-09 02:17:56,493 - DEBUG - CBRE: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:56,496 - DEBUG - CBRE: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:56,509 - DEBUG - CBRE: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:56,522 - DEBUG - CBRE: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:56,522 - DEBUG -   Exiting history()
2025-01-09 02:17:56,522 - DEBUG -  Exiting history()
2025-01-09 02:17:56,525 - DEBUG - Exiting download()
2025-01-09 02:17:56,567 - DEBUG - Entering download()
2025-01-09 02:17:56,567 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:56,567 - DEBUG -  Entering history()
2025-01-09 02:17:56,568 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CDW', 1, 0])
2025-01-09 02:17:56,568 - DEBUG -   Entering history()
2025-01-09 02:17:56,568 - DEBUG - CDW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:56,569 - DEBUG -    Entering get()
2025-01-09 02:17:56,569 - DEBUG -     Entering _make_request()
2025-01-09 02:17:56,569 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CDW
2025-01-09 02:17:56,569 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:56,569 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:56,569 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:56,569 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:56,569 - DEBUG - reusing cookie
2025-01-09 02:17:56,569 - DEBUG - reusing crumb
2025-01-09 02:17:56,569 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:56,569 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:56,744 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CDW?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1200
2025-01-09 02:17:56,745 - DEBUG - response code=200
2025-01-09 02:17:56,745 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:56,745 - DEBUG -    Exiting get()
2025-01-09 02:17:56,748 - DEBUG - CDW: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:56,751 - DEBUG - CDW: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:56,759 - DEBUG - CDW: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:56,768 - DEBUG - CDW: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:56,768 - DEBUG -   Exiting history()
2025-01-09 02:17:56,769 - DEBUG -  Exiting history()
2025-01-09 02:17:56,772 - DEBUG - Exiting download()
2025-01-09 02:17:56,883 - ERROR - Error writing data for CDW to DB: schema "np" does not exist
LINE 4:             VALUES ('CDW','2020-01-01'::date,np.float64(136....
                                                     ^

2025-01-09 02:17:56,883 - DEBUG - Entering download()
2025-01-09 02:17:56,883 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:56,884 - DEBUG -  Entering history()
2025-01-09 02:17:56,884 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CE', 1, 0])
2025-01-09 02:17:56,884 - DEBUG -   Entering history()
2025-01-09 02:17:56,885 - DEBUG - CE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:56,885 - DEBUG -    Entering get()
2025-01-09 02:17:56,885 - DEBUG -     Entering _make_request()
2025-01-09 02:17:56,885 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CE
2025-01-09 02:17:56,885 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:56,885 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:56,885 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:56,885 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:56,885 - DEBUG - reusing cookie
2025-01-09 02:17:56,885 - DEBUG - reusing crumb
2025-01-09 02:17:56,885 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:56,885 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:57,057 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CE?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1199
2025-01-09 02:17:57,058 - DEBUG - response code=200
2025-01-09 02:17:57,058 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:57,058 - DEBUG -    Exiting get()
2025-01-09 02:17:57,061 - DEBUG - CE: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:57,064 - DEBUG - CE: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:57,075 - DEBUG - CE: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:57,087 - DEBUG - CE: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:57,087 - DEBUG -   Exiting history()
2025-01-09 02:17:57,087 - DEBUG -  Exiting history()
2025-01-09 02:17:57,091 - DEBUG - Exiting download()
2025-01-09 02:17:57,341 - ERROR - Error writing data for CE to DB: schema "np" does not exist
LINE 4:             VALUES ('CE','2020-01-01'::date,np.float64(110.9...
                                                    ^

2025-01-09 02:17:57,342 - DEBUG - Entering download()
2025-01-09 02:17:57,342 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:57,342 - DEBUG -  Entering history()
2025-01-09 02:17:57,342 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['COR', 1, 0])
2025-01-09 02:17:57,343 - DEBUG -   Entering history()
2025-01-09 02:17:57,343 - DEBUG - COR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:57,343 - DEBUG -    Entering get()
2025-01-09 02:17:57,343 - DEBUG -     Entering _make_request()
2025-01-09 02:17:57,343 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/COR
2025-01-09 02:17:57,343 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:57,343 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:57,343 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:57,343 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:57,343 - DEBUG - reusing cookie
2025-01-09 02:17:57,344 - DEBUG - reusing crumb
2025-01-09 02:17:57,344 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:57,344 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:57,521 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/COR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1186
2025-01-09 02:17:57,522 - DEBUG - response code=200
2025-01-09 02:17:57,522 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:57,522 - DEBUG -    Exiting get()
2025-01-09 02:17:57,524 - DEBUG - COR: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:57,525 - DEBUG - COR: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:57,529 - DEBUG - COR: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:57,534 - DEBUG - COR: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:57,535 - DEBUG -   Exiting history()
2025-01-09 02:17:57,535 - DEBUG -  Exiting history()
2025-01-09 02:17:57,537 - DEBUG - Exiting download()
2025-01-09 02:17:57,581 - DEBUG - Entering download()
2025-01-09 02:17:57,581 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:57,581 - DEBUG -  Entering history()
2025-01-09 02:17:57,582 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CNC', 1, 0])
2025-01-09 02:17:57,582 - DEBUG -   Entering history()
2025-01-09 02:17:57,583 - DEBUG - CNC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:57,583 - DEBUG -    Entering get()
2025-01-09 02:17:57,583 - DEBUG -     Entering _make_request()
2025-01-09 02:17:57,583 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CNC
2025-01-09 02:17:57,583 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:57,583 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:57,583 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:57,583 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:57,583 - DEBUG - reusing cookie
2025-01-09 02:17:57,583 - DEBUG - reusing crumb
2025-01-09 02:17:57,583 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:57,583 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:57,729 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CNC?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1196
2025-01-09 02:17:57,730 - DEBUG - response code=200
2025-01-09 02:17:57,730 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:57,731 - DEBUG -    Exiting get()
2025-01-09 02:17:57,734 - DEBUG - CNC: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:57,736 - DEBUG - CNC: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:57,747 - DEBUG - CNC: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:57,759 - DEBUG - CNC: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:57,759 - DEBUG -   Exiting history()
2025-01-09 02:17:57,759 - DEBUG -  Exiting history()
2025-01-09 02:17:57,762 - DEBUG - Exiting download()
2025-01-09 02:17:58,038 - ERROR - Error writing data for CNC to DB: schema "np" does not exist
LINE 4:             VALUES ('CNC','2020-01-01'::date,np.float64(62.9...
                                                     ^

2025-01-09 02:17:58,038 - DEBUG - Entering download()
2025-01-09 02:17:58,038 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:58,038 - DEBUG -  Entering history()
2025-01-09 02:17:58,039 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CNP', 1, 0])
2025-01-09 02:17:58,039 - DEBUG -   Entering history()
2025-01-09 02:17:58,040 - DEBUG - CNP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:58,040 - DEBUG -    Entering get()
2025-01-09 02:17:58,040 - DEBUG -     Entering _make_request()
2025-01-09 02:17:58,040 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CNP
2025-01-09 02:17:58,040 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:58,040 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:58,040 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:58,040 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:58,040 - DEBUG - reusing cookie
2025-01-09 02:17:58,040 - DEBUG - reusing crumb
2025-01-09 02:17:58,040 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:58,040 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:58,275 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CNP?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1214
2025-01-09 02:17:58,276 - DEBUG - response code=200
2025-01-09 02:17:58,276 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:58,276 - DEBUG -    Exiting get()
2025-01-09 02:17:58,279 - DEBUG - CNP: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:58,282 - DEBUG - CNP: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:58,293 - DEBUG - CNP: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:58,304 - DEBUG - CNP: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:58,304 - DEBUG -   Exiting history()
2025-01-09 02:17:58,304 - DEBUG -  Exiting history()
2025-01-09 02:17:58,308 - DEBUG - Exiting download()
2025-01-09 02:17:58,418 - ERROR - Error writing data for CNP to DB: schema "np" does not exist
LINE 4:             VALUES ('CNP','2020-01-01'::date,np.float64(23.7...
                                                     ^

2025-01-09 02:17:58,419 - DEBUG - Entering download()
2025-01-09 02:17:58,419 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:58,419 - DEBUG -  Entering history()
2025-01-09 02:17:58,420 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CF', 1, 0])
2025-01-09 02:17:58,420 - DEBUG -   Entering history()
2025-01-09 02:17:58,421 - DEBUG - CF: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:58,421 - DEBUG -    Entering get()
2025-01-09 02:17:58,421 - DEBUG -     Entering _make_request()
2025-01-09 02:17:58,421 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CF
2025-01-09 02:17:58,421 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:58,421 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:58,421 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:58,421 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:58,421 - DEBUG - reusing cookie
2025-01-09 02:17:58,421 - DEBUG - reusing crumb
2025-01-09 02:17:58,421 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:58,421 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:58,609 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CF?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1216
2025-01-09 02:17:58,610 - DEBUG - response code=200
2025-01-09 02:17:58,610 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:58,610 - DEBUG -    Exiting get()
2025-01-09 02:17:58,613 - DEBUG - CF: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:58,616 - DEBUG - CF: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:58,627 - DEBUG - CF: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:58,638 - DEBUG - CF: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:58,638 - DEBUG -   Exiting history()
2025-01-09 02:17:58,638 - DEBUG -  Exiting history()
2025-01-09 02:17:58,642 - DEBUG - Exiting download()
2025-01-09 02:17:58,751 - ERROR - Error writing data for CF to DB: schema "np" does not exist
LINE 4:             VALUES ('CF','2020-01-01'::date,np.float64(42.59...
                                                    ^

2025-01-09 02:17:58,752 - DEBUG - Entering download()
2025-01-09 02:17:58,752 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:58,752 - DEBUG -  Entering history()
2025-01-09 02:17:58,752 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CRL', 1, 0])
2025-01-09 02:17:58,753 - DEBUG -   Entering history()
2025-01-09 02:17:58,753 - DEBUG - CRL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:58,753 - DEBUG -    Entering get()
2025-01-09 02:17:58,753 - DEBUG -     Entering _make_request()
2025-01-09 02:17:58,753 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CRL
2025-01-09 02:17:58,753 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:58,754 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:58,754 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:58,754 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:58,754 - DEBUG - reusing cookie
2025-01-09 02:17:58,754 - DEBUG - reusing crumb
2025-01-09 02:17:58,754 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:58,754 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:58,900 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CRL?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1238
2025-01-09 02:17:58,901 - DEBUG - response code=200
2025-01-09 02:17:58,901 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:58,901 - DEBUG -    Exiting get()
2025-01-09 02:17:58,904 - DEBUG - CRL: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:58,906 - DEBUG - CRL: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:58,913 - DEBUG - CRL: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:58,922 - DEBUG - CRL: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:58,922 - DEBUG -   Exiting history()
2025-01-09 02:17:58,922 - DEBUG -  Exiting history()
2025-01-09 02:17:58,925 - DEBUG - Exiting download()
2025-01-09 02:17:59,033 - ERROR - Error writing data for CRL to DB: schema "np" does not exist
LINE 4:             VALUES ('CRL','2020-01-01'::date,np.float64(154....
                                                     ^

2025-01-09 02:17:59,034 - DEBUG - Entering download()
2025-01-09 02:17:59,034 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:59,034 - DEBUG -  Entering history()
2025-01-09 02:17:59,034 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SCHW', 1, 0])
2025-01-09 02:17:59,034 - DEBUG -   Entering history()
2025-01-09 02:17:59,035 - DEBUG - SCHW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:59,035 - DEBUG -    Entering get()
2025-01-09 02:17:59,035 - DEBUG -     Entering _make_request()
2025-01-09 02:17:59,035 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SCHW
2025-01-09 02:17:59,035 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:59,035 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:59,035 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:59,035 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:59,035 - DEBUG - reusing cookie
2025-01-09 02:17:59,035 - DEBUG - reusing crumb
2025-01-09 02:17:59,035 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:59,036 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:59,231 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SCHW?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1217
2025-01-09 02:17:59,232 - DEBUG - response code=200
2025-01-09 02:17:59,232 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:59,232 - DEBUG -    Exiting get()
2025-01-09 02:17:59,236 - DEBUG - SCHW: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:59,238 - DEBUG - SCHW: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:59,249 - DEBUG - SCHW: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:59,265 - DEBUG - SCHW: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:59,265 - DEBUG -   Exiting history()
2025-01-09 02:17:59,265 - DEBUG -  Exiting history()
2025-01-09 02:17:59,270 - DEBUG - Exiting download()
2025-01-09 02:17:59,381 - ERROR - Error writing data for SCHW to DB: schema "np" does not exist
LINE 4:             VALUES ('SCHW','2020-01-01'::date,np.float64(44....
                                                      ^

2025-01-09 02:17:59,382 - DEBUG - Entering download()
2025-01-09 02:17:59,382 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:59,382 - DEBUG -  Entering history()
2025-01-09 02:17:59,383 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CHTR', 1, 0])
2025-01-09 02:17:59,383 - DEBUG -   Entering history()
2025-01-09 02:17:59,383 - DEBUG - CHTR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:59,383 - DEBUG -    Entering get()
2025-01-09 02:17:59,384 - DEBUG -     Entering _make_request()
2025-01-09 02:17:59,384 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CHTR
2025-01-09 02:17:59,384 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:59,384 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:59,384 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:59,384 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:59,384 - DEBUG - reusing cookie
2025-01-09 02:17:59,384 - DEBUG - reusing crumb
2025-01-09 02:17:59,384 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:59,384 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:59,528 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CHTR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1223
2025-01-09 02:17:59,529 - DEBUG - response code=200
2025-01-09 02:17:59,529 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:59,529 - DEBUG -    Exiting get()
2025-01-09 02:17:59,531 - DEBUG - CHTR: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:59,533 - DEBUG - CHTR: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:59,540 - DEBUG - CHTR: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:59,551 - DEBUG - CHTR: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:59,551 - DEBUG -   Exiting history()
2025-01-09 02:17:59,552 - DEBUG -  Exiting history()
2025-01-09 02:17:59,555 - DEBUG - Exiting download()
2025-01-09 02:17:59,668 - ERROR - Error writing data for CHTR to DB: schema "np" does not exist
LINE 4:             VALUES ('CHTR','2020-01-01'::date,np.float64(487...
                                                      ^

2025-01-09 02:17:59,668 - DEBUG - Entering download()
2025-01-09 02:17:59,668 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:17:59,668 - DEBUG -  Entering history()
2025-01-09 02:17:59,669 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CVX', 1, 0])
2025-01-09 02:17:59,669 - DEBUG -   Entering history()
2025-01-09 02:17:59,670 - DEBUG - CVX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:17:59,670 - DEBUG -    Entering get()
2025-01-09 02:17:59,670 - DEBUG -     Entering _make_request()
2025-01-09 02:17:59,670 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CVX
2025-01-09 02:17:59,670 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:17:59,670 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:17:59,670 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:17:59,670 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:17:59,670 - DEBUG - reusing cookie
2025-01-09 02:17:59,670 - DEBUG - reusing crumb
2025-01-09 02:17:59,670 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:17:59,670 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:17:59,933 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CVX?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1201
2025-01-09 02:17:59,934 - DEBUG - response code=200
2025-01-09 02:17:59,934 - DEBUG -     Exiting _make_request()
2025-01-09 02:17:59,935 - DEBUG -    Exiting get()
2025-01-09 02:17:59,938 - DEBUG - CVX: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:17:59,940 - DEBUG - CVX: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:59,951 - DEBUG - CVX: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:59,962 - DEBUG - CVX: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:17:59,962 - DEBUG -   Exiting history()
2025-01-09 02:17:59,962 - DEBUG -  Exiting history()
2025-01-09 02:17:59,966 - DEBUG - Exiting download()
2025-01-09 02:18:00,090 - ERROR - Error writing data for CVX to DB: schema "np" does not exist
LINE 4:             VALUES ('CVX','2020-01-01'::date,np.float64(96.7...
                                                     ^

2025-01-09 02:18:00,091 - DEBUG - Entering download()
2025-01-09 02:18:00,091 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:00,091 - DEBUG -  Entering history()
2025-01-09 02:18:00,091 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CMG', 1, 0])
2025-01-09 02:18:00,091 - DEBUG -   Entering history()
2025-01-09 02:18:00,092 - DEBUG - CMG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:00,092 - DEBUG -    Entering get()
2025-01-09 02:18:00,092 - DEBUG -     Entering _make_request()
2025-01-09 02:18:00,092 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CMG
2025-01-09 02:18:00,093 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:00,093 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:00,093 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:00,093 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:00,093 - DEBUG - reusing cookie
2025-01-09 02:18:00,093 - DEBUG - reusing crumb
2025-01-09 02:18:00,093 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:00,093 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:00,253 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CMG?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1220
2025-01-09 02:18:00,254 - DEBUG - response code=200
2025-01-09 02:18:00,255 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:00,255 - DEBUG -    Exiting get()
2025-01-09 02:18:00,258 - DEBUG - CMG: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:00,261 - DEBUG - CMG: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:00,272 - DEBUG - CMG: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:00,285 - DEBUG - CMG: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:00,286 - DEBUG -   Exiting history()
2025-01-09 02:18:00,286 - DEBUG -  Exiting history()
2025-01-09 02:18:00,290 - DEBUG - Exiting download()
2025-01-09 02:18:00,338 - DEBUG - Entering download()
2025-01-09 02:18:00,338 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:00,338 - DEBUG -  Entering history()
2025-01-09 02:18:00,339 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CB', 1, 0])
2025-01-09 02:18:00,339 - DEBUG -   Entering history()
2025-01-09 02:18:00,339 - DEBUG - CB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:00,340 - DEBUG -    Entering get()
2025-01-09 02:18:00,340 - DEBUG -     Entering _make_request()
2025-01-09 02:18:00,340 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CB
2025-01-09 02:18:00,340 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:00,340 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:00,340 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:00,340 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:00,340 - DEBUG - reusing cookie
2025-01-09 02:18:00,340 - DEBUG - reusing crumb
2025-01-09 02:18:00,340 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:00,340 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:00,555 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CB?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1191
2025-01-09 02:18:00,556 - DEBUG - response code=200
2025-01-09 02:18:00,556 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:00,557 - DEBUG -    Exiting get()
2025-01-09 02:18:00,560 - DEBUG - CB: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:00,562 - DEBUG - CB: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:00,573 - DEBUG - CB: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:00,587 - DEBUG - CB: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:00,587 - DEBUG -   Exiting history()
2025-01-09 02:18:00,587 - DEBUG -  Exiting history()
2025-01-09 02:18:00,591 - DEBUG - Exiting download()
2025-01-09 02:18:00,645 - DEBUG - Entering download()
2025-01-09 02:18:00,645 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:00,645 - DEBUG -  Entering history()
2025-01-09 02:18:00,645 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CHD', 1, 0])
2025-01-09 02:18:00,645 - DEBUG -   Entering history()
2025-01-09 02:18:00,646 - DEBUG - CHD: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:00,646 - DEBUG -    Entering get()
2025-01-09 02:18:00,646 - DEBUG -     Entering _make_request()
2025-01-09 02:18:00,646 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CHD
2025-01-09 02:18:00,647 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:00,647 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:00,647 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:00,647 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:00,647 - DEBUG - reusing cookie
2025-01-09 02:18:00,647 - DEBUG - reusing crumb
2025-01-09 02:18:00,647 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:00,647 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:00,867 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CHD?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1212
2025-01-09 02:18:00,868 - DEBUG - response code=200
2025-01-09 02:18:00,868 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:00,868 - DEBUG -    Exiting get()
2025-01-09 02:18:00,871 - DEBUG - CHD: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:00,874 - DEBUG - CHD: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:00,886 - DEBUG - CHD: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:00,900 - DEBUG - CHD: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:00,900 - DEBUG -   Exiting history()
2025-01-09 02:18:00,900 - DEBUG -  Exiting history()
2025-01-09 02:18:00,904 - DEBUG - Exiting download()
2025-01-09 02:18:01,016 - ERROR - Error writing data for CHD to DB: schema "np" does not exist
LINE 4:             VALUES ('CHD','2020-01-01'::date,np.float64(66.3...
                                                     ^

2025-01-09 02:18:01,017 - DEBUG - Entering download()
2025-01-09 02:18:01,017 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:01,017 - DEBUG -  Entering history()
2025-01-09 02:18:01,017 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CI', 1, 0])
2025-01-09 02:18:01,018 - DEBUG -   Entering history()
2025-01-09 02:18:01,018 - DEBUG - CI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:01,019 - DEBUG -    Entering get()
2025-01-09 02:18:01,019 - DEBUG -     Entering _make_request()
2025-01-09 02:18:01,019 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CI
2025-01-09 02:18:01,019 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:01,019 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:01,019 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:01,019 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:01,019 - DEBUG - reusing cookie
2025-01-09 02:18:01,019 - DEBUG - reusing crumb
2025-01-09 02:18:01,019 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:01,019 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:01,255 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CI?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1193
2025-01-09 02:18:01,256 - DEBUG - response code=200
2025-01-09 02:18:01,256 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:01,256 - DEBUG -    Exiting get()
2025-01-09 02:18:01,259 - DEBUG - CI: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:01,262 - DEBUG - CI: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:01,273 - DEBUG - CI: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:01,285 - DEBUG - CI: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:01,285 - DEBUG -   Exiting history()
2025-01-09 02:18:01,285 - DEBUG -  Exiting history()
2025-01-09 02:18:01,289 - DEBUG - Exiting download()
2025-01-09 02:18:01,397 - ERROR - Error writing data for CI to DB: schema "np" does not exist
LINE 4:             VALUES ('CI','2020-01-01'::date,np.float64(191.7...
                                                    ^

2025-01-09 02:18:01,397 - DEBUG - Entering download()
2025-01-09 02:18:01,398 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:01,398 - DEBUG -  Entering history()
2025-01-09 02:18:01,398 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CINF', 1, 0])
2025-01-09 02:18:01,398 - DEBUG -   Entering history()
2025-01-09 02:18:01,399 - DEBUG - CINF: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:01,399 - DEBUG -    Entering get()
2025-01-09 02:18:01,399 - DEBUG -     Entering _make_request()
2025-01-09 02:18:01,399 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CINF
2025-01-09 02:18:01,399 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:01,399 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:01,399 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:01,399 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:01,399 - DEBUG - reusing cookie
2025-01-09 02:18:01,399 - DEBUG - reusing crumb
2025-01-09 02:18:01,399 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:01,399 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:01,589 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CINF?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1231
2025-01-09 02:18:01,590 - DEBUG - response code=200
2025-01-09 02:18:01,590 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:01,590 - DEBUG -    Exiting get()
2025-01-09 02:18:01,593 - DEBUG - CINF: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:01,596 - DEBUG - CINF: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:01,607 - DEBUG - CINF: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:01,618 - DEBUG - CINF: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:01,618 - DEBUG -   Exiting history()
2025-01-09 02:18:01,618 - DEBUG -  Exiting history()
2025-01-09 02:18:01,622 - DEBUG - Exiting download()
2025-01-09 02:18:01,733 - ERROR - Error writing data for CINF to DB: schema "np" does not exist
LINE 4:             VALUES ('CINF','2020-01-01'::date,np.float64(92....
                                                      ^

2025-01-09 02:18:01,733 - DEBUG - Entering download()
2025-01-09 02:18:01,733 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:01,734 - DEBUG -  Entering history()
2025-01-09 02:18:01,734 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CTAS', 1, 0])
2025-01-09 02:18:01,734 - DEBUG -   Entering history()
2025-01-09 02:18:01,735 - DEBUG - CTAS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:01,735 - DEBUG -    Entering get()
2025-01-09 02:18:01,735 - DEBUG -     Entering _make_request()
2025-01-09 02:18:01,735 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CTAS
2025-01-09 02:18:01,735 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:01,735 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:01,735 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:01,735 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:01,735 - DEBUG - reusing cookie
2025-01-09 02:18:01,735 - DEBUG - reusing crumb
2025-01-09 02:18:01,735 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:01,736 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:01,951 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CTAS?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1200
2025-01-09 02:18:01,952 - DEBUG - response code=200
2025-01-09 02:18:01,955 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:01,955 - DEBUG -    Exiting get()
2025-01-09 02:18:01,959 - DEBUG - CTAS: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:01,961 - DEBUG - CTAS: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:01,973 - DEBUG - CTAS: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:01,986 - DEBUG - CTAS: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:01,987 - DEBUG -   Exiting history()
2025-01-09 02:18:01,987 - DEBUG -  Exiting history()
2025-01-09 02:18:01,990 - DEBUG - Exiting download()
2025-01-09 02:18:02,099 - ERROR - Error writing data for CTAS to DB: schema "np" does not exist
LINE 4:             VALUES ('CTAS','2020-01-01'::date,np.float64(57....
                                                      ^

2025-01-09 02:18:02,099 - DEBUG - Entering download()
2025-01-09 02:18:02,099 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:02,100 - DEBUG -  Entering history()
2025-01-09 02:18:02,100 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CSCO', 1, 0])
2025-01-09 02:18:02,100 - DEBUG -   Entering history()
2025-01-09 02:18:02,101 - DEBUG - CSCO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:02,101 - DEBUG -    Entering get()
2025-01-09 02:18:02,101 - DEBUG -     Entering _make_request()
2025-01-09 02:18:02,101 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CSCO
2025-01-09 02:18:02,101 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:02,101 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:02,101 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:02,101 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:02,101 - DEBUG - reusing cookie
2025-01-09 02:18:02,101 - DEBUG - reusing crumb
2025-01-09 02:18:02,101 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:02,101 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:02,268 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CSCO?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1272
2025-01-09 02:18:02,270 - DEBUG - response code=200
2025-01-09 02:18:02,270 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:02,270 - DEBUG -    Exiting get()
2025-01-09 02:18:02,274 - DEBUG - CSCO: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:02,276 - DEBUG - CSCO: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:02,287 - DEBUG - CSCO: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:02,295 - DEBUG - CSCO: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:02,296 - DEBUG -   Exiting history()
2025-01-09 02:18:02,296 - DEBUG -  Exiting history()
2025-01-09 02:18:02,299 - DEBUG - Exiting download()
2025-01-09 02:18:02,344 - DEBUG - Entering download()
2025-01-09 02:18:02,344 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:02,344 - DEBUG -  Entering history()
2025-01-09 02:18:02,344 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['C', 1, 0])
2025-01-09 02:18:02,345 - DEBUG -   Entering history()
2025-01-09 02:18:02,345 - DEBUG - C: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:02,345 - DEBUG -    Entering get()
2025-01-09 02:18:02,345 - DEBUG -     Entering _make_request()
2025-01-09 02:18:02,345 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/C
2025-01-09 02:18:02,345 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:02,346 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:02,346 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:02,346 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:02,346 - DEBUG - reusing cookie
2025-01-09 02:18:02,346 - DEBUG - reusing crumb
2025-01-09 02:18:02,346 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:02,346 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:02,529 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/C?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1182
2025-01-09 02:18:02,530 - DEBUG - response code=200
2025-01-09 02:18:02,531 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:02,531 - DEBUG -    Exiting get()
2025-01-09 02:18:02,534 - DEBUG - C: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:02,537 - DEBUG - C: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:02,547 - DEBUG - C: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:02,559 - DEBUG - C: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:02,559 - DEBUG -   Exiting history()
2025-01-09 02:18:02,559 - DEBUG -  Exiting history()
2025-01-09 02:18:02,563 - DEBUG - Exiting download()
2025-01-09 02:18:02,672 - ERROR - Error writing data for C to DB: schema "np" does not exist
LINE 4:             VALUES ('C','2020-01-01'::date,np.float64(66.213...
                                                   ^

2025-01-09 02:18:02,673 - DEBUG - Entering download()
2025-01-09 02:18:02,673 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:02,673 - DEBUG -  Entering history()
2025-01-09 02:18:02,673 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CFG', 1, 0])
2025-01-09 02:18:02,673 - DEBUG -   Entering history()
2025-01-09 02:18:02,674 - DEBUG - CFG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:02,674 - DEBUG -    Entering get()
2025-01-09 02:18:02,674 - DEBUG -     Entering _make_request()
2025-01-09 02:18:02,674 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CFG
2025-01-09 02:18:02,674 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:02,674 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:02,675 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:02,675 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:02,675 - DEBUG - reusing cookie
2025-01-09 02:18:02,675 - DEBUG - reusing crumb
2025-01-09 02:18:02,675 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:02,675 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:02,838 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CFG?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1208
2025-01-09 02:18:02,839 - DEBUG - response code=200
2025-01-09 02:18:02,840 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:02,840 - DEBUG -    Exiting get()
2025-01-09 02:18:02,843 - DEBUG - CFG: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:02,846 - DEBUG - CFG: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:02,857 - DEBUG - CFG: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:02,869 - DEBUG - CFG: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:02,869 - DEBUG -   Exiting history()
2025-01-09 02:18:02,869 - DEBUG -  Exiting history()
2025-01-09 02:18:02,873 - DEBUG - Exiting download()
2025-01-09 02:18:02,921 - DEBUG - Entering download()
2025-01-09 02:18:02,921 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:02,921 - DEBUG -  Entering history()
2025-01-09 02:18:02,922 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CLX', 1, 0])
2025-01-09 02:18:02,922 - DEBUG -   Entering history()
2025-01-09 02:18:02,923 - DEBUG - CLX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:02,923 - DEBUG -    Entering get()
2025-01-09 02:18:02,923 - DEBUG -     Entering _make_request()
2025-01-09 02:18:02,923 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CLX
2025-01-09 02:18:02,923 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:02,923 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:02,924 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:02,924 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:02,924 - DEBUG - reusing cookie
2025-01-09 02:18:02,924 - DEBUG - reusing crumb
2025-01-09 02:18:02,924 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:02,924 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:03,158 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CLX?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1200
2025-01-09 02:18:03,158 - DEBUG - response code=200
2025-01-09 02:18:03,159 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:03,159 - DEBUG -    Exiting get()
2025-01-09 02:18:03,160 - DEBUG - CLX: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:03,162 - DEBUG - CLX: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:03,168 - DEBUG - CLX: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:03,176 - DEBUG - CLX: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:03,176 - DEBUG -   Exiting history()
2025-01-09 02:18:03,176 - DEBUG -  Exiting history()
2025-01-09 02:18:03,179 - DEBUG - Exiting download()
2025-01-09 02:18:03,416 - ERROR - Error writing data for CLX to DB: schema "np" does not exist
LINE 4:             VALUES ('CLX','2020-01-01'::date,np.float64(132....
                                                     ^

2025-01-09 02:18:03,417 - DEBUG - Entering download()
2025-01-09 02:18:03,417 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:03,417 - DEBUG -  Entering history()
2025-01-09 02:18:03,417 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CME', 1, 0])
2025-01-09 02:18:03,418 - DEBUG -   Entering history()
2025-01-09 02:18:03,418 - DEBUG - CME: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:03,418 - DEBUG -    Entering get()
2025-01-09 02:18:03,418 - DEBUG -     Entering _make_request()
2025-01-09 02:18:03,418 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CME
2025-01-09 02:18:03,419 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:03,419 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:03,419 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:03,419 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:03,419 - DEBUG - reusing cookie
2025-01-09 02:18:03,419 - DEBUG - reusing crumb
2025-01-09 02:18:03,419 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:03,419 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:03,611 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CME?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1195
2025-01-09 02:18:03,612 - DEBUG - response code=200
2025-01-09 02:18:03,612 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:03,612 - DEBUG -    Exiting get()
2025-01-09 02:18:03,616 - DEBUG - CME: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:03,618 - DEBUG - CME: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:03,629 - DEBUG - CME: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:03,642 - DEBUG - CME: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:03,642 - DEBUG -   Exiting history()
2025-01-09 02:18:03,642 - DEBUG -  Exiting history()
2025-01-09 02:18:03,646 - DEBUG - Exiting download()
2025-01-09 02:18:03,758 - ERROR - Error writing data for CME to DB: schema "np" does not exist
LINE 4:             VALUES ('CME','2020-01-01'::date,np.float64(164....
                                                     ^

2025-01-09 02:18:03,759 - DEBUG - Entering download()
2025-01-09 02:18:03,759 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:03,759 - DEBUG -  Entering history()
2025-01-09 02:18:03,759 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CMS', 1, 0])
2025-01-09 02:18:03,759 - DEBUG -   Entering history()
2025-01-09 02:18:03,760 - DEBUG - CMS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:03,760 - DEBUG -    Entering get()
2025-01-09 02:18:03,760 - DEBUG -     Entering _make_request()
2025-01-09 02:18:03,760 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CMS
2025-01-09 02:18:03,760 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:03,760 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:03,760 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:03,760 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:03,760 - DEBUG - reusing cookie
2025-01-09 02:18:03,760 - DEBUG - reusing crumb
2025-01-09 02:18:03,760 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:03,760 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:03,964 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CMS?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1197
2025-01-09 02:18:03,964 - DEBUG - response code=200
2025-01-09 02:18:03,964 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:03,964 - DEBUG -    Exiting get()
2025-01-09 02:18:03,966 - DEBUG - CMS: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:03,967 - DEBUG - CMS: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:03,972 - DEBUG - CMS: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:03,981 - DEBUG - CMS: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:03,981 - DEBUG -   Exiting history()
2025-01-09 02:18:03,981 - DEBUG -  Exiting history()
2025-01-09 02:18:03,984 - DEBUG - Exiting download()
2025-01-09 02:18:04,034 - DEBUG - Entering download()
2025-01-09 02:18:04,034 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:04,034 - DEBUG -  Entering history()
2025-01-09 02:18:04,034 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['KO', 1, 0])
2025-01-09 02:18:04,035 - DEBUG -   Entering history()
2025-01-09 02:18:04,035 - DEBUG - KO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:04,036 - DEBUG -    Entering get()
2025-01-09 02:18:04,036 - DEBUG -     Entering _make_request()
2025-01-09 02:18:04,036 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/KO
2025-01-09 02:18:04,036 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:04,036 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:04,036 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:04,036 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:04,036 - DEBUG - reusing cookie
2025-01-09 02:18:04,036 - DEBUG - reusing crumb
2025-01-09 02:18:04,036 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:04,036 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:04,264 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/KO?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1199
2025-01-09 02:18:04,265 - DEBUG - response code=200
2025-01-09 02:18:04,265 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:04,266 - DEBUG -    Exiting get()
2025-01-09 02:18:04,269 - DEBUG - KO: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:04,272 - DEBUG - KO: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:04,283 - DEBUG - KO: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:04,297 - DEBUG - KO: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:04,297 - DEBUG -   Exiting history()
2025-01-09 02:18:04,297 - DEBUG -  Exiting history()
2025-01-09 02:18:04,302 - DEBUG - Exiting download()
2025-01-09 02:18:04,495 - DEBUG - Entering download()
2025-01-09 02:18:04,495 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:04,495 - DEBUG -  Entering history()
2025-01-09 02:18:04,496 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CTSH', 1, 0])
2025-01-09 02:18:04,496 - DEBUG -   Entering history()
2025-01-09 02:18:04,496 - DEBUG - CTSH: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:04,497 - DEBUG -    Entering get()
2025-01-09 02:18:04,497 - DEBUG -     Entering _make_request()
2025-01-09 02:18:04,497 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CTSH
2025-01-09 02:18:04,497 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:04,497 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:04,497 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:04,497 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:04,497 - DEBUG - reusing cookie
2025-01-09 02:18:04,497 - DEBUG - reusing crumb
2025-01-09 02:18:04,497 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:04,497 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:04,684 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CTSH?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1235
2025-01-09 02:18:04,685 - DEBUG - response code=200
2025-01-09 02:18:04,685 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:04,685 - DEBUG -    Exiting get()
2025-01-09 02:18:04,687 - DEBUG - CTSH: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:04,689 - DEBUG - CTSH: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:04,696 - DEBUG - CTSH: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:04,705 - DEBUG - CTSH: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:04,706 - DEBUG -   Exiting history()
2025-01-09 02:18:04,706 - DEBUG -  Exiting history()
2025-01-09 02:18:04,709 - DEBUG - Exiting download()
2025-01-09 02:18:04,818 - ERROR - Error writing data for CTSH to DB: schema "np" does not exist
LINE 4:             VALUES ('CTSH','2020-01-01'::date,np.float64(57....
                                                      ^

2025-01-09 02:18:04,819 - DEBUG - Entering download()
2025-01-09 02:18:04,819 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:04,819 - DEBUG -  Entering history()
2025-01-09 02:18:04,819 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CL', 1, 0])
2025-01-09 02:18:04,819 - DEBUG -   Entering history()
2025-01-09 02:18:04,820 - DEBUG - CL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:04,821 - DEBUG -    Entering get()
2025-01-09 02:18:04,821 - DEBUG -     Entering _make_request()
2025-01-09 02:18:04,821 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CL
2025-01-09 02:18:04,821 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:04,821 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:04,821 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:04,821 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:04,821 - DEBUG - reusing cookie
2025-01-09 02:18:04,821 - DEBUG - reusing crumb
2025-01-09 02:18:04,821 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:04,821 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:05,041 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CL?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1205
2025-01-09 02:18:05,043 - DEBUG - response code=200
2025-01-09 02:18:05,043 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:05,043 - DEBUG -    Exiting get()
2025-01-09 02:18:05,047 - DEBUG - CL: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:05,049 - DEBUG - CL: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:05,059 - DEBUG - CL: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:05,069 - DEBUG - CL: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:05,069 - DEBUG -   Exiting history()
2025-01-09 02:18:05,069 - DEBUG -  Exiting history()
2025-01-09 02:18:05,073 - DEBUG - Exiting download()
2025-01-09 02:18:05,220 - ERROR - Error writing data for CL to DB: schema "np" does not exist
LINE 4:             VALUES ('CL','2020-01-01'::date,np.float64(61.21...
                                                    ^

2025-01-09 02:18:05,221 - DEBUG - Entering download()
2025-01-09 02:18:05,221 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:05,221 - DEBUG -  Entering history()
2025-01-09 02:18:05,221 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CMCSA', 1, 0])
2025-01-09 02:18:05,222 - DEBUG -   Entering history()
2025-01-09 02:18:05,223 - DEBUG - CMCSA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:05,224 - DEBUG -    Entering get()
2025-01-09 02:18:05,224 - DEBUG -     Entering _make_request()
2025-01-09 02:18:05,224 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CMCSA
2025-01-09 02:18:05,225 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:05,225 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:05,225 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:05,225 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:05,225 - DEBUG - reusing cookie
2025-01-09 02:18:05,225 - DEBUG - reusing crumb
2025-01-09 02:18:05,225 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:05,225 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:05,482 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CMCSA?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1204
2025-01-09 02:18:05,483 - DEBUG - response code=200
2025-01-09 02:18:05,483 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:05,483 - DEBUG -    Exiting get()
2025-01-09 02:18:05,484 - DEBUG - CMCSA: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:05,485 - DEBUG - CMCSA: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:05,489 - DEBUG - CMCSA: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:05,495 - DEBUG - CMCSA: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:05,496 - DEBUG -   Exiting history()
2025-01-09 02:18:05,496 - DEBUG -  Exiting history()
2025-01-09 02:18:05,498 - DEBUG - Exiting download()
2025-01-09 02:18:05,541 - DEBUG - Entering download()
2025-01-09 02:18:05,541 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:05,542 - DEBUG -  Entering history()
2025-01-09 02:18:05,542 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CAG', 1, 0])
2025-01-09 02:18:05,542 - DEBUG -   Entering history()
2025-01-09 02:18:05,543 - DEBUG - CAG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:05,543 - DEBUG -    Entering get()
2025-01-09 02:18:05,543 - DEBUG -     Entering _make_request()
2025-01-09 02:18:05,543 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CAG
2025-01-09 02:18:05,543 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:05,543 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:05,543 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:05,543 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:05,543 - DEBUG - reusing cookie
2025-01-09 02:18:05,543 - DEBUG - reusing crumb
2025-01-09 02:18:05,543 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:05,543 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:05,764 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CAG?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1185
2025-01-09 02:18:05,765 - DEBUG - response code=200
2025-01-09 02:18:05,765 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:05,765 - DEBUG -    Exiting get()
2025-01-09 02:18:05,766 - DEBUG - CAG: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:05,767 - DEBUG - CAG: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:05,771 - DEBUG - CAG: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:05,777 - DEBUG - CAG: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:05,777 - DEBUG -   Exiting history()
2025-01-09 02:18:05,777 - DEBUG -  Exiting history()
2025-01-09 02:18:05,780 - DEBUG - Exiting download()
2025-01-09 02:18:05,844 - DEBUG - Entering download()
2025-01-09 02:18:05,845 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:05,845 - DEBUG -  Entering history()
2025-01-09 02:18:05,845 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['COP', 1, 0])
2025-01-09 02:18:05,846 - DEBUG -   Entering history()
2025-01-09 02:18:05,846 - DEBUG - COP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:05,847 - DEBUG -    Entering get()
2025-01-09 02:18:05,847 - DEBUG -     Entering _make_request()
2025-01-09 02:18:05,847 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/COP
2025-01-09 02:18:05,847 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:05,847 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:05,847 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:05,847 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:05,847 - DEBUG - reusing cookie
2025-01-09 02:18:05,847 - DEBUG - reusing crumb
2025-01-09 02:18:05,847 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:05,847 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:06,053 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/COP?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1186
2025-01-09 02:18:06,053 - DEBUG - response code=200
2025-01-09 02:18:06,053 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:06,053 - DEBUG -    Exiting get()
2025-01-09 02:18:06,055 - DEBUG - COP: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:06,056 - DEBUG - COP: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:06,060 - DEBUG - COP: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:06,067 - DEBUG - COP: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:06,067 - DEBUG -   Exiting history()
2025-01-09 02:18:06,068 - DEBUG -  Exiting history()
2025-01-09 02:18:06,070 - DEBUG - Exiting download()
2025-01-09 02:18:06,245 - ERROR - Error writing data for COP to DB: schema "np" does not exist
LINE 4:             VALUES ('COP','2020-01-01'::date,np.float64(54.2...
                                                     ^

2025-01-09 02:18:06,245 - DEBUG - Entering download()
2025-01-09 02:18:06,246 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:06,246 - DEBUG -  Entering history()
2025-01-09 02:18:06,246 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ED', 1, 0])
2025-01-09 02:18:06,246 - DEBUG -   Entering history()
2025-01-09 02:18:06,247 - DEBUG - ED: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:06,247 - DEBUG -    Entering get()
2025-01-09 02:18:06,247 - DEBUG -     Entering _make_request()
2025-01-09 02:18:06,248 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ED
2025-01-09 02:18:06,248 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:06,248 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:06,248 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:06,248 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:06,248 - DEBUG - reusing cookie
2025-01-09 02:18:06,248 - DEBUG - reusing crumb
2025-01-09 02:18:06,248 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:06,248 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:06,513 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ED?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1202
2025-01-09 02:18:06,513 - DEBUG - response code=200
2025-01-09 02:18:06,514 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:06,514 - DEBUG -    Exiting get()
2025-01-09 02:18:06,515 - DEBUG - ED: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:06,516 - DEBUG - ED: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:06,520 - DEBUG - ED: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:06,529 - DEBUG - ED: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:06,529 - DEBUG -   Exiting history()
2025-01-09 02:18:06,529 - DEBUG -  Exiting history()
2025-01-09 02:18:06,532 - DEBUG - Exiting download()
2025-01-09 02:18:06,694 - ERROR - Error writing data for ED to DB: schema "np" does not exist
LINE 4:             VALUES ('ED','2020-01-01'::date,np.float64(75.35...
                                                    ^

2025-01-09 02:18:06,694 - DEBUG - Entering download()
2025-01-09 02:18:06,695 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:06,695 - DEBUG -  Entering history()
2025-01-09 02:18:06,695 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['STZ', 1, 0])
2025-01-09 02:18:06,695 - DEBUG -   Entering history()
2025-01-09 02:18:06,696 - DEBUG - STZ: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:06,696 - DEBUG -    Entering get()
2025-01-09 02:18:06,697 - DEBUG -     Entering _make_request()
2025-01-09 02:18:06,697 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/STZ
2025-01-09 02:18:06,697 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:06,697 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:06,697 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:06,697 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:06,697 - DEBUG - reusing cookie
2025-01-09 02:18:06,697 - DEBUG - reusing crumb
2025-01-09 02:18:06,697 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:06,697 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:06,860 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/STZ?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1206
2025-01-09 02:18:06,860 - DEBUG - response code=200
2025-01-09 02:18:06,860 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:06,860 - DEBUG -    Exiting get()
2025-01-09 02:18:06,861 - DEBUG - STZ: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:06,862 - DEBUG - STZ: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:06,865 - DEBUG - STZ: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:06,869 - DEBUG - STZ: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:06,869 - DEBUG -   Exiting history()
2025-01-09 02:18:06,870 - DEBUG -  Exiting history()
2025-01-09 02:18:06,871 - DEBUG - Exiting download()
2025-01-09 02:18:07,022 - DEBUG - Entering download()
2025-01-09 02:18:07,023 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:07,023 - DEBUG -  Entering history()
2025-01-09 02:18:07,023 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CEG', 1, 0])
2025-01-09 02:18:07,024 - DEBUG -   Entering history()
2025-01-09 02:18:07,024 - DEBUG - CEG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:07,024 - DEBUG -    Entering get()
2025-01-09 02:18:07,025 - DEBUG -     Entering _make_request()
2025-01-09 02:18:07,025 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CEG
2025-01-09 02:18:07,025 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:07,025 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:07,025 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:07,025 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:07,025 - DEBUG - reusing cookie
2025-01-09 02:18:07,025 - DEBUG - reusing crumb
2025-01-09 02:18:07,025 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:07,025 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:07,185 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CEG?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:18:07,186 - DEBUG - response code=400
2025-01-09 02:18:07,186 - DEBUG - toggling cookie strategy basic -> csrf
2025-01-09 02:18:07,186 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:07,186 - DEBUG - cookie_mode = 'csrf'
2025-01-09 02:18:07,186 - DEBUG -       Entering _get_crumb_csrf()
2025-01-09 02:18:07,187 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['csrf', 1, 0])
2025-01-09 02:18:07,333 - DEBUG - https://guce.yahoo.com:443 "GET /consent HTTP/1.1" 302 0
2025-01-09 02:18:07,672 - DEBUG - https://www.yahoo.com:443 "GET /?guccounter=1 HTTP/1.1" 200 None
2025-01-09 02:18:08,229 - DEBUG - Failed to find "csrfToken" in response
2025-01-09 02:18:08,230 - DEBUG -       Exiting _get_crumb_csrf()
2025-01-09 02:18:08,230 - DEBUG - toggling cookie strategy csrf -> basic
2025-01-09 02:18:08,230 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:08,230 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['basic', 1, 0])
2025-01-09 02:18:08,231 - DEBUG - loaded persistent cookie
2025-01-09 02:18:08,231 - DEBUG - reusing cookie
2025-01-09 02:18:08,388 - DEBUG - https://query1.finance.yahoo.com:443 "GET /v1/test/getcrumb HTTP/1.1" 200 11
2025-01-09 02:18:08,388 - DEBUG - crumb = 'mbrlfmeSllh'
2025-01-09 02:18:08,388 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:08,389 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:08,545 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CEG?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:18:08,546 - DEBUG - response code=400
2025-01-09 02:18:08,546 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:08,546 - DEBUG -    Exiting get()
2025-01-09 02:18:08,553 - ERROR - 
1 Failed download:
2025-01-09 02:18:08,553 - ERROR - ['CEG']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1wk 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn\'t exist for startDate = 1577854800, endDate = 1577941200")')
2025-01-09 02:18:08,553 - DEBUG - ['CEG']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1wk 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn't exist for startDate = 1577854800, endDate = 1577941200")

2025-01-09 02:18:08,561 - DEBUG - Exiting download()
2025-01-09 02:18:08,666 - ERROR - Error writing data for CEG to DB: schema "np" does not exist
LINE 4:             VALUES ('CEG','2022-01-19'::date,np.float64(36.9...
                                                     ^

2025-01-09 02:18:08,667 - DEBUG - Entering download()
2025-01-09 02:18:08,667 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:08,667 - DEBUG -  Entering history()
2025-01-09 02:18:08,667 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['COO', 1, 0])
2025-01-09 02:18:08,667 - DEBUG -   Entering history()
2025-01-09 02:18:08,668 - DEBUG - COO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:08,668 - DEBUG -    Entering get()
2025-01-09 02:18:08,668 - DEBUG -     Entering _make_request()
2025-01-09 02:18:08,668 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/COO
2025-01-09 02:18:08,668 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:08,669 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:08,669 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:08,669 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:08,669 - DEBUG - reusing cookie
2025-01-09 02:18:08,669 - DEBUG - reusing crumb
2025-01-09 02:18:08,669 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:08,669 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:08,854 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/COO?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1211
2025-01-09 02:18:08,854 - DEBUG - response code=200
2025-01-09 02:18:08,854 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:08,855 - DEBUG -    Exiting get()
2025-01-09 02:18:08,856 - DEBUG - COO: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:08,857 - DEBUG - COO: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:08,861 - DEBUG - COO: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:08,868 - DEBUG - COO: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:08,869 - DEBUG -   Exiting history()
2025-01-09 02:18:08,869 - DEBUG -  Exiting history()
2025-01-09 02:18:08,872 - DEBUG - Exiting download()
2025-01-09 02:18:09,020 - DEBUG - Entering download()
2025-01-09 02:18:09,020 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:09,020 - DEBUG -  Entering history()
2025-01-09 02:18:09,021 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CPRT', 1, 0])
2025-01-09 02:18:09,021 - DEBUG -   Entering history()
2025-01-09 02:18:09,021 - DEBUG - CPRT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:09,021 - DEBUG -    Entering get()
2025-01-09 02:18:09,021 - DEBUG -     Entering _make_request()
2025-01-09 02:18:09,022 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CPRT
2025-01-09 02:18:09,022 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:09,022 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:09,022 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:09,022 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:09,022 - DEBUG - reusing cookie
2025-01-09 02:18:09,022 - DEBUG - reusing crumb
2025-01-09 02:18:09,022 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:09,022 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:09,173 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CPRT?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1186
2025-01-09 02:18:09,173 - DEBUG - response code=200
2025-01-09 02:18:09,174 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:09,174 - DEBUG -    Exiting get()
2025-01-09 02:18:09,175 - DEBUG - CPRT: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:09,176 - DEBUG - CPRT: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:09,179 - DEBUG - CPRT: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:09,184 - DEBUG - CPRT: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:09,184 - DEBUG -   Exiting history()
2025-01-09 02:18:09,184 - DEBUG -  Exiting history()
2025-01-09 02:18:09,186 - DEBUG - Exiting download()
2025-01-09 02:18:09,290 - ERROR - Error writing data for CPRT to DB: schema "np" does not exist
LINE 4:             VALUES ('CPRT','2020-01-01'::date,np.float64(22....
                                                      ^

2025-01-09 02:18:09,290 - DEBUG - Entering download()
2025-01-09 02:18:09,290 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:09,291 - DEBUG -  Entering history()
2025-01-09 02:18:09,291 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GLW', 1, 0])
2025-01-09 02:18:09,291 - DEBUG -   Entering history()
2025-01-09 02:18:09,292 - DEBUG - GLW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:09,293 - DEBUG -    Entering get()
2025-01-09 02:18:09,293 - DEBUG -     Entering _make_request()
2025-01-09 02:18:09,293 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GLW
2025-01-09 02:18:09,293 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:09,293 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:09,293 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:09,293 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:09,293 - DEBUG - reusing cookie
2025-01-09 02:18:09,293 - DEBUG - reusing crumb
2025-01-09 02:18:09,293 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:09,293 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:09,490 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GLW?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1186
2025-01-09 02:18:09,492 - DEBUG - response code=200
2025-01-09 02:18:09,492 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:09,492 - DEBUG -    Exiting get()
2025-01-09 02:18:09,496 - DEBUG - GLW: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:09,499 - DEBUG - GLW: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:09,509 - DEBUG - GLW: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:09,518 - DEBUG - GLW: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:09,519 - DEBUG -   Exiting history()
2025-01-09 02:18:09,519 - DEBUG -  Exiting history()
2025-01-09 02:18:09,522 - DEBUG - Exiting download()
2025-01-09 02:18:09,652 - ERROR - Error writing data for GLW to DB: schema "np" does not exist
LINE 4:             VALUES ('GLW','2020-01-01'::date,np.float64(25.2...
                                                     ^

2025-01-09 02:18:09,652 - DEBUG - Entering download()
2025-01-09 02:18:09,652 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:09,652 - DEBUG -  Entering history()
2025-01-09 02:18:09,653 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CPAY', 1, 0])
2025-01-09 02:18:09,653 - DEBUG -   Entering history()
2025-01-09 02:18:09,654 - DEBUG - CPAY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:09,654 - DEBUG -    Entering get()
2025-01-09 02:18:09,654 - DEBUG -     Entering _make_request()
2025-01-09 02:18:09,654 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CPAY
2025-01-09 02:18:09,654 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:09,654 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:09,654 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:09,655 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:09,655 - DEBUG - reusing cookie
2025-01-09 02:18:09,655 - DEBUG - reusing crumb
2025-01-09 02:18:09,655 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:09,655 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:09,808 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CPAY?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1182
2025-01-09 02:18:09,808 - DEBUG - response code=200
2025-01-09 02:18:09,809 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:09,809 - DEBUG -    Exiting get()
2025-01-09 02:18:09,810 - DEBUG - CPAY: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:09,811 - DEBUG - CPAY: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:09,817 - DEBUG - CPAY: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:09,825 - DEBUG - CPAY: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:09,825 - DEBUG -   Exiting history()
2025-01-09 02:18:09,825 - DEBUG -  Exiting history()
2025-01-09 02:18:09,828 - DEBUG - Exiting download()
2025-01-09 02:18:09,877 - DEBUG - Entering download()
2025-01-09 02:18:09,877 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:09,878 - DEBUG -  Entering history()
2025-01-09 02:18:09,878 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CTVA', 1, 0])
2025-01-09 02:18:09,878 - DEBUG -   Entering history()
2025-01-09 02:18:09,879 - DEBUG - CTVA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:09,879 - DEBUG -    Entering get()
2025-01-09 02:18:09,879 - DEBUG -     Entering _make_request()
2025-01-09 02:18:09,879 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CTVA
2025-01-09 02:18:09,879 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:09,879 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:09,879 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:09,879 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:09,879 - DEBUG - reusing cookie
2025-01-09 02:18:09,879 - DEBUG - reusing crumb
2025-01-09 02:18:09,879 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:09,879 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:10,072 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CTVA?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1187
2025-01-09 02:18:10,073 - DEBUG - response code=200
2025-01-09 02:18:10,073 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:10,073 - DEBUG -    Exiting get()
2025-01-09 02:18:10,077 - DEBUG - CTVA: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:10,080 - DEBUG - CTVA: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:10,092 - DEBUG - CTVA: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:10,103 - DEBUG - CTVA: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:10,103 - DEBUG -   Exiting history()
2025-01-09 02:18:10,103 - DEBUG -  Exiting history()
2025-01-09 02:18:10,107 - DEBUG - Exiting download()
2025-01-09 02:18:10,219 - ERROR - Error writing data for CTVA to DB: schema "np" does not exist
LINE 4:             VALUES ('CTVA','2020-01-01'::date,np.float64(27....
                                                      ^

2025-01-09 02:18:10,220 - DEBUG - Entering download()
2025-01-09 02:18:10,220 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:10,220 - DEBUG -  Entering history()
2025-01-09 02:18:10,220 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CSGP', 1, 0])
2025-01-09 02:18:10,221 - DEBUG -   Entering history()
2025-01-09 02:18:10,222 - DEBUG - CSGP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:10,222 - DEBUG -    Entering get()
2025-01-09 02:18:10,222 - DEBUG -     Entering _make_request()
2025-01-09 02:18:10,222 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CSGP
2025-01-09 02:18:10,222 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:10,222 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:10,222 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:10,222 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:10,222 - DEBUG - reusing cookie
2025-01-09 02:18:10,223 - DEBUG - reusing crumb
2025-01-09 02:18:10,223 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:10,223 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:10,380 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CSGP?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1202
2025-01-09 02:18:10,381 - DEBUG - response code=200
2025-01-09 02:18:10,381 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:10,381 - DEBUG -    Exiting get()
2025-01-09 02:18:10,385 - DEBUG - CSGP: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:10,388 - DEBUG - CSGP: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:10,400 - DEBUG - CSGP: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:10,413 - DEBUG - CSGP: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:10,413 - DEBUG -   Exiting history()
2025-01-09 02:18:10,413 - DEBUG -  Exiting history()
2025-01-09 02:18:10,417 - DEBUG - Exiting download()
2025-01-09 02:18:10,531 - ERROR - Error writing data for CSGP to DB: schema "np" does not exist
LINE 4:             VALUES ('CSGP','2020-01-01'::date,np.float64(60....
                                                      ^

2025-01-09 02:18:10,531 - DEBUG - Entering download()
2025-01-09 02:18:10,531 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:10,532 - DEBUG -  Entering history()
2025-01-09 02:18:10,532 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['COST', 1, 0])
2025-01-09 02:18:10,532 - DEBUG -   Entering history()
2025-01-09 02:18:10,533 - DEBUG - COST: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:10,533 - DEBUG -    Entering get()
2025-01-09 02:18:10,533 - DEBUG -     Entering _make_request()
2025-01-09 02:18:10,533 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/COST
2025-01-09 02:18:10,533 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:10,533 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:10,533 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:10,533 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:10,533 - DEBUG - reusing cookie
2025-01-09 02:18:10,533 - DEBUG - reusing crumb
2025-01-09 02:18:10,533 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:10,533 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:10,710 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/COST?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1211
2025-01-09 02:18:10,711 - DEBUG - response code=200
2025-01-09 02:18:10,711 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:10,711 - DEBUG -    Exiting get()
2025-01-09 02:18:10,712 - DEBUG - COST: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:10,713 - DEBUG - COST: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:10,717 - DEBUG - COST: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:10,722 - DEBUG - COST: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:10,723 - DEBUG -   Exiting history()
2025-01-09 02:18:10,723 - DEBUG -  Exiting history()
2025-01-09 02:18:10,725 - DEBUG - Exiting download()
2025-01-09 02:18:11,016 - ERROR - Error writing data for COST to DB: schema "np" does not exist
LINE 4:             VALUES ('COST','2020-01-01'::date,np.float64(270...
                                                      ^

2025-01-09 02:18:11,017 - DEBUG - Entering download()
2025-01-09 02:18:11,017 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:11,017 - DEBUG -  Entering history()
2025-01-09 02:18:11,018 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CTRA', 1, 0])
2025-01-09 02:18:11,018 - DEBUG -   Entering history()
2025-01-09 02:18:11,019 - DEBUG - CTRA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:11,019 - DEBUG -    Entering get()
2025-01-09 02:18:11,019 - DEBUG -     Entering _make_request()
2025-01-09 02:18:11,019 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CTRA
2025-01-09 02:18:11,019 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:11,019 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:11,019 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:11,019 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:11,019 - DEBUG - reusing cookie
2025-01-09 02:18:11,019 - DEBUG - reusing crumb
2025-01-09 02:18:11,019 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:11,020 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:11,223 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CTRA?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1197
2025-01-09 02:18:11,223 - DEBUG - response code=200
2025-01-09 02:18:11,223 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:11,224 - DEBUG -    Exiting get()
2025-01-09 02:18:11,225 - DEBUG - CTRA: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:11,226 - DEBUG - CTRA: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:11,231 - DEBUG - CTRA: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:11,239 - DEBUG - CTRA: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:11,239 - DEBUG -   Exiting history()
2025-01-09 02:18:11,239 - DEBUG -  Exiting history()
2025-01-09 02:18:11,242 - DEBUG - Exiting download()
2025-01-09 02:18:11,351 - ERROR - Error writing data for CTRA to DB: schema "np" does not exist
LINE 4:             VALUES ('CTRA','2020-01-01'::date,np.float64(13....
                                                      ^

2025-01-09 02:18:11,351 - DEBUG - Entering download()
2025-01-09 02:18:11,352 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:11,352 - DEBUG -  Entering history()
2025-01-09 02:18:11,352 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CRWD', 1, 0])
2025-01-09 02:18:11,352 - DEBUG -   Entering history()
2025-01-09 02:18:11,353 - DEBUG - CRWD: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:11,353 - DEBUG -    Entering get()
2025-01-09 02:18:11,353 - DEBUG -     Entering _make_request()
2025-01-09 02:18:11,353 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CRWD
2025-01-09 02:18:11,353 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:11,353 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:11,353 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:11,353 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:11,353 - DEBUG - reusing cookie
2025-01-09 02:18:11,353 - DEBUG - reusing crumb
2025-01-09 02:18:11,354 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:11,354 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:11,513 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CRWD?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1199
2025-01-09 02:18:11,514 - DEBUG - response code=200
2025-01-09 02:18:11,514 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:11,514 - DEBUG -    Exiting get()
2025-01-09 02:18:11,516 - DEBUG - CRWD: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:11,518 - DEBUG - CRWD: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:11,526 - DEBUG - CRWD: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:11,539 - DEBUG - CRWD: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:11,539 - DEBUG -   Exiting history()
2025-01-09 02:18:11,539 - DEBUG -  Exiting history()
2025-01-09 02:18:11,543 - DEBUG - Exiting download()
2025-01-09 02:18:11,703 - ERROR - Error writing data for CRWD to DB: schema "np" does not exist
LINE 4:             VALUES ('CRWD','2020-01-01'::date,np.float64(50....
                                                      ^

2025-01-09 02:18:11,703 - DEBUG - Entering download()
2025-01-09 02:18:11,704 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:11,704 - DEBUG -  Entering history()
2025-01-09 02:18:11,704 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CCI', 1, 0])
2025-01-09 02:18:11,704 - DEBUG -   Entering history()
2025-01-09 02:18:11,705 - DEBUG - CCI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:11,705 - DEBUG -    Entering get()
2025-01-09 02:18:11,706 - DEBUG -     Entering _make_request()
2025-01-09 02:18:11,706 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CCI
2025-01-09 02:18:11,706 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:11,706 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:11,706 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:11,706 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:11,706 - DEBUG - reusing cookie
2025-01-09 02:18:11,706 - DEBUG - reusing crumb
2025-01-09 02:18:11,706 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:11,706 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:11,870 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CCI?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1195
2025-01-09 02:18:11,871 - DEBUG - response code=200
2025-01-09 02:18:11,871 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:11,872 - DEBUG -    Exiting get()
2025-01-09 02:18:11,875 - DEBUG - CCI: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:11,877 - DEBUG - CCI: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:11,888 - DEBUG - CCI: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:11,899 - DEBUG - CCI: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:11,899 - DEBUG -   Exiting history()
2025-01-09 02:18:11,900 - DEBUG -  Exiting history()
2025-01-09 02:18:11,903 - DEBUG - Exiting download()
2025-01-09 02:18:12,013 - ERROR - Error writing data for CCI to DB: schema "np" does not exist
LINE 4:             VALUES ('CCI','2020-01-01'::date,np.float64(115....
                                                     ^

2025-01-09 02:18:12,013 - DEBUG - Entering download()
2025-01-09 02:18:12,013 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:12,014 - DEBUG -  Entering history()
2025-01-09 02:18:12,014 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CSX', 1, 0])
2025-01-09 02:18:12,014 - DEBUG -   Entering history()
2025-01-09 02:18:12,015 - DEBUG - CSX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:12,015 - DEBUG -    Entering get()
2025-01-09 02:18:12,015 - DEBUG -     Entering _make_request()
2025-01-09 02:18:12,015 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CSX
2025-01-09 02:18:12,015 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:12,015 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:12,015 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:12,015 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:12,015 - DEBUG - reusing cookie
2025-01-09 02:18:12,015 - DEBUG - reusing crumb
2025-01-09 02:18:12,015 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:12,015 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:12,215 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CSX?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1193
2025-01-09 02:18:12,216 - DEBUG - response code=200
2025-01-09 02:18:12,216 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:12,217 - DEBUG -    Exiting get()
2025-01-09 02:18:12,220 - DEBUG - CSX: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:12,222 - DEBUG - CSX: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:12,233 - DEBUG - CSX: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:12,247 - DEBUG - CSX: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:12,248 - DEBUG -   Exiting history()
2025-01-09 02:18:12,248 - DEBUG -  Exiting history()
2025-01-09 02:18:12,251 - DEBUG - Exiting download()
2025-01-09 02:18:12,300 - DEBUG - Entering download()
2025-01-09 02:18:12,301 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:12,301 - DEBUG -  Entering history()
2025-01-09 02:18:12,301 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CMI', 1, 0])
2025-01-09 02:18:12,301 - DEBUG -   Entering history()
2025-01-09 02:18:12,302 - DEBUG - CMI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:12,302 - DEBUG -    Entering get()
2025-01-09 02:18:12,302 - DEBUG -     Entering _make_request()
2025-01-09 02:18:12,302 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CMI
2025-01-09 02:18:12,302 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:12,302 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:12,302 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:12,302 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:12,302 - DEBUG - reusing cookie
2025-01-09 02:18:12,303 - DEBUG - reusing crumb
2025-01-09 02:18:12,303 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:12,303 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:12,523 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CMI?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1185
2025-01-09 02:18:12,524 - DEBUG - response code=200
2025-01-09 02:18:12,524 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:12,524 - DEBUG -    Exiting get()
2025-01-09 02:18:12,525 - DEBUG - CMI: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:12,526 - DEBUG - CMI: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:12,530 - DEBUG - CMI: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:12,537 - DEBUG - CMI: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:12,537 - DEBUG -   Exiting history()
2025-01-09 02:18:12,537 - DEBUG -  Exiting history()
2025-01-09 02:18:12,540 - DEBUG - Exiting download()
2025-01-09 02:18:12,784 - ERROR - Error writing data for CMI to DB: schema "np" does not exist
LINE 4:             VALUES ('CMI','2020-01-01'::date,np.float64(158....
                                                     ^

2025-01-09 02:18:12,784 - DEBUG - Entering download()
2025-01-09 02:18:12,785 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:12,785 - DEBUG -  Entering history()
2025-01-09 02:18:12,785 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CVS', 1, 0])
2025-01-09 02:18:12,785 - DEBUG -   Entering history()
2025-01-09 02:18:12,786 - DEBUG - CVS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:12,786 - DEBUG -    Entering get()
2025-01-09 02:18:12,786 - DEBUG -     Entering _make_request()
2025-01-09 02:18:12,786 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CVS
2025-01-09 02:18:12,786 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:12,786 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:12,786 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:12,786 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:12,786 - DEBUG - reusing cookie
2025-01-09 02:18:12,786 - DEBUG - reusing crumb
2025-01-09 02:18:12,786 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:12,786 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:12,979 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CVS?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1198
2025-01-09 02:18:12,980 - DEBUG - response code=200
2025-01-09 02:18:12,980 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:12,981 - DEBUG -    Exiting get()
2025-01-09 02:18:12,984 - DEBUG - CVS: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:12,986 - DEBUG - CVS: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:12,997 - DEBUG - CVS: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:13,008 - DEBUG - CVS: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:13,008 - DEBUG -   Exiting history()
2025-01-09 02:18:13,008 - DEBUG -  Exiting history()
2025-01-09 02:18:13,012 - DEBUG - Exiting download()
2025-01-09 02:18:13,127 - ERROR - Error writing data for CVS to DB: schema "np" does not exist
LINE 4:             VALUES ('CVS','2020-01-01'::date,np.float64(64.1...
                                                     ^

2025-01-09 02:18:13,127 - DEBUG - Entering download()
2025-01-09 02:18:13,127 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:13,127 - DEBUG -  Entering history()
2025-01-09 02:18:13,128 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DHR', 1, 0])
2025-01-09 02:18:13,128 - DEBUG -   Entering history()
2025-01-09 02:18:13,128 - DEBUG - DHR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:13,128 - DEBUG -    Entering get()
2025-01-09 02:18:13,129 - DEBUG -     Entering _make_request()
2025-01-09 02:18:13,129 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DHR
2025-01-09 02:18:13,129 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:13,129 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:13,129 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:13,129 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:13,129 - DEBUG - reusing cookie
2025-01-09 02:18:13,129 - DEBUG - reusing crumb
2025-01-09 02:18:13,129 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:13,129 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:13,329 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DHR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1201
2025-01-09 02:18:13,330 - DEBUG - response code=200
2025-01-09 02:18:13,330 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:13,331 - DEBUG -    Exiting get()
2025-01-09 02:18:13,334 - DEBUG - DHR: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:13,336 - DEBUG - DHR: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:13,347 - DEBUG - DHR: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:13,361 - DEBUG - DHR: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:13,361 - DEBUG -   Exiting history()
2025-01-09 02:18:13,361 - DEBUG -  Exiting history()
2025-01-09 02:18:13,365 - DEBUG - Exiting download()
2025-01-09 02:18:13,416 - DEBUG - Entering download()
2025-01-09 02:18:13,416 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:13,416 - DEBUG -  Entering history()
2025-01-09 02:18:13,417 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DRI', 1, 0])
2025-01-09 02:18:13,417 - DEBUG -   Entering history()
2025-01-09 02:18:13,418 - DEBUG - DRI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:13,418 - DEBUG -    Entering get()
2025-01-09 02:18:13,418 - DEBUG -     Entering _make_request()
2025-01-09 02:18:13,418 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DRI
2025-01-09 02:18:13,418 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:13,418 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:13,418 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:13,418 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:13,418 - DEBUG - reusing cookie
2025-01-09 02:18:13,418 - DEBUG - reusing crumb
2025-01-09 02:18:13,418 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:13,418 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:13,599 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DRI?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1213
2025-01-09 02:18:13,600 - DEBUG - response code=200
2025-01-09 02:18:13,600 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:13,600 - DEBUG -    Exiting get()
2025-01-09 02:18:13,604 - DEBUG - DRI: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:13,607 - DEBUG - DRI: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:13,617 - DEBUG - DRI: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:13,626 - DEBUG - DRI: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:13,626 - DEBUG -   Exiting history()
2025-01-09 02:18:13,626 - DEBUG -  Exiting history()
2025-01-09 02:18:13,629 - DEBUG - Exiting download()
2025-01-09 02:18:13,677 - DEBUG - Entering download()
2025-01-09 02:18:13,677 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:13,677 - DEBUG -  Entering history()
2025-01-09 02:18:13,678 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DVA', 1, 0])
2025-01-09 02:18:13,678 - DEBUG -   Entering history()
2025-01-09 02:18:13,678 - DEBUG - DVA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:13,679 - DEBUG -    Entering get()
2025-01-09 02:18:13,679 - DEBUG -     Entering _make_request()
2025-01-09 02:18:13,679 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DVA
2025-01-09 02:18:13,679 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:13,679 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:13,679 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:13,679 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:13,679 - DEBUG - reusing cookie
2025-01-09 02:18:13,679 - DEBUG - reusing crumb
2025-01-09 02:18:13,679 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:13,679 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:13,828 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DVA?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1155
2025-01-09 02:18:13,828 - DEBUG - response code=200
2025-01-09 02:18:13,828 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:13,828 - DEBUG -    Exiting get()
2025-01-09 02:18:13,830 - DEBUG - DVA: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:13,831 - DEBUG - DVA: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:13,834 - DEBUG - DVA: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:13,840 - DEBUG - DVA: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:13,840 - DEBUG -   Exiting history()
2025-01-09 02:18:13,840 - DEBUG -  Exiting history()
2025-01-09 02:18:13,843 - DEBUG - Exiting download()
2025-01-09 02:18:13,885 - DEBUG - Entering download()
2025-01-09 02:18:13,885 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:13,885 - DEBUG -  Entering history()
2025-01-09 02:18:13,885 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DAY', 1, 0])
2025-01-09 02:18:13,886 - DEBUG -   Entering history()
2025-01-09 02:18:13,886 - DEBUG - DAY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:13,886 - DEBUG -    Entering get()
2025-01-09 02:18:13,886 - DEBUG -     Entering _make_request()
2025-01-09 02:18:13,886 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DAY
2025-01-09 02:18:13,886 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:13,887 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:13,887 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:13,887 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:13,887 - DEBUG - reusing cookie
2025-01-09 02:18:13,887 - DEBUG - reusing crumb
2025-01-09 02:18:13,887 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:13,887 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:14,048 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DAY?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1179
2025-01-09 02:18:14,049 - DEBUG - response code=200
2025-01-09 02:18:14,049 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:14,050 - DEBUG -    Exiting get()
2025-01-09 02:18:14,053 - DEBUG - DAY: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:14,056 - DEBUG - DAY: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:14,067 - DEBUG - DAY: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:14,078 - DEBUG - DAY: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:14,078 - DEBUG -   Exiting history()
2025-01-09 02:18:14,078 - DEBUG -  Exiting history()
2025-01-09 02:18:14,081 - DEBUG - Exiting download()
2025-01-09 02:18:14,207 - ERROR - Error writing data for DAY to DB: schema "np" does not exist
LINE 4:             VALUES ('DAY','2020-01-01'::date,np.float64(68.4...
                                                     ^

2025-01-09 02:18:14,207 - DEBUG - Entering download()
2025-01-09 02:18:14,207 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:14,207 - DEBUG -  Entering history()
2025-01-09 02:18:14,208 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DECK', 1, 0])
2025-01-09 02:18:14,208 - DEBUG -   Entering history()
2025-01-09 02:18:14,208 - DEBUG - DECK: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:14,208 - DEBUG -    Entering get()
2025-01-09 02:18:14,208 - DEBUG -     Entering _make_request()
2025-01-09 02:18:14,209 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DECK
2025-01-09 02:18:14,209 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:14,209 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:14,209 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:14,209 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:14,209 - DEBUG - reusing cookie
2025-01-09 02:18:14,209 - DEBUG - reusing crumb
2025-01-09 02:18:14,209 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:14,209 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:14,369 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DECK?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1218
2025-01-09 02:18:14,370 - DEBUG - response code=200
2025-01-09 02:18:14,371 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:14,371 - DEBUG -    Exiting get()
2025-01-09 02:18:14,374 - DEBUG - DECK: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:14,377 - DEBUG - DECK: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:14,387 - DEBUG - DECK: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:14,398 - DEBUG - DECK: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:14,398 - DEBUG -   Exiting history()
2025-01-09 02:18:14,398 - DEBUG -  Exiting history()
2025-01-09 02:18:14,402 - DEBUG - Exiting download()
2025-01-09 02:18:14,451 - DEBUG - Entering download()
2025-01-09 02:18:14,451 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:14,451 - DEBUG -  Entering history()
2025-01-09 02:18:14,451 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DE', 1, 0])
2025-01-09 02:18:14,452 - DEBUG -   Entering history()
2025-01-09 02:18:14,452 - DEBUG - DE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:14,452 - DEBUG -    Entering get()
2025-01-09 02:18:14,452 - DEBUG -     Entering _make_request()
2025-01-09 02:18:14,452 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DE
2025-01-09 02:18:14,452 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:14,453 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:14,453 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:14,453 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:14,453 - DEBUG - reusing cookie
2025-01-09 02:18:14,453 - DEBUG - reusing crumb
2025-01-09 02:18:14,453 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:14,453 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:14,658 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DE?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1189
2025-01-09 02:18:14,659 - DEBUG - response code=200
2025-01-09 02:18:14,659 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:14,660 - DEBUG -    Exiting get()
2025-01-09 02:18:14,662 - DEBUG - DE: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:14,664 - DEBUG - DE: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:14,670 - DEBUG - DE: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:14,676 - DEBUG - DE: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:14,676 - DEBUG -   Exiting history()
2025-01-09 02:18:14,677 - DEBUG -  Exiting history()
2025-01-09 02:18:14,679 - DEBUG - Exiting download()
2025-01-09 02:18:14,722 - DEBUG - Entering download()
2025-01-09 02:18:14,722 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:14,722 - DEBUG -  Entering history()
2025-01-09 02:18:14,723 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DELL', 1, 0])
2025-01-09 02:18:14,723 - DEBUG -   Entering history()
2025-01-09 02:18:14,724 - DEBUG - DELL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:14,724 - DEBUG -    Entering get()
2025-01-09 02:18:14,724 - DEBUG -     Entering _make_request()
2025-01-09 02:18:14,724 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DELL
2025-01-09 02:18:14,724 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:14,724 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:14,724 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:14,724 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:14,724 - DEBUG - reusing cookie
2025-01-09 02:18:14,724 - DEBUG - reusing crumb
2025-01-09 02:18:14,724 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:14,724 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:14,869 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DELL?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1208
2025-01-09 02:18:14,871 - DEBUG - response code=200
2025-01-09 02:18:14,871 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:14,871 - DEBUG -    Exiting get()
2025-01-09 02:18:14,875 - DEBUG - DELL: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:14,878 - DEBUG - DELL: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:14,889 - DEBUG - DELL: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:14,900 - DEBUG - DELL: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:14,900 - DEBUG -   Exiting history()
2025-01-09 02:18:14,900 - DEBUG -  Exiting history()
2025-01-09 02:18:14,907 - DEBUG - Exiting download()
2025-01-09 02:18:15,039 - ERROR - Error writing data for DELL to DB: schema "np" does not exist
LINE 4:             VALUES ('DELL','2020-01-01'::date,np.float64(24....
                                                      ^

2025-01-09 02:18:15,039 - DEBUG - Entering download()
2025-01-09 02:18:15,039 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:15,040 - DEBUG -  Entering history()
2025-01-09 02:18:15,040 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DAL', 1, 0])
2025-01-09 02:18:15,040 - DEBUG -   Entering history()
2025-01-09 02:18:15,041 - DEBUG - DAL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:15,041 - DEBUG -    Entering get()
2025-01-09 02:18:15,041 - DEBUG -     Entering _make_request()
2025-01-09 02:18:15,041 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DAL
2025-01-09 02:18:15,041 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:15,041 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:15,041 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:15,041 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:15,041 - DEBUG - reusing cookie
2025-01-09 02:18:15,041 - DEBUG - reusing crumb
2025-01-09 02:18:15,042 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:15,042 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:15,207 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DAL?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1198
2025-01-09 02:18:15,208 - DEBUG - response code=200
2025-01-09 02:18:15,208 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:15,208 - DEBUG -    Exiting get()
2025-01-09 02:18:15,209 - DEBUG - DAL: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:15,210 - DEBUG - DAL: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:15,215 - DEBUG - DAL: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:15,222 - DEBUG - DAL: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:15,222 - DEBUG -   Exiting history()
2025-01-09 02:18:15,222 - DEBUG -  Exiting history()
2025-01-09 02:18:15,224 - DEBUG - Exiting download()
2025-01-09 02:18:15,374 - ERROR - Error writing data for DAL to DB: schema "np" does not exist
LINE 4:             VALUES ('DAL','2020-01-01'::date,np.float64(57.6...
                                                     ^

2025-01-09 02:18:15,375 - DEBUG - Entering download()
2025-01-09 02:18:15,375 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:15,375 - DEBUG -  Entering history()
2025-01-09 02:18:15,376 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DVN', 1, 0])
2025-01-09 02:18:15,376 - DEBUG -   Entering history()
2025-01-09 02:18:15,377 - DEBUG - DVN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:15,377 - DEBUG -    Entering get()
2025-01-09 02:18:15,377 - DEBUG -     Entering _make_request()
2025-01-09 02:18:15,377 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DVN
2025-01-09 02:18:15,377 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:15,377 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:15,377 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:15,377 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:15,377 - DEBUG - reusing cookie
2025-01-09 02:18:15,377 - DEBUG - reusing crumb
2025-01-09 02:18:15,377 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:15,378 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:15,567 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DVN?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1205
2025-01-09 02:18:15,568 - DEBUG - response code=200
2025-01-09 02:18:15,568 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:15,568 - DEBUG -    Exiting get()
2025-01-09 02:18:15,569 - DEBUG - DVN: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:15,570 - DEBUG - DVN: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:15,574 - DEBUG - DVN: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:15,581 - DEBUG - DVN: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:15,581 - DEBUG -   Exiting history()
2025-01-09 02:18:15,581 - DEBUG -  Exiting history()
2025-01-09 02:18:15,584 - DEBUG - Exiting download()
2025-01-09 02:18:15,841 - ERROR - Error writing data for DVN to DB: schema "np" does not exist
LINE 4:             VALUES ('DVN','2020-01-01'::date,np.float64(19.5...
                                                     ^

2025-01-09 02:18:15,841 - DEBUG - Entering download()
2025-01-09 02:18:15,841 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:15,841 - DEBUG -  Entering history()
2025-01-09 02:18:15,842 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DXCM', 1, 0])
2025-01-09 02:18:15,842 - DEBUG -   Entering history()
2025-01-09 02:18:15,843 - DEBUG - DXCM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:15,843 - DEBUG -    Entering get()
2025-01-09 02:18:15,843 - DEBUG -     Entering _make_request()
2025-01-09 02:18:15,843 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DXCM
2025-01-09 02:18:15,843 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:15,844 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:15,844 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:15,844 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:15,844 - DEBUG - reusing cookie
2025-01-09 02:18:15,844 - DEBUG - reusing crumb
2025-01-09 02:18:15,844 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:15,844 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:15,992 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DXCM?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1188
2025-01-09 02:18:15,992 - DEBUG - response code=200
2025-01-09 02:18:15,992 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:15,993 - DEBUG -    Exiting get()
2025-01-09 02:18:15,994 - DEBUG - DXCM: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:15,995 - DEBUG - DXCM: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:15,999 - DEBUG - DXCM: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:16,005 - DEBUG - DXCM: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:16,005 - DEBUG -   Exiting history()
2025-01-09 02:18:16,005 - DEBUG -  Exiting history()
2025-01-09 02:18:16,007 - DEBUG - Exiting download()
2025-01-09 02:18:16,056 - DEBUG - Entering download()
2025-01-09 02:18:16,056 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:16,056 - DEBUG -  Entering history()
2025-01-09 02:18:16,057 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FANG', 1, 0])
2025-01-09 02:18:16,057 - DEBUG -   Entering history()
2025-01-09 02:18:16,058 - DEBUG - FANG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:16,058 - DEBUG -    Entering get()
2025-01-09 02:18:16,058 - DEBUG -     Entering _make_request()
2025-01-09 02:18:16,058 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FANG
2025-01-09 02:18:16,058 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:16,058 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:16,058 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:16,058 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:16,058 - DEBUG - reusing cookie
2025-01-09 02:18:16,059 - DEBUG - reusing crumb
2025-01-09 02:18:16,059 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:16,059 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:16,209 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FANG?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1210
2025-01-09 02:18:16,209 - DEBUG - response code=200
2025-01-09 02:18:16,210 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:16,210 - DEBUG -    Exiting get()
2025-01-09 02:18:16,211 - DEBUG - FANG: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:16,212 - DEBUG - FANG: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:16,216 - DEBUG - FANG: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:16,222 - DEBUG - FANG: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:16,222 - DEBUG -   Exiting history()
2025-01-09 02:18:16,222 - DEBUG -  Exiting history()
2025-01-09 02:18:16,224 - DEBUG - Exiting download()
2025-01-09 02:18:16,373 - ERROR - Error writing data for FANG to DB: schema "np" does not exist
LINE 4:             VALUES ('FANG','2020-01-01'::date,np.float64(75....
                                                      ^

2025-01-09 02:18:16,373 - DEBUG - Entering download()
2025-01-09 02:18:16,373 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:16,374 - DEBUG -  Entering history()
2025-01-09 02:18:16,374 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DLR', 1, 0])
2025-01-09 02:18:16,374 - DEBUG -   Entering history()
2025-01-09 02:18:16,375 - DEBUG - DLR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:16,375 - DEBUG -    Entering get()
2025-01-09 02:18:16,375 - DEBUG -     Entering _make_request()
2025-01-09 02:18:16,375 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DLR
2025-01-09 02:18:16,375 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:16,375 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:16,375 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:16,375 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:16,375 - DEBUG - reusing cookie
2025-01-09 02:18:16,375 - DEBUG - reusing crumb
2025-01-09 02:18:16,375 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:16,376 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:16,557 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DLR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1204
2025-01-09 02:18:16,558 - DEBUG - response code=200
2025-01-09 02:18:16,558 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:16,558 - DEBUG -    Exiting get()
2025-01-09 02:18:16,559 - DEBUG - DLR: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:16,561 - DEBUG - DLR: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:16,565 - DEBUG - DLR: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:16,571 - DEBUG - DLR: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:16,571 - DEBUG -   Exiting history()
2025-01-09 02:18:16,572 - DEBUG -  Exiting history()
2025-01-09 02:18:16,574 - DEBUG - Exiting download()
2025-01-09 02:18:16,712 - ERROR - Error writing data for DLR to DB: schema "np" does not exist
LINE 4:             VALUES ('DLR','2020-01-01'::date,np.float64(100....
                                                     ^

2025-01-09 02:18:16,713 - DEBUG - Entering download()
2025-01-09 02:18:16,713 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:16,713 - DEBUG -  Entering history()
2025-01-09 02:18:16,714 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DFS', 1, 0])
2025-01-09 02:18:16,714 - DEBUG -   Entering history()
2025-01-09 02:18:16,715 - DEBUG - DFS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:16,715 - DEBUG -    Entering get()
2025-01-09 02:18:16,715 - DEBUG -     Entering _make_request()
2025-01-09 02:18:16,715 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DFS
2025-01-09 02:18:16,715 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:16,715 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:16,715 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:16,715 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:16,715 - DEBUG - reusing cookie
2025-01-09 02:18:16,715 - DEBUG - reusing crumb
2025-01-09 02:18:16,716 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:16,716 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:16,884 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DFS?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1213
2025-01-09 02:18:16,885 - DEBUG - response code=200
2025-01-09 02:18:16,885 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:16,885 - DEBUG -    Exiting get()
2025-01-09 02:18:16,886 - DEBUG - DFS: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:16,888 - DEBUG - DFS: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:16,892 - DEBUG - DFS: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:16,899 - DEBUG - DFS: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:16,899 - DEBUG -   Exiting history()
2025-01-09 02:18:16,899 - DEBUG -  Exiting history()
2025-01-09 02:18:16,902 - DEBUG - Exiting download()
2025-01-09 02:18:16,945 - DEBUG - Entering download()
2025-01-09 02:18:16,946 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:16,946 - DEBUG -  Entering history()
2025-01-09 02:18:16,946 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DG', 1, 0])
2025-01-09 02:18:16,946 - DEBUG -   Entering history()
2025-01-09 02:18:16,947 - DEBUG - DG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:16,947 - DEBUG -    Entering get()
2025-01-09 02:18:16,947 - DEBUG -     Entering _make_request()
2025-01-09 02:18:16,948 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DG
2025-01-09 02:18:16,948 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:16,948 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:16,948 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:16,948 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:16,948 - DEBUG - reusing cookie
2025-01-09 02:18:16,948 - DEBUG - reusing crumb
2025-01-09 02:18:16,948 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:16,948 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:17,122 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DG?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1209
2025-01-09 02:18:17,122 - DEBUG - response code=200
2025-01-09 02:18:17,123 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:17,123 - DEBUG -    Exiting get()
2025-01-09 02:18:17,124 - DEBUG - DG: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:17,125 - DEBUG - DG: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:17,129 - DEBUG - DG: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:17,134 - DEBUG - DG: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:17,134 - DEBUG -   Exiting history()
2025-01-09 02:18:17,135 - DEBUG -  Exiting history()
2025-01-09 02:18:17,137 - DEBUG - Exiting download()
2025-01-09 02:18:17,261 - ERROR - Error writing data for DG to DB: schema "np" does not exist
LINE 4:             VALUES ('DG','2020-01-01'::date,np.float64(146.9...
                                                    ^

2025-01-09 02:18:17,261 - DEBUG - Entering download()
2025-01-09 02:18:17,262 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:17,262 - DEBUG -  Entering history()
2025-01-09 02:18:17,262 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DLTR', 1, 0])
2025-01-09 02:18:17,262 - DEBUG -   Entering history()
2025-01-09 02:18:17,263 - DEBUG - DLTR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:17,263 - DEBUG -    Entering get()
2025-01-09 02:18:17,264 - DEBUG -     Entering _make_request()
2025-01-09 02:18:17,264 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DLTR
2025-01-09 02:18:17,264 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:17,264 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:17,264 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:17,264 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:17,264 - DEBUG - reusing cookie
2025-01-09 02:18:17,264 - DEBUG - reusing crumb
2025-01-09 02:18:17,264 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:17,264 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:17,425 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DLTR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1195
2025-01-09 02:18:17,427 - DEBUG - response code=200
2025-01-09 02:18:17,427 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:17,427 - DEBUG -    Exiting get()
2025-01-09 02:18:17,428 - DEBUG - DLTR: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:17,429 - DEBUG - DLTR: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:17,433 - DEBUG - DLTR: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:17,438 - DEBUG - DLTR: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:17,438 - DEBUG -   Exiting history()
2025-01-09 02:18:17,438 - DEBUG -  Exiting history()
2025-01-09 02:18:17,441 - DEBUG - Exiting download()
2025-01-09 02:18:17,575 - ERROR - Error writing data for DLTR to DB: schema "np" does not exist
LINE 4:             VALUES ('DLTR','2020-01-01'::date,np.float64(94....
                                                      ^

2025-01-09 02:18:17,575 - DEBUG - Entering download()
2025-01-09 02:18:17,576 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:17,576 - DEBUG -  Entering history()
2025-01-09 02:18:17,576 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['D', 1, 0])
2025-01-09 02:18:17,576 - DEBUG -   Entering history()
2025-01-09 02:18:17,577 - DEBUG - D: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:17,577 - DEBUG -    Entering get()
2025-01-09 02:18:17,577 - DEBUG -     Entering _make_request()
2025-01-09 02:18:17,577 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/D
2025-01-09 02:18:17,577 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:17,577 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:17,577 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:17,577 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:17,577 - DEBUG - reusing cookie
2025-01-09 02:18:17,577 - DEBUG - reusing crumb
2025-01-09 02:18:17,577 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:17,577 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:17,772 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/D?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1194
2025-01-09 02:18:17,773 - DEBUG - response code=200
2025-01-09 02:18:17,773 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:17,773 - DEBUG -    Exiting get()
2025-01-09 02:18:17,775 - DEBUG - D: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:17,776 - DEBUG - D: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:17,780 - DEBUG - D: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:17,787 - DEBUG - D: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:17,787 - DEBUG -   Exiting history()
2025-01-09 02:18:17,787 - DEBUG -  Exiting history()
2025-01-09 02:18:17,790 - DEBUG - Exiting download()
2025-01-09 02:18:17,832 - DEBUG - Entering download()
2025-01-09 02:18:17,832 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:17,832 - DEBUG -  Entering history()
2025-01-09 02:18:17,833 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DPZ', 1, 0])
2025-01-09 02:18:17,833 - DEBUG -   Entering history()
2025-01-09 02:18:17,834 - DEBUG - DPZ: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:17,834 - DEBUG -    Entering get()
2025-01-09 02:18:17,834 - DEBUG -     Entering _make_request()
2025-01-09 02:18:17,834 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DPZ
2025-01-09 02:18:17,834 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:17,834 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:17,834 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:17,834 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:17,835 - DEBUG - reusing cookie
2025-01-09 02:18:17,835 - DEBUG - reusing crumb
2025-01-09 02:18:17,835 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:17,835 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:18,032 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DPZ?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1201
2025-01-09 02:18:18,032 - DEBUG - response code=200
2025-01-09 02:18:18,033 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:18,033 - DEBUG -    Exiting get()
2025-01-09 02:18:18,034 - DEBUG - DPZ: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:18,035 - DEBUG - DPZ: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:18,040 - DEBUG - DPZ: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:18,049 - DEBUG - DPZ: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:18,050 - DEBUG -   Exiting history()
2025-01-09 02:18:18,050 - DEBUG -  Exiting history()
2025-01-09 02:18:18,054 - DEBUG - Exiting download()
2025-01-09 02:18:18,217 - ERROR - Error writing data for DPZ to DB: schema "np" does not exist
LINE 4:             VALUES ('DPZ','2020-01-01'::date,np.float64(277....
                                                     ^

2025-01-09 02:18:18,217 - DEBUG - Entering download()
2025-01-09 02:18:18,218 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:18,218 - DEBUG -  Entering history()
2025-01-09 02:18:18,219 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DOV', 1, 0])
2025-01-09 02:18:18,220 - DEBUG -   Entering history()
2025-01-09 02:18:18,221 - DEBUG - DOV: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:18,222 - DEBUG -    Entering get()
2025-01-09 02:18:18,222 - DEBUG -     Entering _make_request()
2025-01-09 02:18:18,222 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DOV
2025-01-09 02:18:18,222 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:18,222 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:18,222 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:18,222 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:18,222 - DEBUG - reusing cookie
2025-01-09 02:18:18,222 - DEBUG - reusing crumb
2025-01-09 02:18:18,222 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:18,222 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:18,413 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DOV?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1198
2025-01-09 02:18:18,413 - DEBUG - response code=200
2025-01-09 02:18:18,413 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:18,413 - DEBUG -    Exiting get()
2025-01-09 02:18:18,414 - DEBUG - DOV: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:18,415 - DEBUG - DOV: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:18,418 - DEBUG - DOV: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:18,423 - DEBUG - DOV: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:18,423 - DEBUG -   Exiting history()
2025-01-09 02:18:18,423 - DEBUG -  Exiting history()
2025-01-09 02:18:18,425 - DEBUG - Exiting download()
2025-01-09 02:18:18,685 - ERROR - Error writing data for DOV to DB: schema "np" does not exist
LINE 4:             VALUES ('DOV','2020-01-01'::date,np.float64(108....
                                                     ^

2025-01-09 02:18:18,685 - DEBUG - Entering download()
2025-01-09 02:18:18,686 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:18,686 - DEBUG -  Entering history()
2025-01-09 02:18:18,686 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DOW', 1, 0])
2025-01-09 02:18:18,687 - DEBUG -   Entering history()
2025-01-09 02:18:18,688 - DEBUG - DOW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:18,688 - DEBUG -    Entering get()
2025-01-09 02:18:18,688 - DEBUG -     Entering _make_request()
2025-01-09 02:18:18,688 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DOW
2025-01-09 02:18:18,688 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:18,688 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:18,688 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:18,688 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:18,688 - DEBUG - reusing cookie
2025-01-09 02:18:18,688 - DEBUG - reusing crumb
2025-01-09 02:18:18,689 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:18,689 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:18,857 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DOW?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1161
2025-01-09 02:18:18,858 - DEBUG - response code=200
2025-01-09 02:18:18,858 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:18,858 - DEBUG -    Exiting get()
2025-01-09 02:18:18,859 - DEBUG - DOW: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:18,860 - DEBUG - DOW: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:18,864 - DEBUG - DOW: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:18,870 - DEBUG - DOW: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:18,870 - DEBUG -   Exiting history()
2025-01-09 02:18:18,870 - DEBUG -  Exiting history()
2025-01-09 02:18:18,872 - DEBUG - Exiting download()
2025-01-09 02:18:18,997 - ERROR - Error writing data for DOW to DB: schema "np" does not exist
LINE 4:             VALUES ('DOW','2020-01-01'::date,np.float64(42.5...
                                                     ^

2025-01-09 02:18:18,998 - DEBUG - Entering download()
2025-01-09 02:18:18,998 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:18,998 - DEBUG -  Entering history()
2025-01-09 02:18:18,999 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DHI', 1, 0])
2025-01-09 02:18:18,999 - DEBUG -   Entering history()
2025-01-09 02:18:19,000 - DEBUG - DHI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:19,000 - DEBUG -    Entering get()
2025-01-09 02:18:19,000 - DEBUG -     Entering _make_request()
2025-01-09 02:18:19,000 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DHI
2025-01-09 02:18:19,000 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:19,000 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:19,000 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:19,001 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:19,001 - DEBUG - reusing cookie
2025-01-09 02:18:19,001 - DEBUG - reusing crumb
2025-01-09 02:18:19,001 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:19,001 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:19,195 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DHI?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1196
2025-01-09 02:18:19,195 - DEBUG - response code=200
2025-01-09 02:18:19,195 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:19,195 - DEBUG -    Exiting get()
2025-01-09 02:18:19,196 - DEBUG - DHI: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:19,197 - DEBUG - DHI: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:19,200 - DEBUG - DHI: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:19,205 - DEBUG - DHI: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:19,205 - DEBUG -   Exiting history()
2025-01-09 02:18:19,205 - DEBUG -  Exiting history()
2025-01-09 02:18:19,207 - DEBUG - Exiting download()
2025-01-09 02:18:19,347 - ERROR - Error writing data for DHI to DB: schema "np" does not exist
LINE 4:             VALUES ('DHI','2020-01-01'::date,np.float64(50.3...
                                                     ^

2025-01-09 02:18:19,348 - DEBUG - Entering download()
2025-01-09 02:18:19,348 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:19,348 - DEBUG -  Entering history()
2025-01-09 02:18:19,348 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DTE', 1, 0])
2025-01-09 02:18:19,348 - DEBUG -   Entering history()
2025-01-09 02:18:19,349 - DEBUG - DTE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:19,349 - DEBUG -    Entering get()
2025-01-09 02:18:19,349 - DEBUG -     Entering _make_request()
2025-01-09 02:18:19,349 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DTE
2025-01-09 02:18:19,349 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:19,350 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:19,350 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:19,350 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:19,350 - DEBUG - reusing cookie
2025-01-09 02:18:19,350 - DEBUG - reusing crumb
2025-01-09 02:18:19,350 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:19,350 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:19,558 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DTE?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1202
2025-01-09 02:18:19,559 - DEBUG - response code=200
2025-01-09 02:18:19,559 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:19,559 - DEBUG -    Exiting get()
2025-01-09 02:18:19,560 - DEBUG - DTE: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:19,561 - DEBUG - DTE: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:19,565 - DEBUG - DTE: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:19,571 - DEBUG - DTE: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:19,571 - DEBUG -   Exiting history()
2025-01-09 02:18:19,571 - DEBUG -  Exiting history()
2025-01-09 02:18:19,573 - DEBUG - Exiting download()
2025-01-09 02:18:19,719 - ERROR - Error writing data for DTE to DB: schema "np" does not exist
LINE 4:             VALUES ('DTE','2020-01-01'::date,np.float64(93.3...
                                                     ^

2025-01-09 02:18:19,719 - DEBUG - Entering download()
2025-01-09 02:18:19,720 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:19,720 - DEBUG -  Entering history()
2025-01-09 02:18:19,720 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DUK', 1, 0])
2025-01-09 02:18:19,721 - DEBUG -   Entering history()
2025-01-09 02:18:19,721 - DEBUG - DUK: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:19,722 - DEBUG -    Entering get()
2025-01-09 02:18:19,722 - DEBUG -     Entering _make_request()
2025-01-09 02:18:19,722 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DUK
2025-01-09 02:18:19,722 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:19,722 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:19,722 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:19,722 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:19,722 - DEBUG - reusing cookie
2025-01-09 02:18:19,722 - DEBUG - reusing crumb
2025-01-09 02:18:19,722 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:19,722 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:19,912 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DUK?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1214
2025-01-09 02:18:19,912 - DEBUG - response code=200
2025-01-09 02:18:19,912 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:19,913 - DEBUG -    Exiting get()
2025-01-09 02:18:19,914 - DEBUG - DUK: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:19,915 - DEBUG - DUK: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:19,919 - DEBUG - DUK: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:19,926 - DEBUG - DUK: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:19,926 - DEBUG -   Exiting history()
2025-01-09 02:18:19,926 - DEBUG -  Exiting history()
2025-01-09 02:18:19,929 - DEBUG - Exiting download()
2025-01-09 02:18:19,984 - DEBUG - Entering download()
2025-01-09 02:18:19,984 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:19,984 - DEBUG -  Entering history()
2025-01-09 02:18:19,984 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DD', 1, 0])
2025-01-09 02:18:19,985 - DEBUG -   Entering history()
2025-01-09 02:18:19,986 - DEBUG - DD: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:19,986 - DEBUG -    Entering get()
2025-01-09 02:18:19,986 - DEBUG -     Entering _make_request()
2025-01-09 02:18:19,986 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DD
2025-01-09 02:18:19,986 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:19,986 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:19,986 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:19,986 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:19,987 - DEBUG - reusing cookie
2025-01-09 02:18:19,987 - DEBUG - reusing crumb
2025-01-09 02:18:19,987 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:19,987 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:20,212 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DD?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1185
2025-01-09 02:18:20,213 - DEBUG - response code=200
2025-01-09 02:18:20,213 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:20,213 - DEBUG -    Exiting get()
2025-01-09 02:18:20,214 - DEBUG - DD: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:20,215 - DEBUG - DD: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:20,219 - DEBUG - DD: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:20,226 - DEBUG - DD: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:20,226 - DEBUG -   Exiting history()
2025-01-09 02:18:20,226 - DEBUG -  Exiting history()
2025-01-09 02:18:20,229 - DEBUG - Exiting download()
2025-01-09 02:18:20,354 - ERROR - Error writing data for DD to DB: schema "np" does not exist
LINE 4:             VALUES ('DD','2020-01-01'::date,np.float64(58.79...
                                                    ^

2025-01-09 02:18:20,355 - DEBUG - Entering download()
2025-01-09 02:18:20,355 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:20,355 - DEBUG -  Entering history()
2025-01-09 02:18:20,356 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EMN', 1, 0])
2025-01-09 02:18:20,356 - DEBUG -   Entering history()
2025-01-09 02:18:20,357 - DEBUG - EMN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:20,357 - DEBUG -    Entering get()
2025-01-09 02:18:20,357 - DEBUG -     Entering _make_request()
2025-01-09 02:18:20,357 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EMN
2025-01-09 02:18:20,357 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:20,357 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:20,358 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:20,358 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:20,358 - DEBUG - reusing cookie
2025-01-09 02:18:20,358 - DEBUG - reusing crumb
2025-01-09 02:18:20,358 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:20,358 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:20,543 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EMN?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1200
2025-01-09 02:18:20,543 - DEBUG - response code=200
2025-01-09 02:18:20,543 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:20,543 - DEBUG -    Exiting get()
2025-01-09 02:18:20,545 - DEBUG - EMN: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:20,546 - DEBUG - EMN: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:20,550 - DEBUG - EMN: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:20,555 - DEBUG - EMN: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:20,555 - DEBUG -   Exiting history()
2025-01-09 02:18:20,555 - DEBUG -  Exiting history()
2025-01-09 02:18:20,557 - DEBUG - Exiting download()
2025-01-09 02:18:20,691 - ERROR - Error writing data for EMN to DB: schema "np" does not exist
LINE 4:             VALUES ('EMN','2020-01-01'::date,np.float64(67.8...
                                                     ^

2025-01-09 02:18:20,692 - DEBUG - Entering download()
2025-01-09 02:18:20,692 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:20,692 - DEBUG -  Entering history()
2025-01-09 02:18:20,692 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ETN', 1, 0])
2025-01-09 02:18:20,693 - DEBUG -   Entering history()
2025-01-09 02:18:20,693 - DEBUG - ETN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:20,694 - DEBUG -    Entering get()
2025-01-09 02:18:20,694 - DEBUG -     Entering _make_request()
2025-01-09 02:18:20,694 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ETN
2025-01-09 02:18:20,694 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:20,694 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:20,694 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:20,694 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:20,694 - DEBUG - reusing cookie
2025-01-09 02:18:20,694 - DEBUG - reusing crumb
2025-01-09 02:18:20,694 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:20,694 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:20,908 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ETN?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1202
2025-01-09 02:18:20,909 - DEBUG - response code=200
2025-01-09 02:18:20,909 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:20,909 - DEBUG -    Exiting get()
2025-01-09 02:18:20,910 - DEBUG - ETN: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:20,911 - DEBUG - ETN: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:20,915 - DEBUG - ETN: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:20,921 - DEBUG - ETN: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:20,921 - DEBUG -   Exiting history()
2025-01-09 02:18:20,921 - DEBUG -  Exiting history()
2025-01-09 02:18:20,923 - DEBUG - Exiting download()
2025-01-09 02:18:21,050 - ERROR - Error writing data for ETN to DB: schema "np" does not exist
LINE 4:             VALUES ('ETN','2020-01-01'::date,np.float64(86.6...
                                                     ^

2025-01-09 02:18:21,050 - DEBUG - Entering download()
2025-01-09 02:18:21,050 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:21,051 - DEBUG -  Entering history()
2025-01-09 02:18:21,051 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EBAY', 1, 0])
2025-01-09 02:18:21,051 - DEBUG -   Entering history()
2025-01-09 02:18:21,052 - DEBUG - EBAY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:21,052 - DEBUG -    Entering get()
2025-01-09 02:18:21,052 - DEBUG -     Entering _make_request()
2025-01-09 02:18:21,052 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EBAY
2025-01-09 02:18:21,052 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:21,052 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:21,052 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:21,052 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:21,052 - DEBUG - reusing cookie
2025-01-09 02:18:21,052 - DEBUG - reusing crumb
2025-01-09 02:18:21,052 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:21,052 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:21,212 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EBAY?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1165
2025-01-09 02:18:21,213 - DEBUG - response code=200
2025-01-09 02:18:21,213 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:21,213 - DEBUG -    Exiting get()
2025-01-09 02:18:21,214 - DEBUG - EBAY: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:21,215 - DEBUG - EBAY: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:21,219 - DEBUG - EBAY: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:21,224 - DEBUG - EBAY: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:21,225 - DEBUG -   Exiting history()
2025-01-09 02:18:21,225 - DEBUG -  Exiting history()
2025-01-09 02:18:21,227 - DEBUG - Exiting download()
2025-01-09 02:18:21,374 - ERROR - Error writing data for EBAY to DB: schema "np" does not exist
LINE 4:             VALUES ('EBAY','2020-01-01'::date,np.float64(33....
                                                      ^

2025-01-09 02:18:21,375 - DEBUG - Entering download()
2025-01-09 02:18:21,375 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:21,375 - DEBUG -  Entering history()
2025-01-09 02:18:21,376 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ECL', 1, 0])
2025-01-09 02:18:21,376 - DEBUG -   Entering history()
2025-01-09 02:18:21,377 - DEBUG - ECL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:21,377 - DEBUG -    Entering get()
2025-01-09 02:18:21,377 - DEBUG -     Entering _make_request()
2025-01-09 02:18:21,377 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ECL
2025-01-09 02:18:21,377 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:21,377 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:21,377 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:21,377 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:21,377 - DEBUG - reusing cookie
2025-01-09 02:18:21,377 - DEBUG - reusing crumb
2025-01-09 02:18:21,377 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:21,377 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:21,568 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ECL?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1187
2025-01-09 02:18:21,568 - DEBUG - response code=200
2025-01-09 02:18:21,568 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:21,568 - DEBUG -    Exiting get()
2025-01-09 02:18:21,570 - DEBUG - ECL: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:21,571 - DEBUG - ECL: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:21,575 - DEBUG - ECL: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:21,581 - DEBUG - ECL: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:21,581 - DEBUG -   Exiting history()
2025-01-09 02:18:21,581 - DEBUG -  Exiting history()
2025-01-09 02:18:21,583 - DEBUG - Exiting download()
2025-01-09 02:18:21,697 - ERROR - Error writing data for ECL to DB: schema "np" does not exist
LINE 4:             VALUES ('ECL','2020-01-01'::date,np.float64(183....
                                                     ^

2025-01-09 02:18:21,698 - DEBUG - Entering download()
2025-01-09 02:18:21,698 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:21,699 - DEBUG -  Entering history()
2025-01-09 02:18:21,699 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EIX', 1, 0])
2025-01-09 02:18:21,699 - DEBUG -   Entering history()
2025-01-09 02:18:21,700 - DEBUG - EIX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:21,700 - DEBUG -    Entering get()
2025-01-09 02:18:21,701 - DEBUG -     Entering _make_request()
2025-01-09 02:18:21,701 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EIX
2025-01-09 02:18:21,701 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:21,701 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:21,701 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:21,701 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:21,701 - DEBUG - reusing cookie
2025-01-09 02:18:21,701 - DEBUG - reusing crumb
2025-01-09 02:18:21,701 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:21,701 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:21,945 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EIX?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1195
2025-01-09 02:18:21,946 - DEBUG - response code=200
2025-01-09 02:18:21,946 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:21,946 - DEBUG -    Exiting get()
2025-01-09 02:18:21,947 - DEBUG - EIX: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:21,948 - DEBUG - EIX: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:21,952 - DEBUG - EIX: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:21,957 - DEBUG - EIX: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:21,958 - DEBUG -   Exiting history()
2025-01-09 02:18:21,958 - DEBUG -  Exiting history()
2025-01-09 02:18:21,960 - DEBUG - Exiting download()
2025-01-09 02:18:22,213 - ERROR - Error writing data for EIX to DB: schema "np" does not exist
LINE 4:             VALUES ('EIX','2020-01-01'::date,np.float64(59.9...
                                                     ^

2025-01-09 02:18:22,214 - DEBUG - Entering download()
2025-01-09 02:18:22,214 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:22,214 - DEBUG -  Entering history()
2025-01-09 02:18:22,214 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EW', 1, 0])
2025-01-09 02:18:22,214 - DEBUG -   Entering history()
2025-01-09 02:18:22,215 - DEBUG - EW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:22,215 - DEBUG -    Entering get()
2025-01-09 02:18:22,215 - DEBUG -     Entering _make_request()
2025-01-09 02:18:22,215 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EW
2025-01-09 02:18:22,215 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:22,215 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:22,215 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:22,215 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:22,215 - DEBUG - reusing cookie
2025-01-09 02:18:22,215 - DEBUG - reusing crumb
2025-01-09 02:18:22,215 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:22,215 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:22,367 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EW?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1192
2025-01-09 02:18:22,368 - DEBUG - response code=200
2025-01-09 02:18:22,368 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:22,368 - DEBUG -    Exiting get()
2025-01-09 02:18:22,369 - DEBUG - EW: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:22,370 - DEBUG - EW: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:22,374 - DEBUG - EW: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:22,380 - DEBUG - EW: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:22,380 - DEBUG -   Exiting history()
2025-01-09 02:18:22,380 - DEBUG -  Exiting history()
2025-01-09 02:18:22,382 - DEBUG - Exiting download()
2025-01-09 02:18:22,512 - ERROR - Error writing data for EW to DB: schema "np" does not exist
LINE 4:             VALUES ('EW','2020-01-01'::date,np.float64(76.66...
                                                    ^

2025-01-09 02:18:22,512 - DEBUG - Entering download()
2025-01-09 02:18:22,512 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:22,512 - DEBUG -  Entering history()
2025-01-09 02:18:22,513 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EA', 1, 0])
2025-01-09 02:18:22,513 - DEBUG -   Entering history()
2025-01-09 02:18:22,514 - DEBUG - EA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:22,514 - DEBUG -    Entering get()
2025-01-09 02:18:22,514 - DEBUG -     Entering _make_request()
2025-01-09 02:18:22,514 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EA
2025-01-09 02:18:22,514 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:22,514 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:22,515 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:22,515 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:22,515 - DEBUG - reusing cookie
2025-01-09 02:18:22,515 - DEBUG - reusing crumb
2025-01-09 02:18:22,515 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:22,515 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:22,668 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EA?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1203
2025-01-09 02:18:22,669 - DEBUG - response code=200
2025-01-09 02:18:22,669 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:22,669 - DEBUG -    Exiting get()
2025-01-09 02:18:22,670 - DEBUG - EA: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:22,671 - DEBUG - EA: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:22,675 - DEBUG - EA: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:22,681 - DEBUG - EA: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:22,681 - DEBUG -   Exiting history()
2025-01-09 02:18:22,681 - DEBUG -  Exiting history()
2025-01-09 02:18:22,683 - DEBUG - Exiting download()
2025-01-09 02:18:22,729 - DEBUG - Entering download()
2025-01-09 02:18:22,729 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:22,729 - DEBUG -  Entering history()
2025-01-09 02:18:22,729 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ELV', 1, 0])
2025-01-09 02:18:22,729 - DEBUG -   Entering history()
2025-01-09 02:18:22,730 - DEBUG - ELV: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:22,730 - DEBUG -    Entering get()
2025-01-09 02:18:22,730 - DEBUG -     Entering _make_request()
2025-01-09 02:18:22,730 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ELV
2025-01-09 02:18:22,730 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:22,730 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:22,730 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:22,730 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:22,731 - DEBUG - reusing cookie
2025-01-09 02:18:22,731 - DEBUG - reusing crumb
2025-01-09 02:18:22,731 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:22,731 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:22,905 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ELV?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1206
2025-01-09 02:18:22,906 - DEBUG - response code=200
2025-01-09 02:18:22,906 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:22,906 - DEBUG -    Exiting get()
2025-01-09 02:18:22,907 - DEBUG - ELV: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:22,908 - DEBUG - ELV: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:22,912 - DEBUG - ELV: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:22,918 - DEBUG - ELV: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:22,918 - DEBUG -   Exiting history()
2025-01-09 02:18:22,918 - DEBUG -  Exiting history()
2025-01-09 02:18:22,920 - DEBUG - Exiting download()
2025-01-09 02:18:23,053 - ERROR - Error writing data for ELV to DB: schema "np" does not exist
LINE 4:             VALUES ('ELV','2020-01-01'::date,np.float64(284....
                                                     ^

2025-01-09 02:18:23,053 - DEBUG - Entering download()
2025-01-09 02:18:23,054 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:23,054 - DEBUG -  Entering history()
2025-01-09 02:18:23,054 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EMR', 1, 0])
2025-01-09 02:18:23,054 - DEBUG -   Entering history()
2025-01-09 02:18:23,055 - DEBUG - EMR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:23,055 - DEBUG -    Entering get()
2025-01-09 02:18:23,055 - DEBUG -     Entering _make_request()
2025-01-09 02:18:23,055 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EMR
2025-01-09 02:18:23,056 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:23,056 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:23,056 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:23,056 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:23,056 - DEBUG - reusing cookie
2025-01-09 02:18:23,056 - DEBUG - reusing crumb
2025-01-09 02:18:23,056 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:23,056 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:23,282 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EMR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1186
2025-01-09 02:18:23,282 - DEBUG - response code=200
2025-01-09 02:18:23,283 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:23,283 - DEBUG -    Exiting get()
2025-01-09 02:18:23,284 - DEBUG - EMR: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:23,285 - DEBUG - EMR: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:23,289 - DEBUG - EMR: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:23,295 - DEBUG - EMR: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:23,295 - DEBUG -   Exiting history()
2025-01-09 02:18:23,295 - DEBUG -  Exiting history()
2025-01-09 02:18:23,297 - DEBUG - Exiting download()
2025-01-09 02:18:23,447 - ERROR - Error writing data for EMR to DB: schema "np" does not exist
LINE 4:             VALUES ('EMR','2020-01-01'::date,np.float64(68.1...
                                                     ^

2025-01-09 02:18:23,448 - DEBUG - Entering download()
2025-01-09 02:18:23,448 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:23,448 - DEBUG -  Entering history()
2025-01-09 02:18:23,449 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ENPH', 1, 0])
2025-01-09 02:18:23,449 - DEBUG -   Entering history()
2025-01-09 02:18:23,450 - DEBUG - ENPH: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:23,450 - DEBUG -    Entering get()
2025-01-09 02:18:23,450 - DEBUG -     Entering _make_request()
2025-01-09 02:18:23,450 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ENPH
2025-01-09 02:18:23,450 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:23,450 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:23,450 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:23,451 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:23,451 - DEBUG - reusing cookie
2025-01-09 02:18:23,451 - DEBUG - reusing crumb
2025-01-09 02:18:23,451 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:23,451 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:23,597 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ENPH?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1202
2025-01-09 02:18:23,598 - DEBUG - response code=200
2025-01-09 02:18:23,598 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:23,598 - DEBUG -    Exiting get()
2025-01-09 02:18:23,599 - DEBUG - ENPH: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:23,600 - DEBUG - ENPH: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:23,604 - DEBUG - ENPH: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:23,611 - DEBUG - ENPH: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:23,611 - DEBUG -   Exiting history()
2025-01-09 02:18:23,611 - DEBUG -  Exiting history()
2025-01-09 02:18:23,614 - DEBUG - Exiting download()
2025-01-09 02:18:23,874 - ERROR - Error writing data for ENPH to DB: schema "np" does not exist
LINE 4:             VALUES ('ENPH','2020-01-01'::date,np.float64(26....
                                                      ^

2025-01-09 02:18:23,875 - DEBUG - Entering download()
2025-01-09 02:18:23,875 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:23,875 - DEBUG -  Entering history()
2025-01-09 02:18:23,875 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ETR', 1, 0])
2025-01-09 02:18:23,876 - DEBUG -   Entering history()
2025-01-09 02:18:23,876 - DEBUG - ETR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:23,877 - DEBUG -    Entering get()
2025-01-09 02:18:23,877 - DEBUG -     Entering _make_request()
2025-01-09 02:18:23,877 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ETR
2025-01-09 02:18:23,877 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:23,877 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:23,877 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:23,877 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:23,877 - DEBUG - reusing cookie
2025-01-09 02:18:23,877 - DEBUG - reusing crumb
2025-01-09 02:18:23,877 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:23,877 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:24,107 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ETR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1193
2025-01-09 02:18:24,108 - DEBUG - response code=200
2025-01-09 02:18:24,108 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:24,108 - DEBUG -    Exiting get()
2025-01-09 02:18:24,110 - DEBUG - ETR: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:24,111 - DEBUG - ETR: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:24,115 - DEBUG - ETR: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:24,121 - DEBUG - ETR: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:24,121 - DEBUG -   Exiting history()
2025-01-09 02:18:24,121 - DEBUG -  Exiting history()
2025-01-09 02:18:24,127 - DEBUG - Exiting download()
2025-01-09 02:18:24,286 - ERROR - Error writing data for ETR to DB: schema "np" does not exist
LINE 4:             VALUES ('ETR','2020-01-01'::date,np.float64(45.4...
                                                     ^

2025-01-09 02:18:24,287 - DEBUG - Entering download()
2025-01-09 02:18:24,287 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:24,287 - DEBUG -  Entering history()
2025-01-09 02:18:24,287 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EOG', 1, 0])
2025-01-09 02:18:24,288 - DEBUG -   Entering history()
2025-01-09 02:18:24,288 - DEBUG - EOG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:24,288 - DEBUG -    Entering get()
2025-01-09 02:18:24,289 - DEBUG -     Entering _make_request()
2025-01-09 02:18:24,289 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EOG
2025-01-09 02:18:24,289 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:24,289 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:24,289 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:24,289 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:24,289 - DEBUG - reusing cookie
2025-01-09 02:18:24,289 - DEBUG - reusing crumb
2025-01-09 02:18:24,289 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:24,289 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:24,499 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EOG?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1200
2025-01-09 02:18:24,499 - DEBUG - response code=200
2025-01-09 02:18:24,500 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:24,500 - DEBUG -    Exiting get()
2025-01-09 02:18:24,501 - DEBUG - EOG: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:24,502 - DEBUG - EOG: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:24,507 - DEBUG - EOG: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:24,513 - DEBUG - EOG: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:24,513 - DEBUG -   Exiting history()
2025-01-09 02:18:24,513 - DEBUG -  Exiting history()
2025-01-09 02:18:24,516 - DEBUG - Exiting download()
2025-01-09 02:18:24,666 - ERROR - Error writing data for EOG to DB: schema "np" does not exist
LINE 4:             VALUES ('EOG','2020-01-01'::date,np.float64(66.5...
                                                     ^

2025-01-09 02:18:24,666 - DEBUG - Entering download()
2025-01-09 02:18:24,667 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:24,667 - DEBUG -  Entering history()
2025-01-09 02:18:24,667 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EPAM', 1, 0])
2025-01-09 02:18:24,667 - DEBUG -   Entering history()
2025-01-09 02:18:24,668 - DEBUG - EPAM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:24,668 - DEBUG -    Entering get()
2025-01-09 02:18:24,668 - DEBUG -     Entering _make_request()
2025-01-09 02:18:24,668 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EPAM
2025-01-09 02:18:24,669 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:24,669 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:24,669 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:24,669 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:24,669 - DEBUG - reusing cookie
2025-01-09 02:18:24,669 - DEBUG - reusing crumb
2025-01-09 02:18:24,669 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:24,669 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:24,829 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EPAM?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1201
2025-01-09 02:18:24,829 - DEBUG - response code=200
2025-01-09 02:18:24,829 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:24,829 - DEBUG -    Exiting get()
2025-01-09 02:18:24,831 - DEBUG - EPAM: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:24,832 - DEBUG - EPAM: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:24,836 - DEBUG - EPAM: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:24,842 - DEBUG - EPAM: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:24,842 - DEBUG -   Exiting history()
2025-01-09 02:18:24,842 - DEBUG -  Exiting history()
2025-01-09 02:18:24,845 - DEBUG - Exiting download()
2025-01-09 02:18:25,002 - ERROR - Error writing data for EPAM to DB: schema "np" does not exist
LINE 4:             VALUES ('EPAM','2020-01-01'::date,np.float64(214...
                                                      ^

2025-01-09 02:18:25,002 - DEBUG - Entering download()
2025-01-09 02:18:25,002 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:25,003 - DEBUG -  Entering history()
2025-01-09 02:18:25,003 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EQT', 1, 0])
2025-01-09 02:18:25,003 - DEBUG -   Entering history()
2025-01-09 02:18:25,004 - DEBUG - EQT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:25,004 - DEBUG -    Entering get()
2025-01-09 02:18:25,004 - DEBUG -     Entering _make_request()
2025-01-09 02:18:25,004 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EQT
2025-01-09 02:18:25,004 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:25,005 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:25,005 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:25,005 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:25,005 - DEBUG - reusing cookie
2025-01-09 02:18:25,005 - DEBUG - reusing crumb
2025-01-09 02:18:25,005 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:25,005 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:25,208 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EQT?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1185
2025-01-09 02:18:25,208 - DEBUG - response code=200
2025-01-09 02:18:25,208 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:25,208 - DEBUG -    Exiting get()
2025-01-09 02:18:25,210 - DEBUG - EQT: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:25,211 - DEBUG - EQT: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:25,215 - DEBUG - EQT: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:25,221 - DEBUG - EQT: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:25,222 - DEBUG -   Exiting history()
2025-01-09 02:18:25,222 - DEBUG -  Exiting history()
2025-01-09 02:18:25,224 - DEBUG - Exiting download()
2025-01-09 02:18:25,275 - DEBUG - Entering download()
2025-01-09 02:18:25,275 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:25,275 - DEBUG -  Entering history()
2025-01-09 02:18:25,276 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EFX', 1, 0])
2025-01-09 02:18:25,276 - DEBUG -   Entering history()
2025-01-09 02:18:25,277 - DEBUG - EFX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:25,277 - DEBUG -    Entering get()
2025-01-09 02:18:25,277 - DEBUG -     Entering _make_request()
2025-01-09 02:18:25,277 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EFX
2025-01-09 02:18:25,277 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:25,277 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:25,277 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:25,277 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:25,277 - DEBUG - reusing cookie
2025-01-09 02:18:25,277 - DEBUG - reusing crumb
2025-01-09 02:18:25,277 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:25,277 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:25,498 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EFX?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1187
2025-01-09 02:18:25,499 - DEBUG - response code=200
2025-01-09 02:18:25,499 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:25,499 - DEBUG -    Exiting get()
2025-01-09 02:18:25,500 - DEBUG - EFX: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:25,501 - DEBUG - EFX: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:25,505 - DEBUG - EFX: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:25,512 - DEBUG - EFX: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:25,512 - DEBUG -   Exiting history()
2025-01-09 02:18:25,512 - DEBUG -  Exiting history()
2025-01-09 02:18:25,515 - DEBUG - Exiting download()
2025-01-09 02:18:25,661 - ERROR - Error writing data for EFX to DB: schema "np" does not exist
LINE 4:             VALUES ('EFX','2020-01-01'::date,np.float64(135....
                                                     ^

2025-01-09 02:18:25,661 - DEBUG - Entering download()
2025-01-09 02:18:25,661 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:25,662 - DEBUG -  Entering history()
2025-01-09 02:18:25,662 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EQIX', 1, 0])
2025-01-09 02:18:25,662 - DEBUG -   Entering history()
2025-01-09 02:18:25,663 - DEBUG - EQIX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:25,663 - DEBUG -    Entering get()
2025-01-09 02:18:25,663 - DEBUG -     Entering _make_request()
2025-01-09 02:18:25,663 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EQIX
2025-01-09 02:18:25,663 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:25,664 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:25,664 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:25,664 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:25,664 - DEBUG - reusing cookie
2025-01-09 02:18:25,664 - DEBUG - reusing crumb
2025-01-09 02:18:25,664 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:25,664 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:25,820 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EQIX?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1188
2025-01-09 02:18:25,821 - DEBUG - response code=200
2025-01-09 02:18:25,821 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:25,821 - DEBUG -    Exiting get()
2025-01-09 02:18:25,822 - DEBUG - EQIX: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:25,823 - DEBUG - EQIX: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:25,826 - DEBUG - EQIX: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:25,831 - DEBUG - EQIX: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:25,831 - DEBUG -   Exiting history()
2025-01-09 02:18:25,831 - DEBUG -  Exiting history()
2025-01-09 02:18:25,833 - DEBUG - Exiting download()
2025-01-09 02:18:25,975 - ERROR - Error writing data for EQIX to DB: schema "np" does not exist
LINE 4:             VALUES ('EQIX','2020-01-01'::date,np.float64(534...
                                                      ^

2025-01-09 02:18:25,975 - DEBUG - Entering download()
2025-01-09 02:18:25,976 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:25,976 - DEBUG -  Entering history()
2025-01-09 02:18:25,976 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EQR', 1, 0])
2025-01-09 02:18:25,976 - DEBUG -   Entering history()
2025-01-09 02:18:25,977 - DEBUG - EQR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:25,977 - DEBUG -    Entering get()
2025-01-09 02:18:25,977 - DEBUG -     Entering _make_request()
2025-01-09 02:18:25,977 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EQR
2025-01-09 02:18:25,977 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:25,977 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:25,978 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:25,978 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:25,978 - DEBUG - reusing cookie
2025-01-09 02:18:25,978 - DEBUG - reusing crumb
2025-01-09 02:18:25,978 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:25,978 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:26,187 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EQR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1188
2025-01-09 02:18:26,188 - DEBUG - response code=200
2025-01-09 02:18:26,188 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:26,188 - DEBUG -    Exiting get()
2025-01-09 02:18:26,189 - DEBUG - EQR: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:26,190 - DEBUG - EQR: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:26,194 - DEBUG - EQR: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:26,200 - DEBUG - EQR: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:26,200 - DEBUG -   Exiting history()
2025-01-09 02:18:26,200 - DEBUG -  Exiting history()
2025-01-09 02:18:26,203 - DEBUG - Exiting download()
2025-01-09 02:18:26,251 - DEBUG - Entering download()
2025-01-09 02:18:26,251 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:26,251 - DEBUG -  Entering history()
2025-01-09 02:18:26,251 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ERIE', 1, 0])
2025-01-09 02:18:26,252 - DEBUG -   Entering history()
2025-01-09 02:18:26,252 - DEBUG - ERIE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:26,252 - DEBUG -    Entering get()
2025-01-09 02:18:26,252 - DEBUG -     Entering _make_request()
2025-01-09 02:18:26,252 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ERIE
2025-01-09 02:18:26,253 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:26,253 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:26,253 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:26,253 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:26,253 - DEBUG - reusing cookie
2025-01-09 02:18:26,253 - DEBUG - reusing crumb
2025-01-09 02:18:26,253 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:26,253 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:26,440 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ERIE?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1195
2025-01-09 02:18:26,440 - DEBUG - response code=200
2025-01-09 02:18:26,440 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:26,440 - DEBUG -    Exiting get()
2025-01-09 02:18:26,442 - DEBUG - ERIE: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:26,443 - DEBUG - ERIE: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:26,446 - DEBUG - ERIE: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:26,452 - DEBUG - ERIE: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:26,452 - DEBUG -   Exiting history()
2025-01-09 02:18:26,452 - DEBUG -  Exiting history()
2025-01-09 02:18:26,454 - DEBUG - Exiting download()
2025-01-09 02:18:26,501 - DEBUG - Entering download()
2025-01-09 02:18:26,501 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:26,501 - DEBUG -  Entering history()
2025-01-09 02:18:26,502 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ESS', 1, 0])
2025-01-09 02:18:26,502 - DEBUG -   Entering history()
2025-01-09 02:18:26,502 - DEBUG - ESS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:26,503 - DEBUG -    Entering get()
2025-01-09 02:18:26,503 - DEBUG -     Entering _make_request()
2025-01-09 02:18:26,503 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ESS
2025-01-09 02:18:26,503 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:26,503 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:26,503 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:26,503 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:26,503 - DEBUG - reusing cookie
2025-01-09 02:18:26,503 - DEBUG - reusing crumb
2025-01-09 02:18:26,503 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:26,503 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:26,682 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ESS?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1213
2025-01-09 02:18:26,683 - DEBUG - response code=200
2025-01-09 02:18:26,683 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:26,683 - DEBUG -    Exiting get()
2025-01-09 02:18:26,684 - DEBUG - ESS: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:26,686 - DEBUG - ESS: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:26,690 - DEBUG - ESS: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:26,699 - DEBUG - ESS: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:26,700 - DEBUG -   Exiting history()
2025-01-09 02:18:26,700 - DEBUG -  Exiting history()
2025-01-09 02:18:26,702 - DEBUG - Exiting download()
2025-01-09 02:18:26,870 - ERROR - Error writing data for ESS to DB: schema "np" does not exist
LINE 4:             VALUES ('ESS','2020-01-01'::date,np.float64(253....
                                                     ^

2025-01-09 02:18:26,871 - DEBUG - Entering download()
2025-01-09 02:18:26,871 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:26,871 - DEBUG -  Entering history()
2025-01-09 02:18:26,872 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EL', 1, 0])
2025-01-09 02:18:26,872 - DEBUG -   Entering history()
2025-01-09 02:18:26,873 - DEBUG - EL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:26,873 - DEBUG -    Entering get()
2025-01-09 02:18:26,873 - DEBUG -     Entering _make_request()
2025-01-09 02:18:26,873 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EL
2025-01-09 02:18:26,873 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:26,873 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:26,873 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:26,873 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:26,873 - DEBUG - reusing cookie
2025-01-09 02:18:26,873 - DEBUG - reusing crumb
2025-01-09 02:18:26,873 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:26,873 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:27,068 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EL?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1222
2025-01-09 02:18:27,068 - DEBUG - response code=200
2025-01-09 02:18:27,068 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:27,068 - DEBUG -    Exiting get()
2025-01-09 02:18:27,070 - DEBUG - EL: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:27,071 - DEBUG - EL: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:27,074 - DEBUG - EL: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:27,080 - DEBUG - EL: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:27,080 - DEBUG -   Exiting history()
2025-01-09 02:18:27,080 - DEBUG -  Exiting history()
2025-01-09 02:18:27,083 - DEBUG - Exiting download()
2025-01-09 02:18:27,233 - DEBUG - Entering download()
2025-01-09 02:18:27,233 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:27,233 - DEBUG -  Entering history()
2025-01-09 02:18:27,234 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EG', 1, 0])
2025-01-09 02:18:27,234 - DEBUG -   Entering history()
2025-01-09 02:18:27,235 - DEBUG - EG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:27,235 - DEBUG -    Entering get()
2025-01-09 02:18:27,235 - DEBUG -     Entering _make_request()
2025-01-09 02:18:27,235 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EG
2025-01-09 02:18:27,235 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:27,235 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:27,235 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:27,235 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:27,235 - DEBUG - reusing cookie
2025-01-09 02:18:27,235 - DEBUG - reusing crumb
2025-01-09 02:18:27,235 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:27,235 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:27,422 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EG?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1195
2025-01-09 02:18:27,423 - DEBUG - response code=200
2025-01-09 02:18:27,423 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:27,423 - DEBUG -    Exiting get()
2025-01-09 02:18:27,425 - DEBUG - EG: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:27,426 - DEBUG - EG: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:27,430 - DEBUG - EG: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:27,438 - DEBUG - EG: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:27,438 - DEBUG -   Exiting history()
2025-01-09 02:18:27,438 - DEBUG -  Exiting history()
2025-01-09 02:18:27,441 - DEBUG - Exiting download()
2025-01-09 02:18:27,586 - ERROR - Error writing data for EG to DB: schema "np" does not exist
LINE 4:             VALUES ('EG','2020-01-01'::date,np.float64(249.5...
                                                    ^

2025-01-09 02:18:27,587 - DEBUG - Entering download()
2025-01-09 02:18:27,587 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:27,587 - DEBUG -  Entering history()
2025-01-09 02:18:27,588 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EVRG', 1, 0])
2025-01-09 02:18:27,588 - DEBUG -   Entering history()
2025-01-09 02:18:27,589 - DEBUG - EVRG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:27,589 - DEBUG -    Entering get()
2025-01-09 02:18:27,589 - DEBUG -     Entering _make_request()
2025-01-09 02:18:27,589 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EVRG
2025-01-09 02:18:27,589 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:27,589 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:27,589 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:27,589 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:27,589 - DEBUG - reusing cookie
2025-01-09 02:18:27,589 - DEBUG - reusing crumb
2025-01-09 02:18:27,589 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:27,589 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:27,849 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EVRG?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1181
2025-01-09 02:18:27,850 - DEBUG - response code=200
2025-01-09 02:18:27,850 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:27,850 - DEBUG -    Exiting get()
2025-01-09 02:18:27,851 - DEBUG - EVRG: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:27,852 - DEBUG - EVRG: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:27,856 - DEBUG - EVRG: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:27,863 - DEBUG - EVRG: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:27,863 - DEBUG -   Exiting history()
2025-01-09 02:18:27,863 - DEBUG -  Exiting history()
2025-01-09 02:18:27,865 - DEBUG - Exiting download()
2025-01-09 02:18:27,994 - ERROR - Error writing data for EVRG to DB: schema "np" does not exist
LINE 4:             VALUES ('EVRG','2020-01-01'::date,np.float64(53....
                                                      ^

2025-01-09 02:18:27,995 - DEBUG - Entering download()
2025-01-09 02:18:27,995 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:27,995 - DEBUG -  Entering history()
2025-01-09 02:18:27,995 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ES', 1, 0])
2025-01-09 02:18:27,995 - DEBUG -   Entering history()
2025-01-09 02:18:27,996 - DEBUG - ES: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:27,996 - DEBUG -    Entering get()
2025-01-09 02:18:27,996 - DEBUG -     Entering _make_request()
2025-01-09 02:18:27,996 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ES
2025-01-09 02:18:27,996 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:27,997 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:27,997 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:27,997 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:27,997 - DEBUG - reusing cookie
2025-01-09 02:18:27,997 - DEBUG - reusing crumb
2025-01-09 02:18:27,997 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:27,997 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:28,224 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ES?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1189
2025-01-09 02:18:28,225 - DEBUG - response code=200
2025-01-09 02:18:28,225 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:28,225 - DEBUG -    Exiting get()
2025-01-09 02:18:28,226 - DEBUG - ES: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:28,227 - DEBUG - ES: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:28,231 - DEBUG - ES: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:28,235 - DEBUG - ES: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:28,236 - DEBUG -   Exiting history()
2025-01-09 02:18:28,236 - DEBUG -  Exiting history()
2025-01-09 02:18:28,237 - DEBUG - Exiting download()
2025-01-09 02:18:28,382 - ERROR - Error writing data for ES to DB: schema "np" does not exist
LINE 4:             VALUES ('ES','2020-01-01'::date,np.float64(71.63...
                                                    ^

2025-01-09 02:18:28,382 - DEBUG - Entering download()
2025-01-09 02:18:28,383 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:28,383 - DEBUG -  Entering history()
2025-01-09 02:18:28,383 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EXC', 1, 0])
2025-01-09 02:18:28,383 - DEBUG -   Entering history()
2025-01-09 02:18:28,384 - DEBUG - EXC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:28,384 - DEBUG -    Entering get()
2025-01-09 02:18:28,384 - DEBUG -     Entering _make_request()
2025-01-09 02:18:28,384 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EXC
2025-01-09 02:18:28,384 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:28,384 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:28,384 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:28,384 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:28,384 - DEBUG - reusing cookie
2025-01-09 02:18:28,384 - DEBUG - reusing crumb
2025-01-09 02:18:28,384 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:28,384 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:28,607 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EXC?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1199
2025-01-09 02:18:28,608 - DEBUG - response code=200
2025-01-09 02:18:28,608 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:28,608 - DEBUG -    Exiting get()
2025-01-09 02:18:28,610 - DEBUG - EXC: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:28,611 - DEBUG - EXC: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:28,615 - DEBUG - EXC: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:28,621 - DEBUG - EXC: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:28,621 - DEBUG -   Exiting history()
2025-01-09 02:18:28,621 - DEBUG -  Exiting history()
2025-01-09 02:18:28,624 - DEBUG - Exiting download()
2025-01-09 02:18:28,741 - ERROR - Error writing data for EXC to DB: schema "np" does not exist
LINE 4:             VALUES ('EXC','2020-01-01'::date,np.float64(27.3...
                                                     ^

2025-01-09 02:18:28,741 - DEBUG - Entering download()
2025-01-09 02:18:28,742 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:28,742 - DEBUG -  Entering history()
2025-01-09 02:18:28,742 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EXPE', 1, 0])
2025-01-09 02:18:28,742 - DEBUG -   Entering history()
2025-01-09 02:18:28,743 - DEBUG - EXPE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:28,743 - DEBUG -    Entering get()
2025-01-09 02:18:28,743 - DEBUG -     Entering _make_request()
2025-01-09 02:18:28,743 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EXPE
2025-01-09 02:18:28,743 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:28,743 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:28,744 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:28,744 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:28,744 - DEBUG - reusing cookie
2025-01-09 02:18:28,744 - DEBUG - reusing crumb
2025-01-09 02:18:28,744 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:28,744 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:28,922 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EXPE?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1205
2025-01-09 02:18:28,923 - DEBUG - response code=200
2025-01-09 02:18:28,923 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:28,923 - DEBUG -    Exiting get()
2025-01-09 02:18:28,924 - DEBUG - EXPE: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:28,925 - DEBUG - EXPE: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:28,929 - DEBUG - EXPE: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:28,935 - DEBUG - EXPE: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:28,935 - DEBUG -   Exiting history()
2025-01-09 02:18:28,935 - DEBUG -  Exiting history()
2025-01-09 02:18:28,937 - DEBUG - Exiting download()
2025-01-09 02:18:29,049 - ERROR - Error writing data for EXPE to DB: schema "np" does not exist
LINE 4:             VALUES ('EXPE','2020-01-01'::date,np.float64(108...
                                                      ^

2025-01-09 02:18:29,049 - DEBUG - Entering download()
2025-01-09 02:18:29,049 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:29,049 - DEBUG -  Entering history()
2025-01-09 02:18:29,050 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EXPD', 1, 0])
2025-01-09 02:18:29,050 - DEBUG -   Entering history()
2025-01-09 02:18:29,051 - DEBUG - EXPD: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:29,051 - DEBUG -    Entering get()
2025-01-09 02:18:29,051 - DEBUG -     Entering _make_request()
2025-01-09 02:18:29,051 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EXPD
2025-01-09 02:18:29,051 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:29,051 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:29,051 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:29,051 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:29,051 - DEBUG - reusing cookie
2025-01-09 02:18:29,051 - DEBUG - reusing crumb
2025-01-09 02:18:29,051 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:29,051 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:29,239 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EXPD?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1233
2025-01-09 02:18:29,239 - DEBUG - response code=200
2025-01-09 02:18:29,239 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:29,239 - DEBUG -    Exiting get()
2025-01-09 02:18:29,241 - DEBUG - EXPD: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:29,242 - DEBUG - EXPD: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:29,248 - DEBUG - EXPD: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:29,255 - DEBUG - EXPD: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:29,256 - DEBUG -   Exiting history()
2025-01-09 02:18:29,256 - DEBUG -  Exiting history()
2025-01-09 02:18:29,258 - DEBUG - Exiting download()
2025-01-09 02:18:29,377 - ERROR - Error writing data for EXPD to DB: schema "np" does not exist
LINE 4:             VALUES ('EXPD','2020-01-01'::date,np.float64(74....
                                                      ^

2025-01-09 02:18:29,377 - DEBUG - Entering download()
2025-01-09 02:18:29,378 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:29,378 - DEBUG -  Entering history()
2025-01-09 02:18:29,378 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['EXR', 1, 0])
2025-01-09 02:18:29,378 - DEBUG -   Entering history()
2025-01-09 02:18:29,379 - DEBUG - EXR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:29,379 - DEBUG -    Entering get()
2025-01-09 02:18:29,379 - DEBUG -     Entering _make_request()
2025-01-09 02:18:29,379 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/EXR
2025-01-09 02:18:29,379 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:29,379 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:29,379 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:29,379 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:29,379 - DEBUG - reusing cookie
2025-01-09 02:18:29,380 - DEBUG - reusing crumb
2025-01-09 02:18:29,380 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:29,380 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:29,558 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/EXR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1209
2025-01-09 02:18:29,558 - DEBUG - response code=200
2025-01-09 02:18:29,558 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:29,558 - DEBUG -    Exiting get()
2025-01-09 02:18:29,560 - DEBUG - EXR: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:29,561 - DEBUG - EXR: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:29,566 - DEBUG - EXR: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:29,572 - DEBUG - EXR: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:29,572 - DEBUG -   Exiting history()
2025-01-09 02:18:29,573 - DEBUG -  Exiting history()
2025-01-09 02:18:29,575 - DEBUG - Exiting download()
2025-01-09 02:18:29,691 - ERROR - Error writing data for EXR to DB: schema "np" does not exist
LINE 4:             VALUES ('EXR','2020-01-01'::date,np.float64(88.3...
                                                     ^

2025-01-09 02:18:29,692 - DEBUG - Entering download()
2025-01-09 02:18:29,692 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:29,692 - DEBUG -  Entering history()
2025-01-09 02:18:29,692 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['XOM', 1, 0])
2025-01-09 02:18:29,692 - DEBUG -   Entering history()
2025-01-09 02:18:29,693 - DEBUG - XOM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:29,693 - DEBUG -    Entering get()
2025-01-09 02:18:29,694 - DEBUG -     Entering _make_request()
2025-01-09 02:18:29,694 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/XOM
2025-01-09 02:18:29,694 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:29,694 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:29,694 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:29,694 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:29,694 - DEBUG - reusing cookie
2025-01-09 02:18:29,694 - DEBUG - reusing crumb
2025-01-09 02:18:29,694 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:29,694 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:29,920 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/XOM?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1207
2025-01-09 02:18:29,921 - DEBUG - response code=200
2025-01-09 02:18:29,921 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:29,921 - DEBUG -    Exiting get()
2025-01-09 02:18:29,922 - DEBUG - XOM: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:29,924 - DEBUG - XOM: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:29,928 - DEBUG - XOM: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:29,934 - DEBUG - XOM: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:29,934 - DEBUG -   Exiting history()
2025-01-09 02:18:29,934 - DEBUG -  Exiting history()
2025-01-09 02:18:29,936 - DEBUG - Exiting download()
2025-01-09 02:18:30,198 - ERROR - Error writing data for XOM to DB: schema "np" does not exist
LINE 4:             VALUES ('XOM','2020-01-01'::date,np.float64(55.1...
                                                     ^

2025-01-09 02:18:30,199 - DEBUG - Entering download()
2025-01-09 02:18:30,199 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:30,199 - DEBUG -  Entering history()
2025-01-09 02:18:30,199 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FFIV', 1, 0])
2025-01-09 02:18:30,199 - DEBUG -   Entering history()
2025-01-09 02:18:30,200 - DEBUG - FFIV: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:30,200 - DEBUG -    Entering get()
2025-01-09 02:18:30,200 - DEBUG -     Entering _make_request()
2025-01-09 02:18:30,201 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FFIV
2025-01-09 02:18:30,201 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:30,201 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:30,201 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:30,201 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:30,201 - DEBUG - reusing cookie
2025-01-09 02:18:30,201 - DEBUG - reusing crumb
2025-01-09 02:18:30,201 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:30,201 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:30,353 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FFIV?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1184
2025-01-09 02:18:30,354 - DEBUG - response code=200
2025-01-09 02:18:30,354 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:30,354 - DEBUG -    Exiting get()
2025-01-09 02:18:30,355 - DEBUG - FFIV: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:30,356 - DEBUG - FFIV: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:30,361 - DEBUG - FFIV: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:30,366 - DEBUG - FFIV: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:30,367 - DEBUG -   Exiting history()
2025-01-09 02:18:30,367 - DEBUG -  Exiting history()
2025-01-09 02:18:30,369 - DEBUG - Exiting download()
2025-01-09 02:18:30,522 - DEBUG - Entering download()
2025-01-09 02:18:30,522 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:30,522 - DEBUG -  Entering history()
2025-01-09 02:18:30,522 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FDS', 1, 0])
2025-01-09 02:18:30,523 - DEBUG -   Entering history()
2025-01-09 02:18:30,523 - DEBUG - FDS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:30,523 - DEBUG -    Entering get()
2025-01-09 02:18:30,523 - DEBUG -     Entering _make_request()
2025-01-09 02:18:30,523 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FDS
2025-01-09 02:18:30,523 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:30,524 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:30,524 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:30,524 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:30,524 - DEBUG - reusing cookie
2025-01-09 02:18:30,524 - DEBUG - reusing crumb
2025-01-09 02:18:30,524 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:30,524 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:30,720 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FDS?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1217
2025-01-09 02:18:30,721 - DEBUG - response code=200
2025-01-09 02:18:30,721 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:30,721 - DEBUG -    Exiting get()
2025-01-09 02:18:30,722 - DEBUG - FDS: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:30,723 - DEBUG - FDS: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:30,727 - DEBUG - FDS: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:30,732 - DEBUG - FDS: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:30,733 - DEBUG -   Exiting history()
2025-01-09 02:18:30,733 - DEBUG -  Exiting history()
2025-01-09 02:18:30,735 - DEBUG - Exiting download()
2025-01-09 02:18:30,787 - DEBUG - Entering download()
2025-01-09 02:18:30,787 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:30,787 - DEBUG -  Entering history()
2025-01-09 02:18:30,788 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FICO', 1, 0])
2025-01-09 02:18:30,788 - DEBUG -   Entering history()
2025-01-09 02:18:30,788 - DEBUG - FICO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:30,789 - DEBUG -    Entering get()
2025-01-09 02:18:30,789 - DEBUG -     Entering _make_request()
2025-01-09 02:18:30,789 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FICO
2025-01-09 02:18:30,789 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:30,789 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:30,789 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:30,789 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:30,789 - DEBUG - reusing cookie
2025-01-09 02:18:30,789 - DEBUG - reusing crumb
2025-01-09 02:18:30,789 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:30,789 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:30,973 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FICO?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1187
2025-01-09 02:18:30,973 - DEBUG - response code=200
2025-01-09 02:18:30,974 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:30,974 - DEBUG -    Exiting get()
2025-01-09 02:18:30,975 - DEBUG - FICO: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:30,976 - DEBUG - FICO: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:30,980 - DEBUG - FICO: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:30,985 - DEBUG - FICO: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:30,986 - DEBUG -   Exiting history()
2025-01-09 02:18:30,986 - DEBUG -  Exiting history()
2025-01-09 02:18:30,988 - DEBUG - Exiting download()
2025-01-09 02:18:31,230 - ERROR - Error writing data for FICO to DB: schema "np" does not exist
LINE 4:             VALUES ('FICO','2020-01-01'::date,np.float64(377...
                                                      ^

2025-01-09 02:18:31,231 - DEBUG - Entering download()
2025-01-09 02:18:31,231 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:31,231 - DEBUG -  Entering history()
2025-01-09 02:18:31,232 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FAST', 1, 0])
2025-01-09 02:18:31,232 - DEBUG -   Entering history()
2025-01-09 02:18:31,233 - DEBUG - FAST: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:31,233 - DEBUG -    Entering get()
2025-01-09 02:18:31,233 - DEBUG -     Entering _make_request()
2025-01-09 02:18:31,233 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FAST
2025-01-09 02:18:31,233 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:31,233 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:31,233 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:31,233 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:31,234 - DEBUG - reusing cookie
2025-01-09 02:18:31,234 - DEBUG - reusing crumb
2025-01-09 02:18:31,234 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:31,234 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:31,420 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FAST?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1193
2025-01-09 02:18:31,421 - DEBUG - response code=200
2025-01-09 02:18:31,421 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:31,421 - DEBUG -    Exiting get()
2025-01-09 02:18:31,422 - DEBUG - FAST: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:31,423 - DEBUG - FAST: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:31,427 - DEBUG - FAST: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:31,433 - DEBUG - FAST: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:31,434 - DEBUG -   Exiting history()
2025-01-09 02:18:31,434 - DEBUG -  Exiting history()
2025-01-09 02:18:31,436 - DEBUG - Exiting download()
2025-01-09 02:18:31,592 - DEBUG - Entering download()
2025-01-09 02:18:31,593 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:31,593 - DEBUG -  Entering history()
2025-01-09 02:18:31,593 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FRT', 1, 0])
2025-01-09 02:18:31,593 - DEBUG -   Entering history()
2025-01-09 02:18:31,594 - DEBUG - FRT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:31,594 - DEBUG -    Entering get()
2025-01-09 02:18:31,595 - DEBUG -     Entering _make_request()
2025-01-09 02:18:31,595 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FRT
2025-01-09 02:18:31,595 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:31,595 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:31,595 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:31,595 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:31,595 - DEBUG - reusing cookie
2025-01-09 02:18:31,595 - DEBUG - reusing crumb
2025-01-09 02:18:31,595 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:31,595 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:31,787 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FRT?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1225
2025-01-09 02:18:31,788 - DEBUG - response code=200
2025-01-09 02:18:31,788 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:31,788 - DEBUG -    Exiting get()
2025-01-09 02:18:31,789 - DEBUG - FRT: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:31,790 - DEBUG - FRT: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:31,794 - DEBUG - FRT: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:31,801 - DEBUG - FRT: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:31,801 - DEBUG -   Exiting history()
2025-01-09 02:18:31,801 - DEBUG -  Exiting history()
2025-01-09 02:18:31,804 - DEBUG - Exiting download()
2025-01-09 02:18:32,047 - ERROR - Error writing data for FRT to DB: schema "np" does not exist
LINE 4:             VALUES ('FRT','2020-01-01'::date,np.float64(104....
                                                     ^

2025-01-09 02:18:32,049 - DEBUG - Entering download()
2025-01-09 02:18:32,049 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:32,049 - DEBUG -  Entering history()
2025-01-09 02:18:32,050 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FDX', 1, 0])
2025-01-09 02:18:32,050 - DEBUG -   Entering history()
2025-01-09 02:18:32,051 - DEBUG - FDX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:32,051 - DEBUG -    Entering get()
2025-01-09 02:18:32,051 - DEBUG -     Entering _make_request()
2025-01-09 02:18:32,051 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FDX
2025-01-09 02:18:32,051 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:32,051 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:32,051 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:32,052 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:32,052 - DEBUG - reusing cookie
2025-01-09 02:18:32,052 - DEBUG - reusing crumb
2025-01-09 02:18:32,052 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:32,052 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:32,229 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FDX?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1197
2025-01-09 02:18:32,230 - DEBUG - response code=200
2025-01-09 02:18:32,230 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:32,230 - DEBUG -    Exiting get()
2025-01-09 02:18:32,231 - DEBUG - FDX: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:32,232 - DEBUG - FDX: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:32,236 - DEBUG - FDX: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:32,243 - DEBUG - FDX: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:32,243 - DEBUG -   Exiting history()
2025-01-09 02:18:32,243 - DEBUG -  Exiting history()
2025-01-09 02:18:32,246 - DEBUG - Exiting download()
2025-01-09 02:18:32,392 - ERROR - Error writing data for FDX to DB: schema "np" does not exist
LINE 4:             VALUES ('FDX','2020-01-01'::date,np.float64(139....
                                                     ^

2025-01-09 02:18:32,393 - DEBUG - Entering download()
2025-01-09 02:18:32,393 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:32,393 - DEBUG -  Entering history()
2025-01-09 02:18:32,394 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FIS', 1, 0])
2025-01-09 02:18:32,394 - DEBUG -   Entering history()
2025-01-09 02:18:32,395 - DEBUG - FIS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:32,395 - DEBUG -    Entering get()
2025-01-09 02:18:32,395 - DEBUG -     Entering _make_request()
2025-01-09 02:18:32,395 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FIS
2025-01-09 02:18:32,395 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:32,396 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:32,396 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:32,396 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:32,396 - DEBUG - reusing cookie
2025-01-09 02:18:32,396 - DEBUG - reusing crumb
2025-01-09 02:18:32,396 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:32,396 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:32,571 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FIS?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1233
2025-01-09 02:18:32,571 - DEBUG - response code=200
2025-01-09 02:18:32,571 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:32,571 - DEBUG -    Exiting get()
2025-01-09 02:18:32,573 - DEBUG - FIS: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:32,574 - DEBUG - FIS: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:32,577 - DEBUG - FIS: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:32,584 - DEBUG - FIS: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:32,584 - DEBUG -   Exiting history()
2025-01-09 02:18:32,584 - DEBUG -  Exiting history()
2025-01-09 02:18:32,586 - DEBUG - Exiting download()
2025-01-09 02:18:32,723 - ERROR - Error writing data for FIS to DB: schema "np" does not exist
LINE 4:             VALUES ('FIS','2020-01-01'::date,np.float64(126....
                                                     ^

2025-01-09 02:18:32,724 - DEBUG - Entering download()
2025-01-09 02:18:32,724 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:32,724 - DEBUG -  Entering history()
2025-01-09 02:18:32,724 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FITB', 1, 0])
2025-01-09 02:18:32,725 - DEBUG -   Entering history()
2025-01-09 02:18:32,725 - DEBUG - FITB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:32,726 - DEBUG -    Entering get()
2025-01-09 02:18:32,726 - DEBUG -     Entering _make_request()
2025-01-09 02:18:32,726 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FITB
2025-01-09 02:18:32,726 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:32,726 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:32,726 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:32,726 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:32,726 - DEBUG - reusing cookie
2025-01-09 02:18:32,726 - DEBUG - reusing crumb
2025-01-09 02:18:32,726 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:32,726 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:32,925 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FITB?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1203
2025-01-09 02:18:32,926 - DEBUG - response code=200
2025-01-09 02:18:32,926 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:32,926 - DEBUG -    Exiting get()
2025-01-09 02:18:32,927 - DEBUG - FITB: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:32,928 - DEBUG - FITB: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:32,932 - DEBUG - FITB: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:32,938 - DEBUG - FITB: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:32,938 - DEBUG -   Exiting history()
2025-01-09 02:18:32,938 - DEBUG -  Exiting history()
2025-01-09 02:18:32,940 - DEBUG - Exiting download()
2025-01-09 02:18:33,087 - ERROR - Error writing data for FITB to DB: schema "np" does not exist
LINE 4:             VALUES ('FITB','2020-01-01'::date,np.float64(25....
                                                      ^

2025-01-09 02:18:33,088 - DEBUG - Entering download()
2025-01-09 02:18:33,088 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:33,088 - DEBUG -  Entering history()
2025-01-09 02:18:33,088 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FSLR', 1, 0])
2025-01-09 02:18:33,088 - DEBUG -   Entering history()
2025-01-09 02:18:33,089 - DEBUG - FSLR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:33,090 - DEBUG -    Entering get()
2025-01-09 02:18:33,090 - DEBUG -     Entering _make_request()
2025-01-09 02:18:33,090 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FSLR
2025-01-09 02:18:33,090 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:33,090 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:33,090 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:33,090 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:33,090 - DEBUG - reusing cookie
2025-01-09 02:18:33,090 - DEBUG - reusing crumb
2025-01-09 02:18:33,090 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:33,090 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:33,232 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FSLR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1199
2025-01-09 02:18:33,233 - DEBUG - response code=200
2025-01-09 02:18:33,233 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:33,233 - DEBUG -    Exiting get()
2025-01-09 02:18:33,235 - DEBUG - FSLR: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:33,236 - DEBUG - FSLR: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:33,241 - DEBUG - FSLR: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:33,248 - DEBUG - FSLR: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:33,248 - DEBUG -   Exiting history()
2025-01-09 02:18:33,248 - DEBUG -  Exiting history()
2025-01-09 02:18:33,251 - DEBUG - Exiting download()
2025-01-09 02:18:33,501 - ERROR - Error writing data for FSLR to DB: schema "np" does not exist
LINE 4:             VALUES ('FSLR','2020-01-01'::date,np.float64(56....
                                                      ^

2025-01-09 02:18:33,501 - DEBUG - Entering download()
2025-01-09 02:18:33,501 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:33,502 - DEBUG -  Entering history()
2025-01-09 02:18:33,502 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FE', 1, 0])
2025-01-09 02:18:33,502 - DEBUG -   Entering history()
2025-01-09 02:18:33,503 - DEBUG - FE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:33,503 - DEBUG -    Entering get()
2025-01-09 02:18:33,503 - DEBUG -     Entering _make_request()
2025-01-09 02:18:33,503 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FE
2025-01-09 02:18:33,503 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:33,503 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:33,503 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:33,503 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:33,503 - DEBUG - reusing cookie
2025-01-09 02:18:33,503 - DEBUG - reusing crumb
2025-01-09 02:18:33,503 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:33,503 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:33,675 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FE?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1191
2025-01-09 02:18:33,676 - DEBUG - response code=200
2025-01-09 02:18:33,676 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:33,676 - DEBUG -    Exiting get()
2025-01-09 02:18:33,677 - DEBUG - FE: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:33,678 - DEBUG - FE: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:33,682 - DEBUG - FE: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:33,689 - DEBUG - FE: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:33,689 - DEBUG -   Exiting history()
2025-01-09 02:18:33,690 - DEBUG -  Exiting history()
2025-01-09 02:18:33,692 - DEBUG - Exiting download()
2025-01-09 02:18:33,849 - DEBUG - Entering download()
2025-01-09 02:18:33,849 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:33,849 - DEBUG -  Entering history()
2025-01-09 02:18:33,849 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FI', 1, 0])
2025-01-09 02:18:33,849 - DEBUG -   Entering history()
2025-01-09 02:18:33,850 - DEBUG - FI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:33,850 - DEBUG -    Entering get()
2025-01-09 02:18:33,851 - DEBUG -     Entering _make_request()
2025-01-09 02:18:33,851 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FI
2025-01-09 02:18:33,851 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:33,851 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:33,851 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:33,851 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:33,851 - DEBUG - reusing cookie
2025-01-09 02:18:33,851 - DEBUG - reusing crumb
2025-01-09 02:18:33,851 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:33,851 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:34,006 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FI?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1173
2025-01-09 02:18:34,006 - DEBUG - response code=200
2025-01-09 02:18:34,006 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:34,006 - DEBUG -    Exiting get()
2025-01-09 02:18:34,007 - DEBUG - FI: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:34,009 - DEBUG - FI: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:34,012 - DEBUG - FI: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:34,019 - DEBUG - FI: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:34,019 - DEBUG -   Exiting history()
2025-01-09 02:18:34,019 - DEBUG -  Exiting history()
2025-01-09 02:18:34,022 - DEBUG - Exiting download()
2025-01-09 02:18:34,272 - ERROR - Error writing data for FI to DB: schema "np" does not exist
LINE 4:             VALUES ('FI','2020-01-01'::date,np.float64(116.0...
                                                    ^

2025-01-09 02:18:34,273 - DEBUG - Entering download()
2025-01-09 02:18:34,273 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:34,273 - DEBUG -  Entering history()
2025-01-09 02:18:34,273 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FMC', 1, 0])
2025-01-09 02:18:34,274 - DEBUG -   Entering history()
2025-01-09 02:18:34,275 - DEBUG - FMC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:34,275 - DEBUG -    Entering get()
2025-01-09 02:18:34,275 - DEBUG -     Entering _make_request()
2025-01-09 02:18:34,275 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FMC
2025-01-09 02:18:34,275 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:34,275 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:34,275 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:34,275 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:34,275 - DEBUG - reusing cookie
2025-01-09 02:18:34,275 - DEBUG - reusing crumb
2025-01-09 02:18:34,276 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:34,276 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:34,460 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FMC?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1188
2025-01-09 02:18:34,460 - DEBUG - response code=200
2025-01-09 02:18:34,460 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:34,460 - DEBUG -    Exiting get()
2025-01-09 02:18:34,462 - DEBUG - FMC: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:34,463 - DEBUG - FMC: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:34,466 - DEBUG - FMC: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:34,472 - DEBUG - FMC: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:34,472 - DEBUG -   Exiting history()
2025-01-09 02:18:34,472 - DEBUG -  Exiting history()
2025-01-09 02:18:34,475 - DEBUG - Exiting download()
2025-01-09 02:18:34,617 - ERROR - Error writing data for FMC to DB: schema "np" does not exist
LINE 4:             VALUES ('FMC','2020-01-01'::date,np.float64(88.6...
                                                     ^

2025-01-09 02:18:34,618 - DEBUG - Entering download()
2025-01-09 02:18:34,618 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:34,618 - DEBUG -  Entering history()
2025-01-09 02:18:34,619 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['F', 1, 0])
2025-01-09 02:18:34,620 - DEBUG -   Entering history()
2025-01-09 02:18:34,622 - DEBUG - F: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:34,622 - DEBUG -    Entering get()
2025-01-09 02:18:34,622 - DEBUG -     Entering _make_request()
2025-01-09 02:18:34,622 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/F
2025-01-09 02:18:34,622 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:34,623 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:34,623 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:34,623 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:34,623 - DEBUG - reusing cookie
2025-01-09 02:18:34,623 - DEBUG - reusing crumb
2025-01-09 02:18:34,623 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:34,623 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:34,841 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/F?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1182
2025-01-09 02:18:34,841 - DEBUG - response code=200
2025-01-09 02:18:34,841 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:34,841 - DEBUG -    Exiting get()
2025-01-09 02:18:34,843 - DEBUG - F: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:34,844 - DEBUG - F: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:34,848 - DEBUG - F: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:34,855 - DEBUG - F: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:34,855 - DEBUG -   Exiting history()
2025-01-09 02:18:34,855 - DEBUG -  Exiting history()
2025-01-09 02:18:34,858 - DEBUG - Exiting download()
2025-01-09 02:18:35,005 - ERROR - Error writing data for F to DB: schema "np" does not exist
LINE 4:             VALUES ('F','2020-01-01'::date,np.float64(7.4444...
                                                   ^

2025-01-09 02:18:35,006 - DEBUG - Entering download()
2025-01-09 02:18:35,006 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:35,006 - DEBUG -  Entering history()
2025-01-09 02:18:35,006 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FTNT', 1, 0])
2025-01-09 02:18:35,007 - DEBUG -   Entering history()
2025-01-09 02:18:35,007 - DEBUG - FTNT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:35,007 - DEBUG -    Entering get()
2025-01-09 02:18:35,008 - DEBUG -     Entering _make_request()
2025-01-09 02:18:35,008 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FTNT
2025-01-09 02:18:35,008 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:35,008 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:35,008 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:35,008 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:35,008 - DEBUG - reusing cookie
2025-01-09 02:18:35,008 - DEBUG - reusing crumb
2025-01-09 02:18:35,008 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:35,008 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:35,165 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FTNT?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1192
2025-01-09 02:18:35,165 - DEBUG - response code=200
2025-01-09 02:18:35,165 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:35,166 - DEBUG -    Exiting get()
2025-01-09 02:18:35,167 - DEBUG - FTNT: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:35,168 - DEBUG - FTNT: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:35,172 - DEBUG - FTNT: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:35,178 - DEBUG - FTNT: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:35,179 - DEBUG -   Exiting history()
2025-01-09 02:18:35,179 - DEBUG -  Exiting history()
2025-01-09 02:18:35,181 - DEBUG - Exiting download()
2025-01-09 02:18:35,327 - ERROR - Error writing data for FTNT to DB: schema "np" does not exist
LINE 4:             VALUES ('FTNT','2020-01-01'::date,np.float64(21....
                                                      ^

2025-01-09 02:18:35,327 - DEBUG - Entering download()
2025-01-09 02:18:35,328 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:35,328 - DEBUG -  Entering history()
2025-01-09 02:18:35,328 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FTV', 1, 0])
2025-01-09 02:18:35,328 - DEBUG -   Entering history()
2025-01-09 02:18:35,329 - DEBUG - FTV: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:35,330 - DEBUG -    Entering get()
2025-01-09 02:18:35,330 - DEBUG -     Entering _make_request()
2025-01-09 02:18:35,330 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FTV
2025-01-09 02:18:35,330 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:35,330 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:35,330 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:35,330 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:35,330 - DEBUG - reusing cookie
2025-01-09 02:18:35,330 - DEBUG - reusing crumb
2025-01-09 02:18:35,330 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:35,330 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:35,494 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FTV?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1193
2025-01-09 02:18:35,494 - DEBUG - response code=200
2025-01-09 02:18:35,494 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:35,495 - DEBUG -    Exiting get()
2025-01-09 02:18:35,496 - DEBUG - FTV: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:35,497 - DEBUG - FTV: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:35,501 - DEBUG - FTV: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:35,508 - DEBUG - FTV: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:35,508 - DEBUG -   Exiting history()
2025-01-09 02:18:35,508 - DEBUG -  Exiting history()
2025-01-09 02:18:35,510 - DEBUG - Exiting download()
2025-01-09 02:18:35,660 - ERROR - Error writing data for FTV to DB: schema "np" does not exist
LINE 4:             VALUES ('FTV','2020-01-01'::date,np.float64(63.1...
                                                     ^

2025-01-09 02:18:35,660 - DEBUG - Entering download()
2025-01-09 02:18:35,660 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:35,660 - DEBUG -  Entering history()
2025-01-09 02:18:35,661 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FOXA', 1, 0])
2025-01-09 02:18:35,661 - DEBUG -   Entering history()
2025-01-09 02:18:35,662 - DEBUG - FOXA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:35,662 - DEBUG -    Entering get()
2025-01-09 02:18:35,662 - DEBUG -     Entering _make_request()
2025-01-09 02:18:35,662 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FOXA
2025-01-09 02:18:35,662 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:35,662 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:35,662 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:35,662 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:35,663 - DEBUG - reusing cookie
2025-01-09 02:18:35,663 - DEBUG - reusing crumb
2025-01-09 02:18:35,663 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:35,663 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:35,834 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FOXA?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1195
2025-01-09 02:18:35,835 - DEBUG - response code=200
2025-01-09 02:18:35,835 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:35,835 - DEBUG -    Exiting get()
2025-01-09 02:18:35,836 - DEBUG - FOXA: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:35,838 - DEBUG - FOXA: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:35,842 - DEBUG - FOXA: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:35,848 - DEBUG - FOXA: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:35,848 - DEBUG -   Exiting history()
2025-01-09 02:18:35,848 - DEBUG -  Exiting history()
2025-01-09 02:18:35,850 - DEBUG - Exiting download()
2025-01-09 02:18:35,901 - DEBUG - Entering download()
2025-01-09 02:18:35,901 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:35,901 - DEBUG -  Entering history()
2025-01-09 02:18:35,902 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FOX', 1, 0])
2025-01-09 02:18:35,902 - DEBUG -   Entering history()
2025-01-09 02:18:35,903 - DEBUG - FOX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:35,903 - DEBUG -    Entering get()
2025-01-09 02:18:35,903 - DEBUG -     Entering _make_request()
2025-01-09 02:18:35,903 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FOX
2025-01-09 02:18:35,903 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:35,903 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:35,903 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:35,903 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:35,903 - DEBUG - reusing cookie
2025-01-09 02:18:35,904 - DEBUG - reusing crumb
2025-01-09 02:18:35,904 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:35,904 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:36,057 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FOX?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1163
2025-01-09 02:18:36,057 - DEBUG - response code=200
2025-01-09 02:18:36,057 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:36,057 - DEBUG -    Exiting get()
2025-01-09 02:18:36,059 - DEBUG - FOX: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:36,060 - DEBUG - FOX: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:36,063 - DEBUG - FOX: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:36,069 - DEBUG - FOX: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:36,069 - DEBUG -   Exiting history()
2025-01-09 02:18:36,069 - DEBUG -  Exiting history()
2025-01-09 02:18:36,071 - DEBUG - Exiting download()
2025-01-09 02:18:36,209 - ERROR - Error writing data for FOX to DB: schema "np" does not exist
LINE 4:             VALUES ('FOX','2020-01-01'::date,np.float64(33.8...
                                                     ^

2025-01-09 02:18:36,209 - DEBUG - Entering download()
2025-01-09 02:18:36,210 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:36,210 - DEBUG -  Entering history()
2025-01-09 02:18:36,210 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['BEN', 1, 0])
2025-01-09 02:18:36,210 - DEBUG -   Entering history()
2025-01-09 02:18:36,211 - DEBUG - BEN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:36,211 - DEBUG -    Entering get()
2025-01-09 02:18:36,211 - DEBUG -     Entering _make_request()
2025-01-09 02:18:36,211 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/BEN
2025-01-09 02:18:36,211 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:36,212 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:36,212 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:36,212 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:36,212 - DEBUG - reusing cookie
2025-01-09 02:18:36,212 - DEBUG - reusing crumb
2025-01-09 02:18:36,212 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:36,212 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:36,403 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/BEN?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1205
2025-01-09 02:18:36,404 - DEBUG - response code=200
2025-01-09 02:18:36,404 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:36,404 - DEBUG -    Exiting get()
2025-01-09 02:18:36,405 - DEBUG - BEN: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:36,406 - DEBUG - BEN: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:36,410 - DEBUG - BEN: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:36,416 - DEBUG - BEN: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:36,416 - DEBUG -   Exiting history()
2025-01-09 02:18:36,416 - DEBUG -  Exiting history()
2025-01-09 02:18:36,418 - DEBUG - Exiting download()
2025-01-09 02:18:36,577 - DEBUG - Entering download()
2025-01-09 02:18:36,577 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:36,577 - DEBUG -  Entering history()
2025-01-09 02:18:36,577 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['FCX', 1, 0])
2025-01-09 02:18:36,578 - DEBUG -   Entering history()
2025-01-09 02:18:36,578 - DEBUG - FCX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:36,578 - DEBUG -    Entering get()
2025-01-09 02:18:36,578 - DEBUG -     Entering _make_request()
2025-01-09 02:18:36,578 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/FCX
2025-01-09 02:18:36,578 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:36,579 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:36,579 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:36,579 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:36,579 - DEBUG - reusing cookie
2025-01-09 02:18:36,579 - DEBUG - reusing crumb
2025-01-09 02:18:36,579 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:36,579 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:36,772 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/FCX?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1205
2025-01-09 02:18:36,773 - DEBUG - response code=200
2025-01-09 02:18:36,773 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:36,773 - DEBUG -    Exiting get()
2025-01-09 02:18:36,774 - DEBUG - FCX: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:36,775 - DEBUG - FCX: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:36,779 - DEBUG - FCX: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:36,784 - DEBUG - FCX: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:36,784 - DEBUG -   Exiting history()
2025-01-09 02:18:36,784 - DEBUG -  Exiting history()
2025-01-09 02:18:36,787 - DEBUG - Exiting download()
2025-01-09 02:18:36,835 - DEBUG - Entering download()
2025-01-09 02:18:36,835 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:36,835 - DEBUG -  Entering history()
2025-01-09 02:18:36,836 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GRMN', 1, 0])
2025-01-09 02:18:36,836 - DEBUG -   Entering history()
2025-01-09 02:18:36,837 - DEBUG - GRMN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:36,837 - DEBUG -    Entering get()
2025-01-09 02:18:36,837 - DEBUG -     Entering _make_request()
2025-01-09 02:18:36,837 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GRMN
2025-01-09 02:18:36,837 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:36,837 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:36,838 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:36,838 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:36,838 - DEBUG - reusing cookie
2025-01-09 02:18:36,838 - DEBUG - reusing crumb
2025-01-09 02:18:36,838 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:36,838 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:37,013 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GRMN?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1181
2025-01-09 02:18:37,014 - DEBUG - response code=200
2025-01-09 02:18:37,014 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:37,014 - DEBUG -    Exiting get()
2025-01-09 02:18:37,015 - DEBUG - GRMN: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:37,016 - DEBUG - GRMN: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:37,020 - DEBUG - GRMN: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:37,025 - DEBUG - GRMN: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:37,025 - DEBUG -   Exiting history()
2025-01-09 02:18:37,026 - DEBUG -  Exiting history()
2025-01-09 02:18:37,028 - DEBUG - Exiting download()
2025-01-09 02:18:37,165 - ERROR - Error writing data for GRMN to DB: schema "np" does not exist
LINE 4:             VALUES ('GRMN','2020-01-01'::date,np.float64(86....
                                                      ^

2025-01-09 02:18:37,166 - DEBUG - Entering download()
2025-01-09 02:18:37,166 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:37,166 - DEBUG -  Entering history()
2025-01-09 02:18:37,167 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['IT', 1, 0])
2025-01-09 02:18:37,167 - DEBUG -   Entering history()
2025-01-09 02:18:37,168 - DEBUG - IT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:37,168 - DEBUG -    Entering get()
2025-01-09 02:18:37,168 - DEBUG -     Entering _make_request()
2025-01-09 02:18:37,168 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/IT
2025-01-09 02:18:37,168 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:37,168 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:37,168 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:37,168 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:37,168 - DEBUG - reusing cookie
2025-01-09 02:18:37,168 - DEBUG - reusing crumb
2025-01-09 02:18:37,168 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:37,169 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:37,312 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/IT?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1183
2025-01-09 02:18:37,312 - DEBUG - response code=200
2025-01-09 02:18:37,313 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:37,313 - DEBUG -    Exiting get()
2025-01-09 02:18:37,314 - DEBUG - IT: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:37,315 - DEBUG - IT: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:37,319 - DEBUG - IT: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:37,325 - DEBUG - IT: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:37,326 - DEBUG -   Exiting history()
2025-01-09 02:18:37,326 - DEBUG -  Exiting history()
2025-01-09 02:18:37,328 - DEBUG - Exiting download()
2025-01-09 02:18:37,462 - ERROR - Error writing data for IT to DB: schema "np" does not exist
LINE 4:             VALUES ('IT','2020-01-01'::date,np.float64(154.4...
                                                    ^

2025-01-09 02:18:37,462 - DEBUG - Entering download()
2025-01-09 02:18:37,463 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:37,463 - DEBUG -  Entering history()
2025-01-09 02:18:37,463 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GE', 1, 0])
2025-01-09 02:18:37,463 - DEBUG -   Entering history()
2025-01-09 02:18:37,464 - DEBUG - GE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:37,464 - DEBUG -    Entering get()
2025-01-09 02:18:37,464 - DEBUG -     Entering _make_request()
2025-01-09 02:18:37,464 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GE
2025-01-09 02:18:37,464 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:37,464 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:37,464 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:37,464 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:37,464 - DEBUG - reusing cookie
2025-01-09 02:18:37,464 - DEBUG - reusing crumb
2025-01-09 02:18:37,465 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:37,465 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:37,734 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GE?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1187
2025-01-09 02:18:37,735 - DEBUG - response code=200
2025-01-09 02:18:37,735 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:37,735 - DEBUG -    Exiting get()
2025-01-09 02:18:37,736 - DEBUG - GE: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:37,737 - DEBUG - GE: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:37,741 - DEBUG - GE: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:37,748 - DEBUG - GE: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:37,748 - DEBUG -   Exiting history()
2025-01-09 02:18:37,748 - DEBUG -  Exiting history()
2025-01-09 02:18:37,751 - DEBUG - Exiting download()
2025-01-09 02:18:37,801 - DEBUG - Entering download()
2025-01-09 02:18:37,801 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:37,801 - DEBUG -  Entering history()
2025-01-09 02:18:37,802 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GEHC', 1, 0])
2025-01-09 02:18:37,802 - DEBUG -   Entering history()
2025-01-09 02:18:37,802 - DEBUG - GEHC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:37,803 - DEBUG -    Entering get()
2025-01-09 02:18:37,803 - DEBUG -     Entering _make_request()
2025-01-09 02:18:37,803 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GEHC
2025-01-09 02:18:37,803 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:37,803 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:37,803 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:37,803 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:37,803 - DEBUG - reusing cookie
2025-01-09 02:18:37,803 - DEBUG - reusing crumb
2025-01-09 02:18:37,803 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:37,803 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:37,964 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GEHC?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:18:37,964 - DEBUG - response code=400
2025-01-09 02:18:37,964 - DEBUG - toggling cookie strategy basic -> csrf
2025-01-09 02:18:37,964 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:37,964 - DEBUG - cookie_mode = 'csrf'
2025-01-09 02:18:37,964 - DEBUG -       Entering _get_crumb_csrf()
2025-01-09 02:18:37,965 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['csrf', 1, 0])
2025-01-09 02:18:38,108 - DEBUG - https://guce.yahoo.com:443 "GET /consent HTTP/1.1" 302 0
2025-01-09 02:18:38,477 - DEBUG - https://www.yahoo.com:443 "GET /?guccounter=1 HTTP/1.1" 200 None
2025-01-09 02:18:39,008 - DEBUG - Failed to find "csrfToken" in response
2025-01-09 02:18:39,008 - DEBUG -       Exiting _get_crumb_csrf()
2025-01-09 02:18:39,008 - DEBUG - toggling cookie strategy csrf -> basic
2025-01-09 02:18:39,008 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:39,009 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['basic', 1, 0])
2025-01-09 02:18:39,009 - DEBUG - loaded persistent cookie
2025-01-09 02:18:39,009 - DEBUG - reusing cookie
2025-01-09 02:18:39,164 - DEBUG - https://query1.finance.yahoo.com:443 "GET /v1/test/getcrumb HTTP/1.1" 200 11
2025-01-09 02:18:39,165 - DEBUG - crumb = 'mbrlfmeSllh'
2025-01-09 02:18:39,165 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:39,165 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:39,325 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GEHC?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:18:39,326 - DEBUG - response code=400
2025-01-09 02:18:39,326 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:39,326 - DEBUG -    Exiting get()
2025-01-09 02:18:39,330 - ERROR - 
1 Failed download:
2025-01-09 02:18:39,330 - ERROR - ['GEHC']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1wk 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn\'t exist for startDate = 1577854800, endDate = 1577941200")')
2025-01-09 02:18:39,330 - DEBUG - ['GEHC']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1wk 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn't exist for startDate = 1577854800, endDate = 1577941200")

2025-01-09 02:18:39,334 - DEBUG - Exiting download()
2025-01-09 02:18:39,334 - WARNING - Ticker GEHC is missing 'Close' column. Skipping.
2025-01-09 02:18:39,334 - DEBUG - Entering download()
2025-01-09 02:18:39,334 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:39,335 - DEBUG -  Entering history()
2025-01-09 02:18:39,335 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GEV', 1, 0])
2025-01-09 02:18:39,335 - DEBUG -   Entering history()
2025-01-09 02:18:39,337 - DEBUG - GEV: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:39,337 - DEBUG -    Entering get()
2025-01-09 02:18:39,337 - DEBUG -     Entering _make_request()
2025-01-09 02:18:39,337 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GEV
2025-01-09 02:18:39,337 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:39,337 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:39,337 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:39,337 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:39,338 - DEBUG - reusing cookie
2025-01-09 02:18:39,338 - DEBUG - reusing crumb
2025-01-09 02:18:39,338 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:39,338 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:39,485 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GEV?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:18:39,485 - DEBUG - response code=400
2025-01-09 02:18:39,485 - DEBUG - toggling cookie strategy basic -> csrf
2025-01-09 02:18:39,486 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:39,486 - DEBUG - cookie_mode = 'csrf'
2025-01-09 02:18:39,486 - DEBUG -       Entering _get_crumb_csrf()
2025-01-09 02:18:39,486 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['csrf', 1, 0])
2025-01-09 02:18:39,627 - DEBUG - https://guce.yahoo.com:443 "GET /consent HTTP/1.1" 302 0
2025-01-09 02:18:39,964 - DEBUG - https://www.yahoo.com:443 "GET /?guccounter=1 HTTP/1.1" 200 None
2025-01-09 02:18:40,439 - DEBUG - Failed to find "csrfToken" in response
2025-01-09 02:18:40,440 - DEBUG -       Exiting _get_crumb_csrf()
2025-01-09 02:18:40,440 - DEBUG - toggling cookie strategy csrf -> basic
2025-01-09 02:18:40,440 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:40,440 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['basic', 1, 0])
2025-01-09 02:18:40,440 - DEBUG - loaded persistent cookie
2025-01-09 02:18:40,440 - DEBUG - reusing cookie
2025-01-09 02:18:40,582 - DEBUG - https://query1.finance.yahoo.com:443 "GET /v1/test/getcrumb HTTP/1.1" 200 11
2025-01-09 02:18:40,582 - DEBUG - crumb = 'mbrlfmeSllh'
2025-01-09 02:18:40,582 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:40,582 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:40,732 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GEV?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:18:40,732 - DEBUG - response code=400
2025-01-09 02:18:40,733 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:40,733 - DEBUG -    Exiting get()
2025-01-09 02:18:40,735 - ERROR - 
1 Failed download:
2025-01-09 02:18:40,735 - ERROR - ['GEV']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1wk 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn\'t exist for startDate = 1577854800, endDate = 1577941200")')
2025-01-09 02:18:40,735 - DEBUG - ['GEV']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1wk 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn't exist for startDate = 1577854800, endDate = 1577941200")

2025-01-09 02:18:40,738 - DEBUG - Exiting download()
2025-01-09 02:18:40,787 - ERROR - Error writing data for GEV to DB: schema "np" does not exist
LINE 4:             VALUES ('GEV','2024-04-01'::date,np.float64(140....
                                                     ^

2025-01-09 02:18:40,787 - DEBUG - Entering download()
2025-01-09 02:18:40,787 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:40,787 - DEBUG -  Entering history()
2025-01-09 02:18:40,788 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GEN', 1, 0])
2025-01-09 02:18:40,788 - DEBUG -   Entering history()
2025-01-09 02:18:40,788 - DEBUG - GEN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:40,789 - DEBUG -    Entering get()
2025-01-09 02:18:40,789 - DEBUG -     Entering _make_request()
2025-01-09 02:18:40,789 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GEN
2025-01-09 02:18:40,789 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:40,789 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:40,789 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:40,789 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:40,789 - DEBUG - reusing cookie
2025-01-09 02:18:40,789 - DEBUG - reusing crumb
2025-01-09 02:18:40,789 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:40,789 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:40,955 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GEN?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1196
2025-01-09 02:18:40,955 - DEBUG - response code=200
2025-01-09 02:18:40,956 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:40,956 - DEBUG -    Exiting get()
2025-01-09 02:18:40,957 - DEBUG - GEN: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:40,958 - DEBUG - GEN: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:40,963 - DEBUG - GEN: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:40,969 - DEBUG - GEN: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:40,970 - DEBUG -   Exiting history()
2025-01-09 02:18:40,970 - DEBUG -  Exiting history()
2025-01-09 02:18:40,972 - DEBUG - Exiting download()
2025-01-09 02:18:41,134 - ERROR - Error writing data for GEN to DB: schema "np" does not exist
LINE 4:             VALUES ('GEN','2020-01-01'::date,np.float64(13.2...
                                                     ^

2025-01-09 02:18:41,134 - DEBUG - Entering download()
2025-01-09 02:18:41,134 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:41,134 - DEBUG -  Entering history()
2025-01-09 02:18:41,135 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GNRC', 1, 0])
2025-01-09 02:18:41,135 - DEBUG -   Entering history()
2025-01-09 02:18:41,136 - DEBUG - GNRC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:41,136 - DEBUG -    Entering get()
2025-01-09 02:18:41,136 - DEBUG -     Entering _make_request()
2025-01-09 02:18:41,136 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GNRC
2025-01-09 02:18:41,136 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:41,137 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:41,137 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:41,137 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:41,137 - DEBUG - reusing cookie
2025-01-09 02:18:41,137 - DEBUG - reusing crumb
2025-01-09 02:18:41,137 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:41,137 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:41,287 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GNRC?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1207
2025-01-09 02:18:41,288 - DEBUG - response code=200
2025-01-09 02:18:41,288 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:41,288 - DEBUG -    Exiting get()
2025-01-09 02:18:41,289 - DEBUG - GNRC: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:41,290 - DEBUG - GNRC: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:41,296 - DEBUG - GNRC: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:41,301 - DEBUG - GNRC: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:41,301 - DEBUG -   Exiting history()
2025-01-09 02:18:41,301 - DEBUG -  Exiting history()
2025-01-09 02:18:41,303 - DEBUG - Exiting download()
2025-01-09 02:18:41,355 - DEBUG - Entering download()
2025-01-09 02:18:41,355 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:41,355 - DEBUG -  Entering history()
2025-01-09 02:18:41,356 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GD', 1, 0])
2025-01-09 02:18:41,356 - DEBUG -   Entering history()
2025-01-09 02:18:41,357 - DEBUG - GD: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:41,357 - DEBUG -    Entering get()
2025-01-09 02:18:41,357 - DEBUG -     Entering _make_request()
2025-01-09 02:18:41,357 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GD
2025-01-09 02:18:41,358 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:41,358 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:41,358 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:41,358 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:41,358 - DEBUG - reusing cookie
2025-01-09 02:18:41,358 - DEBUG - reusing crumb
2025-01-09 02:18:41,358 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:41,358 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:41,602 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GD?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1215
2025-01-09 02:18:41,602 - DEBUG - response code=200
2025-01-09 02:18:41,602 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:41,602 - DEBUG -    Exiting get()
2025-01-09 02:18:41,604 - DEBUG - GD: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:41,605 - DEBUG - GD: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:41,608 - DEBUG - GD: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:41,612 - DEBUG - GD: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:41,612 - DEBUG -   Exiting history()
2025-01-09 02:18:41,612 - DEBUG -  Exiting history()
2025-01-09 02:18:41,614 - DEBUG - Exiting download()
2025-01-09 02:18:41,842 - ERROR - Error writing data for GD to DB: schema "np" does not exist
LINE 4:             VALUES ('GD','2020-01-01'::date,np.float64(157.3...
                                                    ^

2025-01-09 02:18:41,843 - DEBUG - Entering download()
2025-01-09 02:18:41,843 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:41,843 - DEBUG -  Entering history()
2025-01-09 02:18:41,843 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GIS', 1, 0])
2025-01-09 02:18:41,844 - DEBUG -   Entering history()
2025-01-09 02:18:41,844 - DEBUG - GIS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:41,844 - DEBUG -    Entering get()
2025-01-09 02:18:41,844 - DEBUG -     Entering _make_request()
2025-01-09 02:18:41,844 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GIS
2025-01-09 02:18:41,844 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:41,844 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:41,844 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:41,845 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:41,845 - DEBUG - reusing cookie
2025-01-09 02:18:41,845 - DEBUG - reusing crumb
2025-01-09 02:18:41,845 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:41,845 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:42,050 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GIS?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1194
2025-01-09 02:18:42,050 - DEBUG - response code=200
2025-01-09 02:18:42,051 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:42,051 - DEBUG -    Exiting get()
2025-01-09 02:18:42,052 - DEBUG - GIS: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:42,053 - DEBUG - GIS: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:42,056 - DEBUG - GIS: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:42,060 - DEBUG - GIS: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:42,060 - DEBUG -   Exiting history()
2025-01-09 02:18:42,060 - DEBUG -  Exiting history()
2025-01-09 02:18:42,062 - DEBUG - Exiting download()
2025-01-09 02:18:42,211 - ERROR - Error writing data for GIS to DB: schema "np" does not exist
LINE 4:             VALUES ('GIS','2020-01-01'::date,np.float64(45.6...
                                                     ^

2025-01-09 02:18:42,212 - DEBUG - Entering download()
2025-01-09 02:18:42,212 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:42,212 - DEBUG -  Entering history()
2025-01-09 02:18:42,213 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GM', 1, 0])
2025-01-09 02:18:42,213 - DEBUG -   Entering history()
2025-01-09 02:18:42,214 - DEBUG - GM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:42,214 - DEBUG -    Entering get()
2025-01-09 02:18:42,214 - DEBUG -     Entering _make_request()
2025-01-09 02:18:42,214 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GM
2025-01-09 02:18:42,214 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:42,214 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:42,214 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:42,214 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:42,214 - DEBUG - reusing cookie
2025-01-09 02:18:42,214 - DEBUG - reusing crumb
2025-01-09 02:18:42,214 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:42,214 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:42,383 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GM?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1186
2025-01-09 02:18:42,383 - DEBUG - response code=200
2025-01-09 02:18:42,383 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:42,383 - DEBUG -    Exiting get()
2025-01-09 02:18:42,385 - DEBUG - GM: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:42,385 - DEBUG - GM: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:42,388 - DEBUG - GM: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:42,392 - DEBUG - GM: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:42,392 - DEBUG -   Exiting history()
2025-01-09 02:18:42,392 - DEBUG -  Exiting history()
2025-01-09 02:18:42,394 - DEBUG - Exiting download()
2025-01-09 02:18:42,534 - ERROR - Error writing data for GM to DB: schema "np" does not exist
LINE 4:             VALUES ('GM','2020-01-01'::date,np.float64(35.63...
                                                    ^

2025-01-09 02:18:42,535 - DEBUG - Entering download()
2025-01-09 02:18:42,535 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:42,535 - DEBUG -  Entering history()
2025-01-09 02:18:42,535 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GPC', 1, 0])
2025-01-09 02:18:42,536 - DEBUG -   Entering history()
2025-01-09 02:18:42,536 - DEBUG - GPC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:42,537 - DEBUG -    Entering get()
2025-01-09 02:18:42,537 - DEBUG -     Entering _make_request()
2025-01-09 02:18:42,537 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GPC
2025-01-09 02:18:42,537 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:42,537 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:42,537 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:42,537 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:42,537 - DEBUG - reusing cookie
2025-01-09 02:18:42,537 - DEBUG - reusing crumb
2025-01-09 02:18:42,537 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:42,537 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:42,735 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GPC?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1204
2025-01-09 02:18:42,735 - DEBUG - response code=200
2025-01-09 02:18:42,735 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:42,735 - DEBUG -    Exiting get()
2025-01-09 02:18:42,737 - DEBUG - GPC: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:42,738 - DEBUG - GPC: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:42,741 - DEBUG - GPC: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:42,747 - DEBUG - GPC: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:42,747 - DEBUG -   Exiting history()
2025-01-09 02:18:42,747 - DEBUG -  Exiting history()
2025-01-09 02:18:42,749 - DEBUG - Exiting download()
2025-01-09 02:18:42,892 - ERROR - Error writing data for GPC to DB: schema "np" does not exist
LINE 4:             VALUES ('GPC','2020-01-01'::date,np.float64(92.7...
                                                     ^

2025-01-09 02:18:42,893 - DEBUG - Entering download()
2025-01-09 02:18:42,893 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:42,893 - DEBUG -  Entering history()
2025-01-09 02:18:42,894 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GILD', 1, 0])
2025-01-09 02:18:42,894 - DEBUG -   Entering history()
2025-01-09 02:18:42,894 - DEBUG - GILD: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:42,895 - DEBUG -    Entering get()
2025-01-09 02:18:42,895 - DEBUG -     Entering _make_request()
2025-01-09 02:18:42,895 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GILD
2025-01-09 02:18:42,895 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:42,895 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:42,895 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:42,895 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:42,895 - DEBUG - reusing cookie
2025-01-09 02:18:42,895 - DEBUG - reusing crumb
2025-01-09 02:18:42,895 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:42,895 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:43,054 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GILD?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1199
2025-01-09 02:18:43,054 - DEBUG - response code=200
2025-01-09 02:18:43,054 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:43,054 - DEBUG -    Exiting get()
2025-01-09 02:18:43,056 - DEBUG - GILD: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:43,057 - DEBUG - GILD: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:43,060 - DEBUG - GILD: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:43,066 - DEBUG - GILD: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:43,066 - DEBUG -   Exiting history()
2025-01-09 02:18:43,066 - DEBUG -  Exiting history()
2025-01-09 02:18:43,069 - DEBUG - Exiting download()
2025-01-09 02:18:43,210 - ERROR - Error writing data for GILD to DB: schema "np" does not exist
LINE 4:             VALUES ('GILD','2020-01-01'::date,np.float64(53....
                                                      ^

2025-01-09 02:18:43,211 - DEBUG - Entering download()
2025-01-09 02:18:43,211 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:43,211 - DEBUG -  Entering history()
2025-01-09 02:18:43,211 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GPN', 1, 0])
2025-01-09 02:18:43,211 - DEBUG -   Entering history()
2025-01-09 02:18:43,212 - DEBUG - GPN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:43,212 - DEBUG -    Entering get()
2025-01-09 02:18:43,213 - DEBUG -     Entering _make_request()
2025-01-09 02:18:43,213 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GPN
2025-01-09 02:18:43,213 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:43,213 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:43,213 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:43,213 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:43,213 - DEBUG - reusing cookie
2025-01-09 02:18:43,213 - DEBUG - reusing crumb
2025-01-09 02:18:43,213 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:43,213 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:43,397 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GPN?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1201
2025-01-09 02:18:43,397 - DEBUG - response code=200
2025-01-09 02:18:43,398 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:43,398 - DEBUG -    Exiting get()
2025-01-09 02:18:43,399 - DEBUG - GPN: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:43,400 - DEBUG - GPN: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:43,403 - DEBUG - GPN: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:43,407 - DEBUG - GPN: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:43,407 - DEBUG -   Exiting history()
2025-01-09 02:18:43,407 - DEBUG -  Exiting history()
2025-01-09 02:18:43,409 - DEBUG - Exiting download()
2025-01-09 02:18:43,677 - ERROR - Error writing data for GPN to DB: schema "np" does not exist
LINE 4:             VALUES ('GPN','2020-01-01'::date,np.float64(177....
                                                     ^

2025-01-09 02:18:43,677 - DEBUG - Entering download()
2025-01-09 02:18:43,678 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:43,678 - DEBUG -  Entering history()
2025-01-09 02:18:43,678 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GL', 1, 0])
2025-01-09 02:18:43,678 - DEBUG -   Entering history()
2025-01-09 02:18:43,679 - DEBUG - GL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:43,679 - DEBUG -    Entering get()
2025-01-09 02:18:43,679 - DEBUG -     Entering _make_request()
2025-01-09 02:18:43,680 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GL
2025-01-09 02:18:43,680 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:43,680 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:43,680 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:43,680 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:43,680 - DEBUG - reusing cookie
2025-01-09 02:18:43,680 - DEBUG - reusing crumb
2025-01-09 02:18:43,680 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:43,680 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:43,890 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GL?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1266
2025-01-09 02:18:43,891 - DEBUG - response code=200
2025-01-09 02:18:43,891 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:43,891 - DEBUG -    Exiting get()
2025-01-09 02:18:43,892 - DEBUG - GL: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:43,894 - DEBUG - GL: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:43,898 - DEBUG - GL: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:43,905 - DEBUG - GL: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:43,905 - DEBUG -   Exiting history()
2025-01-09 02:18:43,906 - DEBUG -  Exiting history()
2025-01-09 02:18:43,908 - DEBUG - Exiting download()
2025-01-09 02:18:44,048 - ERROR - Error writing data for GL to DB: schema "np" does not exist
LINE 4:             VALUES ('GL','2020-01-01'::date,np.float64(100.6...
                                                    ^

2025-01-09 02:18:44,048 - DEBUG - Entering download()
2025-01-09 02:18:44,049 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:44,049 - DEBUG -  Entering history()
2025-01-09 02:18:44,049 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GDDY', 1, 0])
2025-01-09 02:18:44,049 - DEBUG -   Entering history()
2025-01-09 02:18:44,050 - DEBUG - GDDY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:44,050 - DEBUG -    Entering get()
2025-01-09 02:18:44,050 - DEBUG -     Entering _make_request()
2025-01-09 02:18:44,051 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GDDY
2025-01-09 02:18:44,051 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:44,051 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:44,051 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:44,051 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:44,051 - DEBUG - reusing cookie
2025-01-09 02:18:44,051 - DEBUG - reusing crumb
2025-01-09 02:18:44,051 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:44,051 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:44,214 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GDDY?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1182
2025-01-09 02:18:44,214 - DEBUG - response code=200
2025-01-09 02:18:44,214 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:44,215 - DEBUG -    Exiting get()
2025-01-09 02:18:44,216 - DEBUG - GDDY: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:44,217 - DEBUG - GDDY: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:44,220 - DEBUG - GDDY: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:44,226 - DEBUG - GDDY: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:44,226 - DEBUG -   Exiting history()
2025-01-09 02:18:44,226 - DEBUG -  Exiting history()
2025-01-09 02:18:44,228 - DEBUG - Exiting download()
2025-01-09 02:18:44,481 - ERROR - Error writing data for GDDY to DB: schema "np" does not exist
LINE 4:             VALUES ('GDDY','2020-01-01'::date,np.float64(68....
                                                      ^

2025-01-09 02:18:44,482 - DEBUG - Entering download()
2025-01-09 02:18:44,482 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:44,482 - DEBUG -  Entering history()
2025-01-09 02:18:44,482 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GS', 1, 0])
2025-01-09 02:18:44,483 - DEBUG -   Entering history()
2025-01-09 02:18:44,483 - DEBUG - GS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:44,484 - DEBUG -    Entering get()
2025-01-09 02:18:44,484 - DEBUG -     Entering _make_request()
2025-01-09 02:18:44,484 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GS
2025-01-09 02:18:44,484 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:44,484 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:44,484 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:44,484 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:44,484 - DEBUG - reusing cookie
2025-01-09 02:18:44,484 - DEBUG - reusing crumb
2025-01-09 02:18:44,484 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:44,484 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:44,685 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GS?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1212
2025-01-09 02:18:44,685 - DEBUG - response code=200
2025-01-09 02:18:44,685 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:44,685 - DEBUG -    Exiting get()
2025-01-09 02:18:44,687 - DEBUG - GS: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:44,688 - DEBUG - GS: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:44,692 - DEBUG - GS: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:44,698 - DEBUG - GS: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:44,699 - DEBUG -   Exiting history()
2025-01-09 02:18:44,699 - DEBUG -  Exiting history()
2025-01-09 02:18:44,701 - DEBUG - Exiting download()
2025-01-09 02:18:44,857 - ERROR - Error writing data for GS to DB: schema "np" does not exist
LINE 4:             VALUES ('GS','2020-01-01'::date,np.float64(204.3...
                                                    ^

2025-01-09 02:18:44,858 - DEBUG - Entering download()
2025-01-09 02:18:44,858 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:44,858 - DEBUG -  Entering history()
2025-01-09 02:18:44,858 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HAL', 1, 0])
2025-01-09 02:18:44,859 - DEBUG -   Entering history()
2025-01-09 02:18:44,859 - DEBUG - HAL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:44,860 - DEBUG -    Entering get()
2025-01-09 02:18:44,860 - DEBUG -     Entering _make_request()
2025-01-09 02:18:44,860 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HAL
2025-01-09 02:18:44,860 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:44,860 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:44,860 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:44,860 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:44,860 - DEBUG - reusing cookie
2025-01-09 02:18:44,860 - DEBUG - reusing crumb
2025-01-09 02:18:44,860 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:44,860 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:45,087 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HAL?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1197
2025-01-09 02:18:45,087 - DEBUG - response code=200
2025-01-09 02:18:45,087 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:45,087 - DEBUG -    Exiting get()
2025-01-09 02:18:45,089 - DEBUG - HAL: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:45,090 - DEBUG - HAL: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:45,095 - DEBUG - HAL: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:45,101 - DEBUG - HAL: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:45,101 - DEBUG -   Exiting history()
2025-01-09 02:18:45,101 - DEBUG -  Exiting history()
2025-01-09 02:18:45,103 - DEBUG - Exiting download()
2025-01-09 02:18:45,366 - ERROR - Error writing data for HAL to DB: schema "np" does not exist
LINE 4:             VALUES ('HAL','2020-01-01'::date,np.float64(22.7...
                                                     ^

2025-01-09 02:18:45,366 - DEBUG - Entering download()
2025-01-09 02:18:45,366 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:45,366 - DEBUG -  Entering history()
2025-01-09 02:18:45,367 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HIG', 1, 0])
2025-01-09 02:18:45,367 - DEBUG -   Entering history()
2025-01-09 02:18:45,367 - DEBUG - HIG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:45,368 - DEBUG -    Entering get()
2025-01-09 02:18:45,368 - DEBUG -     Entering _make_request()
2025-01-09 02:18:45,368 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HIG
2025-01-09 02:18:45,368 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:45,368 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:45,368 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:45,368 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:45,368 - DEBUG - reusing cookie
2025-01-09 02:18:45,368 - DEBUG - reusing crumb
2025-01-09 02:18:45,368 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:45,368 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:45,555 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HIG?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1232
2025-01-09 02:18:45,555 - DEBUG - response code=200
2025-01-09 02:18:45,555 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:45,555 - DEBUG -    Exiting get()
2025-01-09 02:18:45,557 - DEBUG - HIG: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:45,558 - DEBUG - HIG: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:45,562 - DEBUG - HIG: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:45,568 - DEBUG - HIG: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:45,569 - DEBUG -   Exiting history()
2025-01-09 02:18:45,569 - DEBUG -  Exiting history()
2025-01-09 02:18:45,571 - DEBUG - Exiting download()
2025-01-09 02:18:45,808 - ERROR - Error writing data for HIG to DB: schema "np" does not exist
LINE 4:             VALUES ('HIG','2020-01-01'::date,np.float64(54.2...
                                                     ^

2025-01-09 02:18:45,808 - DEBUG - Entering download()
2025-01-09 02:18:45,808 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:45,809 - DEBUG -  Entering history()
2025-01-09 02:18:45,809 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HAS', 1, 0])
2025-01-09 02:18:45,809 - DEBUG -   Entering history()
2025-01-09 02:18:45,810 - DEBUG - HAS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:45,810 - DEBUG -    Entering get()
2025-01-09 02:18:45,810 - DEBUG -     Entering _make_request()
2025-01-09 02:18:45,810 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HAS
2025-01-09 02:18:45,810 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:45,811 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:45,811 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:45,811 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:45,811 - DEBUG - reusing cookie
2025-01-09 02:18:45,811 - DEBUG - reusing crumb
2025-01-09 02:18:45,811 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:45,811 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:46,005 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HAS?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1187
2025-01-09 02:18:46,005 - DEBUG - response code=200
2025-01-09 02:18:46,005 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:46,005 - DEBUG -    Exiting get()
2025-01-09 02:18:46,007 - DEBUG - HAS: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:46,008 - DEBUG - HAS: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:46,011 - DEBUG - HAS: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:46,017 - DEBUG - HAS: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:46,017 - DEBUG -   Exiting history()
2025-01-09 02:18:46,017 - DEBUG -  Exiting history()
2025-01-09 02:18:46,019 - DEBUG - Exiting download()
2025-01-09 02:18:46,169 - ERROR - Error writing data for HAS to DB: schema "np" does not exist
LINE 4:             VALUES ('HAS','2020-01-01'::date,np.float64(87.4...
                                                     ^

2025-01-09 02:18:46,170 - DEBUG - Entering download()
2025-01-09 02:18:46,170 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:46,170 - DEBUG -  Entering history()
2025-01-09 02:18:46,170 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HCA', 1, 0])
2025-01-09 02:18:46,171 - DEBUG -   Entering history()
2025-01-09 02:18:46,171 - DEBUG - HCA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:46,172 - DEBUG -    Entering get()
2025-01-09 02:18:46,172 - DEBUG -     Entering _make_request()
2025-01-09 02:18:46,172 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HCA
2025-01-09 02:18:46,172 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:46,172 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:46,172 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:46,172 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:46,172 - DEBUG - reusing cookie
2025-01-09 02:18:46,172 - DEBUG - reusing crumb
2025-01-09 02:18:46,172 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:46,172 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:46,362 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HCA?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1204
2025-01-09 02:18:46,362 - DEBUG - response code=200
2025-01-09 02:18:46,363 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:46,363 - DEBUG -    Exiting get()
2025-01-09 02:18:46,364 - DEBUG - HCA: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:46,365 - DEBUG - HCA: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:46,369 - DEBUG - HCA: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:46,374 - DEBUG - HCA: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:46,374 - DEBUG -   Exiting history()
2025-01-09 02:18:46,375 - DEBUG -  Exiting history()
2025-01-09 02:18:46,377 - DEBUG - Exiting download()
2025-01-09 02:18:46,529 - DEBUG - Entering download()
2025-01-09 02:18:46,529 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:46,530 - DEBUG -  Entering history()
2025-01-09 02:18:46,530 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DOC', 1, 0])
2025-01-09 02:18:46,530 - DEBUG -   Entering history()
2025-01-09 02:18:46,531 - DEBUG - DOC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:46,531 - DEBUG -    Entering get()
2025-01-09 02:18:46,531 - DEBUG -     Entering _make_request()
2025-01-09 02:18:46,531 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DOC
2025-01-09 02:18:46,531 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:46,531 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:46,531 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:46,531 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:46,531 - DEBUG - reusing cookie
2025-01-09 02:18:46,531 - DEBUG - reusing crumb
2025-01-09 02:18:46,531 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:46,531 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:46,715 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DOC?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1213
2025-01-09 02:18:46,715 - DEBUG - response code=200
2025-01-09 02:18:46,716 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:46,716 - DEBUG -    Exiting get()
2025-01-09 02:18:46,718 - DEBUG - DOC: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:46,719 - DEBUG - DOC: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:46,724 - DEBUG - DOC: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:46,732 - DEBUG - DOC: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:46,732 - DEBUG -   Exiting history()
2025-01-09 02:18:46,732 - DEBUG -  Exiting history()
2025-01-09 02:18:46,735 - DEBUG - Exiting download()
2025-01-09 02:18:46,874 - ERROR - Error writing data for DOC to DB: schema "np" does not exist
LINE 4:             VALUES ('DOC','2020-01-01'::date,np.float64(27.0...
                                                     ^

2025-01-09 02:18:46,874 - DEBUG - Entering download()
2025-01-09 02:18:46,874 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:46,875 - DEBUG -  Entering history()
2025-01-09 02:18:46,875 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HSIC', 1, 0])
2025-01-09 02:18:46,875 - DEBUG -   Entering history()
2025-01-09 02:18:46,876 - DEBUG - HSIC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:46,876 - DEBUG -    Entering get()
2025-01-09 02:18:46,876 - DEBUG -     Entering _make_request()
2025-01-09 02:18:46,876 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HSIC
2025-01-09 02:18:46,876 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:46,877 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:46,877 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:46,877 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:46,877 - DEBUG - reusing cookie
2025-01-09 02:18:46,877 - DEBUG - reusing crumb
2025-01-09 02:18:46,877 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:46,877 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:47,051 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HSIC?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1182
2025-01-09 02:18:47,052 - DEBUG - response code=200
2025-01-09 02:18:47,052 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:47,052 - DEBUG -    Exiting get()
2025-01-09 02:18:47,053 - DEBUG - HSIC: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:47,054 - DEBUG - HSIC: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:47,059 - DEBUG - HSIC: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:47,067 - DEBUG - HSIC: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:47,067 - DEBUG -   Exiting history()
2025-01-09 02:18:47,067 - DEBUG -  Exiting history()
2025-01-09 02:18:47,070 - DEBUG - Exiting download()
2025-01-09 02:18:47,222 - ERROR - Error writing data for HSIC to DB: schema "np" does not exist
LINE 4:             VALUES ('HSIC','2020-01-01'::date,np.float64(67....
                                                      ^

2025-01-09 02:18:47,222 - DEBUG - Entering download()
2025-01-09 02:18:47,223 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:47,223 - DEBUG -  Entering history()
2025-01-09 02:18:47,223 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HSY', 1, 0])
2025-01-09 02:18:47,223 - DEBUG -   Entering history()
2025-01-09 02:18:47,224 - DEBUG - HSY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:47,224 - DEBUG -    Entering get()
2025-01-09 02:18:47,224 - DEBUG -     Entering _make_request()
2025-01-09 02:18:47,224 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HSY
2025-01-09 02:18:47,225 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:47,225 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:47,225 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:47,225 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:47,225 - DEBUG - reusing cookie
2025-01-09 02:18:47,225 - DEBUG - reusing crumb
2025-01-09 02:18:47,225 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:47,225 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:47,425 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HSY?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1200
2025-01-09 02:18:47,427 - DEBUG - response code=200
2025-01-09 02:18:47,427 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:47,427 - DEBUG -    Exiting get()
2025-01-09 02:18:47,428 - DEBUG - HSY: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:47,429 - DEBUG - HSY: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:47,433 - DEBUG - HSY: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:47,440 - DEBUG - HSY: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:47,440 - DEBUG -   Exiting history()
2025-01-09 02:18:47,441 - DEBUG -  Exiting history()
2025-01-09 02:18:47,446 - DEBUG - Exiting download()
2025-01-09 02:18:47,499 - DEBUG - Entering download()
2025-01-09 02:18:47,499 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:47,499 - DEBUG -  Entering history()
2025-01-09 02:18:47,499 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HES', 1, 0])
2025-01-09 02:18:47,500 - DEBUG -   Entering history()
2025-01-09 02:18:47,500 - DEBUG - HES: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:47,500 - DEBUG -    Entering get()
2025-01-09 02:18:47,501 - DEBUG -     Entering _make_request()
2025-01-09 02:18:47,501 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HES
2025-01-09 02:18:47,501 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:47,501 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:47,501 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:47,501 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:47,501 - DEBUG - reusing cookie
2025-01-09 02:18:47,501 - DEBUG - reusing crumb
2025-01-09 02:18:47,501 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:47,501 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:47,712 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HES?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1194
2025-01-09 02:18:47,712 - DEBUG - response code=200
2025-01-09 02:18:47,712 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:47,712 - DEBUG -    Exiting get()
2025-01-09 02:18:47,714 - DEBUG - HES: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:47,716 - DEBUG - HES: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:47,720 - DEBUG - HES: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:47,725 - DEBUG - HES: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:47,726 - DEBUG -   Exiting history()
2025-01-09 02:18:47,726 - DEBUG -  Exiting history()
2025-01-09 02:18:47,728 - DEBUG - Exiting download()
2025-01-09 02:18:47,868 - ERROR - Error writing data for HES to DB: schema "np" does not exist
LINE 4:             VALUES ('HES','2020-01-01'::date,np.float64(62.6...
                                                     ^

2025-01-09 02:18:47,869 - DEBUG - Entering download()
2025-01-09 02:18:47,869 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:47,869 - DEBUG -  Entering history()
2025-01-09 02:18:47,869 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HPE', 1, 0])
2025-01-09 02:18:47,869 - DEBUG -   Entering history()
2025-01-09 02:18:47,870 - DEBUG - HPE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:47,870 - DEBUG -    Entering get()
2025-01-09 02:18:47,871 - DEBUG -     Entering _make_request()
2025-01-09 02:18:47,871 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HPE
2025-01-09 02:18:47,871 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:47,871 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:47,871 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:47,871 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:47,871 - DEBUG - reusing cookie
2025-01-09 02:18:47,871 - DEBUG - reusing crumb
2025-01-09 02:18:47,871 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:47,871 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:48,040 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HPE?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1215
2025-01-09 02:18:48,040 - DEBUG - response code=200
2025-01-09 02:18:48,040 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:48,040 - DEBUG -    Exiting get()
2025-01-09 02:18:48,042 - DEBUG - HPE: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:48,043 - DEBUG - HPE: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:48,052 - DEBUG - HPE: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:48,061 - DEBUG - HPE: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:48,061 - DEBUG -   Exiting history()
2025-01-09 02:18:48,061 - DEBUG -  Exiting history()
2025-01-09 02:18:48,069 - DEBUG - Exiting download()
2025-01-09 02:18:48,226 - ERROR - Error writing data for HPE to DB: schema "np" does not exist
LINE 4:             VALUES ('HPE','2020-01-01'::date,np.float64(13.5...
                                                     ^

2025-01-09 02:18:48,226 - DEBUG - Entering download()
2025-01-09 02:18:48,226 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:48,227 - DEBUG -  Entering history()
2025-01-09 02:18:48,227 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HLT', 1, 0])
2025-01-09 02:18:48,227 - DEBUG -   Entering history()
2025-01-09 02:18:48,228 - DEBUG - HLT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:48,228 - DEBUG -    Entering get()
2025-01-09 02:18:48,228 - DEBUG -     Entering _make_request()
2025-01-09 02:18:48,229 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HLT
2025-01-09 02:18:48,229 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:48,229 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:48,229 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:48,229 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:48,229 - DEBUG - reusing cookie
2025-01-09 02:18:48,229 - DEBUG - reusing crumb
2025-01-09 02:18:48,229 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:48,229 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:48,397 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HLT?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1224
2025-01-09 02:18:48,398 - DEBUG - response code=200
2025-01-09 02:18:48,398 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:48,398 - DEBUG -    Exiting get()
2025-01-09 02:18:48,399 - DEBUG - HLT: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:48,400 - DEBUG - HLT: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:48,403 - DEBUG - HLT: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:48,408 - DEBUG - HLT: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:48,409 - DEBUG -   Exiting history()
2025-01-09 02:18:48,409 - DEBUG -  Exiting history()
2025-01-09 02:18:48,411 - DEBUG - Exiting download()
2025-01-09 02:18:48,524 - ERROR - Error writing data for HLT to DB: schema "np" does not exist
LINE 4:             VALUES ('HLT','2020-01-01'::date,np.float64(109....
                                                     ^

2025-01-09 02:18:48,525 - DEBUG - Entering download()
2025-01-09 02:18:48,525 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:48,525 - DEBUG -  Entering history()
2025-01-09 02:18:48,525 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HOLX', 1, 0])
2025-01-09 02:18:48,526 - DEBUG -   Entering history()
2025-01-09 02:18:48,526 - DEBUG - HOLX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:48,526 - DEBUG -    Entering get()
2025-01-09 02:18:48,526 - DEBUG -     Entering _make_request()
2025-01-09 02:18:48,526 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HOLX
2025-01-09 02:18:48,526 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:48,526 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:48,526 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:48,527 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:48,527 - DEBUG - reusing cookie
2025-01-09 02:18:48,527 - DEBUG - reusing crumb
2025-01-09 02:18:48,527 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:48,527 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:48,675 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HOLX?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1188
2025-01-09 02:18:48,675 - DEBUG - response code=200
2025-01-09 02:18:48,675 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:48,675 - DEBUG -    Exiting get()
2025-01-09 02:18:48,676 - DEBUG - HOLX: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:48,677 - DEBUG - HOLX: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:48,681 - DEBUG - HOLX: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:48,686 - DEBUG - HOLX: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:48,686 - DEBUG -   Exiting history()
2025-01-09 02:18:48,686 - DEBUG -  Exiting history()
2025-01-09 02:18:48,688 - DEBUG - Exiting download()
2025-01-09 02:18:48,806 - ERROR - Error writing data for HOLX to DB: schema "np" does not exist
LINE 4:             VALUES ('HOLX','2020-01-01'::date,np.float64(52....
                                                      ^

2025-01-09 02:18:48,807 - DEBUG - Entering download()
2025-01-09 02:18:48,807 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:48,807 - DEBUG -  Entering history()
2025-01-09 02:18:48,807 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HD', 1, 0])
2025-01-09 02:18:48,807 - DEBUG -   Entering history()
2025-01-09 02:18:48,808 - DEBUG - HD: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:48,808 - DEBUG -    Entering get()
2025-01-09 02:18:48,808 - DEBUG -     Entering _make_request()
2025-01-09 02:18:48,808 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HD
2025-01-09 02:18:48,808 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:48,809 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:48,809 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:48,809 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:48,809 - DEBUG - reusing cookie
2025-01-09 02:18:48,809 - DEBUG - reusing crumb
2025-01-09 02:18:48,809 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:48,809 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:49,007 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HD?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1204
2025-01-09 02:18:49,007 - DEBUG - response code=200
2025-01-09 02:18:49,007 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:49,007 - DEBUG -    Exiting get()
2025-01-09 02:18:49,008 - DEBUG - HD: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:49,009 - DEBUG - HD: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:49,012 - DEBUG - HD: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:49,018 - DEBUG - HD: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:49,019 - DEBUG -   Exiting history()
2025-01-09 02:18:49,019 - DEBUG -  Exiting history()
2025-01-09 02:18:49,021 - DEBUG - Exiting download()
2025-01-09 02:18:49,133 - ERROR - Error writing data for HD to DB: schema "np" does not exist
LINE 4:             VALUES ('HD','2020-01-01'::date,np.float64(194.2...
                                                    ^

2025-01-09 02:18:49,133 - DEBUG - Entering download()
2025-01-09 02:18:49,133 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:49,133 - DEBUG -  Entering history()
2025-01-09 02:18:49,134 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HON', 1, 0])
2025-01-09 02:18:49,134 - DEBUG -   Entering history()
2025-01-09 02:18:49,135 - DEBUG - HON: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:49,135 - DEBUG -    Entering get()
2025-01-09 02:18:49,135 - DEBUG -     Entering _make_request()
2025-01-09 02:18:49,135 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HON
2025-01-09 02:18:49,135 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:49,135 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:49,135 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:49,135 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:49,135 - DEBUG - reusing cookie
2025-01-09 02:18:49,135 - DEBUG - reusing crumb
2025-01-09 02:18:49,135 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:49,135 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:49,347 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HON?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1210
2025-01-09 02:18:49,347 - DEBUG - response code=200
2025-01-09 02:18:49,347 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:49,347 - DEBUG -    Exiting get()
2025-01-09 02:18:49,349 - DEBUG - HON: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:49,350 - DEBUG - HON: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:49,355 - DEBUG - HON: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:49,361 - DEBUG - HON: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:49,361 - DEBUG -   Exiting history()
2025-01-09 02:18:49,361 - DEBUG -  Exiting history()
2025-01-09 02:18:49,363 - DEBUG - Exiting download()
2025-01-09 02:18:49,485 - ERROR - Error writing data for HON to DB: schema "np" does not exist
LINE 4:             VALUES ('HON','2020-01-01'::date,np.float64(160....
                                                     ^

2025-01-09 02:18:49,485 - DEBUG - Entering download()
2025-01-09 02:18:49,485 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:49,485 - DEBUG -  Entering history()
2025-01-09 02:18:49,486 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HRL', 1, 0])
2025-01-09 02:18:49,486 - DEBUG -   Entering history()
2025-01-09 02:18:49,487 - DEBUG - HRL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:49,487 - DEBUG -    Entering get()
2025-01-09 02:18:49,487 - DEBUG -     Entering _make_request()
2025-01-09 02:18:49,487 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HRL
2025-01-09 02:18:49,487 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:49,487 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:49,487 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:49,487 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:49,487 - DEBUG - reusing cookie
2025-01-09 02:18:49,487 - DEBUG - reusing crumb
2025-01-09 02:18:49,487 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:49,487 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:49,748 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HRL?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1206
2025-01-09 02:18:49,748 - DEBUG - response code=200
2025-01-09 02:18:49,748 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:49,748 - DEBUG -    Exiting get()
2025-01-09 02:18:49,749 - DEBUG - HRL: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:49,750 - DEBUG - HRL: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:49,754 - DEBUG - HRL: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:49,759 - DEBUG - HRL: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:49,759 - DEBUG -   Exiting history()
2025-01-09 02:18:49,759 - DEBUG -  Exiting history()
2025-01-09 02:18:49,761 - DEBUG - Exiting download()
2025-01-09 02:18:49,806 - DEBUG - Entering download()
2025-01-09 02:18:49,806 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:49,807 - DEBUG -  Entering history()
2025-01-09 02:18:49,807 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HST', 1, 0])
2025-01-09 02:18:49,807 - DEBUG -   Entering history()
2025-01-09 02:18:49,808 - DEBUG - HST: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:49,808 - DEBUG -    Entering get()
2025-01-09 02:18:49,808 - DEBUG -     Entering _make_request()
2025-01-09 02:18:49,808 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HST
2025-01-09 02:18:49,808 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:49,808 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:49,808 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:49,808 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:49,808 - DEBUG - reusing cookie
2025-01-09 02:18:49,808 - DEBUG - reusing crumb
2025-01-09 02:18:49,808 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:49,808 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:50,033 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HST?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1216
2025-01-09 02:18:50,033 - DEBUG - response code=200
2025-01-09 02:18:50,033 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:50,033 - DEBUG -    Exiting get()
2025-01-09 02:18:50,034 - DEBUG - HST: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:50,035 - DEBUG - HST: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:50,039 - DEBUG - HST: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:50,043 - DEBUG - HST: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:50,044 - DEBUG -   Exiting history()
2025-01-09 02:18:50,044 - DEBUG -  Exiting history()
2025-01-09 02:18:50,046 - DEBUG - Exiting download()
2025-01-09 02:18:50,267 - ERROR - Error writing data for HST to DB: schema "np" does not exist
LINE 4:             VALUES ('HST','2020-01-01'::date,np.float64(16.0...
                                                     ^

2025-01-09 02:18:50,267 - DEBUG - Entering download()
2025-01-09 02:18:50,268 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:50,268 - DEBUG -  Entering history()
2025-01-09 02:18:50,268 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HWM', 1, 0])
2025-01-09 02:18:50,268 - DEBUG -   Entering history()
2025-01-09 02:18:50,269 - DEBUG - HWM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:50,269 - DEBUG -    Entering get()
2025-01-09 02:18:50,269 - DEBUG -     Entering _make_request()
2025-01-09 02:18:50,269 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HWM
2025-01-09 02:18:50,269 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:50,269 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:50,269 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:50,269 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:50,269 - DEBUG - reusing cookie
2025-01-09 02:18:50,269 - DEBUG - reusing crumb
2025-01-09 02:18:50,269 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:50,270 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:50,457 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HWM?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1206
2025-01-09 02:18:50,458 - DEBUG - response code=200
2025-01-09 02:18:50,458 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:50,458 - DEBUG -    Exiting get()
2025-01-09 02:18:50,459 - DEBUG - HWM: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:50,460 - DEBUG - HWM: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:50,463 - DEBUG - HWM: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:50,468 - DEBUG - HWM: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:50,469 - DEBUG -   Exiting history()
2025-01-09 02:18:50,469 - DEBUG -  Exiting history()
2025-01-09 02:18:50,471 - DEBUG - Exiting download()
2025-01-09 02:18:50,772 - ERROR - Error writing data for HWM to DB: schema "np" does not exist
LINE 4:             VALUES ('HWM','2020-01-01'::date,np.float64(30.5...
                                                     ^

2025-01-09 02:18:50,773 - DEBUG - Entering download()
2025-01-09 02:18:50,773 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:50,773 - DEBUG -  Entering history()
2025-01-09 02:18:50,773 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HPQ', 1, 0])
2025-01-09 02:18:50,773 - DEBUG -   Entering history()
2025-01-09 02:18:50,774 - DEBUG - HPQ: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:50,774 - DEBUG -    Entering get()
2025-01-09 02:18:50,774 - DEBUG -     Entering _make_request()
2025-01-09 02:18:50,774 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HPQ
2025-01-09 02:18:50,774 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:50,774 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:50,774 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:50,774 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:50,775 - DEBUG - reusing cookie
2025-01-09 02:18:50,775 - DEBUG - reusing crumb
2025-01-09 02:18:50,775 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:50,775 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:51,018 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HPQ?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1174
2025-01-09 02:18:51,019 - DEBUG - response code=200
2025-01-09 02:18:51,019 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:51,019 - DEBUG -    Exiting get()
2025-01-09 02:18:51,020 - DEBUG - HPQ: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:51,021 - DEBUG - HPQ: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:51,024 - DEBUG - HPQ: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:51,030 - DEBUG - HPQ: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:51,030 - DEBUG -   Exiting history()
2025-01-09 02:18:51,030 - DEBUG -  Exiting history()
2025-01-09 02:18:51,033 - DEBUG - Exiting download()
2025-01-09 02:18:51,078 - DEBUG - Entering download()
2025-01-09 02:18:51,078 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:51,078 - DEBUG -  Entering history()
2025-01-09 02:18:51,078 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HUBB', 1, 0])
2025-01-09 02:18:51,078 - DEBUG -   Entering history()
2025-01-09 02:18:51,079 - DEBUG - HUBB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:51,079 - DEBUG -    Entering get()
2025-01-09 02:18:51,079 - DEBUG -     Entering _make_request()
2025-01-09 02:18:51,079 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HUBB
2025-01-09 02:18:51,079 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:51,079 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:51,079 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:51,079 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:51,079 - DEBUG - reusing cookie
2025-01-09 02:18:51,079 - DEBUG - reusing crumb
2025-01-09 02:18:51,079 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:51,080 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:51,268 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HUBB?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1183
2025-01-09 02:18:51,268 - DEBUG - response code=200
2025-01-09 02:18:51,268 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:51,268 - DEBUG -    Exiting get()
2025-01-09 02:18:51,269 - DEBUG - HUBB: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:51,270 - DEBUG - HUBB: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:51,273 - DEBUG - HUBB: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:51,278 - DEBUG - HUBB: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:51,278 - DEBUG -   Exiting history()
2025-01-09 02:18:51,279 - DEBUG -  Exiting history()
2025-01-09 02:18:51,281 - DEBUG - Exiting download()
2025-01-09 02:18:51,395 - ERROR - Error writing data for HUBB to DB: schema "np" does not exist
LINE 4:             VALUES ('HUBB','2020-01-01'::date,np.float64(134...
                                                      ^

2025-01-09 02:18:51,396 - DEBUG - Entering download()
2025-01-09 02:18:51,396 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:51,396 - DEBUG -  Entering history()
2025-01-09 02:18:51,396 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HUM', 1, 0])
2025-01-09 02:18:51,397 - DEBUG -   Entering history()
2025-01-09 02:18:51,397 - DEBUG - HUM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:51,397 - DEBUG -    Entering get()
2025-01-09 02:18:51,397 - DEBUG -     Entering _make_request()
2025-01-09 02:18:51,397 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HUM
2025-01-09 02:18:51,397 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:51,398 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:51,398 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:51,398 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:51,398 - DEBUG - reusing cookie
2025-01-09 02:18:51,398 - DEBUG - reusing crumb
2025-01-09 02:18:51,398 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:51,398 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:51,622 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HUM?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1180
2025-01-09 02:18:51,622 - DEBUG - response code=200
2025-01-09 02:18:51,622 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:51,622 - DEBUG -    Exiting get()
2025-01-09 02:18:51,623 - DEBUG - HUM: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:51,624 - DEBUG - HUM: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:51,627 - DEBUG - HUM: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:51,632 - DEBUG - HUM: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:51,632 - DEBUG -   Exiting history()
2025-01-09 02:18:51,632 - DEBUG -  Exiting history()
2025-01-09 02:18:51,634 - DEBUG - Exiting download()
2025-01-09 02:18:51,745 - ERROR - Error writing data for HUM to DB: schema "np" does not exist
LINE 4:             VALUES ('HUM','2020-01-01'::date,np.float64(353....
                                                     ^

2025-01-09 02:18:51,745 - DEBUG - Entering download()
2025-01-09 02:18:51,745 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:51,745 - DEBUG -  Entering history()
2025-01-09 02:18:51,746 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HBAN', 1, 0])
2025-01-09 02:18:51,746 - DEBUG -   Entering history()
2025-01-09 02:18:51,746 - DEBUG - HBAN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:51,747 - DEBUG -    Entering get()
2025-01-09 02:18:51,747 - DEBUG -     Entering _make_request()
2025-01-09 02:18:51,747 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HBAN
2025-01-09 02:18:51,747 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:51,747 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:51,747 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:51,747 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:51,747 - DEBUG - reusing cookie
2025-01-09 02:18:51,747 - DEBUG - reusing crumb
2025-01-09 02:18:51,747 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:51,747 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:51,967 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HBAN?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1230
2025-01-09 02:18:51,967 - DEBUG - response code=200
2025-01-09 02:18:51,967 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:51,967 - DEBUG -    Exiting get()
2025-01-09 02:18:51,968 - DEBUG - HBAN: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:51,969 - DEBUG - HBAN: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:51,973 - DEBUG - HBAN: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:51,979 - DEBUG - HBAN: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:51,979 - DEBUG -   Exiting history()
2025-01-09 02:18:51,979 - DEBUG -  Exiting history()
2025-01-09 02:18:51,982 - DEBUG - Exiting download()
2025-01-09 02:18:52,097 - ERROR - Error writing data for HBAN to DB: schema "np" does not exist
LINE 4:             VALUES ('HBAN','2020-01-01'::date,np.float64(11....
                                                      ^

2025-01-09 02:18:52,098 - DEBUG - Entering download()
2025-01-09 02:18:52,098 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:52,098 - DEBUG -  Entering history()
2025-01-09 02:18:52,098 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['HII', 1, 0])
2025-01-09 02:18:52,098 - DEBUG -   Entering history()
2025-01-09 02:18:52,099 - DEBUG - HII: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:52,099 - DEBUG -    Entering get()
2025-01-09 02:18:52,099 - DEBUG -     Entering _make_request()
2025-01-09 02:18:52,099 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/HII
2025-01-09 02:18:52,099 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:52,099 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:52,099 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:52,099 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:52,099 - DEBUG - reusing cookie
2025-01-09 02:18:52,099 - DEBUG - reusing crumb
2025-01-09 02:18:52,099 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:52,100 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:52,267 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/HII?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1217
2025-01-09 02:18:52,267 - DEBUG - response code=200
2025-01-09 02:18:52,267 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:52,267 - DEBUG -    Exiting get()
2025-01-09 02:18:52,268 - DEBUG - HII: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:52,269 - DEBUG - HII: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:52,273 - DEBUG - HII: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:52,278 - DEBUG - HII: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:52,278 - DEBUG -   Exiting history()
2025-01-09 02:18:52,279 - DEBUG -  Exiting history()
2025-01-09 02:18:52,281 - DEBUG - Exiting download()
2025-01-09 02:18:52,394 - ERROR - Error writing data for HII to DB: schema "np" does not exist
LINE 4:             VALUES ('HII','2020-01-01'::date,np.float64(225....
                                                     ^

2025-01-09 02:18:52,395 - DEBUG - Entering download()
2025-01-09 02:18:52,395 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:52,395 - DEBUG -  Entering history()
2025-01-09 02:18:52,395 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['IBM', 1, 0])
2025-01-09 02:18:52,395 - DEBUG -   Entering history()
2025-01-09 02:18:52,396 - DEBUG - IBM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:52,396 - DEBUG -    Entering get()
2025-01-09 02:18:52,396 - DEBUG -     Entering _make_request()
2025-01-09 02:18:52,396 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/IBM
2025-01-09 02:18:52,396 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:52,396 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:52,396 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:52,396 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:52,396 - DEBUG - reusing cookie
2025-01-09 02:18:52,396 - DEBUG - reusing crumb
2025-01-09 02:18:52,396 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:52,396 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:52,654 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/IBM?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1240
2025-01-09 02:18:52,654 - DEBUG - response code=200
2025-01-09 02:18:52,654 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:52,654 - DEBUG -    Exiting get()
2025-01-09 02:18:52,655 - DEBUG - IBM: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:52,656 - DEBUG - IBM: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:52,659 - DEBUG - IBM: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:52,664 - DEBUG - IBM: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:52,664 - DEBUG -   Exiting history()
2025-01-09 02:18:52,664 - DEBUG -  Exiting history()
2025-01-09 02:18:52,666 - DEBUG - Exiting download()
2025-01-09 02:18:52,880 - ERROR - Error writing data for IBM to DB: schema "np" does not exist
LINE 4:             VALUES ('IBM','2020-01-01'::date,np.float64(102....
                                                     ^

2025-01-09 02:18:52,881 - DEBUG - Entering download()
2025-01-09 02:18:52,881 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:52,881 - DEBUG -  Entering history()
2025-01-09 02:18:52,881 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['IEX', 1, 0])
2025-01-09 02:18:52,882 - DEBUG -   Entering history()
2025-01-09 02:18:52,882 - DEBUG - IEX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:52,882 - DEBUG -    Entering get()
2025-01-09 02:18:52,882 - DEBUG -     Entering _make_request()
2025-01-09 02:18:52,882 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/IEX
2025-01-09 02:18:52,883 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:52,883 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:52,883 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:52,883 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:52,883 - DEBUG - reusing cookie
2025-01-09 02:18:52,883 - DEBUG - reusing crumb
2025-01-09 02:18:52,883 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:52,883 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:53,079 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/IEX?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1194
2025-01-09 02:18:53,079 - DEBUG - response code=200
2025-01-09 02:18:53,079 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:53,079 - DEBUG -    Exiting get()
2025-01-09 02:18:53,080 - DEBUG - IEX: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:53,081 - DEBUG - IEX: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:53,084 - DEBUG - IEX: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:53,089 - DEBUG - IEX: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:53,090 - DEBUG -   Exiting history()
2025-01-09 02:18:53,090 - DEBUG -  Exiting history()
2025-01-09 02:18:53,092 - DEBUG - Exiting download()
2025-01-09 02:18:53,304 - ERROR - Error writing data for IEX to DB: schema "np" does not exist
LINE 4:             VALUES ('IEX','2020-01-01'::date,np.float64(163....
                                                     ^

2025-01-09 02:18:53,305 - DEBUG - Entering download()
2025-01-09 02:18:53,305 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:53,305 - DEBUG -  Entering history()
2025-01-09 02:18:53,305 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['IDXX', 1, 0])
2025-01-09 02:18:53,306 - DEBUG -   Entering history()
2025-01-09 02:18:53,306 - DEBUG - IDXX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:53,306 - DEBUG -    Entering get()
2025-01-09 02:18:53,306 - DEBUG -     Entering _make_request()
2025-01-09 02:18:53,306 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/IDXX
2025-01-09 02:18:53,306 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:53,306 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:53,307 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:53,307 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:53,307 - DEBUG - reusing cookie
2025-01-09 02:18:53,307 - DEBUG - reusing crumb
2025-01-09 02:18:53,307 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:53,307 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:53,465 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/IDXX?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1208
2025-01-09 02:18:53,465 - DEBUG - response code=200
2025-01-09 02:18:53,465 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:53,465 - DEBUG -    Exiting get()
2025-01-09 02:18:53,466 - DEBUG - IDXX: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:53,467 - DEBUG - IDXX: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:53,470 - DEBUG - IDXX: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:53,477 - DEBUG - IDXX: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:53,477 - DEBUG -   Exiting history()
2025-01-09 02:18:53,477 - DEBUG -  Exiting history()
2025-01-09 02:18:53,480 - DEBUG - Exiting download()
2025-01-09 02:18:53,703 - ERROR - Error writing data for IDXX to DB: schema "np" does not exist
LINE 4:             VALUES ('IDXX','2020-01-01'::date,np.float64(261...
                                                      ^

2025-01-09 02:18:53,703 - DEBUG - Entering download()
2025-01-09 02:18:53,703 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:53,703 - DEBUG -  Entering history()
2025-01-09 02:18:53,704 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ITW', 1, 0])
2025-01-09 02:18:53,704 - DEBUG -   Entering history()
2025-01-09 02:18:53,704 - DEBUG - ITW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:53,705 - DEBUG -    Entering get()
2025-01-09 02:18:53,705 - DEBUG -     Entering _make_request()
2025-01-09 02:18:53,705 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ITW
2025-01-09 02:18:53,705 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:53,705 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:53,705 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:53,705 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:53,705 - DEBUG - reusing cookie
2025-01-09 02:18:53,705 - DEBUG - reusing crumb
2025-01-09 02:18:53,705 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:53,705 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:53,910 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ITW?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1212
2025-01-09 02:18:53,910 - DEBUG - response code=200
2025-01-09 02:18:53,910 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:53,910 - DEBUG -    Exiting get()
2025-01-09 02:18:53,911 - DEBUG - ITW: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:53,912 - DEBUG - ITW: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:53,915 - DEBUG - ITW: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:53,921 - DEBUG - ITW: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:53,921 - DEBUG -   Exiting history()
2025-01-09 02:18:53,921 - DEBUG -  Exiting history()
2025-01-09 02:18:53,923 - DEBUG - Exiting download()
2025-01-09 02:18:54,032 - ERROR - Error writing data for ITW to DB: schema "np" does not exist
LINE 4:             VALUES ('ITW','2020-01-01'::date,np.float64(160....
                                                     ^

2025-01-09 02:18:54,032 - DEBUG - Entering download()
2025-01-09 02:18:54,033 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:54,033 - DEBUG -  Entering history()
2025-01-09 02:18:54,033 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['INCY', 1, 0])
2025-01-09 02:18:54,033 - DEBUG -   Entering history()
2025-01-09 02:18:54,034 - DEBUG - INCY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:54,034 - DEBUG -    Entering get()
2025-01-09 02:18:54,034 - DEBUG -     Entering _make_request()
2025-01-09 02:18:54,034 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/INCY
2025-01-09 02:18:54,034 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:54,034 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:54,034 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:54,034 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:54,034 - DEBUG - reusing cookie
2025-01-09 02:18:54,034 - DEBUG - reusing crumb
2025-01-09 02:18:54,034 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:54,034 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:54,185 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/INCY?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1198
2025-01-09 02:18:54,185 - DEBUG - response code=200
2025-01-09 02:18:54,186 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:54,186 - DEBUG -    Exiting get()
2025-01-09 02:18:54,187 - DEBUG - INCY: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:54,188 - DEBUG - INCY: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:54,191 - DEBUG - INCY: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:54,196 - DEBUG - INCY: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:54,196 - DEBUG -   Exiting history()
2025-01-09 02:18:54,196 - DEBUG -  Exiting history()
2025-01-09 02:18:54,198 - DEBUG - Exiting download()
2025-01-09 02:18:54,306 - ERROR - Error writing data for INCY to DB: schema "np" does not exist
LINE 4:             VALUES ('INCY','2020-01-01'::date,np.float64(86....
                                                      ^

2025-01-09 02:18:54,307 - DEBUG - Entering download()
2025-01-09 02:18:54,307 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:54,307 - DEBUG -  Entering history()
2025-01-09 02:18:54,307 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['IR', 1, 0])
2025-01-09 02:18:54,307 - DEBUG -   Entering history()
2025-01-09 02:18:54,308 - DEBUG - IR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:54,308 - DEBUG -    Entering get()
2025-01-09 02:18:54,308 - DEBUG -     Entering _make_request()
2025-01-09 02:18:54,308 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/IR
2025-01-09 02:18:54,308 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:54,308 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:54,308 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:54,308 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:54,309 - DEBUG - reusing cookie
2025-01-09 02:18:54,309 - DEBUG - reusing crumb
2025-01-09 02:18:54,309 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:54,309 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:54,469 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/IR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1198
2025-01-09 02:18:54,469 - DEBUG - response code=200
2025-01-09 02:18:54,469 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:54,469 - DEBUG -    Exiting get()
2025-01-09 02:18:54,470 - DEBUG - IR: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:54,471 - DEBUG - IR: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:54,474 - DEBUG - IR: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:54,479 - DEBUG - IR: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:54,480 - DEBUG -   Exiting history()
2025-01-09 02:18:54,480 - DEBUG -  Exiting history()
2025-01-09 02:18:54,481 - DEBUG - Exiting download()
2025-01-09 02:18:54,594 - ERROR - Error writing data for IR to DB: schema "np" does not exist
LINE 4:             VALUES ('IR','2020-01-01'::date,np.float64(36.72...
                                                    ^

2025-01-09 02:18:54,595 - DEBUG - Entering download()
2025-01-09 02:18:54,595 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:54,595 - DEBUG -  Entering history()
2025-01-09 02:18:54,596 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PODD', 1, 0])
2025-01-09 02:18:54,596 - DEBUG -   Entering history()
2025-01-09 02:18:54,596 - DEBUG - PODD: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:54,597 - DEBUG -    Entering get()
2025-01-09 02:18:54,597 - DEBUG -     Entering _make_request()
2025-01-09 02:18:54,597 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PODD
2025-01-09 02:18:54,597 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:54,597 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:54,597 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:54,597 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:54,597 - DEBUG - reusing cookie
2025-01-09 02:18:54,597 - DEBUG - reusing crumb
2025-01-09 02:18:54,597 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:54,597 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:54,742 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PODD?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1206
2025-01-09 02:18:54,742 - DEBUG - response code=200
2025-01-09 02:18:54,742 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:54,742 - DEBUG -    Exiting get()
2025-01-09 02:18:54,743 - DEBUG - PODD: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:54,744 - DEBUG - PODD: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:54,747 - DEBUG - PODD: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:54,752 - DEBUG - PODD: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:54,752 - DEBUG -   Exiting history()
2025-01-09 02:18:54,752 - DEBUG -  Exiting history()
2025-01-09 02:18:54,754 - DEBUG - Exiting download()
2025-01-09 02:18:54,803 - DEBUG - Entering download()
2025-01-09 02:18:54,804 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:54,804 - DEBUG -  Entering history()
2025-01-09 02:18:54,804 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['INTC', 1, 0])
2025-01-09 02:18:54,804 - DEBUG -   Entering history()
2025-01-09 02:18:54,805 - DEBUG - INTC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:54,805 - DEBUG -    Entering get()
2025-01-09 02:18:54,805 - DEBUG -     Entering _make_request()
2025-01-09 02:18:54,805 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/INTC
2025-01-09 02:18:54,805 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:54,806 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:54,806 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:54,806 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:54,806 - DEBUG - reusing cookie
2025-01-09 02:18:54,806 - DEBUG - reusing crumb
2025-01-09 02:18:54,806 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:54,806 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:54,989 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/INTC?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1196
2025-01-09 02:18:54,989 - DEBUG - response code=200
2025-01-09 02:18:54,990 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:54,990 - DEBUG -    Exiting get()
2025-01-09 02:18:54,991 - DEBUG - INTC: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:54,991 - DEBUG - INTC: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:54,995 - DEBUG - INTC: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:54,999 - DEBUG - INTC: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:55,000 - DEBUG -   Exiting history()
2025-01-09 02:18:55,000 - DEBUG -  Exiting history()
2025-01-09 02:18:55,002 - DEBUG - Exiting download()
2025-01-09 02:18:55,114 - ERROR - Error writing data for INTC to DB: schema "np" does not exist
LINE 4:             VALUES ('INTC','2020-01-01'::date,np.float64(53....
                                                      ^

2025-01-09 02:18:55,114 - DEBUG - Entering download()
2025-01-09 02:18:55,114 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:55,114 - DEBUG -  Entering history()
2025-01-09 02:18:55,115 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ICE', 1, 0])
2025-01-09 02:18:55,115 - DEBUG -   Entering history()
2025-01-09 02:18:55,116 - DEBUG - ICE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:55,116 - DEBUG -    Entering get()
2025-01-09 02:18:55,116 - DEBUG -     Entering _make_request()
2025-01-09 02:18:55,116 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ICE
2025-01-09 02:18:55,116 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:55,116 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:55,116 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:55,116 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:55,116 - DEBUG - reusing cookie
2025-01-09 02:18:55,116 - DEBUG - reusing crumb
2025-01-09 02:18:55,116 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:55,116 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:55,297 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ICE?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1222
2025-01-09 02:18:55,297 - DEBUG - response code=200
2025-01-09 02:18:55,297 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:55,297 - DEBUG -    Exiting get()
2025-01-09 02:18:55,298 - DEBUG - ICE: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:55,300 - DEBUG - ICE: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:55,305 - DEBUG - ICE: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:55,312 - DEBUG - ICE: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:55,312 - DEBUG -   Exiting history()
2025-01-09 02:18:55,312 - DEBUG -  Exiting history()
2025-01-09 02:18:55,315 - DEBUG - Exiting download()
2025-01-09 02:18:55,375 - DEBUG - Entering download()
2025-01-09 02:18:55,375 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:55,375 - DEBUG -  Entering history()
2025-01-09 02:18:55,375 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['IFF', 1, 0])
2025-01-09 02:18:55,375 - DEBUG -   Entering history()
2025-01-09 02:18:55,376 - DEBUG - IFF: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:55,376 - DEBUG -    Entering get()
2025-01-09 02:18:55,376 - DEBUG -     Entering _make_request()
2025-01-09 02:18:55,377 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/IFF
2025-01-09 02:18:55,377 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:55,377 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:55,377 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:55,377 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:55,377 - DEBUG - reusing cookie
2025-01-09 02:18:55,377 - DEBUG - reusing crumb
2025-01-09 02:18:55,377 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:55,377 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:55,618 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/IFF?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1231
2025-01-09 02:18:55,619 - DEBUG - response code=200
2025-01-09 02:18:55,619 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:55,619 - DEBUG -    Exiting get()
2025-01-09 02:18:55,620 - DEBUG - IFF: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:55,621 - DEBUG - IFF: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:55,623 - DEBUG - IFF: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:55,629 - DEBUG - IFF: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:55,629 - DEBUG -   Exiting history()
2025-01-09 02:18:55,629 - DEBUG -  Exiting history()
2025-01-09 02:18:55,631 - DEBUG - Exiting download()
2025-01-09 02:18:55,744 - ERROR - Error writing data for IFF to DB: schema "np" does not exist
LINE 4:             VALUES ('IFF','2020-01-01'::date,np.float64(112....
                                                     ^

2025-01-09 02:18:55,744 - DEBUG - Entering download()
2025-01-09 02:18:55,744 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:55,744 - DEBUG -  Entering history()
2025-01-09 02:18:55,745 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['IP', 1, 0])
2025-01-09 02:18:55,745 - DEBUG -   Entering history()
2025-01-09 02:18:55,745 - DEBUG - IP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:55,746 - DEBUG -    Entering get()
2025-01-09 02:18:55,746 - DEBUG -     Entering _make_request()
2025-01-09 02:18:55,746 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/IP
2025-01-09 02:18:55,746 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:55,746 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:55,746 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:55,746 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:55,746 - DEBUG - reusing cookie
2025-01-09 02:18:55,746 - DEBUG - reusing crumb
2025-01-09 02:18:55,746 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:55,746 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:56,007 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/IP?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1210
2025-01-09 02:18:56,007 - DEBUG - response code=200
2025-01-09 02:18:56,007 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:56,007 - DEBUG -    Exiting get()
2025-01-09 02:18:56,008 - DEBUG - IP: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:56,009 - DEBUG - IP: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:56,013 - DEBUG - IP: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:56,019 - DEBUG - IP: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:56,019 - DEBUG -   Exiting history()
2025-01-09 02:18:56,019 - DEBUG -  Exiting history()
2025-01-09 02:18:56,022 - DEBUG - Exiting download()
2025-01-09 02:18:56,066 - DEBUG - Entering download()
2025-01-09 02:18:56,066 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:56,067 - DEBUG -  Entering history()
2025-01-09 02:18:56,067 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['IPG', 1, 0])
2025-01-09 02:18:56,067 - DEBUG -   Entering history()
2025-01-09 02:18:56,068 - DEBUG - IPG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:56,068 - DEBUG -    Entering get()
2025-01-09 02:18:56,068 - DEBUG -     Entering _make_request()
2025-01-09 02:18:56,068 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/IPG
2025-01-09 02:18:56,068 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:56,068 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:56,068 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:56,068 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:56,068 - DEBUG - reusing cookie
2025-01-09 02:18:56,068 - DEBUG - reusing crumb
2025-01-09 02:18:56,068 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:56,068 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:56,262 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/IPG?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1229
2025-01-09 02:18:56,263 - DEBUG - response code=200
2025-01-09 02:18:56,263 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:56,263 - DEBUG -    Exiting get()
2025-01-09 02:18:56,264 - DEBUG - IPG: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:56,265 - DEBUG - IPG: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:56,268 - DEBUG - IPG: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:56,272 - DEBUG - IPG: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:56,272 - DEBUG -   Exiting history()
2025-01-09 02:18:56,273 - DEBUG -  Exiting history()
2025-01-09 02:18:56,274 - DEBUG - Exiting download()
2025-01-09 02:18:56,505 - ERROR - Error writing data for IPG to DB: schema "np" does not exist
LINE 4:             VALUES ('IPG','2020-01-01'::date,np.float64(19.0...
                                                     ^

2025-01-09 02:18:56,506 - DEBUG - Entering download()
2025-01-09 02:18:56,506 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:56,506 - DEBUG -  Entering history()
2025-01-09 02:18:56,507 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['INTU', 1, 0])
2025-01-09 02:18:56,507 - DEBUG -   Entering history()
2025-01-09 02:18:56,508 - DEBUG - INTU: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:56,508 - DEBUG -    Entering get()
2025-01-09 02:18:56,508 - DEBUG -     Entering _make_request()
2025-01-09 02:18:56,508 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/INTU
2025-01-09 02:18:56,508 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:56,508 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:56,508 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:56,508 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:56,508 - DEBUG - reusing cookie
2025-01-09 02:18:56,508 - DEBUG - reusing crumb
2025-01-09 02:18:56,508 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:56,508 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:56,675 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/INTU?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1189
2025-01-09 02:18:56,675 - DEBUG - response code=200
2025-01-09 02:18:56,675 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:56,675 - DEBUG -    Exiting get()
2025-01-09 02:18:56,677 - DEBUG - INTU: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:56,678 - DEBUG - INTU: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:56,683 - DEBUG - INTU: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:56,689 - DEBUG - INTU: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:56,689 - DEBUG -   Exiting history()
2025-01-09 02:18:56,689 - DEBUG -  Exiting history()
2025-01-09 02:18:56,692 - DEBUG - Exiting download()
2025-01-09 02:18:56,913 - ERROR - Error writing data for INTU to DB: schema "np" does not exist
LINE 4:             VALUES ('INTU','2020-01-01'::date,np.float64(252...
                                                      ^

2025-01-09 02:18:56,913 - DEBUG - Entering download()
2025-01-09 02:18:56,913 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:56,913 - DEBUG -  Entering history()
2025-01-09 02:18:56,914 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ISRG', 1, 0])
2025-01-09 02:18:56,914 - DEBUG -   Entering history()
2025-01-09 02:18:56,915 - DEBUG - ISRG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:56,915 - DEBUG -    Entering get()
2025-01-09 02:18:56,915 - DEBUG -     Entering _make_request()
2025-01-09 02:18:56,915 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ISRG
2025-01-09 02:18:56,915 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:56,915 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:56,915 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:56,915 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:56,915 - DEBUG - reusing cookie
2025-01-09 02:18:56,915 - DEBUG - reusing crumb
2025-01-09 02:18:56,915 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:56,915 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:57,084 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ISRG?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1215
2025-01-09 02:18:57,084 - DEBUG - response code=200
2025-01-09 02:18:57,084 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:57,084 - DEBUG -    Exiting get()
2025-01-09 02:18:57,085 - DEBUG - ISRG: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:57,086 - DEBUG - ISRG: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:57,098 - DEBUG - ISRG: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:57,108 - DEBUG - ISRG: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:57,109 - DEBUG -   Exiting history()
2025-01-09 02:18:57,109 - DEBUG -  Exiting history()
2025-01-09 02:18:57,112 - DEBUG - Exiting download()
2025-01-09 02:18:57,171 - DEBUG - Entering download()
2025-01-09 02:18:57,172 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:57,172 - DEBUG -  Entering history()
2025-01-09 02:18:57,173 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['IVZ', 1, 0])
2025-01-09 02:18:57,173 - DEBUG -   Entering history()
2025-01-09 02:18:57,174 - DEBUG - IVZ: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:57,175 - DEBUG -    Entering get()
2025-01-09 02:18:57,175 - DEBUG -     Entering _make_request()
2025-01-09 02:18:57,175 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/IVZ
2025-01-09 02:18:57,175 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:57,175 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:57,175 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:57,175 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:57,175 - DEBUG - reusing cookie
2025-01-09 02:18:57,175 - DEBUG - reusing crumb
2025-01-09 02:18:57,175 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:57,175 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:57,358 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/IVZ?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1182
2025-01-09 02:18:57,358 - DEBUG - response code=200
2025-01-09 02:18:57,358 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:57,358 - DEBUG -    Exiting get()
2025-01-09 02:18:57,359 - DEBUG - IVZ: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:57,360 - DEBUG - IVZ: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:57,363 - DEBUG - IVZ: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:57,369 - DEBUG - IVZ: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:57,369 - DEBUG -   Exiting history()
2025-01-09 02:18:57,369 - DEBUG -  Exiting history()
2025-01-09 02:18:57,371 - DEBUG - Exiting download()
2025-01-09 02:18:57,499 - ERROR - Error writing data for IVZ to DB: schema "np" does not exist
LINE 4:             VALUES ('IVZ','2020-01-01'::date,np.float64(14.2...
                                                     ^

2025-01-09 02:18:57,499 - DEBUG - Entering download()
2025-01-09 02:18:57,500 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:57,500 - DEBUG -  Entering history()
2025-01-09 02:18:57,500 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['INVH', 1, 0])
2025-01-09 02:18:57,500 - DEBUG -   Entering history()
2025-01-09 02:18:57,501 - DEBUG - INVH: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:57,501 - DEBUG -    Entering get()
2025-01-09 02:18:57,501 - DEBUG -     Entering _make_request()
2025-01-09 02:18:57,501 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/INVH
2025-01-09 02:18:57,501 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:57,501 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:57,501 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:57,501 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:57,501 - DEBUG - reusing cookie
2025-01-09 02:18:57,501 - DEBUG - reusing crumb
2025-01-09 02:18:57,501 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:57,501 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:57,676 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/INVH?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1200
2025-01-09 02:18:57,676 - DEBUG - response code=200
2025-01-09 02:18:57,676 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:57,676 - DEBUG -    Exiting get()
2025-01-09 02:18:57,677 - DEBUG - INVH: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:57,678 - DEBUG - INVH: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:57,681 - DEBUG - INVH: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:57,687 - DEBUG - INVH: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:57,687 - DEBUG -   Exiting history()
2025-01-09 02:18:57,687 - DEBUG -  Exiting history()
2025-01-09 02:18:57,689 - DEBUG - Exiting download()
2025-01-09 02:18:57,809 - ERROR - Error writing data for INVH to DB: schema "np" does not exist
LINE 4:             VALUES ('INVH','2020-01-01'::date,np.float64(26....
                                                      ^

2025-01-09 02:18:57,810 - DEBUG - Entering download()
2025-01-09 02:18:57,810 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:57,810 - DEBUG -  Entering history()
2025-01-09 02:18:57,810 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['IQV', 1, 0])
2025-01-09 02:18:57,810 - DEBUG -   Entering history()
2025-01-09 02:18:57,811 - DEBUG - IQV: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:57,811 - DEBUG -    Entering get()
2025-01-09 02:18:57,811 - DEBUG -     Entering _make_request()
2025-01-09 02:18:57,811 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/IQV
2025-01-09 02:18:57,811 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:57,811 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:57,811 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:57,811 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:57,811 - DEBUG - reusing cookie
2025-01-09 02:18:57,811 - DEBUG - reusing crumb
2025-01-09 02:18:57,812 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:57,812 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:57,969 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/IQV?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1207
2025-01-09 02:18:57,969 - DEBUG - response code=200
2025-01-09 02:18:57,969 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:57,969 - DEBUG -    Exiting get()
2025-01-09 02:18:57,970 - DEBUG - IQV: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:57,971 - DEBUG - IQV: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:57,975 - DEBUG - IQV: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:57,980 - DEBUG - IQV: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:57,980 - DEBUG -   Exiting history()
2025-01-09 02:18:57,980 - DEBUG -  Exiting history()
2025-01-09 02:18:57,982 - DEBUG - Exiting download()
2025-01-09 02:18:58,111 - ERROR - Error writing data for IQV to DB: schema "np" does not exist
LINE 4:             VALUES ('IQV','2020-01-01'::date,np.float64(155....
                                                     ^

2025-01-09 02:18:58,112 - DEBUG - Entering download()
2025-01-09 02:18:58,112 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:58,112 - DEBUG -  Entering history()
2025-01-09 02:18:58,113 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['IRM', 1, 0])
2025-01-09 02:18:58,113 - DEBUG -   Entering history()
2025-01-09 02:18:58,114 - DEBUG - IRM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:58,114 - DEBUG -    Entering get()
2025-01-09 02:18:58,114 - DEBUG -     Entering _make_request()
2025-01-09 02:18:58,114 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/IRM
2025-01-09 02:18:58,114 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:58,114 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:58,114 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:58,114 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:58,114 - DEBUG - reusing cookie
2025-01-09 02:18:58,115 - DEBUG - reusing crumb
2025-01-09 02:18:58,115 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:58,115 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:58,287 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/IRM?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1219
2025-01-09 02:18:58,287 - DEBUG - response code=200
2025-01-09 02:18:58,287 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:58,287 - DEBUG -    Exiting get()
2025-01-09 02:18:58,288 - DEBUG - IRM: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:58,289 - DEBUG - IRM: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:58,294 - DEBUG - IRM: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:58,299 - DEBUG - IRM: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:58,299 - DEBUG -   Exiting history()
2025-01-09 02:18:58,299 - DEBUG -  Exiting history()
2025-01-09 02:18:58,301 - DEBUG - Exiting download()
2025-01-09 02:18:58,422 - ERROR - Error writing data for IRM to DB: schema "np" does not exist
LINE 4:             VALUES ('IRM','2020-01-01'::date,np.float64(24.5...
                                                     ^

2025-01-09 02:18:58,423 - DEBUG - Entering download()
2025-01-09 02:18:58,423 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:58,423 - DEBUG -  Entering history()
2025-01-09 02:18:58,423 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['JBHT', 1, 0])
2025-01-09 02:18:58,423 - DEBUG -   Entering history()
2025-01-09 02:18:58,424 - DEBUG - JBHT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:58,425 - DEBUG -    Entering get()
2025-01-09 02:18:58,425 - DEBUG -     Entering _make_request()
2025-01-09 02:18:58,425 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/JBHT
2025-01-09 02:18:58,425 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:58,425 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:58,425 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:58,425 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:58,425 - DEBUG - reusing cookie
2025-01-09 02:18:58,425 - DEBUG - reusing crumb
2025-01-09 02:18:58,425 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:58,425 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:58,647 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/JBHT?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1231
2025-01-09 02:18:58,647 - DEBUG - response code=200
2025-01-09 02:18:58,647 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:58,647 - DEBUG -    Exiting get()
2025-01-09 02:18:58,648 - DEBUG - JBHT: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:58,649 - DEBUG - JBHT: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:58,653 - DEBUG - JBHT: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:58,660 - DEBUG - JBHT: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:58,661 - DEBUG -   Exiting history()
2025-01-09 02:18:58,661 - DEBUG -  Exiting history()
2025-01-09 02:18:58,663 - DEBUG - Exiting download()
2025-01-09 02:18:58,794 - ERROR - Error writing data for JBHT to DB: schema "np" does not exist
LINE 4:             VALUES ('JBHT','2020-01-01'::date,np.float64(112...
                                                      ^

2025-01-09 02:18:58,795 - DEBUG - Entering download()
2025-01-09 02:18:58,795 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:58,795 - DEBUG -  Entering history()
2025-01-09 02:18:58,796 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['JBL', 1, 0])
2025-01-09 02:18:58,796 - DEBUG -   Entering history()
2025-01-09 02:18:58,796 - DEBUG - JBL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:58,796 - DEBUG -    Entering get()
2025-01-09 02:18:58,796 - DEBUG -     Entering _make_request()
2025-01-09 02:18:58,796 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/JBL
2025-01-09 02:18:58,797 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:58,797 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:58,797 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:58,797 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:58,797 - DEBUG - reusing cookie
2025-01-09 02:18:58,797 - DEBUG - reusing crumb
2025-01-09 02:18:58,797 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:58,797 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:58,969 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/JBL?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1155
2025-01-09 02:18:58,970 - DEBUG - response code=200
2025-01-09 02:18:58,970 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:58,970 - DEBUG -    Exiting get()
2025-01-09 02:18:58,972 - DEBUG - JBL: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:58,973 - DEBUG - JBL: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:58,976 - DEBUG - JBL: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:58,982 - DEBUG - JBL: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:58,982 - DEBUG -   Exiting history()
2025-01-09 02:18:58,982 - DEBUG -  Exiting history()
2025-01-09 02:18:58,984 - DEBUG - Exiting download()
2025-01-09 02:18:59,146 - DEBUG - Entering download()
2025-01-09 02:18:59,146 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:59,147 - DEBUG -  Entering history()
2025-01-09 02:18:59,147 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['JKHY', 1, 0])
2025-01-09 02:18:59,147 - DEBUG -   Entering history()
2025-01-09 02:18:59,148 - DEBUG - JKHY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:59,148 - DEBUG -    Entering get()
2025-01-09 02:18:59,148 - DEBUG -     Entering _make_request()
2025-01-09 02:18:59,148 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/JKHY
2025-01-09 02:18:59,148 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:59,148 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:59,148 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:59,148 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:59,148 - DEBUG - reusing cookie
2025-01-09 02:18:59,148 - DEBUG - reusing crumb
2025-01-09 02:18:59,148 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:59,148 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:59,351 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/JKHY?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1226
2025-01-09 02:18:59,352 - DEBUG - response code=200
2025-01-09 02:18:59,352 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:59,352 - DEBUG -    Exiting get()
2025-01-09 02:18:59,353 - DEBUG - JKHY: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:59,354 - DEBUG - JKHY: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:59,358 - DEBUG - JKHY: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:59,364 - DEBUG - JKHY: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:59,365 - DEBUG -   Exiting history()
2025-01-09 02:18:59,365 - DEBUG -  Exiting history()
2025-01-09 02:18:59,367 - DEBUG - Exiting download()
2025-01-09 02:18:59,418 - DEBUG - Entering download()
2025-01-09 02:18:59,418 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:59,418 - DEBUG -  Entering history()
2025-01-09 02:18:59,419 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['J', 1, 0])
2025-01-09 02:18:59,419 - DEBUG -   Entering history()
2025-01-09 02:18:59,420 - DEBUG - J: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:59,420 - DEBUG -    Entering get()
2025-01-09 02:18:59,420 - DEBUG -     Entering _make_request()
2025-01-09 02:18:59,420 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/J
2025-01-09 02:18:59,420 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:59,420 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:59,420 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:59,420 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:59,420 - DEBUG - reusing cookie
2025-01-09 02:18:59,420 - DEBUG - reusing crumb
2025-01-09 02:18:59,420 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:59,420 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:59,602 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/J?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1199
2025-01-09 02:18:59,603 - DEBUG - response code=200
2025-01-09 02:18:59,603 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:59,603 - DEBUG -    Exiting get()
2025-01-09 02:18:59,604 - DEBUG - J: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:59,605 - DEBUG - J: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:59,609 - DEBUG - J: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:59,614 - DEBUG - J: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:59,614 - DEBUG -   Exiting history()
2025-01-09 02:18:59,614 - DEBUG -  Exiting history()
2025-01-09 02:18:59,616 - DEBUG - Exiting download()
2025-01-09 02:18:59,729 - ERROR - Error writing data for J to DB: schema "np" does not exist
LINE 4:             VALUES ('J','2020-01-01'::date,np.float64(71.860...
                                                   ^

2025-01-09 02:18:59,730 - DEBUG - Entering download()
2025-01-09 02:18:59,730 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:18:59,730 - DEBUG -  Entering history()
2025-01-09 02:18:59,730 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['JNJ', 1, 0])
2025-01-09 02:18:59,730 - DEBUG -   Entering history()
2025-01-09 02:18:59,731 - DEBUG - JNJ: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:18:59,731 - DEBUG -    Entering get()
2025-01-09 02:18:59,731 - DEBUG -     Entering _make_request()
2025-01-09 02:18:59,731 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/JNJ
2025-01-09 02:18:59,732 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:18:59,732 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:18:59,732 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:18:59,732 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:18:59,732 - DEBUG - reusing cookie
2025-01-09 02:18:59,732 - DEBUG - reusing crumb
2025-01-09 02:18:59,732 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:18:59,732 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:18:59,952 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/JNJ?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1199
2025-01-09 02:18:59,952 - DEBUG - response code=200
2025-01-09 02:18:59,952 - DEBUG -     Exiting _make_request()
2025-01-09 02:18:59,952 - DEBUG -    Exiting get()
2025-01-09 02:18:59,953 - DEBUG - JNJ: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:18:59,954 - DEBUG - JNJ: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:59,957 - DEBUG - JNJ: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:59,962 - DEBUG - JNJ: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:18:59,962 - DEBUG -   Exiting history()
2025-01-09 02:18:59,962 - DEBUG -  Exiting history()
2025-01-09 02:18:59,964 - DEBUG - Exiting download()
2025-01-09 02:19:00,074 - ERROR - Error writing data for JNJ to DB: schema "np" does not exist
LINE 4:             VALUES ('JNJ','2020-01-01'::date,np.float64(126....
                                                     ^

2025-01-09 02:19:00,075 - DEBUG - Entering download()
2025-01-09 02:19:00,075 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:00,075 - DEBUG -  Entering history()
2025-01-09 02:19:00,075 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['JCI', 1, 0])
2025-01-09 02:19:00,076 - DEBUG -   Entering history()
2025-01-09 02:19:00,076 - DEBUG - JCI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:00,076 - DEBUG -    Entering get()
2025-01-09 02:19:00,076 - DEBUG -     Entering _make_request()
2025-01-09 02:19:00,076 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/JCI
2025-01-09 02:19:00,076 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:00,076 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:00,077 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:00,077 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:00,077 - DEBUG - reusing cookie
2025-01-09 02:19:00,077 - DEBUG - reusing crumb
2025-01-09 02:19:00,077 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:00,077 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:00,266 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/JCI?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1222
2025-01-09 02:19:00,266 - DEBUG - response code=200
2025-01-09 02:19:00,266 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:00,266 - DEBUG -    Exiting get()
2025-01-09 02:19:00,267 - DEBUG - JCI: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:00,268 - DEBUG - JCI: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:00,271 - DEBUG - JCI: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:00,276 - DEBUG - JCI: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:00,276 - DEBUG -   Exiting history()
2025-01-09 02:19:00,276 - DEBUG -  Exiting history()
2025-01-09 02:19:00,278 - DEBUG - Exiting download()
2025-01-09 02:19:00,492 - ERROR - Error writing data for JCI to DB: schema "np" does not exist
LINE 4:             VALUES ('JCI','2020-01-01'::date,np.float64(36.6...
                                                     ^

2025-01-09 02:19:00,492 - DEBUG - Entering download()
2025-01-09 02:19:00,492 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:00,492 - DEBUG -  Entering history()
2025-01-09 02:19:00,493 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['JPM', 1, 0])
2025-01-09 02:19:00,493 - DEBUG -   Entering history()
2025-01-09 02:19:00,494 - DEBUG - JPM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:00,494 - DEBUG -    Entering get()
2025-01-09 02:19:00,494 - DEBUG -     Entering _make_request()
2025-01-09 02:19:00,494 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/JPM
2025-01-09 02:19:00,494 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:00,495 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:00,495 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:00,495 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:00,495 - DEBUG - reusing cookie
2025-01-09 02:19:00,495 - DEBUG - reusing crumb
2025-01-09 02:19:00,495 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:00,495 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:00,691 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/JPM?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1204
2025-01-09 02:19:00,692 - DEBUG - response code=200
2025-01-09 02:19:00,692 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:00,692 - DEBUG -    Exiting get()
2025-01-09 02:19:00,693 - DEBUG - JPM: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:00,694 - DEBUG - JPM: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:00,697 - DEBUG - JPM: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:00,702 - DEBUG - JPM: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:00,702 - DEBUG -   Exiting history()
2025-01-09 02:19:00,702 - DEBUG -  Exiting history()
2025-01-09 02:19:00,704 - DEBUG - Exiting download()
2025-01-09 02:19:00,854 - DEBUG - Entering download()
2025-01-09 02:19:00,854 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:00,854 - DEBUG -  Entering history()
2025-01-09 02:19:00,854 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['JNPR', 1, 0])
2025-01-09 02:19:00,854 - DEBUG -   Entering history()
2025-01-09 02:19:00,855 - DEBUG - JNPR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:00,855 - DEBUG -    Entering get()
2025-01-09 02:19:00,855 - DEBUG -     Entering _make_request()
2025-01-09 02:19:00,855 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/JNPR
2025-01-09 02:19:00,855 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:00,855 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:00,855 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:00,855 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:00,855 - DEBUG - reusing cookie
2025-01-09 02:19:00,855 - DEBUG - reusing crumb
2025-01-09 02:19:00,855 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:00,856 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:01,023 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/JNPR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1205
2025-01-09 02:19:01,024 - DEBUG - response code=200
2025-01-09 02:19:01,024 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:01,024 - DEBUG -    Exiting get()
2025-01-09 02:19:01,025 - DEBUG - JNPR: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:01,025 - DEBUG - JNPR: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:01,029 - DEBUG - JNPR: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:01,033 - DEBUG - JNPR: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:01,033 - DEBUG -   Exiting history()
2025-01-09 02:19:01,034 - DEBUG -  Exiting history()
2025-01-09 02:19:01,035 - DEBUG - Exiting download()
2025-01-09 02:19:01,178 - DEBUG - Entering download()
2025-01-09 02:19:01,178 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:01,179 - DEBUG -  Entering history()
2025-01-09 02:19:01,179 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['K', 1, 0])
2025-01-09 02:19:01,179 - DEBUG -   Entering history()
2025-01-09 02:19:01,180 - DEBUG - K: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:01,180 - DEBUG -    Entering get()
2025-01-09 02:19:01,181 - DEBUG -     Entering _make_request()
2025-01-09 02:19:01,181 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/K
2025-01-09 02:19:01,181 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:01,181 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:01,181 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:01,181 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:01,181 - DEBUG - reusing cookie
2025-01-09 02:19:01,181 - DEBUG - reusing crumb
2025-01-09 02:19:01,181 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:01,181 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:01,406 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/K?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1170
2025-01-09 02:19:01,407 - DEBUG - response code=200
2025-01-09 02:19:01,407 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:01,407 - DEBUG -    Exiting get()
2025-01-09 02:19:01,408 - DEBUG - K: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:01,408 - DEBUG - K: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:01,412 - DEBUG - K: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:01,417 - DEBUG - K: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:01,417 - DEBUG -   Exiting history()
2025-01-09 02:19:01,417 - DEBUG -  Exiting history()
2025-01-09 02:19:01,419 - DEBUG - Exiting download()
2025-01-09 02:19:01,535 - ERROR - Error writing data for K to DB: schema "np" does not exist
LINE 4:             VALUES ('K','2020-01-01'::date,np.float64(54.333...
                                                   ^

2025-01-09 02:19:01,535 - DEBUG - Entering download()
2025-01-09 02:19:01,536 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:01,536 - DEBUG -  Entering history()
2025-01-09 02:19:01,536 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['KVUE', 1, 0])
2025-01-09 02:19:01,536 - DEBUG -   Entering history()
2025-01-09 02:19:01,537 - DEBUG - KVUE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:01,537 - DEBUG -    Entering get()
2025-01-09 02:19:01,537 - DEBUG -     Entering _make_request()
2025-01-09 02:19:01,537 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/KVUE
2025-01-09 02:19:01,537 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:01,537 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:01,537 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:01,537 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:01,537 - DEBUG - reusing cookie
2025-01-09 02:19:01,537 - DEBUG - reusing crumb
2025-01-09 02:19:01,537 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:01,537 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:01,695 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/KVUE?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:19:01,695 - DEBUG - response code=400
2025-01-09 02:19:01,695 - DEBUG - toggling cookie strategy basic -> csrf
2025-01-09 02:19:01,695 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:01,695 - DEBUG - cookie_mode = 'csrf'
2025-01-09 02:19:01,696 - DEBUG -       Entering _get_crumb_csrf()
2025-01-09 02:19:01,696 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['csrf', 1, 0])
2025-01-09 02:19:01,827 - DEBUG - https://guce.yahoo.com:443 "GET /consent HTTP/1.1" 302 0
2025-01-09 02:19:02,175 - DEBUG - https://www.yahoo.com:443 "GET /?guccounter=1 HTTP/1.1" 200 None
2025-01-09 02:19:02,710 - DEBUG - Failed to find "csrfToken" in response
2025-01-09 02:19:02,710 - DEBUG -       Exiting _get_crumb_csrf()
2025-01-09 02:19:02,710 - DEBUG - toggling cookie strategy csrf -> basic
2025-01-09 02:19:02,710 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:02,710 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['basic', 1, 0])
2025-01-09 02:19:02,710 - DEBUG - loaded persistent cookie
2025-01-09 02:19:02,710 - DEBUG - reusing cookie
2025-01-09 02:19:02,851 - DEBUG - https://query1.finance.yahoo.com:443 "GET /v1/test/getcrumb HTTP/1.1" 200 11
2025-01-09 02:19:02,852 - DEBUG - crumb = 'mbrlfmeSllh'
2025-01-09 02:19:02,852 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:02,852 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:03,005 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/KVUE?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:19:03,005 - DEBUG - response code=400
2025-01-09 02:19:03,005 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:03,005 - DEBUG -    Exiting get()
2025-01-09 02:19:03,007 - ERROR - 
1 Failed download:
2025-01-09 02:19:03,007 - ERROR - ['KVUE']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1wk 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn\'t exist for startDate = 1577854800, endDate = 1577941200")')
2025-01-09 02:19:03,007 - DEBUG - ['KVUE']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1wk 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn't exist for startDate = 1577854800, endDate = 1577941200")

2025-01-09 02:19:03,009 - DEBUG - Exiting download()
2025-01-09 02:19:03,073 - ERROR - Error writing data for KVUE to DB: schema "np" does not exist
LINE 4:             VALUES ('KVUE','2023-05-04'::date,np.float64(24....
                                                      ^

2025-01-09 02:19:03,073 - DEBUG - Entering download()
2025-01-09 02:19:03,073 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:03,073 - DEBUG -  Entering history()
2025-01-09 02:19:03,073 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['KDP', 1, 0])
2025-01-09 02:19:03,074 - DEBUG -   Entering history()
2025-01-09 02:19:03,075 - DEBUG - KDP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:03,075 - DEBUG -    Entering get()
2025-01-09 02:19:03,075 - DEBUG -     Entering _make_request()
2025-01-09 02:19:03,075 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/KDP
2025-01-09 02:19:03,075 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:03,075 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:03,075 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:03,075 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:03,075 - DEBUG - reusing cookie
2025-01-09 02:19:03,075 - DEBUG - reusing crumb
2025-01-09 02:19:03,075 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:03,075 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:03,241 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/KDP?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1279
2025-01-09 02:19:03,241 - DEBUG - response code=200
2025-01-09 02:19:03,241 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:03,242 - DEBUG -    Exiting get()
2025-01-09 02:19:03,243 - DEBUG - KDP: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:03,243 - DEBUG - KDP: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:03,247 - DEBUG - KDP: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:03,252 - DEBUG - KDP: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:03,252 - DEBUG -   Exiting history()
2025-01-09 02:19:03,252 - DEBUG -  Exiting history()
2025-01-09 02:19:03,254 - DEBUG - Exiting download()
2025-01-09 02:19:03,361 - ERROR - Error writing data for KDP to DB: schema "np" does not exist
LINE 4:             VALUES ('KDP','2020-01-01'::date,np.float64(25.6...
                                                     ^

2025-01-09 02:19:03,361 - DEBUG - Entering download()
2025-01-09 02:19:03,361 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:03,361 - DEBUG -  Entering history()
2025-01-09 02:19:03,362 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['KEY', 1, 0])
2025-01-09 02:19:03,362 - DEBUG -   Entering history()
2025-01-09 02:19:03,363 - DEBUG - KEY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:03,363 - DEBUG -    Entering get()
2025-01-09 02:19:03,363 - DEBUG -     Entering _make_request()
2025-01-09 02:19:03,363 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/KEY
2025-01-09 02:19:03,363 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:03,363 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:03,363 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:03,363 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:03,363 - DEBUG - reusing cookie
2025-01-09 02:19:03,363 - DEBUG - reusing crumb
2025-01-09 02:19:03,363 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:03,363 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:03,565 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/KEY?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1172
2025-01-09 02:19:03,565 - DEBUG - response code=200
2025-01-09 02:19:03,566 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:03,566 - DEBUG -    Exiting get()
2025-01-09 02:19:03,567 - DEBUG - KEY: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:03,568 - DEBUG - KEY: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:03,572 - DEBUG - KEY: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:03,578 - DEBUG - KEY: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:03,578 - DEBUG -   Exiting history()
2025-01-09 02:19:03,578 - DEBUG -  Exiting history()
2025-01-09 02:19:03,581 - DEBUG - Exiting download()
2025-01-09 02:19:03,686 - ERROR - Error writing data for KEY to DB: schema "np" does not exist
LINE 4:             VALUES ('KEY','2020-01-01'::date,np.float64(15.9...
                                                     ^

2025-01-09 02:19:03,687 - DEBUG - Entering download()
2025-01-09 02:19:03,687 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:03,687 - DEBUG -  Entering history()
2025-01-09 02:19:03,688 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['KEYS', 1, 0])
2025-01-09 02:19:03,688 - DEBUG -   Entering history()
2025-01-09 02:19:03,688 - DEBUG - KEYS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:03,688 - DEBUG -    Entering get()
2025-01-09 02:19:03,688 - DEBUG -     Entering _make_request()
2025-01-09 02:19:03,689 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/KEYS
2025-01-09 02:19:03,689 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:03,689 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:03,689 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:03,689 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:03,689 - DEBUG - reusing cookie
2025-01-09 02:19:03,689 - DEBUG - reusing crumb
2025-01-09 02:19:03,689 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:03,689 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:03,847 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/KEYS?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1220
2025-01-09 02:19:03,848 - DEBUG - response code=200
2025-01-09 02:19:03,848 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:03,848 - DEBUG -    Exiting get()
2025-01-09 02:19:03,849 - DEBUG - KEYS: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:03,850 - DEBUG - KEYS: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:03,853 - DEBUG - KEYS: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:03,857 - DEBUG - KEYS: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:03,857 - DEBUG -   Exiting history()
2025-01-09 02:19:03,857 - DEBUG -  Exiting history()
2025-01-09 02:19:03,859 - DEBUG - Exiting download()
2025-01-09 02:19:04,074 - ERROR - Error writing data for KEYS to DB: schema "np" does not exist
LINE 4:             VALUES ('KEYS','2020-01-01'::date,np.float64(103...
                                                      ^

2025-01-09 02:19:04,074 - DEBUG - Entering download()
2025-01-09 02:19:04,074 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:04,074 - DEBUG -  Entering history()
2025-01-09 02:19:04,075 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['KMB', 1, 0])
2025-01-09 02:19:04,075 - DEBUG -   Entering history()
2025-01-09 02:19:04,075 - DEBUG - KMB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:04,075 - DEBUG -    Entering get()
2025-01-09 02:19:04,076 - DEBUG -     Entering _make_request()
2025-01-09 02:19:04,076 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/KMB
2025-01-09 02:19:04,076 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:04,076 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:04,076 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:04,076 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:04,076 - DEBUG - reusing cookie
2025-01-09 02:19:04,076 - DEBUG - reusing crumb
2025-01-09 02:19:04,076 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:04,076 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:04,308 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/KMB?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1217
2025-01-09 02:19:04,309 - DEBUG - response code=200
2025-01-09 02:19:04,309 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:04,309 - DEBUG -    Exiting get()
2025-01-09 02:19:04,310 - DEBUG - KMB: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:04,310 - DEBUG - KMB: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:04,314 - DEBUG - KMB: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:04,320 - DEBUG - KMB: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:04,320 - DEBUG -   Exiting history()
2025-01-09 02:19:04,320 - DEBUG -  Exiting history()
2025-01-09 02:19:04,323 - DEBUG - Exiting download()
2025-01-09 02:19:04,439 - ERROR - Error writing data for KMB to DB: schema "np" does not exist
LINE 4:             VALUES ('KMB','2020-01-01'::date,np.float64(115....
                                                     ^

2025-01-09 02:19:04,439 - DEBUG - Entering download()
2025-01-09 02:19:04,439 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:04,439 - DEBUG -  Entering history()
2025-01-09 02:19:04,440 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['KIM', 1, 0])
2025-01-09 02:19:04,440 - DEBUG -   Entering history()
2025-01-09 02:19:04,441 - DEBUG - KIM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:04,441 - DEBUG -    Entering get()
2025-01-09 02:19:04,441 - DEBUG -     Entering _make_request()
2025-01-09 02:19:04,441 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/KIM
2025-01-09 02:19:04,441 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:04,441 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:04,441 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:04,441 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:04,441 - DEBUG - reusing cookie
2025-01-09 02:19:04,441 - DEBUG - reusing crumb
2025-01-09 02:19:04,441 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:04,441 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:04,643 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/KIM?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1214
2025-01-09 02:19:04,643 - DEBUG - response code=200
2025-01-09 02:19:04,643 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:04,644 - DEBUG -    Exiting get()
2025-01-09 02:19:04,645 - DEBUG - KIM: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:04,645 - DEBUG - KIM: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:04,649 - DEBUG - KIM: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:04,655 - DEBUG - KIM: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:04,655 - DEBUG -   Exiting history()
2025-01-09 02:19:04,655 - DEBUG -  Exiting history()
2025-01-09 02:19:04,657 - DEBUG - Exiting download()
2025-01-09 02:19:04,771 - ERROR - Error writing data for KIM to DB: schema "np" does not exist
LINE 4:             VALUES ('KIM','2020-01-01'::date,np.float64(16.7...
                                                     ^

2025-01-09 02:19:04,771 - DEBUG - Entering download()
2025-01-09 02:19:04,771 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:04,771 - DEBUG -  Entering history()
2025-01-09 02:19:04,772 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['KMI', 1, 0])
2025-01-09 02:19:04,772 - DEBUG -   Entering history()
2025-01-09 02:19:04,773 - DEBUG - KMI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:04,773 - DEBUG -    Entering get()
2025-01-09 02:19:04,773 - DEBUG -     Entering _make_request()
2025-01-09 02:19:04,773 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/KMI
2025-01-09 02:19:04,773 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:04,773 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:04,773 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:04,773 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:04,773 - DEBUG - reusing cookie
2025-01-09 02:19:04,773 - DEBUG - reusing crumb
2025-01-09 02:19:04,773 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:04,773 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:04,940 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/KMI?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1173
2025-01-09 02:19:04,940 - DEBUG - response code=200
2025-01-09 02:19:04,940 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:04,940 - DEBUG -    Exiting get()
2025-01-09 02:19:04,941 - DEBUG - KMI: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:04,942 - DEBUG - KMI: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:04,945 - DEBUG - KMI: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:04,950 - DEBUG - KMI: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:04,950 - DEBUG -   Exiting history()
2025-01-09 02:19:04,950 - DEBUG -  Exiting history()
2025-01-09 02:19:04,952 - DEBUG - Exiting download()
2025-01-09 02:19:05,065 - ERROR - Error writing data for KMI to DB: schema "np" does not exist
LINE 4:             VALUES ('KMI','2020-01-01'::date,np.float64(15.4...
                                                     ^

2025-01-09 02:19:05,066 - DEBUG - Entering download()
2025-01-09 02:19:05,066 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:05,066 - DEBUG -  Entering history()
2025-01-09 02:19:05,066 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['KKR', 1, 0])
2025-01-09 02:19:05,066 - DEBUG -   Entering history()
2025-01-09 02:19:05,067 - DEBUG - KKR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:05,067 - DEBUG -    Entering get()
2025-01-09 02:19:05,067 - DEBUG -     Entering _make_request()
2025-01-09 02:19:05,067 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/KKR
2025-01-09 02:19:05,067 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:05,067 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:05,068 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:05,068 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:05,068 - DEBUG - reusing cookie
2025-01-09 02:19:05,068 - DEBUG - reusing crumb
2025-01-09 02:19:05,068 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:05,068 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:05,305 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/KKR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1173
2025-01-09 02:19:05,305 - DEBUG - response code=200
2025-01-09 02:19:05,305 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:05,305 - DEBUG -    Exiting get()
2025-01-09 02:19:05,306 - DEBUG - KKR: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:05,307 - DEBUG - KKR: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:05,311 - DEBUG - KKR: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:05,316 - DEBUG - KKR: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:05,317 - DEBUG -   Exiting history()
2025-01-09 02:19:05,317 - DEBUG -  Exiting history()
2025-01-09 02:19:05,320 - DEBUG - Exiting download()
2025-01-09 02:19:05,440 - ERROR - Error writing data for KKR to DB: schema "np" does not exist
LINE 4:             VALUES ('KKR','2020-01-01'::date,np.float64(27.8...
                                                     ^

2025-01-09 02:19:05,441 - DEBUG - Entering download()
2025-01-09 02:19:05,441 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:05,441 - DEBUG -  Entering history()
2025-01-09 02:19:05,442 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['KLAC', 1, 0])
2025-01-09 02:19:05,442 - DEBUG -   Entering history()
2025-01-09 02:19:05,443 - DEBUG - KLAC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:05,443 - DEBUG -    Entering get()
2025-01-09 02:19:05,443 - DEBUG -     Entering _make_request()
2025-01-09 02:19:05,443 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/KLAC
2025-01-09 02:19:05,443 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:05,443 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:05,443 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:05,443 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:05,443 - DEBUG - reusing cookie
2025-01-09 02:19:05,443 - DEBUG - reusing crumb
2025-01-09 02:19:05,443 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:05,443 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:05,626 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/KLAC?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1200
2025-01-09 02:19:05,627 - DEBUG - response code=200
2025-01-09 02:19:05,627 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:05,627 - DEBUG -    Exiting get()
2025-01-09 02:19:05,628 - DEBUG - KLAC: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:05,629 - DEBUG - KLAC: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:05,633 - DEBUG - KLAC: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:05,641 - DEBUG - KLAC: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:05,641 - DEBUG -   Exiting history()
2025-01-09 02:19:05,641 - DEBUG -  Exiting history()
2025-01-09 02:19:05,644 - DEBUG - Exiting download()
2025-01-09 02:19:05,823 - ERROR - Error writing data for KLAC to DB: schema "np" does not exist
LINE 4:             VALUES ('KLAC','2020-01-01'::date,np.float64(169...
                                                      ^

2025-01-09 02:19:05,823 - DEBUG - Entering download()
2025-01-09 02:19:05,824 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:05,824 - DEBUG -  Entering history()
2025-01-09 02:19:05,824 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['KHC', 1, 0])
2025-01-09 02:19:05,825 - DEBUG -   Entering history()
2025-01-09 02:19:05,825 - DEBUG - KHC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:05,825 - DEBUG -    Entering get()
2025-01-09 02:19:05,825 - DEBUG -     Entering _make_request()
2025-01-09 02:19:05,826 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/KHC
2025-01-09 02:19:05,826 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:05,826 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:05,826 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:05,826 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:05,826 - DEBUG - reusing cookie
2025-01-09 02:19:05,826 - DEBUG - reusing crumb
2025-01-09 02:19:05,826 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:05,826 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:06,000 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/KHC?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1196
2025-01-09 02:19:06,001 - DEBUG - response code=200
2025-01-09 02:19:06,001 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:06,001 - DEBUG -    Exiting get()
2025-01-09 02:19:06,003 - DEBUG - KHC: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:06,004 - DEBUG - KHC: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:06,010 - DEBUG - KHC: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:06,024 - DEBUG - KHC: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:06,024 - DEBUG -   Exiting history()
2025-01-09 02:19:06,025 - DEBUG -  Exiting history()
2025-01-09 02:19:06,028 - DEBUG - Exiting download()
2025-01-09 02:19:06,287 - ERROR - Error writing data for KHC to DB: schema "np" does not exist
LINE 4:             VALUES ('KHC','2020-01-01'::date,np.float64(25.7...
                                                     ^

2025-01-09 02:19:06,288 - DEBUG - Entering download()
2025-01-09 02:19:06,288 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:06,288 - DEBUG -  Entering history()
2025-01-09 02:19:06,289 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['KR', 1, 0])
2025-01-09 02:19:06,289 - DEBUG -   Entering history()
2025-01-09 02:19:06,290 - DEBUG - KR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:06,290 - DEBUG -    Entering get()
2025-01-09 02:19:06,291 - DEBUG -     Entering _make_request()
2025-01-09 02:19:06,291 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/KR
2025-01-09 02:19:06,291 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:06,291 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:06,291 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:06,291 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:06,291 - DEBUG - reusing cookie
2025-01-09 02:19:06,291 - DEBUG - reusing crumb
2025-01-09 02:19:06,291 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:06,291 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:06,518 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/KR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1192
2025-01-09 02:19:06,519 - DEBUG - response code=200
2025-01-09 02:19:06,520 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:06,520 - DEBUG -    Exiting get()
2025-01-09 02:19:06,521 - DEBUG - KR: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:06,523 - DEBUG - KR: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:06,528 - DEBUG - KR: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:06,537 - DEBUG - KR: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:06,537 - DEBUG -   Exiting history()
2025-01-09 02:19:06,537 - DEBUG -  Exiting history()
2025-01-09 02:19:06,539 - DEBUG - Exiting download()
2025-01-09 02:19:06,762 - ERROR - Error writing data for KR to DB: schema "np" does not exist
LINE 4:             VALUES ('KR','2020-01-01'::date,np.float64(26.06...
                                                    ^

2025-01-09 02:19:06,763 - DEBUG - Entering download()
2025-01-09 02:19:06,763 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:06,763 - DEBUG -  Entering history()
2025-01-09 02:19:06,764 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LHX', 1, 0])
2025-01-09 02:19:06,764 - DEBUG -   Entering history()
2025-01-09 02:19:06,765 - DEBUG - LHX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:06,765 - DEBUG -    Entering get()
2025-01-09 02:19:06,765 - DEBUG -     Entering _make_request()
2025-01-09 02:19:06,765 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LHX
2025-01-09 02:19:06,765 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:06,765 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:06,765 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:06,765 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:06,766 - DEBUG - reusing cookie
2025-01-09 02:19:06,766 - DEBUG - reusing crumb
2025-01-09 02:19:06,766 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:06,766 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:06,974 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LHX?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1220
2025-01-09 02:19:06,974 - DEBUG - response code=200
2025-01-09 02:19:06,974 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:06,974 - DEBUG -    Exiting get()
2025-01-09 02:19:06,975 - DEBUG - LHX: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:06,976 - DEBUG - LHX: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:06,980 - DEBUG - LHX: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:06,989 - DEBUG - LHX: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:06,989 - DEBUG -   Exiting history()
2025-01-09 02:19:06,989 - DEBUG -  Exiting history()
2025-01-09 02:19:06,992 - DEBUG - Exiting download()
2025-01-09 02:19:07,047 - DEBUG - Entering download()
2025-01-09 02:19:07,047 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:07,047 - DEBUG -  Entering history()
2025-01-09 02:19:07,047 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LH', 1, 0])
2025-01-09 02:19:07,048 - DEBUG -   Entering history()
2025-01-09 02:19:07,048 - DEBUG - LH: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:07,049 - DEBUG -    Entering get()
2025-01-09 02:19:07,049 - DEBUG -     Entering _make_request()
2025-01-09 02:19:07,049 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LH
2025-01-09 02:19:07,049 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:07,049 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:07,049 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:07,049 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:07,050 - DEBUG - reusing cookie
2025-01-09 02:19:07,050 - DEBUG - reusing crumb
2025-01-09 02:19:07,050 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:07,050 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:07,240 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LH?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1205
2025-01-09 02:19:07,240 - DEBUG - response code=200
2025-01-09 02:19:07,241 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:07,241 - DEBUG -    Exiting get()
2025-01-09 02:19:07,245 - DEBUG - LH: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:07,247 - DEBUG - LH: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:07,258 - DEBUG - LH: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:07,274 - DEBUG - LH: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:07,274 - DEBUG -   Exiting history()
2025-01-09 02:19:07,274 - DEBUG -  Exiting history()
2025-01-09 02:19:07,279 - DEBUG - Exiting download()
2025-01-09 02:19:07,559 - ERROR - Error writing data for LH to DB: schema "np" does not exist
LINE 4:             VALUES ('LH','2020-01-01'::date,np.float64(141.0...
                                                    ^

2025-01-09 02:19:07,559 - DEBUG - Entering download()
2025-01-09 02:19:07,559 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:07,559 - DEBUG -  Entering history()
2025-01-09 02:19:07,560 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LRCX', 1, 0])
2025-01-09 02:19:07,560 - DEBUG -   Entering history()
2025-01-09 02:19:07,560 - DEBUG - LRCX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:07,561 - DEBUG -    Entering get()
2025-01-09 02:19:07,561 - DEBUG -     Entering _make_request()
2025-01-09 02:19:07,561 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LRCX
2025-01-09 02:19:07,561 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:07,561 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:07,561 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:07,561 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:07,561 - DEBUG - reusing cookie
2025-01-09 02:19:07,561 - DEBUG - reusing crumb
2025-01-09 02:19:07,561 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:07,561 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:07,719 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LRCX?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1214
2025-01-09 02:19:07,720 - DEBUG - response code=200
2025-01-09 02:19:07,720 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:07,720 - DEBUG -    Exiting get()
2025-01-09 02:19:07,722 - DEBUG - LRCX: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:07,724 - DEBUG - LRCX: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:07,728 - DEBUG - LRCX: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:07,736 - DEBUG - LRCX: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:07,736 - DEBUG -   Exiting history()
2025-01-09 02:19:07,736 - DEBUG -  Exiting history()
2025-01-09 02:19:07,738 - DEBUG - Exiting download()
2025-01-09 02:19:07,796 - DEBUG - Entering download()
2025-01-09 02:19:07,796 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:07,796 - DEBUG -  Entering history()
2025-01-09 02:19:07,796 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LW', 1, 0])
2025-01-09 02:19:07,796 - DEBUG -   Entering history()
2025-01-09 02:19:07,797 - DEBUG - LW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:07,797 - DEBUG -    Entering get()
2025-01-09 02:19:07,798 - DEBUG -     Entering _make_request()
2025-01-09 02:19:07,798 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LW
2025-01-09 02:19:07,798 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:07,798 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:07,798 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:07,798 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:07,798 - DEBUG - reusing cookie
2025-01-09 02:19:07,798 - DEBUG - reusing crumb
2025-01-09 02:19:07,798 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:07,798 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:07,964 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LW?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1205
2025-01-09 02:19:07,965 - DEBUG - response code=200
2025-01-09 02:19:07,965 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:07,965 - DEBUG -    Exiting get()
2025-01-09 02:19:07,966 - DEBUG - LW: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:07,968 - DEBUG - LW: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:07,973 - DEBUG - LW: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:07,979 - DEBUG - LW: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:07,979 - DEBUG -   Exiting history()
2025-01-09 02:19:07,980 - DEBUG -  Exiting history()
2025-01-09 02:19:07,982 - DEBUG - Exiting download()
2025-01-09 02:19:08,151 - DEBUG - Entering download()
2025-01-09 02:19:08,151 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:08,151 - DEBUG -  Entering history()
2025-01-09 02:19:08,151 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LVS', 1, 0])
2025-01-09 02:19:08,152 - DEBUG -   Entering history()
2025-01-09 02:19:08,153 - DEBUG - LVS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:08,153 - DEBUG -    Entering get()
2025-01-09 02:19:08,153 - DEBUG -     Entering _make_request()
2025-01-09 02:19:08,153 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LVS
2025-01-09 02:19:08,153 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:08,153 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:08,154 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:08,154 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:08,154 - DEBUG - reusing cookie
2025-01-09 02:19:08,154 - DEBUG - reusing crumb
2025-01-09 02:19:08,154 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:08,154 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:08,319 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LVS?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1198
2025-01-09 02:19:08,320 - DEBUG - response code=200
2025-01-09 02:19:08,320 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:08,320 - DEBUG -    Exiting get()
2025-01-09 02:19:08,321 - DEBUG - LVS: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:08,322 - DEBUG - LVS: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:08,325 - DEBUG - LVS: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:08,329 - DEBUG - LVS: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:08,329 - DEBUG -   Exiting history()
2025-01-09 02:19:08,329 - DEBUG -  Exiting history()
2025-01-09 02:19:08,331 - DEBUG - Exiting download()
2025-01-09 02:19:08,447 - ERROR - Error writing data for LVS to DB: schema "np" does not exist
LINE 4:             VALUES ('LVS','2020-01-01'::date,np.float64(66.8...
                                                     ^

2025-01-09 02:19:08,448 - DEBUG - Entering download()
2025-01-09 02:19:08,448 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:08,448 - DEBUG -  Entering history()
2025-01-09 02:19:08,448 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LDOS', 1, 0])
2025-01-09 02:19:08,448 - DEBUG -   Entering history()
2025-01-09 02:19:08,449 - DEBUG - LDOS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:08,449 - DEBUG -    Entering get()
2025-01-09 02:19:08,449 - DEBUG -     Entering _make_request()
2025-01-09 02:19:08,449 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LDOS
2025-01-09 02:19:08,449 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:08,449 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:08,449 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:08,449 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:08,449 - DEBUG - reusing cookie
2025-01-09 02:19:08,449 - DEBUG - reusing crumb
2025-01-09 02:19:08,449 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:08,450 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:08,621 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LDOS?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1203
2025-01-09 02:19:08,621 - DEBUG - response code=200
2025-01-09 02:19:08,621 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:08,621 - DEBUG -    Exiting get()
2025-01-09 02:19:08,622 - DEBUG - LDOS: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:08,623 - DEBUG - LDOS: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:08,627 - DEBUG - LDOS: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:08,631 - DEBUG - LDOS: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:08,632 - DEBUG -   Exiting history()
2025-01-09 02:19:08,632 - DEBUG -  Exiting history()
2025-01-09 02:19:08,634 - DEBUG - Exiting download()
2025-01-09 02:19:08,750 - ERROR - Error writing data for LDOS to DB: schema "np" does not exist
LINE 4:             VALUES ('LDOS','2020-01-01'::date,np.float64(91....
                                                      ^

2025-01-09 02:19:08,752 - DEBUG - Entering download()
2025-01-09 02:19:08,752 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:08,752 - DEBUG -  Entering history()
2025-01-09 02:19:08,753 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LEN', 1, 0])
2025-01-09 02:19:08,753 - DEBUG -   Entering history()
2025-01-09 02:19:08,754 - DEBUG - LEN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:08,754 - DEBUG -    Entering get()
2025-01-09 02:19:08,754 - DEBUG -     Entering _make_request()
2025-01-09 02:19:08,754 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LEN
2025-01-09 02:19:08,754 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:08,754 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:08,754 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:08,754 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:08,754 - DEBUG - reusing cookie
2025-01-09 02:19:08,754 - DEBUG - reusing crumb
2025-01-09 02:19:08,754 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:08,754 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:08,948 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LEN?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1197
2025-01-09 02:19:08,948 - DEBUG - response code=200
2025-01-09 02:19:08,948 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:08,948 - DEBUG -    Exiting get()
2025-01-09 02:19:08,949 - DEBUG - LEN: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:08,950 - DEBUG - LEN: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:08,954 - DEBUG - LEN: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:08,958 - DEBUG - LEN: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:08,959 - DEBUG -   Exiting history()
2025-01-09 02:19:08,959 - DEBUG -  Exiting history()
2025-01-09 02:19:08,961 - DEBUG - Exiting download()
2025-01-09 02:19:09,078 - ERROR - Error writing data for LEN to DB: schema "np" does not exist
LINE 4:             VALUES ('LEN','2020-01-01'::date,np.float64(52.5...
                                                     ^

2025-01-09 02:19:09,078 - DEBUG - Entering download()
2025-01-09 02:19:09,079 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:09,079 - DEBUG -  Entering history()
2025-01-09 02:19:09,079 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LII', 1, 0])
2025-01-09 02:19:09,079 - DEBUG -   Entering history()
2025-01-09 02:19:09,080 - DEBUG - LII: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:09,080 - DEBUG -    Entering get()
2025-01-09 02:19:09,080 - DEBUG -     Entering _make_request()
2025-01-09 02:19:09,080 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LII
2025-01-09 02:19:09,080 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:09,080 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:09,080 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:09,080 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:09,080 - DEBUG - reusing cookie
2025-01-09 02:19:09,080 - DEBUG - reusing crumb
2025-01-09 02:19:09,080 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:09,080 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:09,254 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LII?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1215
2025-01-09 02:19:09,254 - DEBUG - response code=200
2025-01-09 02:19:09,254 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:09,255 - DEBUG -    Exiting get()
2025-01-09 02:19:09,255 - DEBUG - LII: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:09,256 - DEBUG - LII: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:09,259 - DEBUG - LII: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:09,264 - DEBUG - LII: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:09,264 - DEBUG -   Exiting history()
2025-01-09 02:19:09,264 - DEBUG -  Exiting history()
2025-01-09 02:19:09,266 - DEBUG - Exiting download()
2025-01-09 02:19:09,381 - ERROR - Error writing data for LII to DB: schema "np" does not exist
LINE 4:             VALUES ('LII','2020-01-01'::date,np.float64(229....
                                                     ^

2025-01-09 02:19:09,382 - DEBUG - Entering download()
2025-01-09 02:19:09,382 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:09,382 - DEBUG -  Entering history()
2025-01-09 02:19:09,382 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LLY', 1, 0])
2025-01-09 02:19:09,382 - DEBUG -   Entering history()
2025-01-09 02:19:09,383 - DEBUG - LLY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:09,383 - DEBUG -    Entering get()
2025-01-09 02:19:09,383 - DEBUG -     Entering _make_request()
2025-01-09 02:19:09,383 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LLY
2025-01-09 02:19:09,383 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:09,383 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:09,383 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:09,383 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:09,384 - DEBUG - reusing cookie
2025-01-09 02:19:09,384 - DEBUG - reusing crumb
2025-01-09 02:19:09,384 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:09,384 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:09,634 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LLY?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1206
2025-01-09 02:19:09,635 - DEBUG - response code=200
2025-01-09 02:19:09,635 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:09,635 - DEBUG -    Exiting get()
2025-01-09 02:19:09,636 - DEBUG - LLY: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:09,637 - DEBUG - LLY: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:09,640 - DEBUG - LLY: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:09,645 - DEBUG - LLY: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:09,645 - DEBUG -   Exiting history()
2025-01-09 02:19:09,645 - DEBUG -  Exiting history()
2025-01-09 02:19:09,647 - DEBUG - Exiting download()
2025-01-09 02:19:09,695 - DEBUG - Entering download()
2025-01-09 02:19:09,695 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:09,695 - DEBUG -  Entering history()
2025-01-09 02:19:09,695 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LIN', 1, 0])
2025-01-09 02:19:09,695 - DEBUG -   Entering history()
2025-01-09 02:19:09,696 - DEBUG - LIN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:09,696 - DEBUG -    Entering get()
2025-01-09 02:19:09,696 - DEBUG -     Entering _make_request()
2025-01-09 02:19:09,696 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LIN
2025-01-09 02:19:09,696 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:09,696 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:09,696 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:09,697 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:09,697 - DEBUG - reusing cookie
2025-01-09 02:19:09,697 - DEBUG - reusing crumb
2025-01-09 02:19:09,697 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:09,697 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:09,880 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LIN?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1183
2025-01-09 02:19:09,880 - DEBUG - response code=200
2025-01-09 02:19:09,880 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:09,880 - DEBUG -    Exiting get()
2025-01-09 02:19:09,881 - DEBUG - LIN: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:09,882 - DEBUG - LIN: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:09,886 - DEBUG - LIN: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:09,891 - DEBUG - LIN: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:09,891 - DEBUG -   Exiting history()
2025-01-09 02:19:09,891 - DEBUG -  Exiting history()
2025-01-09 02:19:09,894 - DEBUG - Exiting download()
2025-01-09 02:19:09,939 - DEBUG - Entering download()
2025-01-09 02:19:09,939 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:09,939 - DEBUG -  Entering history()
2025-01-09 02:19:09,940 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LYV', 1, 0])
2025-01-09 02:19:09,940 - DEBUG -   Entering history()
2025-01-09 02:19:09,941 - DEBUG - LYV: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:09,941 - DEBUG -    Entering get()
2025-01-09 02:19:09,941 - DEBUG -     Entering _make_request()
2025-01-09 02:19:09,941 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LYV
2025-01-09 02:19:09,941 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:09,941 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:09,941 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:09,941 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:09,941 - DEBUG - reusing cookie
2025-01-09 02:19:09,942 - DEBUG - reusing crumb
2025-01-09 02:19:09,942 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:09,942 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:10,086 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LYV?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1210
2025-01-09 02:19:10,086 - DEBUG - response code=200
2025-01-09 02:19:10,087 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:10,087 - DEBUG -    Exiting get()
2025-01-09 02:19:10,088 - DEBUG - LYV: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:10,088 - DEBUG - LYV: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:10,091 - DEBUG - LYV: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:10,096 - DEBUG - LYV: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:10,096 - DEBUG -   Exiting history()
2025-01-09 02:19:10,096 - DEBUG -  Exiting history()
2025-01-09 02:19:10,098 - DEBUG - Exiting download()
2025-01-09 02:19:10,250 - DEBUG - Entering download()
2025-01-09 02:19:10,250 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:10,250 - DEBUG -  Entering history()
2025-01-09 02:19:10,250 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LKQ', 1, 0])
2025-01-09 02:19:10,251 - DEBUG -   Entering history()
2025-01-09 02:19:10,251 - DEBUG - LKQ: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:10,251 - DEBUG -    Entering get()
2025-01-09 02:19:10,251 - DEBUG -     Entering _make_request()
2025-01-09 02:19:10,251 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LKQ
2025-01-09 02:19:10,251 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:10,252 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:10,252 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:10,252 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:10,252 - DEBUG - reusing cookie
2025-01-09 02:19:10,252 - DEBUG - reusing crumb
2025-01-09 02:19:10,252 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:10,252 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:10,411 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LKQ?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1191
2025-01-09 02:19:10,411 - DEBUG - response code=200
2025-01-09 02:19:10,412 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:10,412 - DEBUG -    Exiting get()
2025-01-09 02:19:10,413 - DEBUG - LKQ: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:10,414 - DEBUG - LKQ: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:10,418 - DEBUG - LKQ: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:10,425 - DEBUG - LKQ: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:10,426 - DEBUG -   Exiting history()
2025-01-09 02:19:10,426 - DEBUG -  Exiting history()
2025-01-09 02:19:10,429 - DEBUG - Exiting download()
2025-01-09 02:19:10,650 - ERROR - Error writing data for LKQ to DB: schema "np" does not exist
LINE 4:             VALUES ('LKQ','2020-01-01'::date,np.float64(33.3...
                                                     ^

2025-01-09 02:19:10,651 - DEBUG - Entering download()
2025-01-09 02:19:10,651 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:10,651 - DEBUG -  Entering history()
2025-01-09 02:19:10,651 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LMT', 1, 0])
2025-01-09 02:19:10,652 - DEBUG -   Entering history()
2025-01-09 02:19:10,653 - DEBUG - LMT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:10,653 - DEBUG -    Entering get()
2025-01-09 02:19:10,653 - DEBUG -     Entering _make_request()
2025-01-09 02:19:10,653 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LMT
2025-01-09 02:19:10,653 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:10,653 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:10,653 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:10,653 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:10,653 - DEBUG - reusing cookie
2025-01-09 02:19:10,653 - DEBUG - reusing crumb
2025-01-09 02:19:10,653 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:10,654 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:10,888 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LMT?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1216
2025-01-09 02:19:10,889 - DEBUG - response code=200
2025-01-09 02:19:10,889 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:10,889 - DEBUG -    Exiting get()
2025-01-09 02:19:10,891 - DEBUG - LMT: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:10,892 - DEBUG - LMT: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:10,897 - DEBUG - LMT: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:10,905 - DEBUG - LMT: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:10,905 - DEBUG -   Exiting history()
2025-01-09 02:19:10,906 - DEBUG -  Exiting history()
2025-01-09 02:19:10,908 - DEBUG - Exiting download()
2025-01-09 02:19:11,067 - DEBUG - Entering download()
2025-01-09 02:19:11,067 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:11,067 - DEBUG -  Entering history()
2025-01-09 02:19:11,067 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['L', 1, 0])
2025-01-09 02:19:11,068 - DEBUG -   Entering history()
2025-01-09 02:19:11,068 - DEBUG - L: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:11,068 - DEBUG -    Entering get()
2025-01-09 02:19:11,068 - DEBUG -     Entering _make_request()
2025-01-09 02:19:11,069 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/L
2025-01-09 02:19:11,069 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:11,069 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:11,069 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:11,069 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:11,069 - DEBUG - reusing cookie
2025-01-09 02:19:11,069 - DEBUG - reusing crumb
2025-01-09 02:19:11,069 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:11,069 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:11,263 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/L?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1175
2025-01-09 02:19:11,264 - DEBUG - response code=200
2025-01-09 02:19:11,264 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:11,264 - DEBUG -    Exiting get()
2025-01-09 02:19:11,265 - DEBUG - L: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:11,266 - DEBUG - L: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:11,270 - DEBUG - L: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:11,277 - DEBUG - L: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:11,277 - DEBUG -   Exiting history()
2025-01-09 02:19:11,278 - DEBUG -  Exiting history()
2025-01-09 02:19:11,280 - DEBUG - Exiting download()
2025-01-09 02:19:11,396 - ERROR - Error writing data for L to DB: schema "np" does not exist
LINE 4:             VALUES ('L','2020-01-01'::date,np.float64(51.552...
                                                   ^

2025-01-09 02:19:11,397 - DEBUG - Entering download()
2025-01-09 02:19:11,397 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:11,397 - DEBUG -  Entering history()
2025-01-09 02:19:11,397 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LOW', 1, 0])
2025-01-09 02:19:11,397 - DEBUG -   Entering history()
2025-01-09 02:19:11,398 - DEBUG - LOW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:11,398 - DEBUG -    Entering get()
2025-01-09 02:19:11,398 - DEBUG -     Entering _make_request()
2025-01-09 02:19:11,398 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LOW
2025-01-09 02:19:11,398 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:11,398 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:11,398 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:11,399 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:11,399 - DEBUG - reusing cookie
2025-01-09 02:19:11,399 - DEBUG - reusing crumb
2025-01-09 02:19:11,399 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:11,399 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:11,615 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LOW?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1210
2025-01-09 02:19:11,615 - DEBUG - response code=200
2025-01-09 02:19:11,615 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:11,615 - DEBUG -    Exiting get()
2025-01-09 02:19:11,617 - DEBUG - LOW: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:11,617 - DEBUG - LOW: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:11,621 - DEBUG - LOW: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:11,626 - DEBUG - LOW: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:11,626 - DEBUG -   Exiting history()
2025-01-09 02:19:11,627 - DEBUG -  Exiting history()
2025-01-09 02:19:11,629 - DEBUG - Exiting download()
2025-01-09 02:19:11,739 - ERROR - Error writing data for LOW to DB: schema "np" does not exist
LINE 4:             VALUES ('LOW','2020-01-01'::date,np.float64(109....
                                                     ^

2025-01-09 02:19:11,740 - DEBUG - Entering download()
2025-01-09 02:19:11,740 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:11,740 - DEBUG -  Entering history()
2025-01-09 02:19:11,741 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LULU', 1, 0])
2025-01-09 02:19:11,741 - DEBUG -   Entering history()
2025-01-09 02:19:11,742 - DEBUG - LULU: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:11,742 - DEBUG -    Entering get()
2025-01-09 02:19:11,742 - DEBUG -     Entering _make_request()
2025-01-09 02:19:11,742 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LULU
2025-01-09 02:19:11,742 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:11,743 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:11,743 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:11,743 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:11,743 - DEBUG - reusing cookie
2025-01-09 02:19:11,743 - DEBUG - reusing crumb
2025-01-09 02:19:11,743 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:11,743 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:11,908 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LULU?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1216
2025-01-09 02:19:11,908 - DEBUG - response code=200
2025-01-09 02:19:11,908 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:11,908 - DEBUG -    Exiting get()
2025-01-09 02:19:11,909 - DEBUG - LULU: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:11,910 - DEBUG - LULU: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:11,913 - DEBUG - LULU: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:11,917 - DEBUG - LULU: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:11,918 - DEBUG -   Exiting history()
2025-01-09 02:19:11,918 - DEBUG -  Exiting history()
2025-01-09 02:19:11,919 - DEBUG - Exiting download()
2025-01-09 02:19:12,201 - ERROR - Error writing data for LULU to DB: schema "np" does not exist
LINE 4:             VALUES ('LULU','2020-01-01'::date,np.float64(232...
                                                      ^

2025-01-09 02:19:12,201 - DEBUG - Entering download()
2025-01-09 02:19:12,201 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:12,201 - DEBUG -  Entering history()
2025-01-09 02:19:12,202 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LYB', 1, 0])
2025-01-09 02:19:12,202 - DEBUG -   Entering history()
2025-01-09 02:19:12,203 - DEBUG - LYB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:12,203 - DEBUG -    Entering get()
2025-01-09 02:19:12,203 - DEBUG -     Entering _make_request()
2025-01-09 02:19:12,203 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LYB
2025-01-09 02:19:12,203 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:12,203 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:12,203 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:12,203 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:12,203 - DEBUG - reusing cookie
2025-01-09 02:19:12,203 - DEBUG - reusing crumb
2025-01-09 02:19:12,203 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:12,203 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:12,386 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LYB?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1214
2025-01-09 02:19:12,386 - DEBUG - response code=200
2025-01-09 02:19:12,386 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:12,386 - DEBUG -    Exiting get()
2025-01-09 02:19:12,388 - DEBUG - LYB: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:12,389 - DEBUG - LYB: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:12,392 - DEBUG - LYB: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:12,397 - DEBUG - LYB: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:12,397 - DEBUG -   Exiting history()
2025-01-09 02:19:12,397 - DEBUG -  Exiting history()
2025-01-09 02:19:12,399 - DEBUG - Exiting download()
2025-01-09 02:19:12,631 - ERROR - Error writing data for LYB to DB: schema "np" does not exist
LINE 4:             VALUES ('LYB','2020-01-01'::date,np.float64(70.3...
                                                     ^

2025-01-09 02:19:12,631 - DEBUG - Entering download()
2025-01-09 02:19:12,631 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:12,631 - DEBUG -  Entering history()
2025-01-09 02:19:12,632 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MTB', 1, 0])
2025-01-09 02:19:12,632 - DEBUG -   Entering history()
2025-01-09 02:19:12,633 - DEBUG - MTB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:12,633 - DEBUG -    Entering get()
2025-01-09 02:19:12,633 - DEBUG -     Entering _make_request()
2025-01-09 02:19:12,633 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MTB
2025-01-09 02:19:12,633 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:12,633 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:12,633 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:12,633 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:12,633 - DEBUG - reusing cookie
2025-01-09 02:19:12,633 - DEBUG - reusing crumb
2025-01-09 02:19:12,633 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:12,633 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:12,827 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MTB?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1203
2025-01-09 02:19:12,828 - DEBUG - response code=200
2025-01-09 02:19:12,828 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:12,828 - DEBUG -    Exiting get()
2025-01-09 02:19:12,829 - DEBUG - MTB: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:12,830 - DEBUG - MTB: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:12,835 - DEBUG - MTB: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:12,842 - DEBUG - MTB: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:12,842 - DEBUG -   Exiting history()
2025-01-09 02:19:12,842 - DEBUG -  Exiting history()
2025-01-09 02:19:12,845 - DEBUG - Exiting download()
2025-01-09 02:19:13,077 - ERROR - Error writing data for MTB to DB: schema "np" does not exist
LINE 4:             VALUES ('MTB','2020-01-01'::date,np.float64(144....
                                                     ^

2025-01-09 02:19:13,078 - DEBUG - Entering download()
2025-01-09 02:19:13,078 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:13,078 - DEBUG -  Entering history()
2025-01-09 02:19:13,078 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MPC', 1, 0])
2025-01-09 02:19:13,078 - DEBUG -   Entering history()
2025-01-09 02:19:13,079 - DEBUG - MPC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:13,079 - DEBUG -    Entering get()
2025-01-09 02:19:13,079 - DEBUG -     Entering _make_request()
2025-01-09 02:19:13,079 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MPC
2025-01-09 02:19:13,079 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:13,079 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:13,079 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:13,079 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:13,079 - DEBUG - reusing cookie
2025-01-09 02:19:13,080 - DEBUG - reusing crumb
2025-01-09 02:19:13,080 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:13,080 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:13,248 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MPC?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1224
2025-01-09 02:19:13,248 - DEBUG - response code=200
2025-01-09 02:19:13,248 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:13,248 - DEBUG -    Exiting get()
2025-01-09 02:19:13,249 - DEBUG - MPC: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:13,250 - DEBUG - MPC: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:13,254 - DEBUG - MPC: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:13,259 - DEBUG - MPC: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:13,259 - DEBUG -   Exiting history()
2025-01-09 02:19:13,259 - DEBUG -  Exiting history()
2025-01-09 02:19:13,261 - DEBUG - Exiting download()
2025-01-09 02:19:13,310 - DEBUG - Entering download()
2025-01-09 02:19:13,310 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:13,310 - DEBUG -  Entering history()
2025-01-09 02:19:13,310 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MKTX', 1, 0])
2025-01-09 02:19:13,310 - DEBUG -   Entering history()
2025-01-09 02:19:13,311 - DEBUG - MKTX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:13,311 - DEBUG -    Entering get()
2025-01-09 02:19:13,311 - DEBUG -     Entering _make_request()
2025-01-09 02:19:13,311 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MKTX
2025-01-09 02:19:13,311 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:13,311 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:13,311 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:13,311 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:13,311 - DEBUG - reusing cookie
2025-01-09 02:19:13,311 - DEBUG - reusing crumb
2025-01-09 02:19:13,311 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:13,311 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:13,474 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MKTX?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1202
2025-01-09 02:19:13,475 - DEBUG - response code=200
2025-01-09 02:19:13,475 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:13,475 - DEBUG -    Exiting get()
2025-01-09 02:19:13,476 - DEBUG - MKTX: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:13,477 - DEBUG - MKTX: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:13,480 - DEBUG - MKTX: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:13,485 - DEBUG - MKTX: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:13,485 - DEBUG -   Exiting history()
2025-01-09 02:19:13,485 - DEBUG -  Exiting history()
2025-01-09 02:19:13,487 - DEBUG - Exiting download()
2025-01-09 02:19:13,603 - ERROR - Error writing data for MKTX to DB: schema "np" does not exist
LINE 4:             VALUES ('MKTX','2020-01-01'::date,np.float64(363...
                                                      ^

2025-01-09 02:19:13,603 - DEBUG - Entering download()
2025-01-09 02:19:13,604 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:13,604 - DEBUG -  Entering history()
2025-01-09 02:19:13,604 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MAR', 1, 0])
2025-01-09 02:19:13,604 - DEBUG -   Entering history()
2025-01-09 02:19:13,605 - DEBUG - MAR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:13,605 - DEBUG -    Entering get()
2025-01-09 02:19:13,605 - DEBUG -     Entering _make_request()
2025-01-09 02:19:13,605 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MAR
2025-01-09 02:19:13,605 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:13,605 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:13,605 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:13,605 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:13,605 - DEBUG - reusing cookie
2025-01-09 02:19:13,605 - DEBUG - reusing crumb
2025-01-09 02:19:13,605 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:13,605 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:13,811 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MAR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1206
2025-01-09 02:19:13,812 - DEBUG - response code=200
2025-01-09 02:19:13,812 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:13,812 - DEBUG -    Exiting get()
2025-01-09 02:19:13,813 - DEBUG - MAR: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:13,814 - DEBUG - MAR: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:13,818 - DEBUG - MAR: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:13,825 - DEBUG - MAR: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:13,825 - DEBUG -   Exiting history()
2025-01-09 02:19:13,825 - DEBUG -  Exiting history()
2025-01-09 02:19:13,827 - DEBUG - Exiting download()
2025-01-09 02:19:13,994 - ERROR - Error writing data for MAR to DB: schema "np" does not exist
LINE 4:             VALUES ('MAR','2020-01-01'::date,np.float64(146....
                                                     ^

2025-01-09 02:19:13,994 - DEBUG - Entering download()
2025-01-09 02:19:13,995 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:13,995 - DEBUG -  Entering history()
2025-01-09 02:19:13,995 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MMC', 1, 0])
2025-01-09 02:19:13,995 - DEBUG -   Entering history()
2025-01-09 02:19:13,996 - DEBUG - MMC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:13,996 - DEBUG -    Entering get()
2025-01-09 02:19:13,996 - DEBUG -     Entering _make_request()
2025-01-09 02:19:13,996 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MMC
2025-01-09 02:19:13,996 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:13,996 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:13,996 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:13,996 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:13,996 - DEBUG - reusing cookie
2025-01-09 02:19:13,996 - DEBUG - reusing crumb
2025-01-09 02:19:13,996 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:13,996 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:14,227 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MMC?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1227
2025-01-09 02:19:14,228 - DEBUG - response code=200
2025-01-09 02:19:14,228 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:14,228 - DEBUG -    Exiting get()
2025-01-09 02:19:14,229 - DEBUG - MMC: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:14,230 - DEBUG - MMC: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:14,233 - DEBUG - MMC: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:14,240 - DEBUG - MMC: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:14,240 - DEBUG -   Exiting history()
2025-01-09 02:19:14,240 - DEBUG -  Exiting history()
2025-01-09 02:19:14,245 - DEBUG - Exiting download()
2025-01-09 02:19:14,304 - DEBUG - Entering download()
2025-01-09 02:19:14,304 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:14,305 - DEBUG -  Entering history()
2025-01-09 02:19:14,305 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MLM', 1, 0])
2025-01-09 02:19:14,305 - DEBUG -   Entering history()
2025-01-09 02:19:14,307 - DEBUG - MLM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:14,307 - DEBUG -    Entering get()
2025-01-09 02:19:14,307 - DEBUG -     Entering _make_request()
2025-01-09 02:19:14,307 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MLM
2025-01-09 02:19:14,307 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:14,307 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:14,307 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:14,307 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:14,308 - DEBUG - reusing cookie
2025-01-09 02:19:14,308 - DEBUG - reusing crumb
2025-01-09 02:19:14,308 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:14,308 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:14,521 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MLM?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1224
2025-01-09 02:19:14,522 - DEBUG - response code=200
2025-01-09 02:19:14,522 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:14,522 - DEBUG -    Exiting get()
2025-01-09 02:19:14,523 - DEBUG - MLM: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:14,525 - DEBUG - MLM: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:14,530 - DEBUG - MLM: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:14,536 - DEBUG - MLM: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:14,536 - DEBUG -   Exiting history()
2025-01-09 02:19:14,536 - DEBUG -  Exiting history()
2025-01-09 02:19:14,538 - DEBUG - Exiting download()
2025-01-09 02:19:14,685 - ERROR - Error writing data for MLM to DB: schema "np" does not exist
LINE 4:             VALUES ('MLM','2020-01-01'::date,np.float64(271....
                                                     ^

2025-01-09 02:19:14,686 - DEBUG - Entering download()
2025-01-09 02:19:14,687 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:14,687 - DEBUG -  Entering history()
2025-01-09 02:19:14,687 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MAS', 1, 0])
2025-01-09 02:19:14,687 - DEBUG -   Entering history()
2025-01-09 02:19:14,688 - DEBUG - MAS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:14,688 - DEBUG -    Entering get()
2025-01-09 02:19:14,688 - DEBUG -     Entering _make_request()
2025-01-09 02:19:14,689 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MAS
2025-01-09 02:19:14,689 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:14,689 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:14,689 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:14,689 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:14,689 - DEBUG - reusing cookie
2025-01-09 02:19:14,689 - DEBUG - reusing crumb
2025-01-09 02:19:14,689 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:14,689 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:14,904 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MAS?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1190
2025-01-09 02:19:14,904 - DEBUG - response code=200
2025-01-09 02:19:14,904 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:14,904 - DEBUG -    Exiting get()
2025-01-09 02:19:14,905 - DEBUG - MAS: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:14,906 - DEBUG - MAS: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:14,912 - DEBUG - MAS: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:14,919 - DEBUG - MAS: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:14,919 - DEBUG -   Exiting history()
2025-01-09 02:19:14,920 - DEBUG -  Exiting history()
2025-01-09 02:19:14,924 - DEBUG - Exiting download()
2025-01-09 02:19:15,004 - DEBUG - Entering download()
2025-01-09 02:19:15,004 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:15,005 - DEBUG -  Entering history()
2025-01-09 02:19:15,006 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MA', 1, 0])
2025-01-09 02:19:15,006 - DEBUG -   Entering history()
2025-01-09 02:19:15,007 - DEBUG - MA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:15,008 - DEBUG -    Entering get()
2025-01-09 02:19:15,009 - DEBUG -     Entering _make_request()
2025-01-09 02:19:15,009 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MA
2025-01-09 02:19:15,009 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:15,010 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:15,010 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:15,010 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:15,010 - DEBUG - reusing cookie
2025-01-09 02:19:15,010 - DEBUG - reusing crumb
2025-01-09 02:19:15,010 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:15,011 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:15,184 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MA?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1192
2025-01-09 02:19:15,185 - DEBUG - response code=200
2025-01-09 02:19:15,185 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:15,185 - DEBUG -    Exiting get()
2025-01-09 02:19:15,186 - DEBUG - MA: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:15,187 - DEBUG - MA: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:15,189 - DEBUG - MA: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:15,202 - DEBUG - MA: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:15,202 - DEBUG -   Exiting history()
2025-01-09 02:19:15,202 - DEBUG -  Exiting history()
2025-01-09 02:19:15,206 - DEBUG - Exiting download()
2025-01-09 02:19:15,421 - ERROR - Error writing data for MA to DB: schema "np" does not exist
LINE 4:             VALUES ('MA','2020-01-01'::date,np.float64(292.1...
                                                    ^

2025-01-09 02:19:15,421 - DEBUG - Entering download()
2025-01-09 02:19:15,421 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:15,422 - DEBUG -  Entering history()
2025-01-09 02:19:15,422 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MTCH', 1, 0])
2025-01-09 02:19:15,422 - DEBUG -   Entering history()
2025-01-09 02:19:15,423 - DEBUG - MTCH: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:15,424 - DEBUG -    Entering get()
2025-01-09 02:19:15,424 - DEBUG -     Entering _make_request()
2025-01-09 02:19:15,424 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MTCH
2025-01-09 02:19:15,424 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:15,424 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:15,424 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:15,424 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:15,424 - DEBUG - reusing cookie
2025-01-09 02:19:15,424 - DEBUG - reusing crumb
2025-01-09 02:19:15,425 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:15,425 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:15,613 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MTCH?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1194
2025-01-09 02:19:15,614 - DEBUG - response code=200
2025-01-09 02:19:15,614 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:15,614 - DEBUG -    Exiting get()
2025-01-09 02:19:15,615 - DEBUG - MTCH: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:15,616 - DEBUG - MTCH: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:15,619 - DEBUG - MTCH: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:15,624 - DEBUG - MTCH: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:15,624 - DEBUG -   Exiting history()
2025-01-09 02:19:15,624 - DEBUG -  Exiting history()
2025-01-09 02:19:15,627 - DEBUG - Exiting download()
2025-01-09 02:19:15,953 - ERROR - Error writing data for MTCH to DB: schema "np" does not exist
LINE 4:             VALUES ('MTCH','2020-01-01'::date,np.float64(82....
                                                      ^

2025-01-09 02:19:15,953 - DEBUG - Entering download()
2025-01-09 02:19:15,953 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:15,953 - DEBUG -  Entering history()
2025-01-09 02:19:15,954 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MKC', 1, 0])
2025-01-09 02:19:15,954 - DEBUG -   Entering history()
2025-01-09 02:19:15,955 - DEBUG - MKC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:15,955 - DEBUG -    Entering get()
2025-01-09 02:19:15,955 - DEBUG -     Entering _make_request()
2025-01-09 02:19:15,955 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MKC
2025-01-09 02:19:15,955 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:15,955 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:15,955 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:15,955 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:15,955 - DEBUG - reusing cookie
2025-01-09 02:19:15,956 - DEBUG - reusing crumb
2025-01-09 02:19:15,956 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:15,956 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:16,172 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MKC?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1219
2025-01-09 02:19:16,173 - DEBUG - response code=200
2025-01-09 02:19:16,173 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:16,173 - DEBUG -    Exiting get()
2025-01-09 02:19:16,174 - DEBUG - MKC: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:16,175 - DEBUG - MKC: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:16,179 - DEBUG - MKC: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:16,185 - DEBUG - MKC: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:16,185 - DEBUG -   Exiting history()
2025-01-09 02:19:16,185 - DEBUG -  Exiting history()
2025-01-09 02:19:16,187 - DEBUG - Exiting download()
2025-01-09 02:19:16,303 - ERROR - Error writing data for MKC to DB: schema "np" does not exist
LINE 4:             VALUES ('MKC','2020-01-01'::date,np.float64(77.2...
                                                     ^

2025-01-09 02:19:16,304 - DEBUG - Entering download()
2025-01-09 02:19:16,304 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:16,304 - DEBUG -  Entering history()
2025-01-09 02:19:16,304 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MCD', 1, 0])
2025-01-09 02:19:16,304 - DEBUG -   Entering history()
2025-01-09 02:19:16,305 - DEBUG - MCD: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:16,305 - DEBUG -    Entering get()
2025-01-09 02:19:16,305 - DEBUG -     Entering _make_request()
2025-01-09 02:19:16,305 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MCD
2025-01-09 02:19:16,305 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:16,305 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:16,305 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:16,305 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:16,305 - DEBUG - reusing cookie
2025-01-09 02:19:16,305 - DEBUG - reusing crumb
2025-01-09 02:19:16,305 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:16,305 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:16,532 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MCD?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1194
2025-01-09 02:19:16,532 - DEBUG - response code=200
2025-01-09 02:19:16,532 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:16,532 - DEBUG -    Exiting get()
2025-01-09 02:19:16,533 - DEBUG - MCD: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:16,534 - DEBUG - MCD: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:16,537 - DEBUG - MCD: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:16,542 - DEBUG - MCD: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:16,542 - DEBUG -   Exiting history()
2025-01-09 02:19:16,543 - DEBUG -  Exiting history()
2025-01-09 02:19:16,545 - DEBUG - Exiting download()
2025-01-09 02:19:16,661 - ERROR - Error writing data for MCD to DB: schema "np" does not exist
LINE 4:             VALUES ('MCD','2020-01-01'::date,np.float64(176....
                                                     ^

2025-01-09 02:19:16,662 - DEBUG - Entering download()
2025-01-09 02:19:16,662 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:16,662 - DEBUG -  Entering history()
2025-01-09 02:19:16,662 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MCK', 1, 0])
2025-01-09 02:19:16,662 - DEBUG -   Entering history()
2025-01-09 02:19:16,663 - DEBUG - MCK: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:16,663 - DEBUG -    Entering get()
2025-01-09 02:19:16,663 - DEBUG -     Entering _make_request()
2025-01-09 02:19:16,663 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MCK
2025-01-09 02:19:16,663 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:16,663 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:16,663 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:16,663 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:16,663 - DEBUG - reusing cookie
2025-01-09 02:19:16,663 - DEBUG - reusing crumb
2025-01-09 02:19:16,663 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:16,664 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:16,858 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MCK?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1204
2025-01-09 02:19:16,859 - DEBUG - response code=200
2025-01-09 02:19:16,859 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:16,859 - DEBUG -    Exiting get()
2025-01-09 02:19:16,860 - DEBUG - MCK: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:16,861 - DEBUG - MCK: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:16,864 - DEBUG - MCK: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:16,868 - DEBUG - MCK: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:16,869 - DEBUG -   Exiting history()
2025-01-09 02:19:16,869 - DEBUG -  Exiting history()
2025-01-09 02:19:16,871 - DEBUG - Exiting download()
2025-01-09 02:19:16,983 - ERROR - Error writing data for MCK to DB: schema "np" does not exist
LINE 4:             VALUES ('MCK','2020-01-01'::date,np.float64(134....
                                                     ^

2025-01-09 02:19:16,984 - DEBUG - Entering download()
2025-01-09 02:19:16,984 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:16,984 - DEBUG -  Entering history()
2025-01-09 02:19:16,984 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MDT', 1, 0])
2025-01-09 02:19:16,985 - DEBUG -   Entering history()
2025-01-09 02:19:16,985 - DEBUG - MDT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:16,985 - DEBUG -    Entering get()
2025-01-09 02:19:16,985 - DEBUG -     Entering _make_request()
2025-01-09 02:19:16,985 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MDT
2025-01-09 02:19:16,985 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:16,985 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:16,986 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:16,986 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:16,986 - DEBUG - reusing cookie
2025-01-09 02:19:16,986 - DEBUG - reusing crumb
2025-01-09 02:19:16,986 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:16,986 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:17,219 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MDT?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1188
2025-01-09 02:19:17,220 - DEBUG - response code=200
2025-01-09 02:19:17,220 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:17,220 - DEBUG -    Exiting get()
2025-01-09 02:19:17,221 - DEBUG - MDT: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:17,223 - DEBUG - MDT: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:17,227 - DEBUG - MDT: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:17,234 - DEBUG - MDT: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:17,234 - DEBUG -   Exiting history()
2025-01-09 02:19:17,234 - DEBUG -  Exiting history()
2025-01-09 02:19:17,236 - DEBUG - Exiting download()
2025-01-09 02:19:17,278 - DEBUG - Entering download()
2025-01-09 02:19:17,278 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:17,279 - DEBUG -  Entering history()
2025-01-09 02:19:17,279 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MRK', 1, 0])
2025-01-09 02:19:17,279 - DEBUG -   Entering history()
2025-01-09 02:19:17,280 - DEBUG - MRK: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:17,280 - DEBUG -    Entering get()
2025-01-09 02:19:17,280 - DEBUG -     Entering _make_request()
2025-01-09 02:19:17,280 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MRK
2025-01-09 02:19:17,280 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:17,280 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:17,280 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:17,280 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:17,280 - DEBUG - reusing cookie
2025-01-09 02:19:17,280 - DEBUG - reusing crumb
2025-01-09 02:19:17,280 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:17,280 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:17,586 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MRK?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1197
2025-01-09 02:19:17,587 - DEBUG - response code=200
2025-01-09 02:19:17,587 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:17,587 - DEBUG -    Exiting get()
2025-01-09 02:19:17,589 - DEBUG - MRK: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:17,591 - DEBUG - MRK: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:17,597 - DEBUG - MRK: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:17,605 - DEBUG - MRK: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:17,605 - DEBUG -   Exiting history()
2025-01-09 02:19:17,605 - DEBUG -  Exiting history()
2025-01-09 02:19:17,607 - DEBUG - Exiting download()
2025-01-09 02:19:17,729 - ERROR - Error writing data for MRK to DB: schema "np" does not exist
LINE 4:             VALUES ('MRK','2020-01-01'::date,np.float64(74.5...
                                                     ^

2025-01-09 02:19:17,730 - DEBUG - Entering download()
2025-01-09 02:19:17,730 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:17,730 - DEBUG -  Entering history()
2025-01-09 02:19:17,730 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['META', 1, 0])
2025-01-09 02:19:17,730 - DEBUG -   Entering history()
2025-01-09 02:19:17,731 - DEBUG - META: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:17,731 - DEBUG -    Entering get()
2025-01-09 02:19:17,731 - DEBUG -     Entering _make_request()
2025-01-09 02:19:17,731 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/META
2025-01-09 02:19:17,731 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:17,731 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:17,731 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:17,731 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:17,732 - DEBUG - reusing cookie
2025-01-09 02:19:17,732 - DEBUG - reusing crumb
2025-01-09 02:19:17,732 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:17,732 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:17,891 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/META?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1199
2025-01-09 02:19:17,892 - DEBUG - response code=200
2025-01-09 02:19:17,892 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:17,892 - DEBUG -    Exiting get()
2025-01-09 02:19:17,893 - DEBUG - META: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:17,894 - DEBUG - META: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:17,899 - DEBUG - META: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:17,904 - DEBUG - META: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:17,904 - DEBUG -   Exiting history()
2025-01-09 02:19:17,904 - DEBUG -  Exiting history()
2025-01-09 02:19:17,906 - DEBUG - Exiting download()
2025-01-09 02:19:18,050 - DEBUG - Entering download()
2025-01-09 02:19:18,051 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:18,051 - DEBUG -  Entering history()
2025-01-09 02:19:18,051 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MET', 1, 0])
2025-01-09 02:19:18,051 - DEBUG -   Entering history()
2025-01-09 02:19:18,052 - DEBUG - MET: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:18,052 - DEBUG -    Entering get()
2025-01-09 02:19:18,052 - DEBUG -     Entering _make_request()
2025-01-09 02:19:18,052 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MET
2025-01-09 02:19:18,052 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:18,052 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:18,052 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:18,052 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:18,052 - DEBUG - reusing cookie
2025-01-09 02:19:18,052 - DEBUG - reusing crumb
2025-01-09 02:19:18,053 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:18,053 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:18,238 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MET?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1186
2025-01-09 02:19:18,238 - DEBUG - response code=200
2025-01-09 02:19:18,238 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:18,238 - DEBUG -    Exiting get()
2025-01-09 02:19:18,239 - DEBUG - MET: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:18,240 - DEBUG - MET: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:18,244 - DEBUG - MET: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:18,249 - DEBUG - MET: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:18,249 - DEBUG -   Exiting history()
2025-01-09 02:19:18,249 - DEBUG -  Exiting history()
2025-01-09 02:19:18,251 - DEBUG - Exiting download()
2025-01-09 02:19:18,395 - DEBUG - Entering download()
2025-01-09 02:19:18,396 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:18,396 - DEBUG -  Entering history()
2025-01-09 02:19:18,396 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MTD', 1, 0])
2025-01-09 02:19:18,396 - DEBUG -   Entering history()
2025-01-09 02:19:18,397 - DEBUG - MTD: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:18,397 - DEBUG -    Entering get()
2025-01-09 02:19:18,397 - DEBUG -     Entering _make_request()
2025-01-09 02:19:18,397 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MTD
2025-01-09 02:19:18,397 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:18,397 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:18,397 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:18,397 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:18,397 - DEBUG - reusing cookie
2025-01-09 02:19:18,397 - DEBUG - reusing crumb
2025-01-09 02:19:18,397 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:18,397 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:18,542 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MTD?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1225
2025-01-09 02:19:18,543 - DEBUG - response code=200
2025-01-09 02:19:18,543 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:18,543 - DEBUG -    Exiting get()
2025-01-09 02:19:18,544 - DEBUG - MTD: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:18,544 - DEBUG - MTD: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:18,547 - DEBUG - MTD: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:18,552 - DEBUG - MTD: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:18,552 - DEBUG -   Exiting history()
2025-01-09 02:19:18,552 - DEBUG -  Exiting history()
2025-01-09 02:19:18,554 - DEBUG - Exiting download()
2025-01-09 02:19:18,664 - ERROR - Error writing data for MTD to DB: schema "np" does not exist
LINE 4:             VALUES ('MTD','2020-01-01'::date,np.float64(805....
                                                     ^

2025-01-09 02:19:18,665 - DEBUG - Entering download()
2025-01-09 02:19:18,665 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:18,665 - DEBUG -  Entering history()
2025-01-09 02:19:18,665 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MGM', 1, 0])
2025-01-09 02:19:18,665 - DEBUG -   Entering history()
2025-01-09 02:19:18,666 - DEBUG - MGM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:18,666 - DEBUG -    Entering get()
2025-01-09 02:19:18,666 - DEBUG -     Entering _make_request()
2025-01-09 02:19:18,666 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MGM
2025-01-09 02:19:18,666 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:18,666 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:18,666 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:18,666 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:18,666 - DEBUG - reusing cookie
2025-01-09 02:19:18,666 - DEBUG - reusing crumb
2025-01-09 02:19:18,666 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:18,667 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:18,862 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MGM?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1203
2025-01-09 02:19:18,863 - DEBUG - response code=200
2025-01-09 02:19:18,863 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:18,863 - DEBUG -    Exiting get()
2025-01-09 02:19:18,864 - DEBUG - MGM: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:18,865 - DEBUG - MGM: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:18,869 - DEBUG - MGM: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:18,874 - DEBUG - MGM: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:18,874 - DEBUG -   Exiting history()
2025-01-09 02:19:18,874 - DEBUG -  Exiting history()
2025-01-09 02:19:18,876 - DEBUG - Exiting download()
2025-01-09 02:19:18,983 - ERROR - Error writing data for MGM to DB: schema "np" does not exist
LINE 4:             VALUES ('MGM','2020-01-01'::date,np.float64(33.2...
                                                     ^

2025-01-09 02:19:18,984 - DEBUG - Entering download()
2025-01-09 02:19:18,984 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:18,984 - DEBUG -  Entering history()
2025-01-09 02:19:18,985 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MCHP', 1, 0])
2025-01-09 02:19:18,985 - DEBUG -   Entering history()
2025-01-09 02:19:18,985 - DEBUG - MCHP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:18,985 - DEBUG -    Entering get()
2025-01-09 02:19:18,986 - DEBUG -     Entering _make_request()
2025-01-09 02:19:18,986 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MCHP
2025-01-09 02:19:18,986 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:18,986 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:18,986 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:18,986 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:18,986 - DEBUG - reusing cookie
2025-01-09 02:19:18,986 - DEBUG - reusing crumb
2025-01-09 02:19:18,986 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:18,986 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:19,176 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MCHP?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1225
2025-01-09 02:19:19,177 - DEBUG - response code=200
2025-01-09 02:19:19,177 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:19,177 - DEBUG -    Exiting get()
2025-01-09 02:19:19,178 - DEBUG - MCHP: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:19,178 - DEBUG - MCHP: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:19,181 - DEBUG - MCHP: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:19,186 - DEBUG - MCHP: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:19,186 - DEBUG -   Exiting history()
2025-01-09 02:19:19,187 - DEBUG -  Exiting history()
2025-01-09 02:19:19,188 - DEBUG - Exiting download()
2025-01-09 02:19:19,413 - ERROR - Error writing data for MCHP to DB: schema "np" does not exist
LINE 4:             VALUES ('MCHP','2020-01-01'::date,np.float64(48....
                                                      ^

2025-01-09 02:19:19,413 - DEBUG - Entering download()
2025-01-09 02:19:19,413 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:19,413 - DEBUG -  Entering history()
2025-01-09 02:19:19,414 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MU', 1, 0])
2025-01-09 02:19:19,414 - DEBUG -   Entering history()
2025-01-09 02:19:19,415 - DEBUG - MU: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:19,415 - DEBUG -    Entering get()
2025-01-09 02:19:19,415 - DEBUG -     Entering _make_request()
2025-01-09 02:19:19,415 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MU
2025-01-09 02:19:19,415 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:19,415 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:19,415 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:19,415 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:19,415 - DEBUG - reusing cookie
2025-01-09 02:19:19,415 - DEBUG - reusing crumb
2025-01-09 02:19:19,415 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:19,415 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:19,601 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MU?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1207
2025-01-09 02:19:19,602 - DEBUG - response code=200
2025-01-09 02:19:19,602 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:19,602 - DEBUG -    Exiting get()
2025-01-09 02:19:19,603 - DEBUG - MU: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:19,604 - DEBUG - MU: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:19,607 - DEBUG - MU: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:19,613 - DEBUG - MU: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:19,613 - DEBUG -   Exiting history()
2025-01-09 02:19:19,613 - DEBUG -  Exiting history()
2025-01-09 02:19:19,615 - DEBUG - Exiting download()
2025-01-09 02:19:19,834 - ERROR - Error writing data for MU to DB: schema "np" does not exist
LINE 4:             VALUES ('MU','2020-01-01'::date,np.float64(53.69...
                                                    ^

2025-01-09 02:19:19,834 - DEBUG - Entering download()
2025-01-09 02:19:19,834 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:19,834 - DEBUG -  Entering history()
2025-01-09 02:19:19,835 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MSFT', 1, 0])
2025-01-09 02:19:19,835 - DEBUG -   Entering history()
2025-01-09 02:19:19,835 - DEBUG - MSFT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:19,835 - DEBUG -    Entering get()
2025-01-09 02:19:19,836 - DEBUG -     Entering _make_request()
2025-01-09 02:19:19,836 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MSFT
2025-01-09 02:19:19,836 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:19,836 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:19,836 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:19,836 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:19,836 - DEBUG - reusing cookie
2025-01-09 02:19:19,836 - DEBUG - reusing crumb
2025-01-09 02:19:19,836 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:19,836 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:20,008 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MSFT?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1212
2025-01-09 02:19:20,008 - DEBUG - response code=200
2025-01-09 02:19:20,008 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:20,008 - DEBUG -    Exiting get()
2025-01-09 02:19:20,009 - DEBUG - MSFT: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:20,010 - DEBUG - MSFT: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:20,014 - DEBUG - MSFT: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:20,019 - DEBUG - MSFT: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:20,019 - DEBUG -   Exiting history()
2025-01-09 02:19:20,019 - DEBUG -  Exiting history()
2025-01-09 02:19:20,021 - DEBUG - Exiting download()
2025-01-09 02:19:20,133 - ERROR - Error writing data for MSFT to DB: schema "np" does not exist
LINE 4:             VALUES ('MSFT','2020-01-01'::date,np.float64(151...
                                                      ^

2025-01-09 02:19:20,134 - DEBUG - Entering download()
2025-01-09 02:19:20,134 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:20,134 - DEBUG -  Entering history()
2025-01-09 02:19:20,135 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MAA', 1, 0])
2025-01-09 02:19:20,135 - DEBUG -   Entering history()
2025-01-09 02:19:20,135 - DEBUG - MAA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:20,136 - DEBUG -    Entering get()
2025-01-09 02:19:20,136 - DEBUG -     Entering _make_request()
2025-01-09 02:19:20,136 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MAA
2025-01-09 02:19:20,136 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:20,136 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:20,136 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:20,136 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:20,136 - DEBUG - reusing cookie
2025-01-09 02:19:20,136 - DEBUG - reusing crumb
2025-01-09 02:19:20,136 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:20,136 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:20,335 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MAA?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1222
2025-01-09 02:19:20,335 - DEBUG - response code=200
2025-01-09 02:19:20,335 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:20,335 - DEBUG -    Exiting get()
2025-01-09 02:19:20,337 - DEBUG - MAA: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:20,338 - DEBUG - MAA: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:20,342 - DEBUG - MAA: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:20,350 - DEBUG - MAA: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:20,350 - DEBUG -   Exiting history()
2025-01-09 02:19:20,350 - DEBUG -  Exiting history()
2025-01-09 02:19:20,353 - DEBUG - Exiting download()
2025-01-09 02:19:20,537 - ERROR - Error writing data for MAA to DB: schema "np" does not exist
LINE 4:             VALUES ('MAA','2020-01-01'::date,np.float64(112....
                                                     ^

2025-01-09 02:19:20,537 - DEBUG - Entering download()
2025-01-09 02:19:20,537 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:20,537 - DEBUG -  Entering history()
2025-01-09 02:19:20,538 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MRNA', 1, 0])
2025-01-09 02:19:20,538 - DEBUG -   Entering history()
2025-01-09 02:19:20,539 - DEBUG - MRNA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:20,539 - DEBUG -    Entering get()
2025-01-09 02:19:20,539 - DEBUG -     Entering _make_request()
2025-01-09 02:19:20,539 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MRNA
2025-01-09 02:19:20,539 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:20,539 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:20,539 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:20,539 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:20,539 - DEBUG - reusing cookie
2025-01-09 02:19:20,539 - DEBUG - reusing crumb
2025-01-09 02:19:20,539 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:20,539 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:20,688 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MRNA?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1189
2025-01-09 02:19:20,688 - DEBUG - response code=200
2025-01-09 02:19:20,688 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:20,688 - DEBUG -    Exiting get()
2025-01-09 02:19:20,689 - DEBUG - MRNA: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:20,690 - DEBUG - MRNA: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:20,693 - DEBUG - MRNA: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:20,697 - DEBUG - MRNA: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:20,698 - DEBUG -   Exiting history()
2025-01-09 02:19:20,698 - DEBUG -  Exiting history()
2025-01-09 02:19:20,699 - DEBUG - Exiting download()
2025-01-09 02:19:20,811 - ERROR - Error writing data for MRNA to DB: schema "np" does not exist
LINE 4:             VALUES ('MRNA','2020-01-01'::date,np.float64(19....
                                                      ^

2025-01-09 02:19:20,811 - DEBUG - Entering download()
2025-01-09 02:19:20,811 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:20,811 - DEBUG -  Entering history()
2025-01-09 02:19:20,812 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MHK', 1, 0])
2025-01-09 02:19:20,812 - DEBUG -   Entering history()
2025-01-09 02:19:20,813 - DEBUG - MHK: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:20,813 - DEBUG -    Entering get()
2025-01-09 02:19:20,813 - DEBUG -     Entering _make_request()
2025-01-09 02:19:20,813 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MHK
2025-01-09 02:19:20,813 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:20,813 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:20,813 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:20,813 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:20,813 - DEBUG - reusing cookie
2025-01-09 02:19:20,813 - DEBUG - reusing crumb
2025-01-09 02:19:20,813 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:20,813 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:20,966 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MHK?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1204
2025-01-09 02:19:20,967 - DEBUG - response code=200
2025-01-09 02:19:20,967 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:20,967 - DEBUG -    Exiting get()
2025-01-09 02:19:20,968 - DEBUG - MHK: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:20,968 - DEBUG - MHK: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:20,971 - DEBUG - MHK: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:20,976 - DEBUG - MHK: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:20,976 - DEBUG -   Exiting history()
2025-01-09 02:19:20,976 - DEBUG -  Exiting history()
2025-01-09 02:19:20,978 - DEBUG - Exiting download()
2025-01-09 02:19:21,086 - ERROR - Error writing data for MHK to DB: schema "np" does not exist
LINE 4:             VALUES ('MHK','2020-01-01'::date,np.float64(136....
                                                     ^

2025-01-09 02:19:21,086 - DEBUG - Entering download()
2025-01-09 02:19:21,086 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:21,086 - DEBUG -  Entering history()
2025-01-09 02:19:21,087 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MOH', 1, 0])
2025-01-09 02:19:21,087 - DEBUG -   Entering history()
2025-01-09 02:19:21,087 - DEBUG - MOH: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:21,087 - DEBUG -    Entering get()
2025-01-09 02:19:21,088 - DEBUG -     Entering _make_request()
2025-01-09 02:19:21,088 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MOH
2025-01-09 02:19:21,088 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:21,088 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:21,088 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:21,088 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:21,088 - DEBUG - reusing cookie
2025-01-09 02:19:21,088 - DEBUG - reusing crumb
2025-01-09 02:19:21,088 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:21,088 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:21,246 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MOH?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1181
2025-01-09 02:19:21,247 - DEBUG - response code=200
2025-01-09 02:19:21,247 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:21,247 - DEBUG -    Exiting get()
2025-01-09 02:19:21,248 - DEBUG - MOH: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:21,249 - DEBUG - MOH: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:21,253 - DEBUG - MOH: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:21,259 - DEBUG - MOH: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:21,259 - DEBUG -   Exiting history()
2025-01-09 02:19:21,259 - DEBUG -  Exiting history()
2025-01-09 02:19:21,261 - DEBUG - Exiting download()
2025-01-09 02:19:21,371 - ERROR - Error writing data for MOH to DB: schema "np" does not exist
LINE 4:             VALUES ('MOH','2020-01-01'::date,np.float64(136....
                                                     ^

2025-01-09 02:19:21,371 - DEBUG - Entering download()
2025-01-09 02:19:21,371 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:21,372 - DEBUG -  Entering history()
2025-01-09 02:19:21,372 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TAP', 1, 0])
2025-01-09 02:19:21,372 - DEBUG -   Entering history()
2025-01-09 02:19:21,373 - DEBUG - TAP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:21,373 - DEBUG -    Entering get()
2025-01-09 02:19:21,373 - DEBUG -     Entering _make_request()
2025-01-09 02:19:21,373 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TAP
2025-01-09 02:19:21,373 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:21,373 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:21,373 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:21,373 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:21,373 - DEBUG - reusing cookie
2025-01-09 02:19:21,373 - DEBUG - reusing crumb
2025-01-09 02:19:21,373 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:21,373 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:21,569 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TAP?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1202
2025-01-09 02:19:21,570 - DEBUG - response code=200
2025-01-09 02:19:21,570 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:21,570 - DEBUG -    Exiting get()
2025-01-09 02:19:21,571 - DEBUG - TAP: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:21,573 - DEBUG - TAP: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:21,578 - DEBUG - TAP: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:21,585 - DEBUG - TAP: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:21,586 - DEBUG -   Exiting history()
2025-01-09 02:19:21,586 - DEBUG -  Exiting history()
2025-01-09 02:19:21,588 - DEBUG - Exiting download()
2025-01-09 02:19:21,710 - ERROR - Error writing data for TAP to DB: schema "np" does not exist
LINE 4:             VALUES ('TAP','2020-01-01'::date,np.float64(48.4...
                                                     ^

2025-01-09 02:19:21,710 - DEBUG - Entering download()
2025-01-09 02:19:21,710 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:21,711 - DEBUG -  Entering history()
2025-01-09 02:19:21,711 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MDLZ', 1, 0])
2025-01-09 02:19:21,711 - DEBUG -   Entering history()
2025-01-09 02:19:21,712 - DEBUG - MDLZ: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:21,712 - DEBUG -    Entering get()
2025-01-09 02:19:21,712 - DEBUG -     Entering _make_request()
2025-01-09 02:19:21,712 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MDLZ
2025-01-09 02:19:21,712 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:21,712 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:21,712 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:21,712 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:21,712 - DEBUG - reusing cookie
2025-01-09 02:19:21,712 - DEBUG - reusing crumb
2025-01-09 02:19:21,712 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:21,712 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:21,896 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MDLZ?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1219
2025-01-09 02:19:21,897 - DEBUG - response code=200
2025-01-09 02:19:21,897 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:21,897 - DEBUG -    Exiting get()
2025-01-09 02:19:21,899 - DEBUG - MDLZ: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:21,900 - DEBUG - MDLZ: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:21,905 - DEBUG - MDLZ: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:21,914 - DEBUG - MDLZ: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:21,914 - DEBUG -   Exiting history()
2025-01-09 02:19:21,914 - DEBUG -  Exiting history()
2025-01-09 02:19:21,917 - DEBUG - Exiting download()
2025-01-09 02:19:22,031 - ERROR - Error writing data for MDLZ to DB: schema "np" does not exist
LINE 4:             VALUES ('MDLZ','2020-01-01'::date,np.float64(48....
                                                      ^

2025-01-09 02:19:22,032 - DEBUG - Entering download()
2025-01-09 02:19:22,032 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:22,032 - DEBUG -  Entering history()
2025-01-09 02:19:22,032 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MPWR', 1, 0])
2025-01-09 02:19:22,032 - DEBUG -   Entering history()
2025-01-09 02:19:22,033 - DEBUG - MPWR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:22,033 - DEBUG -    Entering get()
2025-01-09 02:19:22,033 - DEBUG -     Entering _make_request()
2025-01-09 02:19:22,033 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MPWR
2025-01-09 02:19:22,033 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:22,033 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:22,033 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:22,033 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:22,033 - DEBUG - reusing cookie
2025-01-09 02:19:22,033 - DEBUG - reusing crumb
2025-01-09 02:19:22,033 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:22,033 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:22,208 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MPWR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1226
2025-01-09 02:19:22,209 - DEBUG - response code=200
2025-01-09 02:19:22,209 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:22,209 - DEBUG -    Exiting get()
2025-01-09 02:19:22,210 - DEBUG - MPWR: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:22,211 - DEBUG - MPWR: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:22,214 - DEBUG - MPWR: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:22,220 - DEBUG - MPWR: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:22,220 - DEBUG -   Exiting history()
2025-01-09 02:19:22,220 - DEBUG -  Exiting history()
2025-01-09 02:19:22,222 - DEBUG - Exiting download()
2025-01-09 02:19:22,369 - DEBUG - Entering download()
2025-01-09 02:19:22,369 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:22,369 - DEBUG -  Entering history()
2025-01-09 02:19:22,369 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MNST', 1, 0])
2025-01-09 02:19:22,369 - DEBUG -   Entering history()
2025-01-09 02:19:22,370 - DEBUG - MNST: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:22,370 - DEBUG -    Entering get()
2025-01-09 02:19:22,370 - DEBUG -     Entering _make_request()
2025-01-09 02:19:22,370 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MNST
2025-01-09 02:19:22,370 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:22,370 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:22,370 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:22,370 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:22,370 - DEBUG - reusing cookie
2025-01-09 02:19:22,370 - DEBUG - reusing crumb
2025-01-09 02:19:22,370 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:22,370 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:22,526 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MNST?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1219
2025-01-09 02:19:22,527 - DEBUG - response code=200
2025-01-09 02:19:22,527 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:22,527 - DEBUG -    Exiting get()
2025-01-09 02:19:22,529 - DEBUG - MNST: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:22,530 - DEBUG - MNST: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:22,534 - DEBUG - MNST: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:22,542 - DEBUG - MNST: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:22,543 - DEBUG -   Exiting history()
2025-01-09 02:19:22,543 - DEBUG -  Exiting history()
2025-01-09 02:19:22,545 - DEBUG - Exiting download()
2025-01-09 02:19:22,698 - DEBUG - Entering download()
2025-01-09 02:19:22,698 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:22,698 - DEBUG -  Entering history()
2025-01-09 02:19:22,698 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MCO', 1, 0])
2025-01-09 02:19:22,699 - DEBUG -   Entering history()
2025-01-09 02:19:22,699 - DEBUG - MCO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:22,700 - DEBUG -    Entering get()
2025-01-09 02:19:22,700 - DEBUG -     Entering _make_request()
2025-01-09 02:19:22,700 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MCO
2025-01-09 02:19:22,700 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:22,700 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:22,700 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:22,700 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:22,700 - DEBUG - reusing cookie
2025-01-09 02:19:22,700 - DEBUG - reusing crumb
2025-01-09 02:19:22,700 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:22,700 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:22,896 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MCO?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1201
2025-01-09 02:19:22,897 - DEBUG - response code=200
2025-01-09 02:19:22,897 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:22,897 - DEBUG -    Exiting get()
2025-01-09 02:19:22,898 - DEBUG - MCO: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:22,898 - DEBUG - MCO: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:22,901 - DEBUG - MCO: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:22,907 - DEBUG - MCO: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:22,907 - DEBUG -   Exiting history()
2025-01-09 02:19:22,907 - DEBUG -  Exiting history()
2025-01-09 02:19:22,909 - DEBUG - Exiting download()
2025-01-09 02:19:22,953 - DEBUG - Entering download()
2025-01-09 02:19:22,954 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:22,954 - DEBUG -  Entering history()
2025-01-09 02:19:22,954 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MS', 1, 0])
2025-01-09 02:19:22,954 - DEBUG -   Entering history()
2025-01-09 02:19:22,955 - DEBUG - MS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:22,955 - DEBUG -    Entering get()
2025-01-09 02:19:22,955 - DEBUG -     Entering _make_request()
2025-01-09 02:19:22,955 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MS
2025-01-09 02:19:22,955 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:22,955 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:22,955 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:22,955 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:22,955 - DEBUG - reusing cookie
2025-01-09 02:19:22,955 - DEBUG - reusing crumb
2025-01-09 02:19:22,955 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:22,955 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:23,143 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MS?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1188
2025-01-09 02:19:23,144 - DEBUG - response code=200
2025-01-09 02:19:23,144 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:23,144 - DEBUG -    Exiting get()
2025-01-09 02:19:23,145 - DEBUG - MS: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:23,146 - DEBUG - MS: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:23,149 - DEBUG - MS: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:23,154 - DEBUG - MS: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:23,154 - DEBUG -   Exiting history()
2025-01-09 02:19:23,154 - DEBUG -  Exiting history()
2025-01-09 02:19:23,156 - DEBUG - Exiting download()
2025-01-09 02:19:23,264 - ERROR - Error writing data for MS to DB: schema "np" does not exist
LINE 4:             VALUES ('MS','2020-01-01'::date,np.float64(43.56...
                                                    ^

2025-01-09 02:19:23,265 - DEBUG - Entering download()
2025-01-09 02:19:23,265 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:23,265 - DEBUG -  Entering history()
2025-01-09 02:19:23,266 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MOS', 1, 0])
2025-01-09 02:19:23,266 - DEBUG -   Entering history()
2025-01-09 02:19:23,266 - DEBUG - MOS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:23,267 - DEBUG -    Entering get()
2025-01-09 02:19:23,267 - DEBUG -     Entering _make_request()
2025-01-09 02:19:23,267 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MOS
2025-01-09 02:19:23,267 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:23,267 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:23,267 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:23,267 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:23,267 - DEBUG - reusing cookie
2025-01-09 02:19:23,267 - DEBUG - reusing crumb
2025-01-09 02:19:23,267 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:23,267 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:23,467 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MOS?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1198
2025-01-09 02:19:23,467 - DEBUG - response code=200
2025-01-09 02:19:23,467 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:23,467 - DEBUG -    Exiting get()
2025-01-09 02:19:23,469 - DEBUG - MOS: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:23,470 - DEBUG - MOS: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:23,473 - DEBUG - MOS: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:23,478 - DEBUG - MOS: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:23,478 - DEBUG -   Exiting history()
2025-01-09 02:19:23,478 - DEBUG -  Exiting history()
2025-01-09 02:19:23,480 - DEBUG - Exiting download()
2025-01-09 02:19:23,701 - ERROR - Error writing data for MOS to DB: schema "np" does not exist
LINE 4:             VALUES ('MOS','2020-01-01'::date,np.float64(20.1...
                                                     ^

2025-01-09 02:19:23,702 - DEBUG - Entering download()
2025-01-09 02:19:23,702 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:23,702 - DEBUG -  Entering history()
2025-01-09 02:19:23,702 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MSI', 1, 0])
2025-01-09 02:19:23,702 - DEBUG -   Entering history()
2025-01-09 02:19:23,703 - DEBUG - MSI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:23,703 - DEBUG -    Entering get()
2025-01-09 02:19:23,703 - DEBUG -     Entering _make_request()
2025-01-09 02:19:23,703 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MSI
2025-01-09 02:19:23,703 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:23,703 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:23,704 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:23,704 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:23,704 - DEBUG - reusing cookie
2025-01-09 02:19:23,704 - DEBUG - reusing crumb
2025-01-09 02:19:23,704 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:23,704 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:23,943 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MSI?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1212
2025-01-09 02:19:23,943 - DEBUG - response code=200
2025-01-09 02:19:23,943 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:23,943 - DEBUG -    Exiting get()
2025-01-09 02:19:23,944 - DEBUG - MSI: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:23,945 - DEBUG - MSI: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:23,948 - DEBUG - MSI: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:23,952 - DEBUG - MSI: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:23,952 - DEBUG -   Exiting history()
2025-01-09 02:19:23,952 - DEBUG -  Exiting history()
2025-01-09 02:19:23,954 - DEBUG - Exiting download()
2025-01-09 02:19:24,063 - ERROR - Error writing data for MSI to DB: schema "np" does not exist
LINE 4:             VALUES ('MSI','2020-01-01'::date,np.float64(151....
                                                     ^

2025-01-09 02:19:24,064 - DEBUG - Entering download()
2025-01-09 02:19:24,064 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:24,064 - DEBUG -  Entering history()
2025-01-09 02:19:24,064 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['MSCI', 1, 0])
2025-01-09 02:19:24,064 - DEBUG -   Entering history()
2025-01-09 02:19:24,065 - DEBUG - MSCI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:24,065 - DEBUG -    Entering get()
2025-01-09 02:19:24,065 - DEBUG -     Entering _make_request()
2025-01-09 02:19:24,066 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/MSCI
2025-01-09 02:19:24,066 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:24,066 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:24,066 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:24,066 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:24,066 - DEBUG - reusing cookie
2025-01-09 02:19:24,066 - DEBUG - reusing crumb
2025-01-09 02:19:24,066 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:24,066 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:24,231 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/MSCI?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1180
2025-01-09 02:19:24,232 - DEBUG - response code=200
2025-01-09 02:19:24,232 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:24,232 - DEBUG -    Exiting get()
2025-01-09 02:19:24,233 - DEBUG - MSCI: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:24,233 - DEBUG - MSCI: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:24,236 - DEBUG - MSCI: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:24,241 - DEBUG - MSCI: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:24,241 - DEBUG -   Exiting history()
2025-01-09 02:19:24,241 - DEBUG -  Exiting history()
2025-01-09 02:19:24,243 - DEBUG - Exiting download()
2025-01-09 02:19:24,462 - ERROR - Error writing data for MSCI to DB: schema "np" does not exist
LINE 4:             VALUES ('MSCI','2020-01-01'::date,np.float64(248...
                                                      ^

2025-01-09 02:19:24,463 - DEBUG - Entering download()
2025-01-09 02:19:24,463 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:24,463 - DEBUG -  Entering history()
2025-01-09 02:19:24,463 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NDAQ', 1, 0])
2025-01-09 02:19:24,463 - DEBUG -   Entering history()
2025-01-09 02:19:24,464 - DEBUG - NDAQ: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:24,464 - DEBUG -    Entering get()
2025-01-09 02:19:24,464 - DEBUG -     Entering _make_request()
2025-01-09 02:19:24,464 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NDAQ
2025-01-09 02:19:24,464 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:24,464 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:24,464 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:24,464 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:24,464 - DEBUG - reusing cookie
2025-01-09 02:19:24,464 - DEBUG - reusing crumb
2025-01-09 02:19:24,464 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:24,464 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:24,624 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NDAQ?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1185
2025-01-09 02:19:24,625 - DEBUG - response code=200
2025-01-09 02:19:24,625 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:24,625 - DEBUG -    Exiting get()
2025-01-09 02:19:24,626 - DEBUG - NDAQ: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:24,626 - DEBUG - NDAQ: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:24,630 - DEBUG - NDAQ: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:24,634 - DEBUG - NDAQ: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:24,635 - DEBUG -   Exiting history()
2025-01-09 02:19:24,635 - DEBUG -  Exiting history()
2025-01-09 02:19:24,637 - DEBUG - Exiting download()
2025-01-09 02:19:24,844 - ERROR - Error writing data for NDAQ to DB: schema "np" does not exist
LINE 4:             VALUES ('NDAQ','2020-01-01'::date,np.float64(33....
                                                      ^

2025-01-09 02:19:24,845 - DEBUG - Entering download()
2025-01-09 02:19:24,845 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:24,845 - DEBUG -  Entering history()
2025-01-09 02:19:24,845 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NTAP', 1, 0])
2025-01-09 02:19:24,846 - DEBUG -   Entering history()
2025-01-09 02:19:24,846 - DEBUG - NTAP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:24,847 - DEBUG -    Entering get()
2025-01-09 02:19:24,847 - DEBUG -     Entering _make_request()
2025-01-09 02:19:24,847 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NTAP
2025-01-09 02:19:24,847 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:24,847 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:24,847 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:24,847 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:24,847 - DEBUG - reusing cookie
2025-01-09 02:19:24,847 - DEBUG - reusing crumb
2025-01-09 02:19:24,847 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:24,847 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:25,008 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NTAP?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1261
2025-01-09 02:19:25,008 - DEBUG - response code=200
2025-01-09 02:19:25,008 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:25,008 - DEBUG -    Exiting get()
2025-01-09 02:19:25,009 - DEBUG - NTAP: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:25,010 - DEBUG - NTAP: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:25,014 - DEBUG - NTAP: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:25,018 - DEBUG - NTAP: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:25,018 - DEBUG -   Exiting history()
2025-01-09 02:19:25,018 - DEBUG -  Exiting history()
2025-01-09 02:19:25,020 - DEBUG - Exiting download()
2025-01-09 02:19:25,238 - ERROR - Error writing data for NTAP to DB: schema "np" does not exist
LINE 4:             VALUES ('NTAP','2020-01-01'::date,np.float64(53....
                                                      ^

2025-01-09 02:19:25,239 - DEBUG - Entering download()
2025-01-09 02:19:25,239 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:25,239 - DEBUG -  Entering history()
2025-01-09 02:19:25,239 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NFLX', 1, 0])
2025-01-09 02:19:25,240 - DEBUG -   Entering history()
2025-01-09 02:19:25,240 - DEBUG - NFLX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:25,241 - DEBUG -    Entering get()
2025-01-09 02:19:25,241 - DEBUG -     Entering _make_request()
2025-01-09 02:19:25,241 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NFLX
2025-01-09 02:19:25,241 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:25,241 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:25,241 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:25,241 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:25,241 - DEBUG - reusing cookie
2025-01-09 02:19:25,241 - DEBUG - reusing crumb
2025-01-09 02:19:25,241 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:25,241 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:25,406 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NFLX?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1195
2025-01-09 02:19:25,407 - DEBUG - response code=200
2025-01-09 02:19:25,407 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:25,407 - DEBUG -    Exiting get()
2025-01-09 02:19:25,408 - DEBUG - NFLX: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:25,409 - DEBUG - NFLX: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:25,411 - DEBUG - NFLX: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:25,416 - DEBUG - NFLX: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:25,416 - DEBUG -   Exiting history()
2025-01-09 02:19:25,416 - DEBUG -  Exiting history()
2025-01-09 02:19:25,418 - DEBUG - Exiting download()
2025-01-09 02:19:25,459 - DEBUG - Entering download()
2025-01-09 02:19:25,459 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:25,459 - DEBUG -  Entering history()
2025-01-09 02:19:25,459 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NEM', 1, 0])
2025-01-09 02:19:25,459 - DEBUG -   Entering history()
2025-01-09 02:19:25,460 - DEBUG - NEM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:25,460 - DEBUG -    Entering get()
2025-01-09 02:19:25,460 - DEBUG -     Entering _make_request()
2025-01-09 02:19:25,460 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NEM
2025-01-09 02:19:25,461 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:25,461 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:25,461 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:25,461 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:25,461 - DEBUG - reusing cookie
2025-01-09 02:19:25,461 - DEBUG - reusing crumb
2025-01-09 02:19:25,461 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:25,461 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:25,668 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NEM?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1196
2025-01-09 02:19:25,669 - DEBUG - response code=200
2025-01-09 02:19:25,669 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:25,669 - DEBUG -    Exiting get()
2025-01-09 02:19:25,670 - DEBUG - NEM: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:25,671 - DEBUG - NEM: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:25,674 - DEBUG - NEM: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:25,679 - DEBUG - NEM: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:25,679 - DEBUG -   Exiting history()
2025-01-09 02:19:25,680 - DEBUG -  Exiting history()
2025-01-09 02:19:25,682 - DEBUG - Exiting download()
2025-01-09 02:19:25,726 - DEBUG - Entering download()
2025-01-09 02:19:25,727 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:25,727 - DEBUG -  Entering history()
2025-01-09 02:19:25,727 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NWSA', 1, 0])
2025-01-09 02:19:25,727 - DEBUG -   Entering history()
2025-01-09 02:19:25,728 - DEBUG - NWSA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:25,728 - DEBUG -    Entering get()
2025-01-09 02:19:25,728 - DEBUG -     Entering _make_request()
2025-01-09 02:19:25,728 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NWSA
2025-01-09 02:19:25,728 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:25,728 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:25,728 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:25,728 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:25,728 - DEBUG - reusing cookie
2025-01-09 02:19:25,728 - DEBUG - reusing crumb
2025-01-09 02:19:25,728 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:25,728 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:25,886 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NWSA?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1196
2025-01-09 02:19:25,886 - DEBUG - response code=200
2025-01-09 02:19:25,887 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:25,887 - DEBUG -    Exiting get()
2025-01-09 02:19:25,888 - DEBUG - NWSA: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:25,888 - DEBUG - NWSA: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:25,891 - DEBUG - NWSA: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:25,896 - DEBUG - NWSA: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:25,896 - DEBUG -   Exiting history()
2025-01-09 02:19:25,896 - DEBUG -  Exiting history()
2025-01-09 02:19:25,898 - DEBUG - Exiting download()
2025-01-09 02:19:26,008 - ERROR - Error writing data for NWSA to DB: schema "np" does not exist
LINE 4:             VALUES ('NWSA','2020-01-01'::date,np.float64(13....
                                                      ^

2025-01-09 02:19:26,009 - DEBUG - Entering download()
2025-01-09 02:19:26,009 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:26,009 - DEBUG -  Entering history()
2025-01-09 02:19:26,009 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NWS', 1, 0])
2025-01-09 02:19:26,010 - DEBUG -   Entering history()
2025-01-09 02:19:26,010 - DEBUG - NWS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:26,010 - DEBUG -    Entering get()
2025-01-09 02:19:26,010 - DEBUG -     Entering _make_request()
2025-01-09 02:19:26,010 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NWS
2025-01-09 02:19:26,010 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:26,010 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:26,010 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:26,011 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:26,011 - DEBUG - reusing cookie
2025-01-09 02:19:26,011 - DEBUG - reusing crumb
2025-01-09 02:19:26,011 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:26,011 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:26,176 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NWS?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1191
2025-01-09 02:19:26,177 - DEBUG - response code=200
2025-01-09 02:19:26,177 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:26,177 - DEBUG -    Exiting get()
2025-01-09 02:19:26,178 - DEBUG - NWS: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:26,179 - DEBUG - NWS: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:26,182 - DEBUG - NWS: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:26,186 - DEBUG - NWS: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:26,187 - DEBUG -   Exiting history()
2025-01-09 02:19:26,187 - DEBUG -  Exiting history()
2025-01-09 02:19:26,189 - DEBUG - Exiting download()
2025-01-09 02:19:26,351 - DEBUG - Entering download()
2025-01-09 02:19:26,352 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:26,352 - DEBUG -  Entering history()
2025-01-09 02:19:26,352 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NEE', 1, 0])
2025-01-09 02:19:26,353 - DEBUG -   Entering history()
2025-01-09 02:19:26,354 - DEBUG - NEE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:26,354 - DEBUG -    Entering get()
2025-01-09 02:19:26,354 - DEBUG -     Entering _make_request()
2025-01-09 02:19:26,354 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NEE
2025-01-09 02:19:26,354 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:26,354 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:26,354 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:26,354 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:26,354 - DEBUG - reusing cookie
2025-01-09 02:19:26,354 - DEBUG - reusing crumb
2025-01-09 02:19:26,355 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:26,355 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:26,554 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NEE?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1193
2025-01-09 02:19:26,555 - DEBUG - response code=200
2025-01-09 02:19:26,555 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:26,555 - DEBUG -    Exiting get()
2025-01-09 02:19:26,556 - DEBUG - NEE: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:26,557 - DEBUG - NEE: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:26,560 - DEBUG - NEE: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:26,564 - DEBUG - NEE: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:26,565 - DEBUG -   Exiting history()
2025-01-09 02:19:26,565 - DEBUG -  Exiting history()
2025-01-09 02:19:26,567 - DEBUG - Exiting download()
2025-01-09 02:19:26,782 - ERROR - Error writing data for NEE to DB: schema "np" does not exist
LINE 4:             VALUES ('NEE','2020-01-01'::date,np.float64(53.7...
                                                     ^

2025-01-09 02:19:26,783 - DEBUG - Entering download()
2025-01-09 02:19:26,783 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:26,783 - DEBUG -  Entering history()
2025-01-09 02:19:26,783 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NKE', 1, 0])
2025-01-09 02:19:26,783 - DEBUG -   Entering history()
2025-01-09 02:19:26,784 - DEBUG - NKE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:26,785 - DEBUG -    Entering get()
2025-01-09 02:19:26,785 - DEBUG -     Entering _make_request()
2025-01-09 02:19:26,785 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NKE
2025-01-09 02:19:26,785 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:26,785 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:26,785 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:26,785 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:26,785 - DEBUG - reusing cookie
2025-01-09 02:19:26,785 - DEBUG - reusing crumb
2025-01-09 02:19:26,785 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:26,785 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:26,981 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NKE?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1181
2025-01-09 02:19:26,982 - DEBUG - response code=200
2025-01-09 02:19:26,982 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:26,982 - DEBUG -    Exiting get()
2025-01-09 02:19:26,983 - DEBUG - NKE: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:26,984 - DEBUG - NKE: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:26,987 - DEBUG - NKE: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:26,992 - DEBUG - NKE: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:26,992 - DEBUG -   Exiting history()
2025-01-09 02:19:26,992 - DEBUG -  Exiting history()
2025-01-09 02:19:26,994 - DEBUG - Exiting download()
2025-01-09 02:19:27,101 - ERROR - Error writing data for NKE to DB: schema "np" does not exist
LINE 4:             VALUES ('NKE','2020-01-01'::date,np.float64(95.6...
                                                     ^

2025-01-09 02:19:27,102 - DEBUG - Entering download()
2025-01-09 02:19:27,102 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:27,102 - DEBUG -  Entering history()
2025-01-09 02:19:27,102 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NI', 1, 0])
2025-01-09 02:19:27,103 - DEBUG -   Entering history()
2025-01-09 02:19:27,103 - DEBUG - NI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:27,103 - DEBUG -    Entering get()
2025-01-09 02:19:27,104 - DEBUG -     Entering _make_request()
2025-01-09 02:19:27,104 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NI
2025-01-09 02:19:27,104 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:27,104 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:27,104 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:27,104 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:27,104 - DEBUG - reusing cookie
2025-01-09 02:19:27,104 - DEBUG - reusing crumb
2025-01-09 02:19:27,104 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:27,104 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:27,309 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NI?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1168
2025-01-09 02:19:27,311 - DEBUG - response code=200
2025-01-09 02:19:27,311 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:27,311 - DEBUG -    Exiting get()
2025-01-09 02:19:27,313 - DEBUG - NI: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:27,314 - DEBUG - NI: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:27,318 - DEBUG - NI: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:27,326 - DEBUG - NI: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:27,326 - DEBUG -   Exiting history()
2025-01-09 02:19:27,326 - DEBUG -  Exiting history()
2025-01-09 02:19:27,329 - DEBUG - Exiting download()
2025-01-09 02:19:27,484 - DEBUG - Entering download()
2025-01-09 02:19:27,484 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:27,485 - DEBUG -  Entering history()
2025-01-09 02:19:27,485 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NDSN', 1, 0])
2025-01-09 02:19:27,485 - DEBUG -   Entering history()
2025-01-09 02:19:27,486 - DEBUG - NDSN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:27,486 - DEBUG -    Entering get()
2025-01-09 02:19:27,486 - DEBUG -     Entering _make_request()
2025-01-09 02:19:27,486 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NDSN
2025-01-09 02:19:27,486 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:27,486 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:27,486 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:27,486 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:27,487 - DEBUG - reusing cookie
2025-01-09 02:19:27,487 - DEBUG - reusing crumb
2025-01-09 02:19:27,487 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:27,487 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:27,688 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NDSN?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1207
2025-01-09 02:19:27,688 - DEBUG - response code=200
2025-01-09 02:19:27,689 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:27,689 - DEBUG -    Exiting get()
2025-01-09 02:19:27,690 - DEBUG - NDSN: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:27,690 - DEBUG - NDSN: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:27,694 - DEBUG - NDSN: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:27,698 - DEBUG - NDSN: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:27,698 - DEBUG -   Exiting history()
2025-01-09 02:19:27,698 - DEBUG -  Exiting history()
2025-01-09 02:19:27,700 - DEBUG - Exiting download()
2025-01-09 02:19:27,812 - ERROR - Error writing data for NDSN to DB: schema "np" does not exist
LINE 4:             VALUES ('NDSN','2020-01-01'::date,np.float64(155...
                                                      ^

2025-01-09 02:19:27,813 - DEBUG - Entering download()
2025-01-09 02:19:27,813 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:27,813 - DEBUG -  Entering history()
2025-01-09 02:19:27,813 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NSC', 1, 0])
2025-01-09 02:19:27,813 - DEBUG -   Entering history()
2025-01-09 02:19:27,814 - DEBUG - NSC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:27,814 - DEBUG -    Entering get()
2025-01-09 02:19:27,814 - DEBUG -     Entering _make_request()
2025-01-09 02:19:27,814 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NSC
2025-01-09 02:19:27,814 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:27,814 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:27,815 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:27,815 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:27,815 - DEBUG - reusing cookie
2025-01-09 02:19:27,815 - DEBUG - reusing crumb
2025-01-09 02:19:27,815 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:27,815 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:28,025 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NSC?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1216
2025-01-09 02:19:28,025 - DEBUG - response code=200
2025-01-09 02:19:28,025 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:28,025 - DEBUG -    Exiting get()
2025-01-09 02:19:28,026 - DEBUG - NSC: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:28,027 - DEBUG - NSC: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:28,030 - DEBUG - NSC: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:28,035 - DEBUG - NSC: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:28,035 - DEBUG -   Exiting history()
2025-01-09 02:19:28,035 - DEBUG -  Exiting history()
2025-01-09 02:19:28,037 - DEBUG - Exiting download()
2025-01-09 02:19:28,158 - ERROR - Error writing data for NSC to DB: schema "np" does not exist
LINE 4:             VALUES ('NSC','2020-01-01'::date,np.float64(176....
                                                     ^

2025-01-09 02:19:28,158 - DEBUG - Entering download()
2025-01-09 02:19:28,159 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:28,159 - DEBUG -  Entering history()
2025-01-09 02:19:28,159 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NTRS', 1, 0])
2025-01-09 02:19:28,159 - DEBUG -   Entering history()
2025-01-09 02:19:28,160 - DEBUG - NTRS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:28,160 - DEBUG -    Entering get()
2025-01-09 02:19:28,160 - DEBUG -     Entering _make_request()
2025-01-09 02:19:28,160 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NTRS
2025-01-09 02:19:28,160 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:28,160 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:28,160 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:28,160 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:28,160 - DEBUG - reusing cookie
2025-01-09 02:19:28,160 - DEBUG - reusing crumb
2025-01-09 02:19:28,161 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:28,161 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:28,357 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NTRS?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1220
2025-01-09 02:19:28,358 - DEBUG - response code=200
2025-01-09 02:19:28,358 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:28,358 - DEBUG -    Exiting get()
2025-01-09 02:19:28,359 - DEBUG - NTRS: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:28,360 - DEBUG - NTRS: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:28,363 - DEBUG - NTRS: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:28,368 - DEBUG - NTRS: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:28,368 - DEBUG -   Exiting history()
2025-01-09 02:19:28,368 - DEBUG -  Exiting history()
2025-01-09 02:19:28,371 - DEBUG - Exiting download()
2025-01-09 02:19:28,415 - DEBUG - Entering download()
2025-01-09 02:19:28,415 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:28,415 - DEBUG -  Entering history()
2025-01-09 02:19:28,415 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NOC', 1, 0])
2025-01-09 02:19:28,415 - DEBUG -   Entering history()
2025-01-09 02:19:28,416 - DEBUG - NOC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:28,416 - DEBUG -    Entering get()
2025-01-09 02:19:28,417 - DEBUG -     Entering _make_request()
2025-01-09 02:19:28,417 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NOC
2025-01-09 02:19:28,417 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:28,417 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:28,417 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:28,417 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:28,417 - DEBUG - reusing cookie
2025-01-09 02:19:28,417 - DEBUG - reusing crumb
2025-01-09 02:19:28,417 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:28,417 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:28,634 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NOC?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1217
2025-01-09 02:19:28,635 - DEBUG - response code=200
2025-01-09 02:19:28,635 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:28,635 - DEBUG -    Exiting get()
2025-01-09 02:19:28,636 - DEBUG - NOC: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:28,638 - DEBUG - NOC: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:28,643 - DEBUG - NOC: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:28,652 - DEBUG - NOC: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:28,652 - DEBUG -   Exiting history()
2025-01-09 02:19:28,652 - DEBUG -  Exiting history()
2025-01-09 02:19:28,654 - DEBUG - Exiting download()
2025-01-09 02:19:28,864 - ERROR - Error writing data for NOC to DB: schema "np" does not exist
LINE 4:             VALUES ('NOC','2020-01-01'::date,np.float64(317....
                                                     ^

2025-01-09 02:19:28,865 - DEBUG - Entering download()
2025-01-09 02:19:28,865 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:28,865 - DEBUG -  Entering history()
2025-01-09 02:19:28,865 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NCLH', 1, 0])
2025-01-09 02:19:28,865 - DEBUG -   Entering history()
2025-01-09 02:19:28,866 - DEBUG - NCLH: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:28,866 - DEBUG -    Entering get()
2025-01-09 02:19:28,866 - DEBUG -     Entering _make_request()
2025-01-09 02:19:28,866 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NCLH
2025-01-09 02:19:28,866 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:28,866 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:28,866 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:28,866 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:28,867 - DEBUG - reusing cookie
2025-01-09 02:19:28,867 - DEBUG - reusing crumb
2025-01-09 02:19:28,867 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:28,867 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:29,026 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NCLH?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1225
2025-01-09 02:19:29,027 - DEBUG - response code=200
2025-01-09 02:19:29,027 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:29,027 - DEBUG -    Exiting get()
2025-01-09 02:19:29,028 - DEBUG - NCLH: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:29,029 - DEBUG - NCLH: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:29,032 - DEBUG - NCLH: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:29,038 - DEBUG - NCLH: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:29,038 - DEBUG -   Exiting history()
2025-01-09 02:19:29,038 - DEBUG -  Exiting history()
2025-01-09 02:19:29,040 - DEBUG - Exiting download()
2025-01-09 02:19:29,152 - ERROR - Error writing data for NCLH to DB: schema "np" does not exist
LINE 4:             VALUES ('NCLH','2020-01-01'::date,np.float64(58....
                                                      ^

2025-01-09 02:19:29,153 - DEBUG - Entering download()
2025-01-09 02:19:29,153 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:29,153 - DEBUG -  Entering history()
2025-01-09 02:19:29,153 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NRG', 1, 0])
2025-01-09 02:19:29,154 - DEBUG -   Entering history()
2025-01-09 02:19:29,154 - DEBUG - NRG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:29,154 - DEBUG -    Entering get()
2025-01-09 02:19:29,154 - DEBUG -     Entering _make_request()
2025-01-09 02:19:29,154 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NRG
2025-01-09 02:19:29,155 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:29,155 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:29,155 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:29,155 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:29,155 - DEBUG - reusing cookie
2025-01-09 02:19:29,155 - DEBUG - reusing crumb
2025-01-09 02:19:29,155 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:29,155 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:29,314 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NRG?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1189
2025-01-09 02:19:29,315 - DEBUG - response code=200
2025-01-09 02:19:29,315 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:29,315 - DEBUG -    Exiting get()
2025-01-09 02:19:29,316 - DEBUG - NRG: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:29,317 - DEBUG - NRG: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:29,320 - DEBUG - NRG: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:29,325 - DEBUG - NRG: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:29,326 - DEBUG -   Exiting history()
2025-01-09 02:19:29,326 - DEBUG -  Exiting history()
2025-01-09 02:19:29,328 - DEBUG - Exiting download()
2025-01-09 02:19:29,373 - DEBUG - Entering download()
2025-01-09 02:19:29,373 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:29,373 - DEBUG -  Entering history()
2025-01-09 02:19:29,374 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NUE', 1, 0])
2025-01-09 02:19:29,374 - DEBUG -   Entering history()
2025-01-09 02:19:29,375 - DEBUG - NUE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:29,375 - DEBUG -    Entering get()
2025-01-09 02:19:29,375 - DEBUG -     Entering _make_request()
2025-01-09 02:19:29,375 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NUE
2025-01-09 02:19:29,375 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:29,375 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:29,375 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:29,375 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:29,375 - DEBUG - reusing cookie
2025-01-09 02:19:29,375 - DEBUG - reusing crumb
2025-01-09 02:19:29,375 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:29,375 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:29,576 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NUE?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1195
2025-01-09 02:19:29,577 - DEBUG - response code=200
2025-01-09 02:19:29,577 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:29,577 - DEBUG -    Exiting get()
2025-01-09 02:19:29,578 - DEBUG - NUE: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:29,579 - DEBUG - NUE: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:29,582 - DEBUG - NUE: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:29,587 - DEBUG - NUE: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:29,587 - DEBUG -   Exiting history()
2025-01-09 02:19:29,587 - DEBUG -  Exiting history()
2025-01-09 02:19:29,589 - DEBUG - Exiting download()
2025-01-09 02:19:29,633 - DEBUG - Entering download()
2025-01-09 02:19:29,633 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:29,633 - DEBUG -  Entering history()
2025-01-09 02:19:29,633 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NVDA', 1, 0])
2025-01-09 02:19:29,633 - DEBUG -   Entering history()
2025-01-09 02:19:29,634 - DEBUG - NVDA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:29,634 - DEBUG -    Entering get()
2025-01-09 02:19:29,634 - DEBUG -     Entering _make_request()
2025-01-09 02:19:29,634 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NVDA
2025-01-09 02:19:29,634 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:29,634 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:29,634 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:29,634 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:29,635 - DEBUG - reusing cookie
2025-01-09 02:19:29,635 - DEBUG - reusing crumb
2025-01-09 02:19:29,635 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:29,635 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:29,794 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NVDA?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1197
2025-01-09 02:19:29,795 - DEBUG - response code=200
2025-01-09 02:19:29,795 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:29,795 - DEBUG -    Exiting get()
2025-01-09 02:19:29,796 - DEBUG - NVDA: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:29,797 - DEBUG - NVDA: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:29,802 - DEBUG - NVDA: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:29,808 - DEBUG - NVDA: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:29,808 - DEBUG -   Exiting history()
2025-01-09 02:19:29,808 - DEBUG -  Exiting history()
2025-01-09 02:19:29,810 - DEBUG - Exiting download()
2025-01-09 02:19:29,855 - DEBUG - Entering download()
2025-01-09 02:19:29,855 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:29,855 - DEBUG -  Entering history()
2025-01-09 02:19:29,856 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NVR', 1, 0])
2025-01-09 02:19:29,856 - DEBUG -   Entering history()
2025-01-09 02:19:29,857 - DEBUG - NVR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:29,857 - DEBUG -    Entering get()
2025-01-09 02:19:29,857 - DEBUG -     Entering _make_request()
2025-01-09 02:19:29,857 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NVR
2025-01-09 02:19:29,857 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:29,857 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:29,857 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:29,857 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:29,857 - DEBUG - reusing cookie
2025-01-09 02:19:29,857 - DEBUG - reusing crumb
2025-01-09 02:19:29,857 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:29,857 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:30,027 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NVR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1144
2025-01-09 02:19:30,028 - DEBUG - response code=200
2025-01-09 02:19:30,028 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:30,028 - DEBUG -    Exiting get()
2025-01-09 02:19:30,029 - DEBUG - NVR: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:30,030 - DEBUG - NVR: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:30,034 - DEBUG - NVR: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:30,041 - DEBUG - NVR: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:30,041 - DEBUG -   Exiting history()
2025-01-09 02:19:30,041 - DEBUG -  Exiting history()
2025-01-09 02:19:30,044 - DEBUG - Exiting download()
2025-01-09 02:19:30,201 - DEBUG - Entering download()
2025-01-09 02:19:30,202 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:30,202 - DEBUG -  Entering history()
2025-01-09 02:19:30,202 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NXPI', 1, 0])
2025-01-09 02:19:30,202 - DEBUG -   Entering history()
2025-01-09 02:19:30,203 - DEBUG - NXPI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:30,204 - DEBUG -    Entering get()
2025-01-09 02:19:30,204 - DEBUG -     Entering _make_request()
2025-01-09 02:19:30,204 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NXPI
2025-01-09 02:19:30,204 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:30,204 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:30,204 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:30,204 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:30,204 - DEBUG - reusing cookie
2025-01-09 02:19:30,204 - DEBUG - reusing crumb
2025-01-09 02:19:30,204 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:30,204 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:30,384 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NXPI?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1202
2025-01-09 02:19:30,385 - DEBUG - response code=200
2025-01-09 02:19:30,385 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:30,385 - DEBUG -    Exiting get()
2025-01-09 02:19:30,386 - DEBUG - NXPI: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:30,386 - DEBUG - NXPI: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:30,389 - DEBUG - NXPI: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:30,394 - DEBUG - NXPI: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:30,394 - DEBUG -   Exiting history()
2025-01-09 02:19:30,394 - DEBUG -  Exiting history()
2025-01-09 02:19:30,396 - DEBUG - Exiting download()
2025-01-09 02:19:30,437 - DEBUG - Entering download()
2025-01-09 02:19:30,437 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:30,437 - DEBUG -  Entering history()
2025-01-09 02:19:30,438 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ORLY', 1, 0])
2025-01-09 02:19:30,438 - DEBUG -   Entering history()
2025-01-09 02:19:30,438 - DEBUG - ORLY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:30,439 - DEBUG -    Entering get()
2025-01-09 02:19:30,439 - DEBUG -     Entering _make_request()
2025-01-09 02:19:30,439 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ORLY
2025-01-09 02:19:30,439 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:30,439 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:30,439 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:30,439 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:30,439 - DEBUG - reusing cookie
2025-01-09 02:19:30,439 - DEBUG - reusing crumb
2025-01-09 02:19:30,439 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:30,439 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:30,611 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ORLY?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1208
2025-01-09 02:19:30,611 - DEBUG - response code=200
2025-01-09 02:19:30,612 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:30,612 - DEBUG -    Exiting get()
2025-01-09 02:19:30,613 - DEBUG - ORLY: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:30,614 - DEBUG - ORLY: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:30,617 - DEBUG - ORLY: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:30,623 - DEBUG - ORLY: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:30,623 - DEBUG -   Exiting history()
2025-01-09 02:19:30,623 - DEBUG -  Exiting history()
2025-01-09 02:19:30,625 - DEBUG - Exiting download()
2025-01-09 02:19:30,734 - ERROR - Error writing data for ORLY to DB: schema "np" does not exist
LINE 4:             VALUES ('ORLY','2020-01-01'::date,np.float64(438...
                                                      ^

2025-01-09 02:19:30,735 - DEBUG - Entering download()
2025-01-09 02:19:30,735 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:30,735 - DEBUG -  Entering history()
2025-01-09 02:19:30,735 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['OXY', 1, 0])
2025-01-09 02:19:30,735 - DEBUG -   Entering history()
2025-01-09 02:19:30,736 - DEBUG - OXY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:30,736 - DEBUG -    Entering get()
2025-01-09 02:19:30,736 - DEBUG -     Entering _make_request()
2025-01-09 02:19:30,736 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/OXY
2025-01-09 02:19:30,736 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:30,736 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:30,736 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:30,736 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:30,737 - DEBUG - reusing cookie
2025-01-09 02:19:30,737 - DEBUG - reusing crumb
2025-01-09 02:19:30,737 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:30,737 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:30,957 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/OXY?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1220
2025-01-09 02:19:30,957 - DEBUG - response code=200
2025-01-09 02:19:30,957 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:30,957 - DEBUG -    Exiting get()
2025-01-09 02:19:30,958 - DEBUG - OXY: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:30,959 - DEBUG - OXY: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:30,962 - DEBUG - OXY: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:30,970 - DEBUG - OXY: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:30,970 - DEBUG -   Exiting history()
2025-01-09 02:19:30,970 - DEBUG -  Exiting history()
2025-01-09 02:19:30,972 - DEBUG - Exiting download()
2025-01-09 02:19:31,197 - ERROR - Error writing data for OXY to DB: schema "np" does not exist
LINE 4:             VALUES ('OXY','2020-01-01'::date,np.float64(38.8...
                                                     ^

2025-01-09 02:19:31,197 - DEBUG - Entering download()
2025-01-09 02:19:31,198 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:31,198 - DEBUG -  Entering history()
2025-01-09 02:19:31,198 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ODFL', 1, 0])
2025-01-09 02:19:31,198 - DEBUG -   Entering history()
2025-01-09 02:19:31,199 - DEBUG - ODFL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:31,199 - DEBUG -    Entering get()
2025-01-09 02:19:31,199 - DEBUG -     Entering _make_request()
2025-01-09 02:19:31,199 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ODFL
2025-01-09 02:19:31,199 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:31,199 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:31,199 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:31,199 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:31,199 - DEBUG - reusing cookie
2025-01-09 02:19:31,199 - DEBUG - reusing crumb
2025-01-09 02:19:31,199 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:31,199 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:31,381 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ODFL?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1228
2025-01-09 02:19:31,381 - DEBUG - response code=200
2025-01-09 02:19:31,382 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:31,382 - DEBUG -    Exiting get()
2025-01-09 02:19:31,383 - DEBUG - ODFL: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:31,384 - DEBUG - ODFL: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:31,387 - DEBUG - ODFL: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:31,393 - DEBUG - ODFL: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:31,393 - DEBUG -   Exiting history()
2025-01-09 02:19:31,393 - DEBUG -  Exiting history()
2025-01-09 02:19:31,395 - DEBUG - Exiting download()
2025-01-09 02:19:31,513 - ERROR - Error writing data for ODFL to DB: schema "np" does not exist
LINE 4:             VALUES ('ODFL','2020-01-01'::date,np.float64(62....
                                                      ^

2025-01-09 02:19:31,514 - DEBUG - Entering download()
2025-01-09 02:19:31,514 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:31,514 - DEBUG -  Entering history()
2025-01-09 02:19:31,514 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['OMC', 1, 0])
2025-01-09 02:19:31,514 - DEBUG -   Entering history()
2025-01-09 02:19:31,515 - DEBUG - OMC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:31,515 - DEBUG -    Entering get()
2025-01-09 02:19:31,515 - DEBUG -     Entering _make_request()
2025-01-09 02:19:31,515 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/OMC
2025-01-09 02:19:31,515 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:31,515 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:31,515 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:31,515 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:31,516 - DEBUG - reusing cookie
2025-01-09 02:19:31,516 - DEBUG - reusing crumb
2025-01-09 02:19:31,516 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:31,516 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:31,748 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/OMC?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1190
2025-01-09 02:19:31,748 - DEBUG - response code=200
2025-01-09 02:19:31,748 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:31,748 - DEBUG -    Exiting get()
2025-01-09 02:19:31,749 - DEBUG - OMC: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:31,750 - DEBUG - OMC: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:31,753 - DEBUG - OMC: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:31,758 - DEBUG - OMC: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:31,759 - DEBUG -   Exiting history()
2025-01-09 02:19:31,759 - DEBUG -  Exiting history()
2025-01-09 02:19:31,761 - DEBUG - Exiting download()
2025-01-09 02:19:31,871 - ERROR - Error writing data for OMC to DB: schema "np" does not exist
LINE 4:             VALUES ('OMC','2020-01-01'::date,np.float64(67.6...
                                                     ^

2025-01-09 02:19:31,872 - DEBUG - Entering download()
2025-01-09 02:19:31,872 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:31,872 - DEBUG -  Entering history()
2025-01-09 02:19:31,872 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ON', 1, 0])
2025-01-09 02:19:31,872 - DEBUG -   Entering history()
2025-01-09 02:19:31,873 - DEBUG - ON: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:31,873 - DEBUG -    Entering get()
2025-01-09 02:19:31,873 - DEBUG -     Entering _make_request()
2025-01-09 02:19:31,873 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ON
2025-01-09 02:19:31,873 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:31,874 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:31,874 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:31,874 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:31,874 - DEBUG - reusing cookie
2025-01-09 02:19:31,874 - DEBUG - reusing crumb
2025-01-09 02:19:31,874 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:31,874 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:32,028 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ON?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1207
2025-01-09 02:19:32,028 - DEBUG - response code=200
2025-01-09 02:19:32,029 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:32,029 - DEBUG -    Exiting get()
2025-01-09 02:19:32,030 - DEBUG - ON: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:32,030 - DEBUG - ON: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:32,033 - DEBUG - ON: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:32,038 - DEBUG - ON: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:32,038 - DEBUG -   Exiting history()
2025-01-09 02:19:32,038 - DEBUG -  Exiting history()
2025-01-09 02:19:32,040 - DEBUG - Exiting download()
2025-01-09 02:19:32,260 - ERROR - Error writing data for ON to DB: schema "np" does not exist
LINE 4:             VALUES ('ON','2020-01-01'::date,np.float64(24.75...
                                                    ^

2025-01-09 02:19:32,261 - DEBUG - Entering download()
2025-01-09 02:19:32,261 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:32,261 - DEBUG -  Entering history()
2025-01-09 02:19:32,261 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['OKE', 1, 0])
2025-01-09 02:19:32,262 - DEBUG -   Entering history()
2025-01-09 02:19:32,263 - DEBUG - OKE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:32,263 - DEBUG -    Entering get()
2025-01-09 02:19:32,263 - DEBUG -     Entering _make_request()
2025-01-09 02:19:32,263 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/OKE
2025-01-09 02:19:32,263 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:32,263 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:32,263 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:32,263 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:32,263 - DEBUG - reusing cookie
2025-01-09 02:19:32,263 - DEBUG - reusing crumb
2025-01-09 02:19:32,263 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:32,263 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:32,486 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/OKE?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1182
2025-01-09 02:19:32,487 - DEBUG - response code=200
2025-01-09 02:19:32,487 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:32,487 - DEBUG -    Exiting get()
2025-01-09 02:19:32,488 - DEBUG - OKE: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:32,489 - DEBUG - OKE: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:32,492 - DEBUG - OKE: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:32,498 - DEBUG - OKE: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:32,498 - DEBUG -   Exiting history()
2025-01-09 02:19:32,498 - DEBUG -  Exiting history()
2025-01-09 02:19:32,500 - DEBUG - Exiting download()
2025-01-09 02:19:32,609 - ERROR - Error writing data for OKE to DB: schema "np" does not exist
LINE 4:             VALUES ('OKE','2020-01-01'::date,np.float64(53.5...
                                                     ^

2025-01-09 02:19:32,609 - DEBUG - Entering download()
2025-01-09 02:19:32,609 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:32,610 - DEBUG -  Entering history()
2025-01-09 02:19:32,610 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ORCL', 1, 0])
2025-01-09 02:19:32,610 - DEBUG -   Entering history()
2025-01-09 02:19:32,611 - DEBUG - ORCL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:32,611 - DEBUG -    Entering get()
2025-01-09 02:19:32,611 - DEBUG -     Entering _make_request()
2025-01-09 02:19:32,611 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ORCL
2025-01-09 02:19:32,611 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:32,611 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:32,611 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:32,611 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:32,611 - DEBUG - reusing cookie
2025-01-09 02:19:32,611 - DEBUG - reusing crumb
2025-01-09 02:19:32,611 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:32,611 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:32,784 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ORCL?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1200
2025-01-09 02:19:32,784 - DEBUG - response code=200
2025-01-09 02:19:32,784 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:32,784 - DEBUG -    Exiting get()
2025-01-09 02:19:32,785 - DEBUG - ORCL: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:32,786 - DEBUG - ORCL: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:32,789 - DEBUG - ORCL: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:32,794 - DEBUG - ORCL: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:32,794 - DEBUG -   Exiting history()
2025-01-09 02:19:32,794 - DEBUG -  Exiting history()
2025-01-09 02:19:32,796 - DEBUG - Exiting download()
2025-01-09 02:19:32,838 - DEBUG - Entering download()
2025-01-09 02:19:32,838 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:32,838 - DEBUG -  Entering history()
2025-01-09 02:19:32,838 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['OTIS', 1, 0])
2025-01-09 02:19:32,839 - DEBUG -   Entering history()
2025-01-09 02:19:32,839 - DEBUG - OTIS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:32,839 - DEBUG -    Entering get()
2025-01-09 02:19:32,839 - DEBUG -     Entering _make_request()
2025-01-09 02:19:32,839 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/OTIS
2025-01-09 02:19:32,840 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:32,840 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:32,840 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:32,840 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:32,840 - DEBUG - reusing cookie
2025-01-09 02:19:32,840 - DEBUG - reusing crumb
2025-01-09 02:19:32,840 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:32,840 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:32,989 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/OTIS?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:19:32,990 - DEBUG - response code=400
2025-01-09 02:19:32,990 - DEBUG - toggling cookie strategy basic -> csrf
2025-01-09 02:19:32,990 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:32,990 - DEBUG - cookie_mode = 'csrf'
2025-01-09 02:19:32,990 - DEBUG -       Entering _get_crumb_csrf()
2025-01-09 02:19:32,990 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['csrf', 1, 0])
2025-01-09 02:19:33,130 - DEBUG - https://guce.yahoo.com:443 "GET /consent HTTP/1.1" 302 0
2025-01-09 02:19:33,661 - DEBUG - https://www.yahoo.com:443 "GET /?guccounter=1 HTTP/1.1" 200 None
2025-01-09 02:19:34,203 - DEBUG - Failed to find "csrfToken" in response
2025-01-09 02:19:34,203 - DEBUG -       Exiting _get_crumb_csrf()
2025-01-09 02:19:34,203 - DEBUG - toggling cookie strategy csrf -> basic
2025-01-09 02:19:34,203 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:34,204 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['basic', 1, 0])
2025-01-09 02:19:34,205 - DEBUG - loaded persistent cookie
2025-01-09 02:19:34,205 - DEBUG - reusing cookie
2025-01-09 02:19:34,358 - DEBUG - https://query1.finance.yahoo.com:443 "GET /v1/test/getcrumb HTTP/1.1" 200 11
2025-01-09 02:19:34,358 - DEBUG - crumb = 'mbrlfmeSllh'
2025-01-09 02:19:34,358 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:34,358 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:34,504 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/OTIS?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:19:34,505 - DEBUG - response code=400
2025-01-09 02:19:34,505 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:34,505 - DEBUG -    Exiting get()
2025-01-09 02:19:34,506 - ERROR - 
1 Failed download:
2025-01-09 02:19:34,507 - ERROR - ['OTIS']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1wk 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn\'t exist for startDate = 1577854800, endDate = 1577941200")')
2025-01-09 02:19:34,507 - DEBUG - ['OTIS']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1wk 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn't exist for startDate = 1577854800, endDate = 1577941200")

2025-01-09 02:19:34,509 - DEBUG - Exiting download()
2025-01-09 02:19:34,716 - ERROR - Error writing data for OTIS to DB: schema "np" does not exist
LINE 4:             VALUES ('OTIS','2020-03-19'::date,np.float64(37....
                                                      ^

2025-01-09 02:19:34,717 - DEBUG - Entering download()
2025-01-09 02:19:34,717 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:34,717 - DEBUG -  Entering history()
2025-01-09 02:19:34,717 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PCAR', 1, 0])
2025-01-09 02:19:34,718 - DEBUG -   Entering history()
2025-01-09 02:19:34,718 - DEBUG - PCAR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:34,718 - DEBUG -    Entering get()
2025-01-09 02:19:34,718 - DEBUG -     Entering _make_request()
2025-01-09 02:19:34,718 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PCAR
2025-01-09 02:19:34,718 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:34,719 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:34,719 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:34,719 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:34,719 - DEBUG - reusing cookie
2025-01-09 02:19:34,719 - DEBUG - reusing crumb
2025-01-09 02:19:34,719 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:34,719 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:34,906 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PCAR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1186
2025-01-09 02:19:34,906 - DEBUG - response code=200
2025-01-09 02:19:34,906 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:34,907 - DEBUG -    Exiting get()
2025-01-09 02:19:34,907 - DEBUG - PCAR: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:34,908 - DEBUG - PCAR: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:34,911 - DEBUG - PCAR: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:34,916 - DEBUG - PCAR: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:34,916 - DEBUG -   Exiting history()
2025-01-09 02:19:34,916 - DEBUG -  Exiting history()
2025-01-09 02:19:34,918 - DEBUG - Exiting download()
2025-01-09 02:19:34,963 - DEBUG - Entering download()
2025-01-09 02:19:34,963 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:34,963 - DEBUG -  Entering history()
2025-01-09 02:19:34,963 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PKG', 1, 0])
2025-01-09 02:19:34,964 - DEBUG -   Entering history()
2025-01-09 02:19:34,964 - DEBUG - PKG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:34,964 - DEBUG -    Entering get()
2025-01-09 02:19:34,964 - DEBUG -     Entering _make_request()
2025-01-09 02:19:34,964 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PKG
2025-01-09 02:19:34,964 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:34,965 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:34,965 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:34,965 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:34,965 - DEBUG - reusing cookie
2025-01-09 02:19:34,965 - DEBUG - reusing crumb
2025-01-09 02:19:34,965 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:34,965 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:35,186 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PKG?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1227
2025-01-09 02:19:35,186 - DEBUG - response code=200
2025-01-09 02:19:35,186 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:35,186 - DEBUG -    Exiting get()
2025-01-09 02:19:35,187 - DEBUG - PKG: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:35,188 - DEBUG - PKG: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:35,191 - DEBUG - PKG: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:35,196 - DEBUG - PKG: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:35,196 - DEBUG -   Exiting history()
2025-01-09 02:19:35,196 - DEBUG -  Exiting history()
2025-01-09 02:19:35,198 - DEBUG - Exiting download()
2025-01-09 02:19:35,304 - ERROR - Error writing data for PKG to DB: schema "np" does not exist
LINE 4:             VALUES ('PKG','2020-01-01'::date,np.float64(96.5...
                                                     ^

2025-01-09 02:19:35,305 - DEBUG - Entering download()
2025-01-09 02:19:35,305 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:35,305 - DEBUG -  Entering history()
2025-01-09 02:19:35,305 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PLTR', 1, 0])
2025-01-09 02:19:35,305 - DEBUG -   Entering history()
2025-01-09 02:19:35,306 - DEBUG - PLTR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:35,306 - DEBUG -    Entering get()
2025-01-09 02:19:35,306 - DEBUG -     Entering _make_request()
2025-01-09 02:19:35,306 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PLTR
2025-01-09 02:19:35,306 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:35,306 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:35,306 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:35,306 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:35,307 - DEBUG - reusing cookie
2025-01-09 02:19:35,307 - DEBUG - reusing crumb
2025-01-09 02:19:35,307 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:35,307 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:35,463 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PLTR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:19:35,463 - DEBUG - response code=400
2025-01-09 02:19:35,463 - DEBUG - toggling cookie strategy basic -> csrf
2025-01-09 02:19:35,464 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:35,464 - DEBUG - cookie_mode = 'csrf'
2025-01-09 02:19:35,464 - DEBUG -       Entering _get_crumb_csrf()
2025-01-09 02:19:35,464 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['csrf', 1, 0])
2025-01-09 02:19:35,618 - DEBUG - https://guce.yahoo.com:443 "GET /consent HTTP/1.1" 302 0
2025-01-09 02:19:35,942 - DEBUG - https://www.yahoo.com:443 "GET /?guccounter=1 HTTP/1.1" 200 None
2025-01-09 02:19:36,471 - DEBUG - Failed to find "csrfToken" in response
2025-01-09 02:19:36,471 - DEBUG -       Exiting _get_crumb_csrf()
2025-01-09 02:19:36,471 - DEBUG - toggling cookie strategy csrf -> basic
2025-01-09 02:19:36,471 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:36,472 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['basic', 1, 0])
2025-01-09 02:19:36,472 - DEBUG - loaded persistent cookie
2025-01-09 02:19:36,472 - DEBUG - reusing cookie
2025-01-09 02:19:36,613 - DEBUG - https://query1.finance.yahoo.com:443 "GET /v1/test/getcrumb HTTP/1.1" 200 11
2025-01-09 02:19:36,613 - DEBUG - crumb = 'mbrlfmeSllh'
2025-01-09 02:19:36,613 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:36,613 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:36,763 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PLTR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:19:36,763 - DEBUG - response code=400
2025-01-09 02:19:36,763 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:36,763 - DEBUG -    Exiting get()
2025-01-09 02:19:36,765 - ERROR - 
1 Failed download:
2025-01-09 02:19:36,765 - ERROR - ['PLTR']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1wk 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn\'t exist for startDate = 1577854800, endDate = 1577941200")')
2025-01-09 02:19:36,765 - DEBUG - ['PLTR']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1wk 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn't exist for startDate = 1577854800, endDate = 1577941200")

2025-01-09 02:19:36,767 - DEBUG - Exiting download()
2025-01-09 02:19:36,871 - ERROR - Error writing data for PLTR to DB: schema "np" does not exist
LINE 4:             VALUES ('PLTR','2020-09-30'::date,np.float64(10....
                                                      ^

2025-01-09 02:19:36,872 - DEBUG - Entering download()
2025-01-09 02:19:36,872 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:36,872 - DEBUG -  Entering history()
2025-01-09 02:19:36,872 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PANW', 1, 0])
2025-01-09 02:19:36,873 - DEBUG -   Entering history()
2025-01-09 02:19:36,873 - DEBUG - PANW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:36,874 - DEBUG -    Entering get()
2025-01-09 02:19:36,874 - DEBUG -     Entering _make_request()
2025-01-09 02:19:36,874 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PANW
2025-01-09 02:19:36,874 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:36,874 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:36,874 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:36,874 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:36,874 - DEBUG - reusing cookie
2025-01-09 02:19:36,874 - DEBUG - reusing crumb
2025-01-09 02:19:36,874 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:36,874 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:37,026 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PANW?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1218
2025-01-09 02:19:37,026 - DEBUG - response code=200
2025-01-09 02:19:37,027 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:37,027 - DEBUG -    Exiting get()
2025-01-09 02:19:37,028 - DEBUG - PANW: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:37,029 - DEBUG - PANW: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:37,032 - DEBUG - PANW: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:37,037 - DEBUG - PANW: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:37,037 - DEBUG -   Exiting history()
2025-01-09 02:19:37,038 - DEBUG -  Exiting history()
2025-01-09 02:19:37,040 - DEBUG - Exiting download()
2025-01-09 02:19:37,145 - ERROR - Error writing data for PANW to DB: schema "np" does not exist
LINE 4:             VALUES ('PANW','2020-01-01'::date,np.float64(38....
                                                      ^

2025-01-09 02:19:37,145 - DEBUG - Entering download()
2025-01-09 02:19:37,145 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:37,146 - DEBUG -  Entering history()
2025-01-09 02:19:37,146 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PARA', 1, 0])
2025-01-09 02:19:37,146 - DEBUG -   Entering history()
2025-01-09 02:19:37,147 - DEBUG - PARA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:37,147 - DEBUG -    Entering get()
2025-01-09 02:19:37,147 - DEBUG -     Entering _make_request()
2025-01-09 02:19:37,147 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PARA
2025-01-09 02:19:37,147 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:37,147 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:37,147 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:37,147 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:37,147 - DEBUG - reusing cookie
2025-01-09 02:19:37,147 - DEBUG - reusing crumb
2025-01-09 02:19:37,147 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:37,148 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:37,324 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PARA?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1192
2025-01-09 02:19:37,325 - DEBUG - response code=200
2025-01-09 02:19:37,325 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:37,325 - DEBUG -    Exiting get()
2025-01-09 02:19:37,326 - DEBUG - PARA: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:37,327 - DEBUG - PARA: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:37,330 - DEBUG - PARA: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:37,334 - DEBUG - PARA: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:37,334 - DEBUG -   Exiting history()
2025-01-09 02:19:37,335 - DEBUG -  Exiting history()
2025-01-09 02:19:37,337 - DEBUG - Exiting download()
2025-01-09 02:19:37,445 - ERROR - Error writing data for PARA to DB: schema "np" does not exist
LINE 4:             VALUES ('PARA','2020-01-01'::date,np.float64(36....
                                                      ^

2025-01-09 02:19:37,446 - DEBUG - Entering download()
2025-01-09 02:19:37,446 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:37,446 - DEBUG -  Entering history()
2025-01-09 02:19:37,446 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PH', 1, 0])
2025-01-09 02:19:37,446 - DEBUG -   Entering history()
2025-01-09 02:19:37,447 - DEBUG - PH: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:37,447 - DEBUG -    Entering get()
2025-01-09 02:19:37,447 - DEBUG -     Entering _make_request()
2025-01-09 02:19:37,447 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PH
2025-01-09 02:19:37,447 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:37,447 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:37,447 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:37,447 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:37,447 - DEBUG - reusing cookie
2025-01-09 02:19:37,448 - DEBUG - reusing crumb
2025-01-09 02:19:37,448 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:37,448 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:37,702 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PH?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1216
2025-01-09 02:19:37,702 - DEBUG - response code=200
2025-01-09 02:19:37,702 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:37,702 - DEBUG -    Exiting get()
2025-01-09 02:19:37,703 - DEBUG - PH: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:37,704 - DEBUG - PH: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:37,707 - DEBUG - PH: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:37,712 - DEBUG - PH: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:37,712 - DEBUG -   Exiting history()
2025-01-09 02:19:37,712 - DEBUG -  Exiting history()
2025-01-09 02:19:37,714 - DEBUG - Exiting download()
2025-01-09 02:19:37,758 - DEBUG - Entering download()
2025-01-09 02:19:37,758 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:37,758 - DEBUG -  Entering history()
2025-01-09 02:19:37,758 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PAYX', 1, 0])
2025-01-09 02:19:37,759 - DEBUG -   Entering history()
2025-01-09 02:19:37,759 - DEBUG - PAYX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:37,759 - DEBUG -    Entering get()
2025-01-09 02:19:37,759 - DEBUG -     Entering _make_request()
2025-01-09 02:19:37,759 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PAYX
2025-01-09 02:19:37,760 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:37,760 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:37,760 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:37,760 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:37,760 - DEBUG - reusing cookie
2025-01-09 02:19:37,760 - DEBUG - reusing crumb
2025-01-09 02:19:37,760 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:37,760 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:37,986 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PAYX?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1179
2025-01-09 02:19:37,986 - DEBUG - response code=200
2025-01-09 02:19:37,986 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:37,986 - DEBUG -    Exiting get()
2025-01-09 02:19:37,987 - DEBUG - PAYX: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:37,988 - DEBUG - PAYX: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:37,991 - DEBUG - PAYX: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:37,996 - DEBUG - PAYX: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:37,996 - DEBUG -   Exiting history()
2025-01-09 02:19:37,996 - DEBUG -  Exiting history()
2025-01-09 02:19:37,998 - DEBUG - Exiting download()
2025-01-09 02:19:38,110 - ERROR - Error writing data for PAYX to DB: schema "np" does not exist
LINE 4:             VALUES ('PAYX','2020-01-01'::date,np.float64(74....
                                                      ^

2025-01-09 02:19:38,111 - DEBUG - Entering download()
2025-01-09 02:19:38,111 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:38,111 - DEBUG -  Entering history()
2025-01-09 02:19:38,111 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PAYC', 1, 0])
2025-01-09 02:19:38,112 - DEBUG -   Entering history()
2025-01-09 02:19:38,112 - DEBUG - PAYC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:38,112 - DEBUG -    Entering get()
2025-01-09 02:19:38,112 - DEBUG -     Entering _make_request()
2025-01-09 02:19:38,112 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PAYC
2025-01-09 02:19:38,112 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:38,112 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:38,113 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:38,113 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:38,113 - DEBUG - reusing cookie
2025-01-09 02:19:38,113 - DEBUG - reusing crumb
2025-01-09 02:19:38,113 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:38,113 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:38,273 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PAYC?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1203
2025-01-09 02:19:38,274 - DEBUG - response code=200
2025-01-09 02:19:38,274 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:38,274 - DEBUG -    Exiting get()
2025-01-09 02:19:38,275 - DEBUG - PAYC: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:38,275 - DEBUG - PAYC: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:38,278 - DEBUG - PAYC: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:38,284 - DEBUG - PAYC: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:38,284 - DEBUG -   Exiting history()
2025-01-09 02:19:38,284 - DEBUG -  Exiting history()
2025-01-09 02:19:38,286 - DEBUG - Exiting download()
2025-01-09 02:19:38,331 - DEBUG - Entering download()
2025-01-09 02:19:38,331 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:38,331 - DEBUG -  Entering history()
2025-01-09 02:19:38,331 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PYPL', 1, 0])
2025-01-09 02:19:38,332 - DEBUG -   Entering history()
2025-01-09 02:19:38,332 - DEBUG - PYPL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:38,333 - DEBUG -    Entering get()
2025-01-09 02:19:38,333 - DEBUG -     Entering _make_request()
2025-01-09 02:19:38,333 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PYPL
2025-01-09 02:19:38,333 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:38,333 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:38,333 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:38,333 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:38,333 - DEBUG - reusing cookie
2025-01-09 02:19:38,333 - DEBUG - reusing crumb
2025-01-09 02:19:38,333 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:38,333 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:38,511 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PYPL?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1184
2025-01-09 02:19:38,512 - DEBUG - response code=200
2025-01-09 02:19:38,512 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:38,512 - DEBUG -    Exiting get()
2025-01-09 02:19:38,513 - DEBUG - PYPL: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:38,514 - DEBUG - PYPL: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:38,518 - DEBUG - PYPL: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:38,524 - DEBUG - PYPL: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:38,524 - DEBUG -   Exiting history()
2025-01-09 02:19:38,524 - DEBUG -  Exiting history()
2025-01-09 02:19:38,526 - DEBUG - Exiting download()
2025-01-09 02:19:38,633 - ERROR - Error writing data for PYPL to DB: schema "np" does not exist
LINE 4:             VALUES ('PYPL','2020-01-01'::date,np.float64(109...
                                                      ^

2025-01-09 02:19:38,634 - DEBUG - Entering download()
2025-01-09 02:19:38,634 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:38,634 - DEBUG -  Entering history()
2025-01-09 02:19:38,634 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PNR', 1, 0])
2025-01-09 02:19:38,634 - DEBUG -   Entering history()
2025-01-09 02:19:38,635 - DEBUG - PNR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:38,635 - DEBUG -    Entering get()
2025-01-09 02:19:38,635 - DEBUG -     Entering _make_request()
2025-01-09 02:19:38,635 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PNR
2025-01-09 02:19:38,635 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:38,635 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:38,635 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:38,635 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:38,636 - DEBUG - reusing cookie
2025-01-09 02:19:38,636 - DEBUG - reusing crumb
2025-01-09 02:19:38,636 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:38,636 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:38,838 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PNR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1178
2025-01-09 02:19:38,838 - DEBUG - response code=200
2025-01-09 02:19:38,839 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:38,839 - DEBUG -    Exiting get()
2025-01-09 02:19:38,840 - DEBUG - PNR: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:38,840 - DEBUG - PNR: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:38,843 - DEBUG - PNR: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:38,848 - DEBUG - PNR: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:38,848 - DEBUG -   Exiting history()
2025-01-09 02:19:38,848 - DEBUG -  Exiting history()
2025-01-09 02:19:38,850 - DEBUG - Exiting download()
2025-01-09 02:19:39,007 - DEBUG - Entering download()
2025-01-09 02:19:39,007 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:39,007 - DEBUG -  Entering history()
2025-01-09 02:19:39,008 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PEP', 1, 0])
2025-01-09 02:19:39,008 - DEBUG -   Entering history()
2025-01-09 02:19:39,009 - DEBUG - PEP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:39,009 - DEBUG -    Entering get()
2025-01-09 02:19:39,009 - DEBUG -     Entering _make_request()
2025-01-09 02:19:39,009 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PEP
2025-01-09 02:19:39,009 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:39,009 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:39,009 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:39,009 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:39,009 - DEBUG - reusing cookie
2025-01-09 02:19:39,009 - DEBUG - reusing crumb
2025-01-09 02:19:39,009 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:39,009 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:39,221 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PEP?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1194
2025-01-09 02:19:39,221 - DEBUG - response code=200
2025-01-09 02:19:39,221 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:39,221 - DEBUG -    Exiting get()
2025-01-09 02:19:39,222 - DEBUG - PEP: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:39,223 - DEBUG - PEP: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:39,226 - DEBUG - PEP: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:39,231 - DEBUG - PEP: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:39,231 - DEBUG -   Exiting history()
2025-01-09 02:19:39,231 - DEBUG -  Exiting history()
2025-01-09 02:19:39,233 - DEBUG - Exiting download()
2025-01-09 02:19:39,278 - DEBUG - Entering download()
2025-01-09 02:19:39,278 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:39,278 - DEBUG -  Entering history()
2025-01-09 02:19:39,278 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PFE', 1, 0])
2025-01-09 02:19:39,278 - DEBUG -   Entering history()
2025-01-09 02:19:39,279 - DEBUG - PFE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:39,279 - DEBUG -    Entering get()
2025-01-09 02:19:39,279 - DEBUG -     Entering _make_request()
2025-01-09 02:19:39,279 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PFE
2025-01-09 02:19:39,279 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:39,279 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:39,279 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:39,279 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:39,279 - DEBUG - reusing cookie
2025-01-09 02:19:39,280 - DEBUG - reusing crumb
2025-01-09 02:19:39,280 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:39,280 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:39,489 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PFE?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1182
2025-01-09 02:19:39,489 - DEBUG - response code=200
2025-01-09 02:19:39,489 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:39,490 - DEBUG -    Exiting get()
2025-01-09 02:19:39,491 - DEBUG - PFE: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:39,491 - DEBUG - PFE: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:39,494 - DEBUG - PFE: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:39,499 - DEBUG - PFE: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:39,499 - DEBUG -   Exiting history()
2025-01-09 02:19:39,500 - DEBUG -  Exiting history()
2025-01-09 02:19:39,501 - DEBUG - Exiting download()
2025-01-09 02:19:39,608 - ERROR - Error writing data for PFE to DB: schema "np" does not exist
LINE 4:             VALUES ('PFE','2020-01-01'::date,np.float64(30.1...
                                                     ^

2025-01-09 02:19:39,609 - DEBUG - Entering download()
2025-01-09 02:19:39,609 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:39,609 - DEBUG -  Entering history()
2025-01-09 02:19:39,610 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PCG', 1, 0])
2025-01-09 02:19:39,610 - DEBUG -   Entering history()
2025-01-09 02:19:39,610 - DEBUG - PCG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:39,611 - DEBUG -    Entering get()
2025-01-09 02:19:39,611 - DEBUG -     Entering _make_request()
2025-01-09 02:19:39,611 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PCG
2025-01-09 02:19:39,611 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:39,611 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:39,611 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:39,611 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:39,611 - DEBUG - reusing cookie
2025-01-09 02:19:39,611 - DEBUG - reusing crumb
2025-01-09 02:19:39,611 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:39,611 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:39,833 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PCG?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1188
2025-01-09 02:19:39,833 - DEBUG - response code=200
2025-01-09 02:19:39,833 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:39,833 - DEBUG -    Exiting get()
2025-01-09 02:19:39,834 - DEBUG - PCG: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:39,835 - DEBUG - PCG: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:39,838 - DEBUG - PCG: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:39,842 - DEBUG - PCG: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:39,843 - DEBUG -   Exiting history()
2025-01-09 02:19:39,843 - DEBUG -  Exiting history()
2025-01-09 02:19:39,845 - DEBUG - Exiting download()
2025-01-09 02:19:39,888 - DEBUG - Entering download()
2025-01-09 02:19:39,888 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:39,889 - DEBUG -  Entering history()
2025-01-09 02:19:39,889 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PM', 1, 0])
2025-01-09 02:19:39,889 - DEBUG -   Entering history()
2025-01-09 02:19:39,890 - DEBUG - PM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:39,890 - DEBUG -    Entering get()
2025-01-09 02:19:39,890 - DEBUG -     Entering _make_request()
2025-01-09 02:19:39,890 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PM
2025-01-09 02:19:39,890 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:39,890 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:39,890 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:39,890 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:39,890 - DEBUG - reusing cookie
2025-01-09 02:19:39,890 - DEBUG - reusing crumb
2025-01-09 02:19:39,890 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:39,890 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:40,067 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PM?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1221
2025-01-09 02:19:40,067 - DEBUG - response code=200
2025-01-09 02:19:40,068 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:40,068 - DEBUG -    Exiting get()
2025-01-09 02:19:40,069 - DEBUG - PM: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:40,070 - DEBUG - PM: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:40,073 - DEBUG - PM: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:40,079 - DEBUG - PM: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:40,079 - DEBUG -   Exiting history()
2025-01-09 02:19:40,079 - DEBUG -  Exiting history()
2025-01-09 02:19:40,082 - DEBUG - Exiting download()
2025-01-09 02:19:40,189 - ERROR - Error writing data for PM to DB: schema "np" does not exist
LINE 4:             VALUES ('PM','2020-01-01'::date,np.float64(65.22...
                                                    ^

2025-01-09 02:19:40,189 - DEBUG - Entering download()
2025-01-09 02:19:40,189 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:40,189 - DEBUG -  Entering history()
2025-01-09 02:19:40,190 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PSX', 1, 0])
2025-01-09 02:19:40,190 - DEBUG -   Entering history()
2025-01-09 02:19:40,190 - DEBUG - PSX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:40,191 - DEBUG -    Entering get()
2025-01-09 02:19:40,191 - DEBUG -     Entering _make_request()
2025-01-09 02:19:40,191 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PSX
2025-01-09 02:19:40,191 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:40,191 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:40,191 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:40,191 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:40,191 - DEBUG - reusing cookie
2025-01-09 02:19:40,191 - DEBUG - reusing crumb
2025-01-09 02:19:40,191 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:40,191 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:40,357 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PSX?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1187
2025-01-09 02:19:40,357 - DEBUG - response code=200
2025-01-09 02:19:40,357 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:40,357 - DEBUG -    Exiting get()
2025-01-09 02:19:40,358 - DEBUG - PSX: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:40,359 - DEBUG - PSX: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:40,362 - DEBUG - PSX: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:40,367 - DEBUG - PSX: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:40,367 - DEBUG -   Exiting history()
2025-01-09 02:19:40,367 - DEBUG -  Exiting history()
2025-01-09 02:19:40,369 - DEBUG - Exiting download()
2025-01-09 02:19:40,476 - ERROR - Error writing data for PSX to DB: schema "np" does not exist
LINE 4:             VALUES ('PSX','2020-01-01'::date,np.float64(90.7...
                                                     ^

2025-01-09 02:19:40,476 - DEBUG - Entering download()
2025-01-09 02:19:40,476 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:40,477 - DEBUG -  Entering history()
2025-01-09 02:19:40,477 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PNW', 1, 0])
2025-01-09 02:19:40,477 - DEBUG -   Entering history()
2025-01-09 02:19:40,478 - DEBUG - PNW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:40,478 - DEBUG -    Entering get()
2025-01-09 02:19:40,478 - DEBUG -     Entering _make_request()
2025-01-09 02:19:40,478 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PNW
2025-01-09 02:19:40,478 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:40,478 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:40,478 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:40,478 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:40,478 - DEBUG - reusing cookie
2025-01-09 02:19:40,478 - DEBUG - reusing crumb
2025-01-09 02:19:40,478 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:40,478 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:40,683 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PNW?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1202
2025-01-09 02:19:40,683 - DEBUG - response code=200
2025-01-09 02:19:40,683 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:40,683 - DEBUG -    Exiting get()
2025-01-09 02:19:40,684 - DEBUG - PNW: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:40,685 - DEBUG - PNW: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:40,688 - DEBUG - PNW: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:40,692 - DEBUG - PNW: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:40,693 - DEBUG -   Exiting history()
2025-01-09 02:19:40,693 - DEBUG -  Exiting history()
2025-01-09 02:19:40,694 - DEBUG - Exiting download()
2025-01-09 02:19:40,739 - DEBUG - Entering download()
2025-01-09 02:19:40,739 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:40,739 - DEBUG -  Entering history()
2025-01-09 02:19:40,739 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PNC', 1, 0])
2025-01-09 02:19:40,739 - DEBUG -   Entering history()
2025-01-09 02:19:40,740 - DEBUG - PNC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:40,740 - DEBUG -    Entering get()
2025-01-09 02:19:40,740 - DEBUG -     Entering _make_request()
2025-01-09 02:19:40,740 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PNC
2025-01-09 02:19:40,740 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:40,741 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:40,741 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:40,741 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:40,741 - DEBUG - reusing cookie
2025-01-09 02:19:40,741 - DEBUG - reusing crumb
2025-01-09 02:19:40,741 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:40,741 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:40,961 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PNC?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1221
2025-01-09 02:19:40,961 - DEBUG - response code=200
2025-01-09 02:19:40,961 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:40,961 - DEBUG -    Exiting get()
2025-01-09 02:19:40,962 - DEBUG - PNC: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:40,963 - DEBUG - PNC: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:40,966 - DEBUG - PNC: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:40,971 - DEBUG - PNC: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:40,971 - DEBUG -   Exiting history()
2025-01-09 02:19:40,971 - DEBUG -  Exiting history()
2025-01-09 02:19:40,973 - DEBUG - Exiting download()
2025-01-09 02:19:41,015 - DEBUG - Entering download()
2025-01-09 02:19:41,015 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:41,015 - DEBUG -  Entering history()
2025-01-09 02:19:41,016 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['POOL', 1, 0])
2025-01-09 02:19:41,016 - DEBUG -   Entering history()
2025-01-09 02:19:41,017 - DEBUG - POOL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:41,017 - DEBUG -    Entering get()
2025-01-09 02:19:41,017 - DEBUG -     Entering _make_request()
2025-01-09 02:19:41,017 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/POOL
2025-01-09 02:19:41,018 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:41,018 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:41,018 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:41,018 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:41,018 - DEBUG - reusing cookie
2025-01-09 02:19:41,018 - DEBUG - reusing crumb
2025-01-09 02:19:41,018 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:41,018 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:41,203 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/POOL?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1201
2025-01-09 02:19:41,203 - DEBUG - response code=200
2025-01-09 02:19:41,203 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:41,204 - DEBUG -    Exiting get()
2025-01-09 02:19:41,205 - DEBUG - POOL: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:41,205 - DEBUG - POOL: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:41,209 - DEBUG - POOL: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:41,214 - DEBUG - POOL: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:41,214 - DEBUG -   Exiting history()
2025-01-09 02:19:41,214 - DEBUG -  Exiting history()
2025-01-09 02:19:41,216 - DEBUG - Exiting download()
2025-01-09 02:19:41,324 - ERROR - Error writing data for POOL to DB: schema "np" does not exist
LINE 4:             VALUES ('POOL','2020-01-01'::date,np.float64(201...
                                                      ^

2025-01-09 02:19:41,324 - DEBUG - Entering download()
2025-01-09 02:19:41,324 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:41,324 - DEBUG -  Entering history()
2025-01-09 02:19:41,325 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PPG', 1, 0])
2025-01-09 02:19:41,325 - DEBUG -   Entering history()
2025-01-09 02:19:41,325 - DEBUG - PPG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:41,326 - DEBUG -    Entering get()
2025-01-09 02:19:41,326 - DEBUG -     Entering _make_request()
2025-01-09 02:19:41,326 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PPG
2025-01-09 02:19:41,326 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:41,326 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:41,326 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:41,326 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:41,326 - DEBUG - reusing cookie
2025-01-09 02:19:41,326 - DEBUG - reusing crumb
2025-01-09 02:19:41,326 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:41,326 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:41,522 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PPG?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1207
2025-01-09 02:19:41,523 - DEBUG - response code=200
2025-01-09 02:19:41,523 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:41,523 - DEBUG -    Exiting get()
2025-01-09 02:19:41,524 - DEBUG - PPG: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:41,525 - DEBUG - PPG: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:41,527 - DEBUG - PPG: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:41,532 - DEBUG - PPG: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:41,532 - DEBUG -   Exiting history()
2025-01-09 02:19:41,533 - DEBUG -  Exiting history()
2025-01-09 02:19:41,535 - DEBUG - Exiting download()
2025-01-09 02:19:41,643 - ERROR - Error writing data for PPG to DB: schema "np" does not exist
LINE 4:             VALUES ('PPG','2020-01-01'::date,np.float64(122....
                                                     ^

2025-01-09 02:19:41,644 - DEBUG - Entering download()
2025-01-09 02:19:41,644 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:41,644 - DEBUG -  Entering history()
2025-01-09 02:19:41,644 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PPL', 1, 0])
2025-01-09 02:19:41,644 - DEBUG -   Entering history()
2025-01-09 02:19:41,645 - DEBUG - PPL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:41,645 - DEBUG -    Entering get()
2025-01-09 02:19:41,645 - DEBUG -     Entering _make_request()
2025-01-09 02:19:41,645 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PPL
2025-01-09 02:19:41,645 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:41,645 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:41,645 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:41,645 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:41,646 - DEBUG - reusing cookie
2025-01-09 02:19:41,646 - DEBUG - reusing crumb
2025-01-09 02:19:41,646 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:41,646 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:41,851 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PPL?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1174
2025-01-09 02:19:41,852 - DEBUG - response code=200
2025-01-09 02:19:41,852 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:41,852 - DEBUG -    Exiting get()
2025-01-09 02:19:41,853 - DEBUG - PPL: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:41,854 - DEBUG - PPL: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:41,857 - DEBUG - PPL: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:41,861 - DEBUG - PPL: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:41,861 - DEBUG -   Exiting history()
2025-01-09 02:19:41,861 - DEBUG -  Exiting history()
2025-01-09 02:19:41,863 - DEBUG - Exiting download()
2025-01-09 02:19:41,907 - DEBUG - Entering download()
2025-01-09 02:19:41,907 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:41,907 - DEBUG -  Entering history()
2025-01-09 02:19:41,907 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PFG', 1, 0])
2025-01-09 02:19:41,907 - DEBUG -   Entering history()
2025-01-09 02:19:41,908 - DEBUG - PFG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:41,908 - DEBUG -    Entering get()
2025-01-09 02:19:41,908 - DEBUG -     Entering _make_request()
2025-01-09 02:19:41,908 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PFG
2025-01-09 02:19:41,908 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:41,908 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:41,908 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:41,908 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:41,909 - DEBUG - reusing cookie
2025-01-09 02:19:41,909 - DEBUG - reusing crumb
2025-01-09 02:19:41,909 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:41,909 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:42,083 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PFG?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1220
2025-01-09 02:19:42,083 - DEBUG - response code=200
2025-01-09 02:19:42,083 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:42,083 - DEBUG -    Exiting get()
2025-01-09 02:19:42,084 - DEBUG - PFG: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:42,085 - DEBUG - PFG: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:42,088 - DEBUG - PFG: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:42,092 - DEBUG - PFG: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:42,093 - DEBUG -   Exiting history()
2025-01-09 02:19:42,093 - DEBUG -  Exiting history()
2025-01-09 02:19:42,094 - DEBUG - Exiting download()
2025-01-09 02:19:42,138 - DEBUG - Entering download()
2025-01-09 02:19:42,138 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:42,138 - DEBUG -  Entering history()
2025-01-09 02:19:42,138 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PG', 1, 0])
2025-01-09 02:19:42,138 - DEBUG -   Entering history()
2025-01-09 02:19:42,139 - DEBUG - PG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:42,139 - DEBUG -    Entering get()
2025-01-09 02:19:42,139 - DEBUG -     Entering _make_request()
2025-01-09 02:19:42,139 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PG
2025-01-09 02:19:42,139 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:42,139 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:42,139 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:42,139 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:42,139 - DEBUG - reusing cookie
2025-01-09 02:19:42,139 - DEBUG - reusing crumb
2025-01-09 02:19:42,139 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:42,139 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:42,378 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PG?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1208
2025-01-09 02:19:42,378 - DEBUG - response code=200
2025-01-09 02:19:42,378 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:42,378 - DEBUG -    Exiting get()
2025-01-09 02:19:42,379 - DEBUG - PG: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:42,380 - DEBUG - PG: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:42,383 - DEBUG - PG: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:42,387 - DEBUG - PG: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:42,388 - DEBUG -   Exiting history()
2025-01-09 02:19:42,388 - DEBUG -  Exiting history()
2025-01-09 02:19:42,390 - DEBUG - Exiting download()
2025-01-09 02:19:42,432 - DEBUG - Entering download()
2025-01-09 02:19:42,432 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:42,432 - DEBUG -  Entering history()
2025-01-09 02:19:42,433 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PGR', 1, 0])
2025-01-09 02:19:42,433 - DEBUG -   Entering history()
2025-01-09 02:19:42,433 - DEBUG - PGR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:42,434 - DEBUG -    Entering get()
2025-01-09 02:19:42,434 - DEBUG -     Entering _make_request()
2025-01-09 02:19:42,434 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PGR
2025-01-09 02:19:42,434 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:42,434 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:42,434 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:42,434 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:42,434 - DEBUG - reusing cookie
2025-01-09 02:19:42,434 - DEBUG - reusing crumb
2025-01-09 02:19:42,434 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:42,434 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:42,627 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PGR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1215
2025-01-09 02:19:42,628 - DEBUG - response code=200
2025-01-09 02:19:42,628 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:42,628 - DEBUG -    Exiting get()
2025-01-09 02:19:42,629 - DEBUG - PGR: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:42,630 - DEBUG - PGR: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:42,633 - DEBUG - PGR: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:42,638 - DEBUG - PGR: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:42,638 - DEBUG -   Exiting history()
2025-01-09 02:19:42,638 - DEBUG -  Exiting history()
2025-01-09 02:19:42,640 - DEBUG - Exiting download()
2025-01-09 02:19:42,854 - ERROR - Error writing data for PGR to DB: schema "np" does not exist
LINE 4:             VALUES ('PGR','2020-01-01'::date,np.float64(65.9...
                                                     ^

2025-01-09 02:19:42,855 - DEBUG - Entering download()
2025-01-09 02:19:42,855 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:42,855 - DEBUG -  Entering history()
2025-01-09 02:19:42,856 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PLD', 1, 0])
2025-01-09 02:19:42,856 - DEBUG -   Entering history()
2025-01-09 02:19:42,857 - DEBUG - PLD: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:42,857 - DEBUG -    Entering get()
2025-01-09 02:19:42,857 - DEBUG -     Entering _make_request()
2025-01-09 02:19:42,857 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PLD
2025-01-09 02:19:42,857 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:42,857 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:42,857 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:42,857 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:42,857 - DEBUG - reusing cookie
2025-01-09 02:19:42,857 - DEBUG - reusing crumb
2025-01-09 02:19:42,858 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:42,858 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:43,034 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PLD?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1175
2025-01-09 02:19:43,035 - DEBUG - response code=200
2025-01-09 02:19:43,035 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:43,035 - DEBUG -    Exiting get()
2025-01-09 02:19:43,036 - DEBUG - PLD: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:43,036 - DEBUG - PLD: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:43,039 - DEBUG - PLD: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:43,044 - DEBUG - PLD: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:43,044 - DEBUG -   Exiting history()
2025-01-09 02:19:43,044 - DEBUG -  Exiting history()
2025-01-09 02:19:43,046 - DEBUG - Exiting download()
2025-01-09 02:19:43,089 - DEBUG - Entering download()
2025-01-09 02:19:43,089 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:43,089 - DEBUG -  Entering history()
2025-01-09 02:19:43,090 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PRU', 1, 0])
2025-01-09 02:19:43,090 - DEBUG -   Entering history()
2025-01-09 02:19:43,090 - DEBUG - PRU: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:43,090 - DEBUG -    Entering get()
2025-01-09 02:19:43,091 - DEBUG -     Entering _make_request()
2025-01-09 02:19:43,091 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PRU
2025-01-09 02:19:43,091 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:43,091 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:43,091 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:43,091 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:43,091 - DEBUG - reusing cookie
2025-01-09 02:19:43,091 - DEBUG - reusing crumb
2025-01-09 02:19:43,091 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:43,091 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:43,270 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PRU?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1206
2025-01-09 02:19:43,270 - DEBUG - response code=200
2025-01-09 02:19:43,270 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:43,270 - DEBUG -    Exiting get()
2025-01-09 02:19:43,271 - DEBUG - PRU: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:43,272 - DEBUG - PRU: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:43,275 - DEBUG - PRU: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:43,279 - DEBUG - PRU: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:43,279 - DEBUG -   Exiting history()
2025-01-09 02:19:43,280 - DEBUG -  Exiting history()
2025-01-09 02:19:43,281 - DEBUG - Exiting download()
2025-01-09 02:19:43,497 - ERROR - Error writing data for PRU to DB: schema "np" does not exist
LINE 4:             VALUES ('PRU','2020-01-01'::date,np.float64(73.0...
                                                     ^

2025-01-09 02:19:43,497 - DEBUG - Entering download()
2025-01-09 02:19:43,497 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:43,497 - DEBUG -  Entering history()
2025-01-09 02:19:43,497 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PEG', 1, 0])
2025-01-09 02:19:43,498 - DEBUG -   Entering history()
2025-01-09 02:19:43,498 - DEBUG - PEG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:43,498 - DEBUG -    Entering get()
2025-01-09 02:19:43,498 - DEBUG -     Entering _make_request()
2025-01-09 02:19:43,498 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PEG
2025-01-09 02:19:43,498 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:43,498 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:43,499 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:43,499 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:43,499 - DEBUG - reusing cookie
2025-01-09 02:19:43,499 - DEBUG - reusing crumb
2025-01-09 02:19:43,499 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:43,499 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:43,714 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PEG?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1235
2025-01-09 02:19:43,714 - DEBUG - response code=200
2025-01-09 02:19:43,714 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:43,715 - DEBUG -    Exiting get()
2025-01-09 02:19:43,716 - DEBUG - PEG: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:43,717 - DEBUG - PEG: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:43,719 - DEBUG - PEG: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:43,724 - DEBUG - PEG: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:43,724 - DEBUG -   Exiting history()
2025-01-09 02:19:43,724 - DEBUG -  Exiting history()
2025-01-09 02:19:43,726 - DEBUG - Exiting download()
2025-01-09 02:19:43,877 - DEBUG - Entering download()
2025-01-09 02:19:43,878 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:43,878 - DEBUG -  Entering history()
2025-01-09 02:19:43,878 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PTC', 1, 0])
2025-01-09 02:19:43,878 - DEBUG -   Entering history()
2025-01-09 02:19:43,879 - DEBUG - PTC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:43,879 - DEBUG -    Entering get()
2025-01-09 02:19:43,879 - DEBUG -     Entering _make_request()
2025-01-09 02:19:43,879 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PTC
2025-01-09 02:19:43,879 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:43,879 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:43,879 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:43,880 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:43,880 - DEBUG - reusing cookie
2025-01-09 02:19:43,880 - DEBUG - reusing crumb
2025-01-09 02:19:43,880 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:43,880 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:44,039 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PTC?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1175
2025-01-09 02:19:44,039 - DEBUG - response code=200
2025-01-09 02:19:44,039 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:44,039 - DEBUG -    Exiting get()
2025-01-09 02:19:44,040 - DEBUG - PTC: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:44,041 - DEBUG - PTC: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:44,044 - DEBUG - PTC: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:44,049 - DEBUG - PTC: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:44,049 - DEBUG -   Exiting history()
2025-01-09 02:19:44,049 - DEBUG -  Exiting history()
2025-01-09 02:19:44,051 - DEBUG - Exiting download()
2025-01-09 02:19:44,161 - ERROR - Error writing data for PTC to DB: schema "np" does not exist
LINE 4:             VALUES ('PTC','2020-01-01'::date,np.float64(75.4...
                                                     ^

2025-01-09 02:19:44,161 - DEBUG - Entering download()
2025-01-09 02:19:44,162 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:44,162 - DEBUG -  Entering history()
2025-01-09 02:19:44,162 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PSA', 1, 0])
2025-01-09 02:19:44,162 - DEBUG -   Entering history()
2025-01-09 02:19:44,163 - DEBUG - PSA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:44,163 - DEBUG -    Entering get()
2025-01-09 02:19:44,163 - DEBUG -     Entering _make_request()
2025-01-09 02:19:44,163 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PSA
2025-01-09 02:19:44,163 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:44,163 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:44,163 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:44,163 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:44,163 - DEBUG - reusing cookie
2025-01-09 02:19:44,163 - DEBUG - reusing crumb
2025-01-09 02:19:44,163 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:44,163 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:44,350 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PSA?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1192
2025-01-09 02:19:44,351 - DEBUG - response code=200
2025-01-09 02:19:44,351 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:44,351 - DEBUG -    Exiting get()
2025-01-09 02:19:44,352 - DEBUG - PSA: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:44,352 - DEBUG - PSA: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:44,355 - DEBUG - PSA: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:44,360 - DEBUG - PSA: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:44,360 - DEBUG -   Exiting history()
2025-01-09 02:19:44,360 - DEBUG -  Exiting history()
2025-01-09 02:19:44,362 - DEBUG - Exiting download()
2025-01-09 02:19:44,407 - DEBUG - Entering download()
2025-01-09 02:19:44,407 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:44,408 - DEBUG -  Entering history()
2025-01-09 02:19:44,408 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PHM', 1, 0])
2025-01-09 02:19:44,408 - DEBUG -   Entering history()
2025-01-09 02:19:44,409 - DEBUG - PHM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:44,409 - DEBUG -    Entering get()
2025-01-09 02:19:44,409 - DEBUG -     Entering _make_request()
2025-01-09 02:19:44,409 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PHM
2025-01-09 02:19:44,409 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:44,409 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:44,409 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:44,409 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:44,409 - DEBUG - reusing cookie
2025-01-09 02:19:44,409 - DEBUG - reusing crumb
2025-01-09 02:19:44,409 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:44,409 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:44,607 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PHM?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1193
2025-01-09 02:19:44,608 - DEBUG - response code=200
2025-01-09 02:19:44,608 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:44,608 - DEBUG -    Exiting get()
2025-01-09 02:19:44,609 - DEBUG - PHM: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:44,609 - DEBUG - PHM: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:44,612 - DEBUG - PHM: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:44,617 - DEBUG - PHM: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:44,617 - DEBUG -   Exiting history()
2025-01-09 02:19:44,617 - DEBUG -  Exiting history()
2025-01-09 02:19:44,619 - DEBUG - Exiting download()
2025-01-09 02:19:44,662 - DEBUG - Entering download()
2025-01-09 02:19:44,662 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:44,662 - DEBUG -  Entering history()
2025-01-09 02:19:44,663 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PWR', 1, 0])
2025-01-09 02:19:44,663 - DEBUG -   Entering history()
2025-01-09 02:19:44,663 - DEBUG - PWR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:44,663 - DEBUG -    Entering get()
2025-01-09 02:19:44,663 - DEBUG -     Entering _make_request()
2025-01-09 02:19:44,664 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/PWR
2025-01-09 02:19:44,664 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:44,664 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:44,664 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:44,664 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:44,664 - DEBUG - reusing cookie
2025-01-09 02:19:44,664 - DEBUG - reusing crumb
2025-01-09 02:19:44,664 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:44,664 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:44,828 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/PWR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1202
2025-01-09 02:19:44,828 - DEBUG - response code=200
2025-01-09 02:19:44,828 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:44,828 - DEBUG -    Exiting get()
2025-01-09 02:19:44,829 - DEBUG - PWR: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:44,830 - DEBUG - PWR: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:44,833 - DEBUG - PWR: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:44,838 - DEBUG - PWR: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:44,838 - DEBUG -   Exiting history()
2025-01-09 02:19:44,838 - DEBUG -  Exiting history()
2025-01-09 02:19:44,840 - DEBUG - Exiting download()
2025-01-09 02:19:44,883 - DEBUG - Entering download()
2025-01-09 02:19:44,883 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:44,883 - DEBUG -  Entering history()
2025-01-09 02:19:44,883 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['QCOM', 1, 0])
2025-01-09 02:19:44,883 - DEBUG -   Entering history()
2025-01-09 02:19:44,884 - DEBUG - QCOM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:44,884 - DEBUG -    Entering get()
2025-01-09 02:19:44,884 - DEBUG -     Entering _make_request()
2025-01-09 02:19:44,884 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/QCOM
2025-01-09 02:19:44,884 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:44,884 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:44,884 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:44,884 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:44,885 - DEBUG - reusing cookie
2025-01-09 02:19:44,885 - DEBUG - reusing crumb
2025-01-09 02:19:44,885 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:44,885 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:45,077 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/QCOM?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1207
2025-01-09 02:19:45,077 - DEBUG - response code=200
2025-01-09 02:19:45,077 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:45,077 - DEBUG -    Exiting get()
2025-01-09 02:19:45,078 - DEBUG - QCOM: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:45,079 - DEBUG - QCOM: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:45,082 - DEBUG - QCOM: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:45,087 - DEBUG - QCOM: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:45,087 - DEBUG -   Exiting history()
2025-01-09 02:19:45,088 - DEBUG -  Exiting history()
2025-01-09 02:19:45,090 - DEBUG - Exiting download()
2025-01-09 02:19:45,134 - DEBUG - Entering download()
2025-01-09 02:19:45,135 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:45,135 - DEBUG -  Entering history()
2025-01-09 02:19:45,135 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DGX', 1, 0])
2025-01-09 02:19:45,135 - DEBUG -   Entering history()
2025-01-09 02:19:45,136 - DEBUG - DGX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:45,136 - DEBUG -    Entering get()
2025-01-09 02:19:45,136 - DEBUG -     Entering _make_request()
2025-01-09 02:19:45,136 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DGX
2025-01-09 02:19:45,136 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:45,136 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:45,136 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:45,136 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:45,136 - DEBUG - reusing cookie
2025-01-09 02:19:45,136 - DEBUG - reusing crumb
2025-01-09 02:19:45,136 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:45,136 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:45,323 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DGX?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1223
2025-01-09 02:19:45,323 - DEBUG - response code=200
2025-01-09 02:19:45,323 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:45,323 - DEBUG -    Exiting get()
2025-01-09 02:19:45,324 - DEBUG - DGX: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:45,325 - DEBUG - DGX: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:45,328 - DEBUG - DGX: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:45,332 - DEBUG - DGX: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:45,333 - DEBUG -   Exiting history()
2025-01-09 02:19:45,333 - DEBUG -  Exiting history()
2025-01-09 02:19:45,335 - DEBUG - Exiting download()
2025-01-09 02:19:45,444 - ERROR - Error writing data for DGX to DB: schema "np" does not exist
LINE 4:             VALUES ('DGX','2020-01-01'::date,np.float64(96.4...
                                                     ^

2025-01-09 02:19:45,445 - DEBUG - Entering download()
2025-01-09 02:19:45,445 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:45,445 - DEBUG -  Entering history()
2025-01-09 02:19:45,445 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['RL', 1, 0])
2025-01-09 02:19:45,446 - DEBUG -   Entering history()
2025-01-09 02:19:45,446 - DEBUG - RL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:45,446 - DEBUG -    Entering get()
2025-01-09 02:19:45,446 - DEBUG -     Entering _make_request()
2025-01-09 02:19:45,446 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/RL
2025-01-09 02:19:45,446 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:45,446 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:45,446 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:45,447 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:45,447 - DEBUG - reusing cookie
2025-01-09 02:19:45,447 - DEBUG - reusing crumb
2025-01-09 02:19:45,447 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:45,447 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:45,629 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/RL?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1210
2025-01-09 02:19:45,629 - DEBUG - response code=200
2025-01-09 02:19:45,630 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:45,630 - DEBUG -    Exiting get()
2025-01-09 02:19:45,631 - DEBUG - RL: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:45,631 - DEBUG - RL: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:45,635 - DEBUG - RL: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:45,640 - DEBUG - RL: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:45,640 - DEBUG -   Exiting history()
2025-01-09 02:19:45,640 - DEBUG -  Exiting history()
2025-01-09 02:19:45,642 - DEBUG - Exiting download()
2025-01-09 02:19:45,750 - ERROR - Error writing data for RL to DB: schema "np" does not exist
LINE 4:             VALUES ('RL','2020-01-01'::date,np.float64(106.8...
                                                    ^

2025-01-09 02:19:45,751 - DEBUG - Entering download()
2025-01-09 02:19:45,751 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:45,751 - DEBUG -  Entering history()
2025-01-09 02:19:45,751 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['RJF', 1, 0])
2025-01-09 02:19:45,752 - DEBUG -   Entering history()
2025-01-09 02:19:45,752 - DEBUG - RJF: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:45,752 - DEBUG -    Entering get()
2025-01-09 02:19:45,752 - DEBUG -     Entering _make_request()
2025-01-09 02:19:45,752 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/RJF
2025-01-09 02:19:45,752 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:45,752 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:45,752 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:45,752 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:45,752 - DEBUG - reusing cookie
2025-01-09 02:19:45,753 - DEBUG - reusing crumb
2025-01-09 02:19:45,753 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:45,753 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:45,949 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/RJF?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1220
2025-01-09 02:19:45,949 - DEBUG - response code=200
2025-01-09 02:19:45,949 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:45,949 - DEBUG -    Exiting get()
2025-01-09 02:19:45,950 - DEBUG - RJF: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:45,951 - DEBUG - RJF: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:45,954 - DEBUG - RJF: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:45,959 - DEBUG - RJF: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:45,959 - DEBUG -   Exiting history()
2025-01-09 02:19:45,959 - DEBUG -  Exiting history()
2025-01-09 02:19:45,961 - DEBUG - Exiting download()
2025-01-09 02:19:46,067 - ERROR - Error writing data for RJF to DB: schema "np" does not exist
LINE 4:             VALUES ('RJF','2020-01-01'::date,np.float64(55.5...
                                                     ^

2025-01-09 02:19:46,067 - DEBUG - Entering download()
2025-01-09 02:19:46,067 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:46,067 - DEBUG -  Entering history()
2025-01-09 02:19:46,068 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['RTX', 1, 0])
2025-01-09 02:19:46,068 - DEBUG -   Entering history()
2025-01-09 02:19:46,068 - DEBUG - RTX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:46,069 - DEBUG -    Entering get()
2025-01-09 02:19:46,069 - DEBUG -     Entering _make_request()
2025-01-09 02:19:46,069 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/RTX
2025-01-09 02:19:46,069 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:46,069 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:46,069 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:46,069 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:46,069 - DEBUG - reusing cookie
2025-01-09 02:19:46,069 - DEBUG - reusing crumb
2025-01-09 02:19:46,069 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:46,069 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:46,308 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/RTX?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1190
2025-01-09 02:19:46,308 - DEBUG - response code=200
2025-01-09 02:19:46,308 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:46,308 - DEBUG -    Exiting get()
2025-01-09 02:19:46,309 - DEBUG - RTX: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:46,310 - DEBUG - RTX: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:46,313 - DEBUG - RTX: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:46,317 - DEBUG - RTX: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:46,318 - DEBUG -   Exiting history()
2025-01-09 02:19:46,318 - DEBUG -  Exiting history()
2025-01-09 02:19:46,319 - DEBUG - Exiting download()
2025-01-09 02:19:46,428 - ERROR - Error writing data for RTX to DB: schema "np" does not exist
LINE 4:             VALUES ('RTX','2020-01-01'::date,np.float64(83.2...
                                                     ^

2025-01-09 02:19:46,428 - DEBUG - Entering download()
2025-01-09 02:19:46,428 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:46,429 - DEBUG -  Entering history()
2025-01-09 02:19:46,429 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['O', 1, 0])
2025-01-09 02:19:46,429 - DEBUG -   Entering history()
2025-01-09 02:19:46,430 - DEBUG - O: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:46,430 - DEBUG -    Entering get()
2025-01-09 02:19:46,430 - DEBUG -     Entering _make_request()
2025-01-09 02:19:46,430 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/O
2025-01-09 02:19:46,430 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:46,430 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:46,430 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:46,430 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:46,430 - DEBUG - reusing cookie
2025-01-09 02:19:46,430 - DEBUG - reusing crumb
2025-01-09 02:19:46,431 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:46,431 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:46,635 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/O?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1203
2025-01-09 02:19:46,636 - DEBUG - response code=200
2025-01-09 02:19:46,636 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:46,636 - DEBUG -    Exiting get()
2025-01-09 02:19:46,637 - DEBUG - O: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:46,638 - DEBUG - O: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:46,641 - DEBUG - O: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:46,646 - DEBUG - O: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:46,646 - DEBUG -   Exiting history()
2025-01-09 02:19:46,647 - DEBUG -  Exiting history()
2025-01-09 02:19:46,649 - DEBUG - Exiting download()
2025-01-09 02:19:46,694 - DEBUG - Entering download()
2025-01-09 02:19:46,694 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:46,694 - DEBUG -  Entering history()
2025-01-09 02:19:46,694 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['REG', 1, 0])
2025-01-09 02:19:46,694 - DEBUG -   Entering history()
2025-01-09 02:19:46,695 - DEBUG - REG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:46,695 - DEBUG -    Entering get()
2025-01-09 02:19:46,695 - DEBUG -     Entering _make_request()
2025-01-09 02:19:46,695 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/REG
2025-01-09 02:19:46,695 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:46,695 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:46,695 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:46,695 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:46,695 - DEBUG - reusing cookie
2025-01-09 02:19:46,695 - DEBUG - reusing crumb
2025-01-09 02:19:46,695 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:46,695 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:46,879 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/REG?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1213
2025-01-09 02:19:46,880 - DEBUG - response code=200
2025-01-09 02:19:46,880 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:46,880 - DEBUG -    Exiting get()
2025-01-09 02:19:46,881 - DEBUG - REG: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:46,881 - DEBUG - REG: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:46,884 - DEBUG - REG: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:46,889 - DEBUG - REG: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:46,889 - DEBUG -   Exiting history()
2025-01-09 02:19:46,889 - DEBUG -  Exiting history()
2025-01-09 02:19:46,891 - DEBUG - Exiting download()
2025-01-09 02:19:46,932 - DEBUG - Entering download()
2025-01-09 02:19:46,932 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:46,932 - DEBUG -  Entering history()
2025-01-09 02:19:46,932 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['REGN', 1, 0])
2025-01-09 02:19:46,932 - DEBUG -   Entering history()
2025-01-09 02:19:46,933 - DEBUG - REGN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:46,933 - DEBUG -    Entering get()
2025-01-09 02:19:46,933 - DEBUG -     Entering _make_request()
2025-01-09 02:19:46,933 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/REGN
2025-01-09 02:19:46,933 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:46,933 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:46,933 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:46,934 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:46,934 - DEBUG - reusing cookie
2025-01-09 02:19:46,934 - DEBUG - reusing crumb
2025-01-09 02:19:46,934 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:46,934 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:47,088 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/REGN?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1199
2025-01-09 02:19:47,088 - DEBUG - response code=200
2025-01-09 02:19:47,089 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:47,089 - DEBUG -    Exiting get()
2025-01-09 02:19:47,090 - DEBUG - REGN: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:47,090 - DEBUG - REGN: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:47,093 - DEBUG - REGN: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:47,098 - DEBUG - REGN: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:47,098 - DEBUG -   Exiting history()
2025-01-09 02:19:47,098 - DEBUG -  Exiting history()
2025-01-09 02:19:47,100 - DEBUG - Exiting download()
2025-01-09 02:19:47,319 - ERROR - Error writing data for REGN to DB: schema "np" does not exist
LINE 4:             VALUES ('REGN','2020-01-01'::date,np.float64(378...
                                                      ^

2025-01-09 02:19:47,320 - DEBUG - Entering download()
2025-01-09 02:19:47,320 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:47,320 - DEBUG -  Entering history()
2025-01-09 02:19:47,321 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['RF', 1, 0])
2025-01-09 02:19:47,321 - DEBUG -   Entering history()
2025-01-09 02:19:47,322 - DEBUG - RF: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:47,322 - DEBUG -    Entering get()
2025-01-09 02:19:47,322 - DEBUG -     Entering _make_request()
2025-01-09 02:19:47,322 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/RF
2025-01-09 02:19:47,322 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:47,322 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:47,322 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:47,322 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:47,322 - DEBUG - reusing cookie
2025-01-09 02:19:47,323 - DEBUG - reusing crumb
2025-01-09 02:19:47,323 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:47,323 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:47,508 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/RF?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1216
2025-01-09 02:19:47,508 - DEBUG - response code=200
2025-01-09 02:19:47,509 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:47,509 - DEBUG -    Exiting get()
2025-01-09 02:19:47,510 - DEBUG - RF: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:47,510 - DEBUG - RF: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:47,513 - DEBUG - RF: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:47,518 - DEBUG - RF: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:47,519 - DEBUG -   Exiting history()
2025-01-09 02:19:47,519 - DEBUG -  Exiting history()
2025-01-09 02:19:47,521 - DEBUG - Exiting download()
2025-01-09 02:19:47,629 - ERROR - Error writing data for RF to DB: schema "np" does not exist
LINE 4:             VALUES ('RF','2020-01-01'::date,np.float64(14.07...
                                                    ^

2025-01-09 02:19:47,629 - DEBUG - Entering download()
2025-01-09 02:19:47,629 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:47,629 - DEBUG -  Entering history()
2025-01-09 02:19:47,630 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['RSG', 1, 0])
2025-01-09 02:19:47,630 - DEBUG -   Entering history()
2025-01-09 02:19:47,630 - DEBUG - RSG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:47,630 - DEBUG -    Entering get()
2025-01-09 02:19:47,631 - DEBUG -     Entering _make_request()
2025-01-09 02:19:47,631 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/RSG
2025-01-09 02:19:47,631 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:47,631 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:47,631 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:47,631 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:47,631 - DEBUG - reusing cookie
2025-01-09 02:19:47,631 - DEBUG - reusing crumb
2025-01-09 02:19:47,631 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:47,631 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:47,803 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/RSG?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1206
2025-01-09 02:19:47,803 - DEBUG - response code=200
2025-01-09 02:19:47,803 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:47,803 - DEBUG -    Exiting get()
2025-01-09 02:19:47,804 - DEBUG - RSG: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:47,805 - DEBUG - RSG: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:47,809 - DEBUG - RSG: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:47,814 - DEBUG - RSG: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:47,814 - DEBUG -   Exiting history()
2025-01-09 02:19:47,814 - DEBUG -  Exiting history()
2025-01-09 02:19:47,817 - DEBUG - Exiting download()
2025-01-09 02:19:47,859 - DEBUG - Entering download()
2025-01-09 02:19:47,859 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:47,859 - DEBUG -  Entering history()
2025-01-09 02:19:47,860 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['RMD', 1, 0])
2025-01-09 02:19:47,860 - DEBUG -   Entering history()
2025-01-09 02:19:47,861 - DEBUG - RMD: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:47,861 - DEBUG -    Entering get()
2025-01-09 02:19:47,861 - DEBUG -     Entering _make_request()
2025-01-09 02:19:47,861 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/RMD
2025-01-09 02:19:47,861 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:47,861 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:47,861 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:47,861 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:47,861 - DEBUG - reusing cookie
2025-01-09 02:19:47,861 - DEBUG - reusing crumb
2025-01-09 02:19:47,861 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:47,861 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:48,046 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/RMD?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1183
2025-01-09 02:19:48,046 - DEBUG - response code=200
2025-01-09 02:19:48,046 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:48,046 - DEBUG -    Exiting get()
2025-01-09 02:19:48,047 - DEBUG - RMD: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:48,048 - DEBUG - RMD: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:48,050 - DEBUG - RMD: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:48,055 - DEBUG - RMD: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:48,055 - DEBUG -   Exiting history()
2025-01-09 02:19:48,055 - DEBUG -  Exiting history()
2025-01-09 02:19:48,057 - DEBUG - Exiting download()
2025-01-09 02:19:48,279 - ERROR - Error writing data for RMD to DB: schema "np" does not exist
LINE 4:             VALUES ('RMD','2020-01-01'::date,np.float64(148....
                                                     ^

2025-01-09 02:19:48,280 - DEBUG - Entering download()
2025-01-09 02:19:48,280 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:48,280 - DEBUG -  Entering history()
2025-01-09 02:19:48,280 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['RVTY', 1, 0])
2025-01-09 02:19:48,280 - DEBUG -   Entering history()
2025-01-09 02:19:48,281 - DEBUG - RVTY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:48,281 - DEBUG -    Entering get()
2025-01-09 02:19:48,281 - DEBUG -     Entering _make_request()
2025-01-09 02:19:48,281 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/RVTY
2025-01-09 02:19:48,281 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:48,281 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:48,281 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:48,281 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:48,281 - DEBUG - reusing cookie
2025-01-09 02:19:48,281 - DEBUG - reusing crumb
2025-01-09 02:19:48,281 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:48,281 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:48,494 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/RVTY?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1169
2025-01-09 02:19:48,495 - DEBUG - response code=200
2025-01-09 02:19:48,495 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:48,495 - DEBUG -    Exiting get()
2025-01-09 02:19:48,496 - DEBUG - RVTY: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:48,496 - DEBUG - RVTY: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:48,499 - DEBUG - RVTY: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:48,504 - DEBUG - RVTY: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:48,504 - DEBUG -   Exiting history()
2025-01-09 02:19:48,504 - DEBUG -  Exiting history()
2025-01-09 02:19:48,506 - DEBUG - Exiting download()
2025-01-09 02:19:48,548 - DEBUG - Entering download()
2025-01-09 02:19:48,548 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:48,549 - DEBUG -  Entering history()
2025-01-09 02:19:48,549 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ROK', 1, 0])
2025-01-09 02:19:48,549 - DEBUG -   Entering history()
2025-01-09 02:19:48,550 - DEBUG - ROK: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:48,550 - DEBUG -    Entering get()
2025-01-09 02:19:48,550 - DEBUG -     Entering _make_request()
2025-01-09 02:19:48,550 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ROK
2025-01-09 02:19:48,550 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:48,550 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:48,550 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:48,550 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:48,550 - DEBUG - reusing cookie
2025-01-09 02:19:48,550 - DEBUG - reusing crumb
2025-01-09 02:19:48,550 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:48,550 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:48,744 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ROK?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1215
2025-01-09 02:19:48,744 - DEBUG - response code=200
2025-01-09 02:19:48,745 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:48,745 - DEBUG -    Exiting get()
2025-01-09 02:19:48,746 - DEBUG - ROK: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:48,746 - DEBUG - ROK: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:48,749 - DEBUG - ROK: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:48,754 - DEBUG - ROK: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:48,754 - DEBUG -   Exiting history()
2025-01-09 02:19:48,754 - DEBUG -  Exiting history()
2025-01-09 02:19:48,756 - DEBUG - Exiting download()
2025-01-09 02:19:48,903 - DEBUG - Entering download()
2025-01-09 02:19:48,903 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:48,903 - DEBUG -  Entering history()
2025-01-09 02:19:48,904 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ROL', 1, 0])
2025-01-09 02:19:48,904 - DEBUG -   Entering history()
2025-01-09 02:19:48,904 - DEBUG - ROL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:48,905 - DEBUG -    Entering get()
2025-01-09 02:19:48,905 - DEBUG -     Entering _make_request()
2025-01-09 02:19:48,905 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ROL
2025-01-09 02:19:48,905 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:48,905 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:48,905 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:48,905 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:48,905 - DEBUG - reusing cookie
2025-01-09 02:19:48,905 - DEBUG - reusing crumb
2025-01-09 02:19:48,905 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:48,905 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:49,123 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ROL?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1187
2025-01-09 02:19:49,124 - DEBUG - response code=200
2025-01-09 02:19:49,124 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:49,124 - DEBUG -    Exiting get()
2025-01-09 02:19:49,125 - DEBUG - ROL: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:49,127 - DEBUG - ROL: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:49,131 - DEBUG - ROL: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:49,136 - DEBUG - ROL: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:49,136 - DEBUG -   Exiting history()
2025-01-09 02:19:49,136 - DEBUG -  Exiting history()
2025-01-09 02:19:49,138 - DEBUG - Exiting download()
2025-01-09 02:19:49,253 - ERROR - Error writing data for ROL to DB: schema "np" does not exist
LINE 4:             VALUES ('ROL','2020-01-01'::date,np.float64(20.8...
                                                     ^

2025-01-09 02:19:49,253 - DEBUG - Entering download()
2025-01-09 02:19:49,253 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:49,253 - DEBUG -  Entering history()
2025-01-09 02:19:49,254 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ROP', 1, 0])
2025-01-09 02:19:49,254 - DEBUG -   Entering history()
2025-01-09 02:19:49,254 - DEBUG - ROP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:49,255 - DEBUG -    Entering get()
2025-01-09 02:19:49,255 - DEBUG -     Entering _make_request()
2025-01-09 02:19:49,255 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ROP
2025-01-09 02:19:49,255 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:49,255 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:49,255 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:49,255 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:49,255 - DEBUG - reusing cookie
2025-01-09 02:19:49,255 - DEBUG - reusing crumb
2025-01-09 02:19:49,255 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:49,255 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:49,445 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ROP?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1206
2025-01-09 02:19:49,448 - DEBUG - response code=200
2025-01-09 02:19:49,448 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:49,448 - DEBUG -    Exiting get()
2025-01-09 02:19:49,449 - DEBUG - ROP: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:49,450 - DEBUG - ROP: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:49,453 - DEBUG - ROP: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:49,458 - DEBUG - ROP: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:49,458 - DEBUG -   Exiting history()
2025-01-09 02:19:49,458 - DEBUG -  Exiting history()
2025-01-09 02:19:49,460 - DEBUG - Exiting download()
2025-01-09 02:19:49,568 - ERROR - Error writing data for ROP to DB: schema "np" does not exist
LINE 4:             VALUES ('ROP','2020-01-01'::date,np.float64(343....
                                                     ^

2025-01-09 02:19:49,568 - DEBUG - Entering download()
2025-01-09 02:19:49,568 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:49,568 - DEBUG -  Entering history()
2025-01-09 02:19:49,569 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ROST', 1, 0])
2025-01-09 02:19:49,569 - DEBUG -   Entering history()
2025-01-09 02:19:49,569 - DEBUG - ROST: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:49,570 - DEBUG -    Entering get()
2025-01-09 02:19:49,570 - DEBUG -     Entering _make_request()
2025-01-09 02:19:49,570 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ROST
2025-01-09 02:19:49,570 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:49,570 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:49,570 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:49,570 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:49,570 - DEBUG - reusing cookie
2025-01-09 02:19:49,570 - DEBUG - reusing crumb
2025-01-09 02:19:49,570 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:49,570 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:49,759 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ROST?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1202
2025-01-09 02:19:49,759 - DEBUG - response code=200
2025-01-09 02:19:49,760 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:49,760 - DEBUG -    Exiting get()
2025-01-09 02:19:49,761 - DEBUG - ROST: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:49,761 - DEBUG - ROST: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:49,764 - DEBUG - ROST: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:49,769 - DEBUG - ROST: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:49,769 - DEBUG -   Exiting history()
2025-01-09 02:19:49,769 - DEBUG -  Exiting history()
2025-01-09 02:19:49,771 - DEBUG - Exiting download()
2025-01-09 02:19:49,921 - DEBUG - Entering download()
2025-01-09 02:19:49,922 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:49,922 - DEBUG -  Entering history()
2025-01-09 02:19:49,922 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['RCL', 1, 0])
2025-01-09 02:19:49,922 - DEBUG -   Entering history()
2025-01-09 02:19:49,923 - DEBUG - RCL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:49,923 - DEBUG -    Entering get()
2025-01-09 02:19:49,923 - DEBUG -     Entering _make_request()
2025-01-09 02:19:49,923 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/RCL
2025-01-09 02:19:49,923 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:49,923 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:49,923 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:49,923 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:49,923 - DEBUG - reusing cookie
2025-01-09 02:19:49,923 - DEBUG - reusing crumb
2025-01-09 02:19:49,923 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:49,923 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:50,113 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/RCL?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1214
2025-01-09 02:19:50,113 - DEBUG - response code=200
2025-01-09 02:19:50,114 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:50,114 - DEBUG -    Exiting get()
2025-01-09 02:19:50,115 - DEBUG - RCL: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:50,115 - DEBUG - RCL: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:50,119 - DEBUG - RCL: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:50,123 - DEBUG - RCL: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:50,123 - DEBUG -   Exiting history()
2025-01-09 02:19:50,124 - DEBUG -  Exiting history()
2025-01-09 02:19:50,126 - DEBUG - Exiting download()
2025-01-09 02:19:50,277 - DEBUG - Entering download()
2025-01-09 02:19:50,278 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:50,278 - DEBUG -  Entering history()
2025-01-09 02:19:50,278 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SPGI', 1, 0])
2025-01-09 02:19:50,278 - DEBUG -   Entering history()
2025-01-09 02:19:50,279 - DEBUG - SPGI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:50,279 - DEBUG -    Entering get()
2025-01-09 02:19:50,279 - DEBUG -     Entering _make_request()
2025-01-09 02:19:50,279 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SPGI
2025-01-09 02:19:50,279 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:50,279 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:50,279 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:50,279 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:50,279 - DEBUG - reusing cookie
2025-01-09 02:19:50,279 - DEBUG - reusing crumb
2025-01-09 02:19:50,279 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:50,280 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:50,485 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SPGI?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1189
2025-01-09 02:19:50,485 - DEBUG - response code=200
2025-01-09 02:19:50,485 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:50,485 - DEBUG -    Exiting get()
2025-01-09 02:19:50,486 - DEBUG - SPGI: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:50,487 - DEBUG - SPGI: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:50,490 - DEBUG - SPGI: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:50,496 - DEBUG - SPGI: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:50,496 - DEBUG -   Exiting history()
2025-01-09 02:19:50,496 - DEBUG -  Exiting history()
2025-01-09 02:19:50,498 - DEBUG - Exiting download()
2025-01-09 02:19:50,542 - DEBUG - Entering download()
2025-01-09 02:19:50,542 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:50,543 - DEBUG -  Entering history()
2025-01-09 02:19:50,543 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['CRM', 1, 0])
2025-01-09 02:19:50,543 - DEBUG -   Entering history()
2025-01-09 02:19:50,544 - DEBUG - CRM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:50,544 - DEBUG -    Entering get()
2025-01-09 02:19:50,544 - DEBUG -     Entering _make_request()
2025-01-09 02:19:50,544 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/CRM
2025-01-09 02:19:50,544 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:50,544 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:50,544 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:50,544 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:50,544 - DEBUG - reusing cookie
2025-01-09 02:19:50,545 - DEBUG - reusing crumb
2025-01-09 02:19:50,545 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:50,545 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:50,759 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/CRM?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1195
2025-01-09 02:19:50,759 - DEBUG - response code=200
2025-01-09 02:19:50,759 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:50,759 - DEBUG -    Exiting get()
2025-01-09 02:19:50,760 - DEBUG - CRM: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:50,761 - DEBUG - CRM: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:50,764 - DEBUG - CRM: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:50,768 - DEBUG - CRM: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:50,769 - DEBUG -   Exiting history()
2025-01-09 02:19:50,769 - DEBUG -  Exiting history()
2025-01-09 02:19:50,771 - DEBUG - Exiting download()
2025-01-09 02:19:50,815 - DEBUG - Entering download()
2025-01-09 02:19:50,815 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:50,816 - DEBUG -  Entering history()
2025-01-09 02:19:50,816 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SBAC', 1, 0])
2025-01-09 02:19:50,816 - DEBUG -   Entering history()
2025-01-09 02:19:50,817 - DEBUG - SBAC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:50,817 - DEBUG -    Entering get()
2025-01-09 02:19:50,817 - DEBUG -     Entering _make_request()
2025-01-09 02:19:50,817 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SBAC
2025-01-09 02:19:50,817 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:50,818 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:50,818 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:50,818 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:50,818 - DEBUG - reusing cookie
2025-01-09 02:19:50,818 - DEBUG - reusing crumb
2025-01-09 02:19:50,818 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:50,818 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:50,995 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SBAC?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1230
2025-01-09 02:19:50,995 - DEBUG - response code=200
2025-01-09 02:19:50,995 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:50,995 - DEBUG -    Exiting get()
2025-01-09 02:19:50,996 - DEBUG - SBAC: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:50,997 - DEBUG - SBAC: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:51,000 - DEBUG - SBAC: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:51,005 - DEBUG - SBAC: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:51,005 - DEBUG -   Exiting history()
2025-01-09 02:19:51,005 - DEBUG -  Exiting history()
2025-01-09 02:19:51,007 - DEBUG - Exiting download()
2025-01-09 02:19:51,121 - ERROR - Error writing data for SBAC to DB: schema "np" does not exist
LINE 4:             VALUES ('SBAC','2020-01-01'::date,np.float64(228...
                                                      ^

2025-01-09 02:19:51,122 - DEBUG - Entering download()
2025-01-09 02:19:51,122 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:51,122 - DEBUG -  Entering history()
2025-01-09 02:19:51,123 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SLB', 1, 0])
2025-01-09 02:19:51,124 - DEBUG -   Entering history()
2025-01-09 02:19:51,125 - DEBUG - SLB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:51,125 - DEBUG -    Entering get()
2025-01-09 02:19:51,125 - DEBUG -     Entering _make_request()
2025-01-09 02:19:51,125 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SLB
2025-01-09 02:19:51,126 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:51,126 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:51,126 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:51,126 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:51,126 - DEBUG - reusing cookie
2025-01-09 02:19:51,126 - DEBUG - reusing crumb
2025-01-09 02:19:51,126 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:51,126 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:51,333 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SLB?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1195
2025-01-09 02:19:51,333 - DEBUG - response code=200
2025-01-09 02:19:51,334 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:51,334 - DEBUG -    Exiting get()
2025-01-09 02:19:51,335 - DEBUG - SLB: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:51,336 - DEBUG - SLB: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:51,340 - DEBUG - SLB: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:51,350 - DEBUG - SLB: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:51,351 - DEBUG -   Exiting history()
2025-01-09 02:19:51,351 - DEBUG -  Exiting history()
2025-01-09 02:19:51,353 - DEBUG - Exiting download()
2025-01-09 02:19:51,467 - ERROR - Error writing data for SLB to DB: schema "np" does not exist
LINE 4:             VALUES ('SLB','2020-01-01'::date,np.float64(36.2...
                                                     ^

2025-01-09 02:19:51,468 - DEBUG - Entering download()
2025-01-09 02:19:51,468 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:51,468 - DEBUG -  Entering history()
2025-01-09 02:19:51,469 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['STX', 1, 0])
2025-01-09 02:19:51,469 - DEBUG -   Entering history()
2025-01-09 02:19:51,469 - DEBUG - STX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:51,470 - DEBUG -    Entering get()
2025-01-09 02:19:51,470 - DEBUG -     Entering _make_request()
2025-01-09 02:19:51,470 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/STX
2025-01-09 02:19:51,470 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:51,470 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:51,470 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:51,470 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:51,470 - DEBUG - reusing cookie
2025-01-09 02:19:51,470 - DEBUG - reusing crumb
2025-01-09 02:19:51,470 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:51,470 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:51,648 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/STX?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1210
2025-01-09 02:19:51,648 - DEBUG - response code=200
2025-01-09 02:19:51,648 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:51,649 - DEBUG -    Exiting get()
2025-01-09 02:19:51,649 - DEBUG - STX: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:51,650 - DEBUG - STX: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:51,653 - DEBUG - STX: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:51,658 - DEBUG - STX: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:51,658 - DEBUG -   Exiting history()
2025-01-09 02:19:51,658 - DEBUG -  Exiting history()
2025-01-09 02:19:51,660 - DEBUG - Exiting download()
2025-01-09 02:19:51,783 - ERROR - Error writing data for STX to DB: schema "np" does not exist
LINE 4:             VALUES ('STX','2020-01-01'::date,np.float64(49.1...
                                                     ^

2025-01-09 02:19:51,783 - DEBUG - Entering download()
2025-01-09 02:19:51,784 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:51,784 - DEBUG -  Entering history()
2025-01-09 02:19:51,784 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SRE', 1, 0])
2025-01-09 02:19:51,784 - DEBUG -   Entering history()
2025-01-09 02:19:51,785 - DEBUG - SRE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:51,785 - DEBUG -    Entering get()
2025-01-09 02:19:51,785 - DEBUG -     Entering _make_request()
2025-01-09 02:19:51,785 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SRE
2025-01-09 02:19:51,785 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:51,785 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:51,785 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:51,785 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:51,785 - DEBUG - reusing cookie
2025-01-09 02:19:51,785 - DEBUG - reusing crumb
2025-01-09 02:19:51,785 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:51,785 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:51,965 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SRE?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1170
2025-01-09 02:19:51,965 - DEBUG - response code=200
2025-01-09 02:19:51,965 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:51,965 - DEBUG -    Exiting get()
2025-01-09 02:19:51,966 - DEBUG - SRE: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:51,967 - DEBUG - SRE: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:51,970 - DEBUG - SRE: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:51,976 - DEBUG - SRE: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:51,976 - DEBUG -   Exiting history()
2025-01-09 02:19:51,976 - DEBUG -  Exiting history()
2025-01-09 02:19:51,978 - DEBUG - Exiting download()
2025-01-09 02:19:52,197 - ERROR - Error writing data for SRE to DB: schema "np" does not exist
LINE 4:             VALUES ('SRE','2020-01-01'::date,np.float64(64.2...
                                                     ^

2025-01-09 02:19:52,198 - DEBUG - Entering download()
2025-01-09 02:19:52,198 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:52,198 - DEBUG -  Entering history()
2025-01-09 02:19:52,198 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NOW', 1, 0])
2025-01-09 02:19:52,199 - DEBUG -   Entering history()
2025-01-09 02:19:52,199 - DEBUG - NOW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:52,199 - DEBUG -    Entering get()
2025-01-09 02:19:52,199 - DEBUG -     Entering _make_request()
2025-01-09 02:19:52,199 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/NOW
2025-01-09 02:19:52,199 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:52,200 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:52,200 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:52,200 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:52,200 - DEBUG - reusing cookie
2025-01-09 02:19:52,200 - DEBUG - reusing crumb
2025-01-09 02:19:52,200 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:52,200 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:52,357 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/NOW?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1194
2025-01-09 02:19:52,357 - DEBUG - response code=200
2025-01-09 02:19:52,357 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:52,357 - DEBUG -    Exiting get()
2025-01-09 02:19:52,358 - DEBUG - NOW: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:52,359 - DEBUG - NOW: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:52,363 - DEBUG - NOW: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:52,368 - DEBUG - NOW: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:52,368 - DEBUG -   Exiting history()
2025-01-09 02:19:52,368 - DEBUG -  Exiting history()
2025-01-09 02:19:52,370 - DEBUG - Exiting download()
2025-01-09 02:19:52,481 - ERROR - Error writing data for NOW to DB: schema "np" does not exist
LINE 4:             VALUES ('NOW','2020-01-01'::date,np.float64(284....
                                                     ^

2025-01-09 02:19:52,481 - DEBUG - Entering download()
2025-01-09 02:19:52,481 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:52,481 - DEBUG -  Entering history()
2025-01-09 02:19:52,482 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SHW', 1, 0])
2025-01-09 02:19:52,482 - DEBUG -   Entering history()
2025-01-09 02:19:52,483 - DEBUG - SHW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:52,483 - DEBUG -    Entering get()
2025-01-09 02:19:52,483 - DEBUG -     Entering _make_request()
2025-01-09 02:19:52,483 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SHW
2025-01-09 02:19:52,483 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:52,483 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:52,483 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:52,483 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:52,483 - DEBUG - reusing cookie
2025-01-09 02:19:52,483 - DEBUG - reusing crumb
2025-01-09 02:19:52,483 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:52,483 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:52,692 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SHW?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1220
2025-01-09 02:19:52,693 - DEBUG - response code=200
2025-01-09 02:19:52,693 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:52,693 - DEBUG -    Exiting get()
2025-01-09 02:19:52,694 - DEBUG - SHW: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:52,695 - DEBUG - SHW: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:52,699 - DEBUG - SHW: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:52,704 - DEBUG - SHW: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:52,704 - DEBUG -   Exiting history()
2025-01-09 02:19:52,704 - DEBUG -  Exiting history()
2025-01-09 02:19:52,706 - DEBUG - Exiting download()
2025-01-09 02:19:52,923 - ERROR - Error writing data for SHW to DB: schema "np" does not exist
LINE 4:             VALUES ('SHW','2020-01-01'::date,np.float64(186....
                                                     ^

2025-01-09 02:19:52,924 - DEBUG - Entering download()
2025-01-09 02:19:52,924 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:52,924 - DEBUG -  Entering history()
2025-01-09 02:19:52,924 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SPG', 1, 0])
2025-01-09 02:19:52,924 - DEBUG -   Entering history()
2025-01-09 02:19:52,925 - DEBUG - SPG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:52,925 - DEBUG -    Entering get()
2025-01-09 02:19:52,925 - DEBUG -     Entering _make_request()
2025-01-09 02:19:52,925 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SPG
2025-01-09 02:19:52,925 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:52,925 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:52,926 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:52,926 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:52,926 - DEBUG - reusing cookie
2025-01-09 02:19:52,926 - DEBUG - reusing crumb
2025-01-09 02:19:52,926 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:52,926 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:53,128 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SPG?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1217
2025-01-09 02:19:53,128 - DEBUG - response code=200
2025-01-09 02:19:53,128 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:53,128 - DEBUG -    Exiting get()
2025-01-09 02:19:53,129 - DEBUG - SPG: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:53,130 - DEBUG - SPG: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:53,133 - DEBUG - SPG: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:53,138 - DEBUG - SPG: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:53,138 - DEBUG -   Exiting history()
2025-01-09 02:19:53,138 - DEBUG -  Exiting history()
2025-01-09 02:19:53,141 - DEBUG - Exiting download()
2025-01-09 02:19:53,253 - ERROR - Error writing data for SPG to DB: schema "np" does not exist
LINE 4:             VALUES ('SPG','2020-01-01'::date,np.float64(112....
                                                     ^

2025-01-09 02:19:53,253 - DEBUG - Entering download()
2025-01-09 02:19:53,254 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:53,254 - DEBUG -  Entering history()
2025-01-09 02:19:53,254 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SWKS', 1, 0])
2025-01-09 02:19:53,254 - DEBUG -   Entering history()
2025-01-09 02:19:53,255 - DEBUG - SWKS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:53,255 - DEBUG -    Entering get()
2025-01-09 02:19:53,255 - DEBUG -     Entering _make_request()
2025-01-09 02:19:53,255 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SWKS
2025-01-09 02:19:53,255 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:53,255 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:53,255 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:53,255 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:53,255 - DEBUG - reusing cookie
2025-01-09 02:19:53,255 - DEBUG - reusing crumb
2025-01-09 02:19:53,255 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:53,255 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:53,420 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SWKS?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1214
2025-01-09 02:19:53,421 - DEBUG - response code=200
2025-01-09 02:19:53,421 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:53,421 - DEBUG -    Exiting get()
2025-01-09 02:19:53,422 - DEBUG - SWKS: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:53,423 - DEBUG - SWKS: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:53,426 - DEBUG - SWKS: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:53,432 - DEBUG - SWKS: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:53,432 - DEBUG -   Exiting history()
2025-01-09 02:19:53,432 - DEBUG -  Exiting history()
2025-01-09 02:19:53,434 - DEBUG - Exiting download()
2025-01-09 02:19:53,544 - ERROR - Error writing data for SWKS to DB: schema "np" does not exist
LINE 4:             VALUES ('SWKS','2020-01-01'::date,np.float64(110...
                                                      ^

2025-01-09 02:19:53,545 - DEBUG - Entering download()
2025-01-09 02:19:53,545 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:53,545 - DEBUG -  Entering history()
2025-01-09 02:19:53,545 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SJM', 1, 0])
2025-01-09 02:19:53,546 - DEBUG -   Entering history()
2025-01-09 02:19:53,546 - DEBUG - SJM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:53,547 - DEBUG -    Entering get()
2025-01-09 02:19:53,547 - DEBUG -     Entering _make_request()
2025-01-09 02:19:53,547 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SJM
2025-01-09 02:19:53,547 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:53,547 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:53,547 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:53,547 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:53,547 - DEBUG - reusing cookie
2025-01-09 02:19:53,547 - DEBUG - reusing crumb
2025-01-09 02:19:53,547 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:53,547 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:53,748 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SJM?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1214
2025-01-09 02:19:53,749 - DEBUG - response code=200
2025-01-09 02:19:53,749 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:53,749 - DEBUG -    Exiting get()
2025-01-09 02:19:53,750 - DEBUG - SJM: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:53,751 - DEBUG - SJM: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:53,754 - DEBUG - SJM: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:53,760 - DEBUG - SJM: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:53,760 - DEBUG -   Exiting history()
2025-01-09 02:19:53,760 - DEBUG -  Exiting history()
2025-01-09 02:19:53,762 - DEBUG - Exiting download()
2025-01-09 02:19:53,815 - DEBUG - Entering download()
2025-01-09 02:19:53,815 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:53,815 - DEBUG -  Entering history()
2025-01-09 02:19:53,816 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SW', 1, 0])
2025-01-09 02:19:53,816 - DEBUG -   Entering history()
2025-01-09 02:19:53,817 - DEBUG - SW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:53,817 - DEBUG -    Entering get()
2025-01-09 02:19:53,817 - DEBUG -     Entering _make_request()
2025-01-09 02:19:53,817 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SW
2025-01-09 02:19:53,817 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:53,817 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:53,817 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:53,817 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:53,817 - DEBUG - reusing cookie
2025-01-09 02:19:53,817 - DEBUG - reusing crumb
2025-01-09 02:19:53,817 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:53,817 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:53,985 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SW?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:19:53,986 - DEBUG - response code=400
2025-01-09 02:19:53,986 - DEBUG - toggling cookie strategy basic -> csrf
2025-01-09 02:19:53,986 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:53,986 - DEBUG - cookie_mode = 'csrf'
2025-01-09 02:19:53,986 - DEBUG -       Entering _get_crumb_csrf()
2025-01-09 02:19:53,986 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['csrf', 1, 0])
2025-01-09 02:19:54,129 - DEBUG - https://guce.yahoo.com:443 "GET /consent HTTP/1.1" 302 0
2025-01-09 02:19:54,688 - DEBUG - https://www.yahoo.com:443 "GET /?guccounter=1 HTTP/1.1" 200 None
2025-01-09 02:19:55,220 - DEBUG - Failed to find "csrfToken" in response
2025-01-09 02:19:55,220 - DEBUG -       Exiting _get_crumb_csrf()
2025-01-09 02:19:55,220 - DEBUG - toggling cookie strategy csrf -> basic
2025-01-09 02:19:55,220 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:55,221 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['basic', 1, 0])
2025-01-09 02:19:55,221 - DEBUG - loaded persistent cookie
2025-01-09 02:19:55,221 - DEBUG - reusing cookie
2025-01-09 02:19:55,374 - DEBUG - https://query1.finance.yahoo.com:443 "GET /v1/test/getcrumb HTTP/1.1" 200 11
2025-01-09 02:19:55,374 - DEBUG - crumb = 'mbrlfmeSllh'
2025-01-09 02:19:55,374 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:55,374 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:55,527 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SW?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:19:55,528 - DEBUG - response code=400
2025-01-09 02:19:55,528 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:55,528 - DEBUG -    Exiting get()
2025-01-09 02:19:55,531 - ERROR - 
1 Failed download:
2025-01-09 02:19:55,531 - ERROR - ['SW']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1wk 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn\'t exist for startDate = 1577854800, endDate = 1577941200")')
2025-01-09 02:19:55,531 - DEBUG - ['SW']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1wk 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn't exist for startDate = 1577854800, endDate = 1577941200")

2025-01-09 02:19:55,534 - DEBUG - Exiting download()
2025-01-09 02:19:55,534 - WARNING - Ticker SW is missing 'Close' column. Skipping.
2025-01-09 02:19:55,534 - DEBUG - Entering download()
2025-01-09 02:19:55,534 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:55,534 - DEBUG -  Entering history()
2025-01-09 02:19:55,534 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SNA', 1, 0])
2025-01-09 02:19:55,534 - DEBUG -   Entering history()
2025-01-09 02:19:55,535 - DEBUG - SNA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:55,535 - DEBUG -    Entering get()
2025-01-09 02:19:55,535 - DEBUG -     Entering _make_request()
2025-01-09 02:19:55,535 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SNA
2025-01-09 02:19:55,535 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:55,535 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:55,535 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:55,535 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:55,535 - DEBUG - reusing cookie
2025-01-09 02:19:55,535 - DEBUG - reusing crumb
2025-01-09 02:19:55,535 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:55,536 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:55,768 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SNA?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1188
2025-01-09 02:19:55,769 - DEBUG - response code=200
2025-01-09 02:19:55,769 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:55,769 - DEBUG -    Exiting get()
2025-01-09 02:19:55,770 - DEBUG - SNA: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:55,771 - DEBUG - SNA: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:55,775 - DEBUG - SNA: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:55,782 - DEBUG - SNA: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:55,783 - DEBUG -   Exiting history()
2025-01-09 02:19:55,783 - DEBUG -  Exiting history()
2025-01-09 02:19:55,785 - DEBUG - Exiting download()
2025-01-09 02:19:55,834 - DEBUG - Entering download()
2025-01-09 02:19:55,834 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:55,834 - DEBUG -  Entering history()
2025-01-09 02:19:55,834 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SOLV', 1, 0])
2025-01-09 02:19:55,835 - DEBUG -   Entering history()
2025-01-09 02:19:55,835 - DEBUG - SOLV: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:55,835 - DEBUG -    Entering get()
2025-01-09 02:19:55,835 - DEBUG -     Entering _make_request()
2025-01-09 02:19:55,836 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SOLV
2025-01-09 02:19:55,836 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:55,836 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:55,836 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:55,836 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:55,836 - DEBUG - reusing cookie
2025-01-09 02:19:55,836 - DEBUG - reusing crumb
2025-01-09 02:19:55,836 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:55,836 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:55,984 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SOLV?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:19:55,985 - DEBUG - response code=400
2025-01-09 02:19:55,985 - DEBUG - toggling cookie strategy basic -> csrf
2025-01-09 02:19:55,985 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:55,985 - DEBUG - cookie_mode = 'csrf'
2025-01-09 02:19:55,985 - DEBUG -       Entering _get_crumb_csrf()
2025-01-09 02:19:55,985 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['csrf', 1, 0])
2025-01-09 02:19:56,117 - DEBUG - https://guce.yahoo.com:443 "GET /consent HTTP/1.1" 302 0
2025-01-09 02:19:56,519 - DEBUG - https://www.yahoo.com:443 "GET /?guccounter=1 HTTP/1.1" 200 None
2025-01-09 02:19:57,050 - DEBUG - Failed to find "csrfToken" in response
2025-01-09 02:19:57,050 - DEBUG -       Exiting _get_crumb_csrf()
2025-01-09 02:19:57,050 - DEBUG - toggling cookie strategy csrf -> basic
2025-01-09 02:19:57,050 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:57,051 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['basic', 1, 0])
2025-01-09 02:19:57,051 - DEBUG - loaded persistent cookie
2025-01-09 02:19:57,051 - DEBUG - reusing cookie
2025-01-09 02:19:57,196 - DEBUG - https://query1.finance.yahoo.com:443 "GET /v1/test/getcrumb HTTP/1.1" 200 11
2025-01-09 02:19:57,197 - DEBUG - crumb = 'mbrlfmeSllh'
2025-01-09 02:19:57,197 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:57,197 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:57,363 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SOLV?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:19:57,363 - DEBUG - response code=400
2025-01-09 02:19:57,363 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:57,364 - DEBUG -    Exiting get()
2025-01-09 02:19:57,366 - ERROR - 
1 Failed download:
2025-01-09 02:19:57,366 - ERROR - ['SOLV']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1wk 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn\'t exist for startDate = 1577854800, endDate = 1577941200")')
2025-01-09 02:19:57,367 - DEBUG - ['SOLV']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1wk 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn't exist for startDate = 1577854800, endDate = 1577941200")

2025-01-09 02:19:57,369 - DEBUG - Exiting download()
2025-01-09 02:19:57,433 - ERROR - Error writing data for SOLV to DB: schema "np" does not exist
LINE 4:             VALUES ('SOLV','2024-04-01'::date,np.float64(69....
                                                      ^

2025-01-09 02:19:57,433 - DEBUG - Entering download()
2025-01-09 02:19:57,433 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:57,434 - DEBUG -  Entering history()
2025-01-09 02:19:57,434 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SO', 1, 0])
2025-01-09 02:19:57,434 - DEBUG -   Entering history()
2025-01-09 02:19:57,435 - DEBUG - SO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:57,435 - DEBUG -    Entering get()
2025-01-09 02:19:57,435 - DEBUG -     Entering _make_request()
2025-01-09 02:19:57,435 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SO
2025-01-09 02:19:57,435 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:57,435 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:57,435 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:57,436 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:57,436 - DEBUG - reusing cookie
2025-01-09 02:19:57,436 - DEBUG - reusing crumb
2025-01-09 02:19:57,436 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:57,436 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:57,653 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SO?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1197
2025-01-09 02:19:57,654 - DEBUG - response code=200
2025-01-09 02:19:57,654 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:57,654 - DEBUG -    Exiting get()
2025-01-09 02:19:57,655 - DEBUG - SO: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:57,656 - DEBUG - SO: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:57,660 - DEBUG - SO: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:57,666 - DEBUG - SO: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:57,666 - DEBUG -   Exiting history()
2025-01-09 02:19:57,666 - DEBUG -  Exiting history()
2025-01-09 02:19:57,668 - DEBUG - Exiting download()
2025-01-09 02:19:57,814 - ERROR - Error writing data for SO to DB: schema "np" does not exist
LINE 4:             VALUES ('SO','2020-01-01'::date,np.float64(52.17...
                                                    ^

2025-01-09 02:19:57,814 - DEBUG - Entering download()
2025-01-09 02:19:57,814 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:57,815 - DEBUG -  Entering history()
2025-01-09 02:19:57,815 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['LUV', 1, 0])
2025-01-09 02:19:57,815 - DEBUG -   Entering history()
2025-01-09 02:19:57,816 - DEBUG - LUV: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:57,816 - DEBUG -    Entering get()
2025-01-09 02:19:57,816 - DEBUG -     Entering _make_request()
2025-01-09 02:19:57,816 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/LUV
2025-01-09 02:19:57,816 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:57,816 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:57,816 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:57,816 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:57,816 - DEBUG - reusing cookie
2025-01-09 02:19:57,816 - DEBUG - reusing crumb
2025-01-09 02:19:57,816 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:57,816 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:58,014 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/LUV?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1206
2025-01-09 02:19:58,014 - DEBUG - response code=200
2025-01-09 02:19:58,014 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:58,014 - DEBUG -    Exiting get()
2025-01-09 02:19:58,016 - DEBUG - LUV: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:58,017 - DEBUG - LUV: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:58,023 - DEBUG - LUV: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:58,029 - DEBUG - LUV: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:58,029 - DEBUG -   Exiting history()
2025-01-09 02:19:58,029 - DEBUG -  Exiting history()
2025-01-09 02:19:58,031 - DEBUG - Exiting download()
2025-01-09 02:19:58,152 - ERROR - Error writing data for LUV to DB: schema "np" does not exist
LINE 4:             VALUES ('LUV','2020-01-01'::date,np.float64(51.5...
                                                     ^

2025-01-09 02:19:58,154 - DEBUG - Entering download()
2025-01-09 02:19:58,154 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:58,155 - DEBUG -  Entering history()
2025-01-09 02:19:58,155 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SWK', 1, 0])
2025-01-09 02:19:58,156 - DEBUG -   Entering history()
2025-01-09 02:19:58,156 - DEBUG - SWK: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:58,157 - DEBUG -    Entering get()
2025-01-09 02:19:58,157 - DEBUG -     Entering _make_request()
2025-01-09 02:19:58,157 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SWK
2025-01-09 02:19:58,157 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:58,157 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:58,157 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:58,157 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:58,157 - DEBUG - reusing cookie
2025-01-09 02:19:58,157 - DEBUG - reusing crumb
2025-01-09 02:19:58,157 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:58,157 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:58,376 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SWK?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1217
2025-01-09 02:19:58,377 - DEBUG - response code=200
2025-01-09 02:19:58,377 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:58,377 - DEBUG -    Exiting get()
2025-01-09 02:19:58,378 - DEBUG - SWK: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:58,380 - DEBUG - SWK: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:58,385 - DEBUG - SWK: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:58,394 - DEBUG - SWK: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:58,394 - DEBUG -   Exiting history()
2025-01-09 02:19:58,394 - DEBUG -  Exiting history()
2025-01-09 02:19:58,398 - DEBUG - Exiting download()
2025-01-09 02:19:58,542 - ERROR - Error writing data for SWK to DB: schema "np" does not exist
LINE 4:             VALUES ('SWK','2020-01-01'::date,np.float64(145....
                                                     ^

2025-01-09 02:19:58,543 - DEBUG - Entering download()
2025-01-09 02:19:58,543 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:58,543 - DEBUG -  Entering history()
2025-01-09 02:19:58,544 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SBUX', 1, 0])
2025-01-09 02:19:58,544 - DEBUG -   Entering history()
2025-01-09 02:19:58,544 - DEBUG - SBUX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:58,544 - DEBUG -    Entering get()
2025-01-09 02:19:58,545 - DEBUG -     Entering _make_request()
2025-01-09 02:19:58,545 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SBUX
2025-01-09 02:19:58,545 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:58,545 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:58,545 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:58,545 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:58,545 - DEBUG - reusing cookie
2025-01-09 02:19:58,545 - DEBUG - reusing crumb
2025-01-09 02:19:58,545 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:58,545 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:58,702 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SBUX?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1202
2025-01-09 02:19:58,702 - DEBUG - response code=200
2025-01-09 02:19:58,702 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:58,703 - DEBUG -    Exiting get()
2025-01-09 02:19:58,704 - DEBUG - SBUX: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:58,705 - DEBUG - SBUX: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:58,709 - DEBUG - SBUX: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:58,715 - DEBUG - SBUX: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:58,715 - DEBUG -   Exiting history()
2025-01-09 02:19:58,715 - DEBUG -  Exiting history()
2025-01-09 02:19:58,717 - DEBUG - Exiting download()
2025-01-09 02:19:58,762 - DEBUG - Entering download()
2025-01-09 02:19:58,762 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:58,762 - DEBUG -  Entering history()
2025-01-09 02:19:58,762 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['STT', 1, 0])
2025-01-09 02:19:58,762 - DEBUG -   Entering history()
2025-01-09 02:19:58,763 - DEBUG - STT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:58,763 - DEBUG -    Entering get()
2025-01-09 02:19:58,763 - DEBUG -     Entering _make_request()
2025-01-09 02:19:58,763 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/STT
2025-01-09 02:19:58,763 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:58,763 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:58,764 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:58,764 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:58,764 - DEBUG - reusing cookie
2025-01-09 02:19:58,764 - DEBUG - reusing crumb
2025-01-09 02:19:58,764 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:58,764 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:59,013 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/STT?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1202
2025-01-09 02:19:59,014 - DEBUG - response code=200
2025-01-09 02:19:59,014 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:59,014 - DEBUG -    Exiting get()
2025-01-09 02:19:59,016 - DEBUG - STT: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:59,017 - DEBUG - STT: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:59,021 - DEBUG - STT: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:59,027 - DEBUG - STT: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:59,027 - DEBUG -   Exiting history()
2025-01-09 02:19:59,028 - DEBUG -  Exiting history()
2025-01-09 02:19:59,030 - DEBUG - Exiting download()
2025-01-09 02:19:59,285 - ERROR - Error writing data for STT to DB: schema "np" does not exist
LINE 4:             VALUES ('STT','2020-01-01'::date,np.float64(67.3...
                                                     ^

2025-01-09 02:19:59,286 - DEBUG - Entering download()
2025-01-09 02:19:59,286 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:59,286 - DEBUG -  Entering history()
2025-01-09 02:19:59,287 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['STLD', 1, 0])
2025-01-09 02:19:59,287 - DEBUG -   Entering history()
2025-01-09 02:19:59,288 - DEBUG - STLD: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:59,288 - DEBUG -    Entering get()
2025-01-09 02:19:59,288 - DEBUG -     Entering _make_request()
2025-01-09 02:19:59,288 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/STLD
2025-01-09 02:19:59,288 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:59,288 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:59,288 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:59,288 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:59,288 - DEBUG - reusing cookie
2025-01-09 02:19:59,288 - DEBUG - reusing crumb
2025-01-09 02:19:59,288 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:59,288 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:59,469 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/STLD?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1208
2025-01-09 02:19:59,469 - DEBUG - response code=200
2025-01-09 02:19:59,469 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:59,470 - DEBUG -    Exiting get()
2025-01-09 02:19:59,471 - DEBUG - STLD: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:59,472 - DEBUG - STLD: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:59,476 - DEBUG - STLD: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:59,483 - DEBUG - STLD: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:59,483 - DEBUG -   Exiting history()
2025-01-09 02:19:59,483 - DEBUG -  Exiting history()
2025-01-09 02:19:59,487 - DEBUG - Exiting download()
2025-01-09 02:19:59,538 - DEBUG - Entering download()
2025-01-09 02:19:59,538 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:59,539 - DEBUG -  Entering history()
2025-01-09 02:19:59,539 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['STE', 1, 0])
2025-01-09 02:19:59,539 - DEBUG -   Entering history()
2025-01-09 02:19:59,540 - DEBUG - STE: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:59,540 - DEBUG -    Entering get()
2025-01-09 02:19:59,540 - DEBUG -     Entering _make_request()
2025-01-09 02:19:59,540 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/STE
2025-01-09 02:19:59,540 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:59,540 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:59,540 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:59,540 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:59,540 - DEBUG - reusing cookie
2025-01-09 02:19:59,540 - DEBUG - reusing crumb
2025-01-09 02:19:59,540 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:59,540 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:19:59,746 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/STE?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1191
2025-01-09 02:19:59,746 - DEBUG - response code=200
2025-01-09 02:19:59,746 - DEBUG -     Exiting _make_request()
2025-01-09 02:19:59,747 - DEBUG -    Exiting get()
2025-01-09 02:19:59,748 - DEBUG - STE: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:19:59,749 - DEBUG - STE: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:59,753 - DEBUG - STE: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:59,760 - DEBUG - STE: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:19:59,760 - DEBUG -   Exiting history()
2025-01-09 02:19:59,760 - DEBUG -  Exiting history()
2025-01-09 02:19:59,763 - DEBUG - Exiting download()
2025-01-09 02:19:59,917 - DEBUG - Entering download()
2025-01-09 02:19:59,917 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:19:59,917 - DEBUG -  Entering history()
2025-01-09 02:19:59,917 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SYK', 1, 0])
2025-01-09 02:19:59,918 - DEBUG -   Entering history()
2025-01-09 02:19:59,918 - DEBUG - SYK: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:19:59,918 - DEBUG -    Entering get()
2025-01-09 02:19:59,918 - DEBUG -     Entering _make_request()
2025-01-09 02:19:59,918 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SYK
2025-01-09 02:19:59,919 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:19:59,919 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:19:59,919 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:19:59,919 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:19:59,919 - DEBUG - reusing cookie
2025-01-09 02:19:59,919 - DEBUG - reusing crumb
2025-01-09 02:19:59,919 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:19:59,919 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:00,107 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SYK?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1183
2025-01-09 02:20:00,108 - DEBUG - response code=200
2025-01-09 02:20:00,108 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:00,108 - DEBUG -    Exiting get()
2025-01-09 02:20:00,109 - DEBUG - SYK: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:00,110 - DEBUG - SYK: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:00,114 - DEBUG - SYK: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:00,120 - DEBUG - SYK: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:00,120 - DEBUG -   Exiting history()
2025-01-09 02:20:00,120 - DEBUG -  Exiting history()
2025-01-09 02:20:00,122 - DEBUG - Exiting download()
2025-01-09 02:20:00,288 - DEBUG - Entering download()
2025-01-09 02:20:00,288 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:00,289 - DEBUG -  Entering history()
2025-01-09 02:20:00,289 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SMCI', 1, 0])
2025-01-09 02:20:00,289 - DEBUG -   Entering history()
2025-01-09 02:20:00,290 - DEBUG - SMCI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:00,290 - DEBUG -    Entering get()
2025-01-09 02:20:00,290 - DEBUG -     Entering _make_request()
2025-01-09 02:20:00,290 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SMCI
2025-01-09 02:20:00,290 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:00,290 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:00,290 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:00,290 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:00,290 - DEBUG - reusing cookie
2025-01-09 02:20:00,290 - DEBUG - reusing crumb
2025-01-09 02:20:00,290 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:00,290 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:00,452 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SMCI?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1214
2025-01-09 02:20:00,452 - DEBUG - response code=200
2025-01-09 02:20:00,452 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:00,452 - DEBUG -    Exiting get()
2025-01-09 02:20:00,454 - DEBUG - SMCI: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:00,455 - DEBUG - SMCI: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:00,459 - DEBUG - SMCI: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:00,464 - DEBUG - SMCI: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:00,464 - DEBUG -   Exiting history()
2025-01-09 02:20:00,464 - DEBUG -  Exiting history()
2025-01-09 02:20:00,467 - DEBUG - Exiting download()
2025-01-09 02:20:00,628 - DEBUG - Entering download()
2025-01-09 02:20:00,628 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:00,628 - DEBUG -  Entering history()
2025-01-09 02:20:00,629 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SYF', 1, 0])
2025-01-09 02:20:00,629 - DEBUG -   Entering history()
2025-01-09 02:20:00,630 - DEBUG - SYF: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:00,630 - DEBUG -    Entering get()
2025-01-09 02:20:00,630 - DEBUG -     Entering _make_request()
2025-01-09 02:20:00,630 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SYF
2025-01-09 02:20:00,630 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:00,630 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:00,630 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:00,630 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:00,631 - DEBUG - reusing cookie
2025-01-09 02:20:00,631 - DEBUG - reusing crumb
2025-01-09 02:20:00,631 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:00,631 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:00,803 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SYF?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1197
2025-01-09 02:20:00,803 - DEBUG - response code=200
2025-01-09 02:20:00,803 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:00,803 - DEBUG -    Exiting get()
2025-01-09 02:20:00,805 - DEBUG - SYF: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:00,806 - DEBUG - SYF: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:00,809 - DEBUG - SYF: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:00,815 - DEBUG - SYF: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:00,815 - DEBUG -   Exiting history()
2025-01-09 02:20:00,815 - DEBUG -  Exiting history()
2025-01-09 02:20:00,817 - DEBUG - Exiting download()
2025-01-09 02:20:00,948 - ERROR - Error writing data for SYF to DB: schema "np" does not exist
LINE 4:             VALUES ('SYF','2020-01-01'::date,np.float64(31.6...
                                                     ^

2025-01-09 02:20:00,949 - DEBUG - Entering download()
2025-01-09 02:20:00,949 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:00,949 - DEBUG -  Entering history()
2025-01-09 02:20:00,949 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SNPS', 1, 0])
2025-01-09 02:20:00,949 - DEBUG -   Entering history()
2025-01-09 02:20:00,950 - DEBUG - SNPS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:00,950 - DEBUG -    Entering get()
2025-01-09 02:20:00,950 - DEBUG -     Entering _make_request()
2025-01-09 02:20:00,950 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SNPS
2025-01-09 02:20:00,950 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:00,950 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:00,950 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:00,950 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:00,950 - DEBUG - reusing cookie
2025-01-09 02:20:00,950 - DEBUG - reusing crumb
2025-01-09 02:20:00,950 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:00,951 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:01,106 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SNPS?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1195
2025-01-09 02:20:01,107 - DEBUG - response code=200
2025-01-09 02:20:01,107 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:01,107 - DEBUG -    Exiting get()
2025-01-09 02:20:01,108 - DEBUG - SNPS: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:01,109 - DEBUG - SNPS: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:01,113 - DEBUG - SNPS: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:01,119 - DEBUG - SNPS: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:01,119 - DEBUG -   Exiting history()
2025-01-09 02:20:01,120 - DEBUG -  Exiting history()
2025-01-09 02:20:01,122 - DEBUG - Exiting download()
2025-01-09 02:20:01,242 - ERROR - Error writing data for SNPS to DB: schema "np" does not exist
LINE 4:             VALUES ('SNPS','2020-01-01'::date,np.float64(140...
                                                      ^

2025-01-09 02:20:01,243 - DEBUG - Entering download()
2025-01-09 02:20:01,243 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:01,243 - DEBUG -  Entering history()
2025-01-09 02:20:01,243 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['SYY', 1, 0])
2025-01-09 02:20:01,244 - DEBUG -   Entering history()
2025-01-09 02:20:01,244 - DEBUG - SYY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:01,245 - DEBUG -    Entering get()
2025-01-09 02:20:01,245 - DEBUG -     Entering _make_request()
2025-01-09 02:20:01,245 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/SYY
2025-01-09 02:20:01,245 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:01,245 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:01,245 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:01,245 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:01,245 - DEBUG - reusing cookie
2025-01-09 02:20:01,245 - DEBUG - reusing crumb
2025-01-09 02:20:01,245 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:01,245 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:01,438 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/SYY?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1262
2025-01-09 02:20:01,439 - DEBUG - response code=200
2025-01-09 02:20:01,439 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:01,439 - DEBUG -    Exiting get()
2025-01-09 02:20:01,440 - DEBUG - SYY: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:01,441 - DEBUG - SYY: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:01,445 - DEBUG - SYY: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:01,451 - DEBUG - SYY: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:01,451 - DEBUG -   Exiting history()
2025-01-09 02:20:01,451 - DEBUG -  Exiting history()
2025-01-09 02:20:01,453 - DEBUG - Exiting download()
2025-01-09 02:20:01,592 - ERROR - Error writing data for SYY to DB: schema "np" does not exist
LINE 4:             VALUES ('SYY','2020-01-01'::date,np.float64(73.9...
                                                     ^

2025-01-09 02:20:01,592 - DEBUG - Entering download()
2025-01-09 02:20:01,592 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:01,593 - DEBUG -  Entering history()
2025-01-09 02:20:01,593 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TMUS', 1, 0])
2025-01-09 02:20:01,593 - DEBUG -   Entering history()
2025-01-09 02:20:01,594 - DEBUG - TMUS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:01,594 - DEBUG -    Entering get()
2025-01-09 02:20:01,594 - DEBUG -     Entering _make_request()
2025-01-09 02:20:01,594 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TMUS
2025-01-09 02:20:01,594 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:01,594 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:01,594 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:01,594 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:01,594 - DEBUG - reusing cookie
2025-01-09 02:20:01,594 - DEBUG - reusing crumb
2025-01-09 02:20:01,594 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:01,594 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:01,757 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TMUS?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1201
2025-01-09 02:20:01,758 - DEBUG - response code=200
2025-01-09 02:20:01,758 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:01,758 - DEBUG -    Exiting get()
2025-01-09 02:20:01,759 - DEBUG - TMUS: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:01,761 - DEBUG - TMUS: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:01,764 - DEBUG - TMUS: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:01,771 - DEBUG - TMUS: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:01,771 - DEBUG -   Exiting history()
2025-01-09 02:20:01,771 - DEBUG -  Exiting history()
2025-01-09 02:20:01,773 - DEBUG - Exiting download()
2025-01-09 02:20:01,904 - ERROR - Error writing data for TMUS to DB: schema "np" does not exist
LINE 4:             VALUES ('TMUS','2020-01-01'::date,np.float64(77....
                                                      ^

2025-01-09 02:20:01,905 - DEBUG - Entering download()
2025-01-09 02:20:01,905 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:01,905 - DEBUG -  Entering history()
2025-01-09 02:20:01,905 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TROW', 1, 0])
2025-01-09 02:20:01,905 - DEBUG -   Entering history()
2025-01-09 02:20:01,906 - DEBUG - TROW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:01,906 - DEBUG -    Entering get()
2025-01-09 02:20:01,906 - DEBUG -     Entering _make_request()
2025-01-09 02:20:01,907 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TROW
2025-01-09 02:20:01,907 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:01,907 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:01,907 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:01,907 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:01,907 - DEBUG - reusing cookie
2025-01-09 02:20:01,907 - DEBUG - reusing crumb
2025-01-09 02:20:01,907 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:01,907 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:02,129 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TROW?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1207
2025-01-09 02:20:02,130 - DEBUG - response code=200
2025-01-09 02:20:02,130 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:02,130 - DEBUG -    Exiting get()
2025-01-09 02:20:02,131 - DEBUG - TROW: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:02,132 - DEBUG - TROW: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:02,136 - DEBUG - TROW: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:02,143 - DEBUG - TROW: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:02,143 - DEBUG -   Exiting history()
2025-01-09 02:20:02,143 - DEBUG -  Exiting history()
2025-01-09 02:20:02,145 - DEBUG - Exiting download()
2025-01-09 02:20:02,193 - DEBUG - Entering download()
2025-01-09 02:20:02,193 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:02,193 - DEBUG -  Entering history()
2025-01-09 02:20:02,194 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TTWO', 1, 0])
2025-01-09 02:20:02,194 - DEBUG -   Entering history()
2025-01-09 02:20:02,195 - DEBUG - TTWO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:02,195 - DEBUG -    Entering get()
2025-01-09 02:20:02,195 - DEBUG -     Entering _make_request()
2025-01-09 02:20:02,195 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TTWO
2025-01-09 02:20:02,195 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:02,195 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:02,195 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:02,195 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:02,195 - DEBUG - reusing cookie
2025-01-09 02:20:02,196 - DEBUG - reusing crumb
2025-01-09 02:20:02,196 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:02,196 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:02,353 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TTWO?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1235
2025-01-09 02:20:02,354 - DEBUG - response code=200
2025-01-09 02:20:02,354 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:02,354 - DEBUG -    Exiting get()
2025-01-09 02:20:02,355 - DEBUG - TTWO: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:02,356 - DEBUG - TTWO: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:02,360 - DEBUG - TTWO: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:02,365 - DEBUG - TTWO: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:02,365 - DEBUG -   Exiting history()
2025-01-09 02:20:02,365 - DEBUG -  Exiting history()
2025-01-09 02:20:02,368 - DEBUG - Exiting download()
2025-01-09 02:20:02,556 - ERROR - Error writing data for TTWO to DB: schema "np" does not exist
LINE 4:             VALUES ('TTWO','2020-01-01'::date,np.float64(123...
                                                      ^

2025-01-09 02:20:02,557 - DEBUG - Entering download()
2025-01-09 02:20:02,558 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:02,558 - DEBUG -  Entering history()
2025-01-09 02:20:02,558 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TPR', 1, 0])
2025-01-09 02:20:02,559 - DEBUG -   Entering history()
2025-01-09 02:20:02,559 - DEBUG - TPR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:02,560 - DEBUG -    Entering get()
2025-01-09 02:20:02,560 - DEBUG -     Entering _make_request()
2025-01-09 02:20:02,560 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TPR
2025-01-09 02:20:02,560 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:02,560 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:02,560 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:02,560 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:02,560 - DEBUG - reusing cookie
2025-01-09 02:20:02,560 - DEBUG - reusing crumb
2025-01-09 02:20:02,560 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:02,560 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:02,746 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TPR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1184
2025-01-09 02:20:02,747 - DEBUG - response code=200
2025-01-09 02:20:02,747 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:02,747 - DEBUG -    Exiting get()
2025-01-09 02:20:02,749 - DEBUG - TPR: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:02,750 - DEBUG - TPR: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:02,755 - DEBUG - TPR: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:02,762 - DEBUG - TPR: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:02,763 - DEBUG -   Exiting history()
2025-01-09 02:20:02,763 - DEBUG -  Exiting history()
2025-01-09 02:20:02,765 - DEBUG - Exiting download()
2025-01-09 02:20:02,807 - DEBUG - Entering download()
2025-01-09 02:20:02,807 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:02,807 - DEBUG -  Entering history()
2025-01-09 02:20:02,808 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TRGP', 1, 0])
2025-01-09 02:20:02,808 - DEBUG -   Entering history()
2025-01-09 02:20:02,809 - DEBUG - TRGP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:02,809 - DEBUG -    Entering get()
2025-01-09 02:20:02,809 - DEBUG -     Entering _make_request()
2025-01-09 02:20:02,809 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TRGP
2025-01-09 02:20:02,809 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:02,809 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:02,809 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:02,809 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:02,809 - DEBUG - reusing cookie
2025-01-09 02:20:02,809 - DEBUG - reusing crumb
2025-01-09 02:20:02,809 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:02,809 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:02,980 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TRGP?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1204
2025-01-09 02:20:02,980 - DEBUG - response code=200
2025-01-09 02:20:02,980 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:02,981 - DEBUG -    Exiting get()
2025-01-09 02:20:02,982 - DEBUG - TRGP: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:02,984 - DEBUG - TRGP: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:02,996 - DEBUG - TRGP: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:03,003 - DEBUG - TRGP: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:03,003 - DEBUG -   Exiting history()
2025-01-09 02:20:03,003 - DEBUG -  Exiting history()
2025-01-09 02:20:03,008 - DEBUG - Exiting download()
2025-01-09 02:20:03,146 - ERROR - Error writing data for TRGP to DB: schema "np" does not exist
LINE 4:             VALUES ('TRGP','2020-01-01'::date,np.float64(36....
                                                      ^

2025-01-09 02:20:03,146 - DEBUG - Entering download()
2025-01-09 02:20:03,147 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:03,147 - DEBUG -  Entering history()
2025-01-09 02:20:03,147 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TGT', 1, 0])
2025-01-09 02:20:03,147 - DEBUG -   Entering history()
2025-01-09 02:20:03,148 - DEBUG - TGT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:03,148 - DEBUG -    Entering get()
2025-01-09 02:20:03,148 - DEBUG -     Entering _make_request()
2025-01-09 02:20:03,148 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TGT
2025-01-09 02:20:03,148 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:03,148 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:03,148 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:03,148 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:03,148 - DEBUG - reusing cookie
2025-01-09 02:20:03,148 - DEBUG - reusing crumb
2025-01-09 02:20:03,148 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:03,148 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:03,352 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TGT?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1202
2025-01-09 02:20:03,352 - DEBUG - response code=200
2025-01-09 02:20:03,352 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:03,353 - DEBUG -    Exiting get()
2025-01-09 02:20:03,354 - DEBUG - TGT: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:03,354 - DEBUG - TGT: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:03,357 - DEBUG - TGT: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:03,363 - DEBUG - TGT: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:03,363 - DEBUG -   Exiting history()
2025-01-09 02:20:03,363 - DEBUG -  Exiting history()
2025-01-09 02:20:03,365 - DEBUG - Exiting download()
2025-01-09 02:20:03,410 - DEBUG - Entering download()
2025-01-09 02:20:03,410 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:03,410 - DEBUG -  Entering history()
2025-01-09 02:20:03,411 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TEL', 1, 0])
2025-01-09 02:20:03,411 - DEBUG -   Entering history()
2025-01-09 02:20:03,411 - DEBUG - TEL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:03,411 - DEBUG -    Entering get()
2025-01-09 02:20:03,412 - DEBUG -     Entering _make_request()
2025-01-09 02:20:03,412 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TEL
2025-01-09 02:20:03,412 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:03,412 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:03,412 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:03,412 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:03,412 - DEBUG - reusing cookie
2025-01-09 02:20:03,412 - DEBUG - reusing crumb
2025-01-09 02:20:03,412 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:03,412 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:03,584 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TEL?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1197
2025-01-09 02:20:03,584 - DEBUG - response code=200
2025-01-09 02:20:03,585 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:03,585 - DEBUG -    Exiting get()
2025-01-09 02:20:03,586 - DEBUG - TEL: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:03,586 - DEBUG - TEL: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:03,589 - DEBUG - TEL: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:03,594 - DEBUG - TEL: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:03,594 - DEBUG -   Exiting history()
2025-01-09 02:20:03,594 - DEBUG -  Exiting history()
2025-01-09 02:20:03,596 - DEBUG - Exiting download()
2025-01-09 02:20:03,841 - ERROR - Error writing data for TEL to DB: schema "np" does not exist
LINE 4:             VALUES ('TEL','2020-01-01'::date,np.float64(89.2...
                                                     ^

2025-01-09 02:20:03,842 - DEBUG - Entering download()
2025-01-09 02:20:03,842 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:03,842 - DEBUG -  Entering history()
2025-01-09 02:20:03,843 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TDY', 1, 0])
2025-01-09 02:20:03,843 - DEBUG -   Entering history()
2025-01-09 02:20:03,844 - DEBUG - TDY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:03,844 - DEBUG -    Entering get()
2025-01-09 02:20:03,844 - DEBUG -     Entering _make_request()
2025-01-09 02:20:03,844 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TDY
2025-01-09 02:20:03,844 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:03,844 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:03,844 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:03,844 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:03,844 - DEBUG - reusing cookie
2025-01-09 02:20:03,844 - DEBUG - reusing crumb
2025-01-09 02:20:03,844 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:03,845 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:03,990 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TDY?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1222
2025-01-09 02:20:03,990 - DEBUG - response code=200
2025-01-09 02:20:03,991 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:03,991 - DEBUG -    Exiting get()
2025-01-09 02:20:03,992 - DEBUG - TDY: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:03,992 - DEBUG - TDY: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:03,995 - DEBUG - TDY: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:04,000 - DEBUG - TDY: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:04,000 - DEBUG -   Exiting history()
2025-01-09 02:20:04,000 - DEBUG -  Exiting history()
2025-01-09 02:20:04,002 - DEBUG - Exiting download()
2025-01-09 02:20:04,110 - ERROR - Error writing data for TDY to DB: schema "np" does not exist
LINE 4:             VALUES ('TDY','2020-01-01'::date,np.float64(348....
                                                     ^

2025-01-09 02:20:04,110 - DEBUG - Entering download()
2025-01-09 02:20:04,110 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:04,110 - DEBUG -  Entering history()
2025-01-09 02:20:04,111 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TFX', 1, 0])
2025-01-09 02:20:04,111 - DEBUG -   Entering history()
2025-01-09 02:20:04,112 - DEBUG - TFX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:04,112 - DEBUG -    Entering get()
2025-01-09 02:20:04,112 - DEBUG -     Entering _make_request()
2025-01-09 02:20:04,112 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TFX
2025-01-09 02:20:04,112 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:04,112 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:04,112 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:04,112 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:04,112 - DEBUG - reusing cookie
2025-01-09 02:20:04,112 - DEBUG - reusing crumb
2025-01-09 02:20:04,112 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:04,112 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:04,309 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TFX?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1201
2025-01-09 02:20:04,309 - DEBUG - response code=200
2025-01-09 02:20:04,309 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:04,309 - DEBUG -    Exiting get()
2025-01-09 02:20:04,311 - DEBUG - TFX: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:04,312 - DEBUG - TFX: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:04,317 - DEBUG - TFX: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:04,324 - DEBUG - TFX: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:04,324 - DEBUG -   Exiting history()
2025-01-09 02:20:04,324 - DEBUG -  Exiting history()
2025-01-09 02:20:04,327 - DEBUG - Exiting download()
2025-01-09 02:20:04,373 - DEBUG - Entering download()
2025-01-09 02:20:04,373 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:04,373 - DEBUG -  Entering history()
2025-01-09 02:20:04,373 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TER', 1, 0])
2025-01-09 02:20:04,373 - DEBUG -   Entering history()
2025-01-09 02:20:04,374 - DEBUG - TER: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:04,374 - DEBUG -    Entering get()
2025-01-09 02:20:04,374 - DEBUG -     Entering _make_request()
2025-01-09 02:20:04,374 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TER
2025-01-09 02:20:04,374 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:04,374 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:04,375 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:04,375 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:04,375 - DEBUG - reusing cookie
2025-01-09 02:20:04,375 - DEBUG - reusing crumb
2025-01-09 02:20:04,375 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:04,375 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:04,536 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TER?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1189
2025-01-09 02:20:04,536 - DEBUG - response code=200
2025-01-09 02:20:04,536 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:04,536 - DEBUG -    Exiting get()
2025-01-09 02:20:04,537 - DEBUG - TER: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:04,538 - DEBUG - TER: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:04,541 - DEBUG - TER: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:04,546 - DEBUG - TER: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:04,546 - DEBUG -   Exiting history()
2025-01-09 02:20:04,546 - DEBUG -  Exiting history()
2025-01-09 02:20:04,548 - DEBUG - Exiting download()
2025-01-09 02:20:04,755 - ERROR - Error writing data for TER to DB: schema "np" does not exist
LINE 4:             VALUES ('TER','2020-01-01'::date,np.float64(67.4...
                                                     ^

2025-01-09 02:20:04,755 - DEBUG - Entering download()
2025-01-09 02:20:04,755 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:04,755 - DEBUG -  Entering history()
2025-01-09 02:20:04,756 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TSLA', 1, 0])
2025-01-09 02:20:04,756 - DEBUG -   Entering history()
2025-01-09 02:20:04,756 - DEBUG - TSLA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:04,757 - DEBUG -    Entering get()
2025-01-09 02:20:04,757 - DEBUG -     Entering _make_request()
2025-01-09 02:20:04,757 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TSLA
2025-01-09 02:20:04,757 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:04,757 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:04,757 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:04,757 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:04,757 - DEBUG - reusing cookie
2025-01-09 02:20:04,757 - DEBUG - reusing crumb
2025-01-09 02:20:04,757 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:04,757 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:04,926 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TSLA?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1193
2025-01-09 02:20:04,926 - DEBUG - response code=200
2025-01-09 02:20:04,926 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:04,926 - DEBUG -    Exiting get()
2025-01-09 02:20:04,928 - DEBUG - TSLA: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:04,929 - DEBUG - TSLA: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:04,933 - DEBUG - TSLA: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:04,939 - DEBUG - TSLA: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:04,939 - DEBUG -   Exiting history()
2025-01-09 02:20:04,939 - DEBUG -  Exiting history()
2025-01-09 02:20:04,942 - DEBUG - Exiting download()
2025-01-09 02:20:05,151 - ERROR - Error writing data for TSLA to DB: schema "np" does not exist
LINE 4:             VALUES ('TSLA','2020-01-01'::date,np.float64(28....
                                                      ^

2025-01-09 02:20:05,152 - DEBUG - Entering download()
2025-01-09 02:20:05,152 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:05,152 - DEBUG -  Entering history()
2025-01-09 02:20:05,152 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TXN', 1, 0])
2025-01-09 02:20:05,152 - DEBUG -   Entering history()
2025-01-09 02:20:05,153 - DEBUG - TXN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:05,153 - DEBUG -    Entering get()
2025-01-09 02:20:05,153 - DEBUG -     Entering _make_request()
2025-01-09 02:20:05,153 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TXN
2025-01-09 02:20:05,153 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:05,153 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:05,153 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:05,153 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:05,153 - DEBUG - reusing cookie
2025-01-09 02:20:05,153 - DEBUG - reusing crumb
2025-01-09 02:20:05,153 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:05,154 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:05,367 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TXN?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1227
2025-01-09 02:20:05,367 - DEBUG - response code=200
2025-01-09 02:20:05,367 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:05,367 - DEBUG -    Exiting get()
2025-01-09 02:20:05,368 - DEBUG - TXN: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:05,369 - DEBUG - TXN: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:05,372 - DEBUG - TXN: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:05,376 - DEBUG - TXN: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:05,376 - DEBUG -   Exiting history()
2025-01-09 02:20:05,376 - DEBUG -  Exiting history()
2025-01-09 02:20:05,378 - DEBUG - Exiting download()
2025-01-09 02:20:05,484 - ERROR - Error writing data for TXN to DB: schema "np" does not exist
LINE 4:             VALUES ('TXN','2020-01-01'::date,np.float64(112....
                                                     ^

2025-01-09 02:20:05,485 - DEBUG - Entering download()
2025-01-09 02:20:05,485 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:05,485 - DEBUG -  Entering history()
2025-01-09 02:20:05,485 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TPL', 1, 0])
2025-01-09 02:20:05,486 - DEBUG -   Entering history()
2025-01-09 02:20:05,486 - DEBUG - TPL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:05,486 - DEBUG -    Entering get()
2025-01-09 02:20:05,486 - DEBUG -     Entering _make_request()
2025-01-09 02:20:05,486 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TPL
2025-01-09 02:20:05,487 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:05,487 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:05,487 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:05,487 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:05,487 - DEBUG - reusing cookie
2025-01-09 02:20:05,487 - DEBUG - reusing crumb
2025-01-09 02:20:05,487 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:05,487 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:05,688 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TPL?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1222
2025-01-09 02:20:05,688 - DEBUG - response code=200
2025-01-09 02:20:05,688 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:05,688 - DEBUG -    Exiting get()
2025-01-09 02:20:05,689 - DEBUG - TPL: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:05,690 - DEBUG - TPL: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:05,693 - DEBUG - TPL: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:05,698 - DEBUG - TPL: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:05,698 - DEBUG -   Exiting history()
2025-01-09 02:20:05,698 - DEBUG -  Exiting history()
2025-01-09 02:20:05,700 - DEBUG - Exiting download()
2025-01-09 02:20:05,917 - ERROR - Error writing data for TPL to DB: schema "np" does not exist
LINE 4:             VALUES ('TPL','2020-01-01'::date,np.float64(237....
                                                     ^

2025-01-09 02:20:05,917 - DEBUG - Entering download()
2025-01-09 02:20:05,917 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:05,917 - DEBUG -  Entering history()
2025-01-09 02:20:05,918 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TXT', 1, 0])
2025-01-09 02:20:05,918 - DEBUG -   Entering history()
2025-01-09 02:20:05,919 - DEBUG - TXT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:05,919 - DEBUG -    Entering get()
2025-01-09 02:20:05,919 - DEBUG -     Entering _make_request()
2025-01-09 02:20:05,919 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TXT
2025-01-09 02:20:05,919 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:05,919 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:05,919 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:05,919 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:05,919 - DEBUG - reusing cookie
2025-01-09 02:20:05,919 - DEBUG - reusing crumb
2025-01-09 02:20:05,919 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:05,919 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:06,144 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TXT?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1163
2025-01-09 02:20:06,144 - DEBUG - response code=200
2025-01-09 02:20:06,144 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:06,144 - DEBUG -    Exiting get()
2025-01-09 02:20:06,145 - DEBUG - TXT: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:06,146 - DEBUG - TXT: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:06,150 - DEBUG - TXT: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:06,155 - DEBUG - TXT: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:06,155 - DEBUG -   Exiting history()
2025-01-09 02:20:06,155 - DEBUG -  Exiting history()
2025-01-09 02:20:06,158 - DEBUG - Exiting download()
2025-01-09 02:20:06,311 - DEBUG - Entering download()
2025-01-09 02:20:06,311 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:06,311 - DEBUG -  Entering history()
2025-01-09 02:20:06,311 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TMO', 1, 0])
2025-01-09 02:20:06,312 - DEBUG -   Entering history()
2025-01-09 02:20:06,312 - DEBUG - TMO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:06,312 - DEBUG -    Entering get()
2025-01-09 02:20:06,312 - DEBUG -     Entering _make_request()
2025-01-09 02:20:06,313 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TMO
2025-01-09 02:20:06,313 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:06,313 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:06,313 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:06,313 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:06,313 - DEBUG - reusing cookie
2025-01-09 02:20:06,313 - DEBUG - reusing crumb
2025-01-09 02:20:06,313 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:06,313 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:06,524 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TMO?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1207
2025-01-09 02:20:06,524 - DEBUG - response code=200
2025-01-09 02:20:06,524 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:06,525 - DEBUG -    Exiting get()
2025-01-09 02:20:06,525 - DEBUG - TMO: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:06,526 - DEBUG - TMO: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:06,529 - DEBUG - TMO: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:06,533 - DEBUG - TMO: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:06,533 - DEBUG -   Exiting history()
2025-01-09 02:20:06,533 - DEBUG -  Exiting history()
2025-01-09 02:20:06,535 - DEBUG - Exiting download()
2025-01-09 02:20:06,579 - DEBUG - Entering download()
2025-01-09 02:20:06,579 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:06,579 - DEBUG -  Entering history()
2025-01-09 02:20:06,580 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TJX', 1, 0])
2025-01-09 02:20:06,580 - DEBUG -   Entering history()
2025-01-09 02:20:06,580 - DEBUG - TJX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:06,580 - DEBUG -    Entering get()
2025-01-09 02:20:06,580 - DEBUG -     Entering _make_request()
2025-01-09 02:20:06,580 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TJX
2025-01-09 02:20:06,581 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:06,581 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:06,581 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:06,581 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:06,581 - DEBUG - reusing cookie
2025-01-09 02:20:06,581 - DEBUG - reusing crumb
2025-01-09 02:20:06,581 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:06,581 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:06,789 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TJX?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1207
2025-01-09 02:20:06,789 - DEBUG - response code=200
2025-01-09 02:20:06,789 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:06,789 - DEBUG -    Exiting get()
2025-01-09 02:20:06,790 - DEBUG - TJX: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:06,791 - DEBUG - TJX: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:06,794 - DEBUG - TJX: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:06,799 - DEBUG - TJX: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:06,799 - DEBUG -   Exiting history()
2025-01-09 02:20:06,799 - DEBUG -  Exiting history()
2025-01-09 02:20:06,801 - DEBUG - Exiting download()
2025-01-09 02:20:06,911 - ERROR - Error writing data for TJX to DB: schema "np" does not exist
LINE 4:             VALUES ('TJX','2020-01-01'::date,np.float64(57.4...
                                                     ^

2025-01-09 02:20:06,911 - DEBUG - Entering download()
2025-01-09 02:20:06,911 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:06,911 - DEBUG -  Entering history()
2025-01-09 02:20:06,912 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TSCO', 1, 0])
2025-01-09 02:20:06,912 - DEBUG -   Entering history()
2025-01-09 02:20:06,912 - DEBUG - TSCO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:06,913 - DEBUG -    Entering get()
2025-01-09 02:20:06,913 - DEBUG -     Entering _make_request()
2025-01-09 02:20:06,913 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TSCO
2025-01-09 02:20:06,913 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:06,913 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:06,913 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:06,913 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:06,913 - DEBUG - reusing cookie
2025-01-09 02:20:06,913 - DEBUG - reusing crumb
2025-01-09 02:20:06,913 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:06,913 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:07,086 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TSCO?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1209
2025-01-09 02:20:07,086 - DEBUG - response code=200
2025-01-09 02:20:07,086 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:07,086 - DEBUG -    Exiting get()
2025-01-09 02:20:07,087 - DEBUG - TSCO: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:07,088 - DEBUG - TSCO: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:07,091 - DEBUG - TSCO: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:07,096 - DEBUG - TSCO: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:07,097 - DEBUG -   Exiting history()
2025-01-09 02:20:07,097 - DEBUG -  Exiting history()
2025-01-09 02:20:07,099 - DEBUG - Exiting download()
2025-01-09 02:20:07,210 - ERROR - Error writing data for TSCO to DB: schema "np" does not exist
LINE 4:             VALUES ('TSCO','2020-01-01'::date,np.float64(15....
                                                      ^

2025-01-09 02:20:07,211 - DEBUG - Entering download()
2025-01-09 02:20:07,211 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:07,211 - DEBUG -  Entering history()
2025-01-09 02:20:07,211 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TT', 1, 0])
2025-01-09 02:20:07,211 - DEBUG -   Entering history()
2025-01-09 02:20:07,212 - DEBUG - TT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:07,212 - DEBUG -    Entering get()
2025-01-09 02:20:07,212 - DEBUG -     Entering _make_request()
2025-01-09 02:20:07,212 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TT
2025-01-09 02:20:07,212 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:07,212 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:07,212 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:07,212 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:07,213 - DEBUG - reusing cookie
2025-01-09 02:20:07,213 - DEBUG - reusing crumb
2025-01-09 02:20:07,213 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:07,213 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:07,422 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TT?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1206
2025-01-09 02:20:07,423 - DEBUG - response code=200
2025-01-09 02:20:07,423 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:07,423 - DEBUG -    Exiting get()
2025-01-09 02:20:07,424 - DEBUG - TT: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:07,425 - DEBUG - TT: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:07,428 - DEBUG - TT: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:07,432 - DEBUG - TT: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:07,433 - DEBUG -   Exiting history()
2025-01-09 02:20:07,433 - DEBUG -  Exiting history()
2025-01-09 02:20:07,435 - DEBUG - Exiting download()
2025-01-09 02:20:07,541 - ERROR - Error writing data for TT to DB: schema "np" does not exist
LINE 4:             VALUES ('TT','2020-01-01'::date,np.float64(96.16...
                                                    ^

2025-01-09 02:20:07,542 - DEBUG - Entering download()
2025-01-09 02:20:07,542 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:07,542 - DEBUG -  Entering history()
2025-01-09 02:20:07,543 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TDG', 1, 0])
2025-01-09 02:20:07,543 - DEBUG -   Entering history()
2025-01-09 02:20:07,543 - DEBUG - TDG: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:07,544 - DEBUG -    Entering get()
2025-01-09 02:20:07,544 - DEBUG -     Entering _make_request()
2025-01-09 02:20:07,544 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TDG
2025-01-09 02:20:07,544 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:07,544 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:07,544 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:07,544 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:07,544 - DEBUG - reusing cookie
2025-01-09 02:20:07,544 - DEBUG - reusing crumb
2025-01-09 02:20:07,544 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:07,544 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:07,721 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TDG?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1218
2025-01-09 02:20:07,722 - DEBUG - response code=200
2025-01-09 02:20:07,722 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:07,722 - DEBUG -    Exiting get()
2025-01-09 02:20:07,723 - DEBUG - TDG: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:07,724 - DEBUG - TDG: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:07,727 - DEBUG - TDG: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:07,731 - DEBUG - TDG: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:07,731 - DEBUG -   Exiting history()
2025-01-09 02:20:07,732 - DEBUG -  Exiting history()
2025-01-09 02:20:07,734 - DEBUG - Exiting download()
2025-01-09 02:20:07,777 - DEBUG - Entering download()
2025-01-09 02:20:07,777 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:07,777 - DEBUG -  Entering history()
2025-01-09 02:20:07,777 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TRV', 1, 0])
2025-01-09 02:20:07,778 - DEBUG -   Entering history()
2025-01-09 02:20:07,778 - DEBUG - TRV: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:07,778 - DEBUG -    Entering get()
2025-01-09 02:20:07,778 - DEBUG -     Entering _make_request()
2025-01-09 02:20:07,778 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TRV
2025-01-09 02:20:07,778 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:07,779 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:07,779 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:07,779 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:07,779 - DEBUG - reusing cookie
2025-01-09 02:20:07,779 - DEBUG - reusing crumb
2025-01-09 02:20:07,779 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:07,779 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:08,002 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TRV?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1224
2025-01-09 02:20:08,003 - DEBUG - response code=200
2025-01-09 02:20:08,003 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:08,003 - DEBUG -    Exiting get()
2025-01-09 02:20:08,004 - DEBUG - TRV: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:08,004 - DEBUG - TRV: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:08,007 - DEBUG - TRV: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:08,012 - DEBUG - TRV: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:08,012 - DEBUG -   Exiting history()
2025-01-09 02:20:08,012 - DEBUG -  Exiting history()
2025-01-09 02:20:08,014 - DEBUG - Exiting download()
2025-01-09 02:20:08,232 - ERROR - Error writing data for TRV to DB: schema "np" does not exist
LINE 4:             VALUES ('TRV','2020-01-01'::date,np.float64(123....
                                                     ^

2025-01-09 02:20:08,233 - DEBUG - Entering download()
2025-01-09 02:20:08,233 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:08,233 - DEBUG -  Entering history()
2025-01-09 02:20:08,233 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TRMB', 1, 0])
2025-01-09 02:20:08,234 - DEBUG -   Entering history()
2025-01-09 02:20:08,234 - DEBUG - TRMB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:08,234 - DEBUG -    Entering get()
2025-01-09 02:20:08,234 - DEBUG -     Entering _make_request()
2025-01-09 02:20:08,234 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TRMB
2025-01-09 02:20:08,234 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:08,234 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:08,234 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:08,235 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:08,235 - DEBUG - reusing cookie
2025-01-09 02:20:08,235 - DEBUG - reusing crumb
2025-01-09 02:20:08,235 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:08,235 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:08,386 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TRMB?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1183
2025-01-09 02:20:08,387 - DEBUG - response code=200
2025-01-09 02:20:08,387 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:08,387 - DEBUG -    Exiting get()
2025-01-09 02:20:08,388 - DEBUG - TRMB: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:08,389 - DEBUG - TRMB: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:08,394 - DEBUG - TRMB: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:08,399 - DEBUG - TRMB: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:08,400 - DEBUG -   Exiting history()
2025-01-09 02:20:08,400 - DEBUG -  Exiting history()
2025-01-09 02:20:08,402 - DEBUG - Exiting download()
2025-01-09 02:20:08,511 - ERROR - Error writing data for TRMB to DB: schema "np" does not exist
LINE 4:             VALUES ('TRMB','2020-01-01'::date,np.float64(41....
                                                      ^

2025-01-09 02:20:08,511 - DEBUG - Entering download()
2025-01-09 02:20:08,511 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:08,512 - DEBUG -  Entering history()
2025-01-09 02:20:08,512 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TFC', 1, 0])
2025-01-09 02:20:08,512 - DEBUG -   Entering history()
2025-01-09 02:20:08,513 - DEBUG - TFC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:08,513 - DEBUG -    Entering get()
2025-01-09 02:20:08,513 - DEBUG -     Entering _make_request()
2025-01-09 02:20:08,513 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TFC
2025-01-09 02:20:08,513 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:08,513 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:08,513 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:08,513 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:08,513 - DEBUG - reusing cookie
2025-01-09 02:20:08,513 - DEBUG - reusing crumb
2025-01-09 02:20:08,513 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:08,513 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:08,707 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TFC?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1213
2025-01-09 02:20:08,707 - DEBUG - response code=200
2025-01-09 02:20:08,707 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:08,707 - DEBUG -    Exiting get()
2025-01-09 02:20:08,708 - DEBUG - TFC: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:08,709 - DEBUG - TFC: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:08,713 - DEBUG - TFC: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:08,721 - DEBUG - TFC: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:08,721 - DEBUG -   Exiting history()
2025-01-09 02:20:08,721 - DEBUG -  Exiting history()
2025-01-09 02:20:08,724 - DEBUG - Exiting download()
2025-01-09 02:20:08,865 - ERROR - Error writing data for TFC to DB: schema "np" does not exist
LINE 4:             VALUES ('TFC','2020-01-01'::date,np.float64(44.8...
                                                     ^

2025-01-09 02:20:08,866 - DEBUG - Entering download()
2025-01-09 02:20:08,866 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:08,866 - DEBUG -  Entering history()
2025-01-09 02:20:08,866 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TYL', 1, 0])
2025-01-09 02:20:08,867 - DEBUG -   Entering history()
2025-01-09 02:20:08,867 - DEBUG - TYL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:08,867 - DEBUG -    Entering get()
2025-01-09 02:20:08,867 - DEBUG -     Entering _make_request()
2025-01-09 02:20:08,867 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TYL
2025-01-09 02:20:08,868 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:08,868 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:08,868 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:08,868 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:08,868 - DEBUG - reusing cookie
2025-01-09 02:20:08,868 - DEBUG - reusing crumb
2025-01-09 02:20:08,868 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:08,868 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:09,036 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TYL?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1206
2025-01-09 02:20:09,036 - DEBUG - response code=200
2025-01-09 02:20:09,036 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:09,036 - DEBUG -    Exiting get()
2025-01-09 02:20:09,037 - DEBUG - TYL: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:09,038 - DEBUG - TYL: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:09,041 - DEBUG - TYL: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:09,045 - DEBUG - TYL: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:09,045 - DEBUG -   Exiting history()
2025-01-09 02:20:09,045 - DEBUG -  Exiting history()
2025-01-09 02:20:09,047 - DEBUG - Exiting download()
2025-01-09 02:20:09,153 - ERROR - Error writing data for TYL to DB: schema "np" does not exist
LINE 4:             VALUES ('TYL','2020-01-01'::date,np.float64(301....
                                                     ^

2025-01-09 02:20:09,154 - DEBUG - Entering download()
2025-01-09 02:20:09,154 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:09,154 - DEBUG -  Entering history()
2025-01-09 02:20:09,154 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['TSN', 1, 0])
2025-01-09 02:20:09,155 - DEBUG -   Entering history()
2025-01-09 02:20:09,155 - DEBUG - TSN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:09,155 - DEBUG -    Entering get()
2025-01-09 02:20:09,155 - DEBUG -     Entering _make_request()
2025-01-09 02:20:09,155 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/TSN
2025-01-09 02:20:09,156 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:09,156 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:09,156 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:09,156 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:09,156 - DEBUG - reusing cookie
2025-01-09 02:20:09,156 - DEBUG - reusing crumb
2025-01-09 02:20:09,156 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:09,156 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:09,356 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/TSN?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1188
2025-01-09 02:20:09,356 - DEBUG - response code=200
2025-01-09 02:20:09,356 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:09,356 - DEBUG -    Exiting get()
2025-01-09 02:20:09,357 - DEBUG - TSN: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:09,358 - DEBUG - TSN: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:09,361 - DEBUG - TSN: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:09,366 - DEBUG - TSN: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:09,366 - DEBUG -   Exiting history()
2025-01-09 02:20:09,366 - DEBUG -  Exiting history()
2025-01-09 02:20:09,368 - DEBUG - Exiting download()
2025-01-09 02:20:09,477 - ERROR - Error writing data for TSN to DB: schema "np" does not exist
LINE 4:             VALUES ('TSN','2020-01-01'::date,np.float64(78.9...
                                                     ^

2025-01-09 02:20:09,478 - DEBUG - Entering download()
2025-01-09 02:20:09,478 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:09,478 - DEBUG -  Entering history()
2025-01-09 02:20:09,478 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['USB', 1, 0])
2025-01-09 02:20:09,478 - DEBUG -   Entering history()
2025-01-09 02:20:09,479 - DEBUG - USB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:09,479 - DEBUG -    Entering get()
2025-01-09 02:20:09,479 - DEBUG -     Entering _make_request()
2025-01-09 02:20:09,479 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/USB
2025-01-09 02:20:09,479 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:09,479 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:09,479 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:09,479 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:09,479 - DEBUG - reusing cookie
2025-01-09 02:20:09,479 - DEBUG - reusing crumb
2025-01-09 02:20:09,479 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:09,480 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:09,722 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/USB?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1178
2025-01-09 02:20:09,723 - DEBUG - response code=200
2025-01-09 02:20:09,723 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:09,723 - DEBUG -    Exiting get()
2025-01-09 02:20:09,724 - DEBUG - USB: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:09,725 - DEBUG - USB: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:09,728 - DEBUG - USB: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:09,732 - DEBUG - USB: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:09,732 - DEBUG -   Exiting history()
2025-01-09 02:20:09,733 - DEBUG -  Exiting history()
2025-01-09 02:20:09,734 - DEBUG - Exiting download()
2025-01-09 02:20:09,840 - ERROR - Error writing data for USB to DB: schema "np" does not exist
LINE 4:             VALUES ('USB','2020-01-01'::date,np.float64(47.9...
                                                     ^

2025-01-09 02:20:09,841 - DEBUG - Entering download()
2025-01-09 02:20:09,841 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:09,841 - DEBUG -  Entering history()
2025-01-09 02:20:09,841 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['UBER', 1, 0])
2025-01-09 02:20:09,842 - DEBUG -   Entering history()
2025-01-09 02:20:09,842 - DEBUG - UBER: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:09,842 - DEBUG -    Entering get()
2025-01-09 02:20:09,842 - DEBUG -     Entering _make_request()
2025-01-09 02:20:09,843 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/UBER
2025-01-09 02:20:09,843 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:09,843 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:09,843 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:09,843 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:09,843 - DEBUG - reusing cookie
2025-01-09 02:20:09,843 - DEBUG - reusing crumb
2025-01-09 02:20:09,843 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:09,843 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:10,006 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/UBER?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1195
2025-01-09 02:20:10,006 - DEBUG - response code=200
2025-01-09 02:20:10,006 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:10,006 - DEBUG -    Exiting get()
2025-01-09 02:20:10,008 - DEBUG - UBER: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:10,008 - DEBUG - UBER: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:10,012 - DEBUG - UBER: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:10,017 - DEBUG - UBER: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:10,017 - DEBUG -   Exiting history()
2025-01-09 02:20:10,017 - DEBUG -  Exiting history()
2025-01-09 02:20:10,020 - DEBUG - Exiting download()
2025-01-09 02:20:10,128 - ERROR - Error writing data for UBER to DB: schema "np" does not exist
LINE 4:             VALUES ('UBER','2020-01-01'::date,np.float64(29....
                                                      ^

2025-01-09 02:20:10,128 - DEBUG - Entering download()
2025-01-09 02:20:10,129 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:10,129 - DEBUG -  Entering history()
2025-01-09 02:20:10,129 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['UDR', 1, 0])
2025-01-09 02:20:10,129 - DEBUG -   Entering history()
2025-01-09 02:20:10,130 - DEBUG - UDR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:10,130 - DEBUG -    Entering get()
2025-01-09 02:20:10,130 - DEBUG -     Entering _make_request()
2025-01-09 02:20:10,130 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/UDR
2025-01-09 02:20:10,130 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:10,130 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:10,130 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:10,130 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:10,130 - DEBUG - reusing cookie
2025-01-09 02:20:10,130 - DEBUG - reusing crumb
2025-01-09 02:20:10,130 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:10,130 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:10,363 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/UDR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1171
2025-01-09 02:20:10,364 - DEBUG - response code=200
2025-01-09 02:20:10,364 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:10,364 - DEBUG -    Exiting get()
2025-01-09 02:20:10,365 - DEBUG - UDR: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:10,366 - DEBUG - UDR: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:10,369 - DEBUG - UDR: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:10,374 - DEBUG - UDR: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:10,374 - DEBUG -   Exiting history()
2025-01-09 02:20:10,374 - DEBUG -  Exiting history()
2025-01-09 02:20:10,376 - DEBUG - Exiting download()
2025-01-09 02:20:10,483 - ERROR - Error writing data for UDR to DB: schema "np" does not exist
LINE 4:             VALUES ('UDR','2020-01-01'::date,np.float64(38.8...
                                                     ^

2025-01-09 02:20:10,484 - DEBUG - Entering download()
2025-01-09 02:20:10,484 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:10,484 - DEBUG -  Entering history()
2025-01-09 02:20:10,484 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ULTA', 1, 0])
2025-01-09 02:20:10,485 - DEBUG -   Entering history()
2025-01-09 02:20:10,485 - DEBUG - ULTA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:10,485 - DEBUG -    Entering get()
2025-01-09 02:20:10,485 - DEBUG -     Entering _make_request()
2025-01-09 02:20:10,485 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ULTA
2025-01-09 02:20:10,485 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:10,485 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:10,485 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:10,485 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:10,486 - DEBUG - reusing cookie
2025-01-09 02:20:10,486 - DEBUG - reusing crumb
2025-01-09 02:20:10,486 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:10,486 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:10,644 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ULTA?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1202
2025-01-09 02:20:10,644 - DEBUG - response code=200
2025-01-09 02:20:10,644 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:10,645 - DEBUG -    Exiting get()
2025-01-09 02:20:10,646 - DEBUG - ULTA: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:10,647 - DEBUG - ULTA: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:10,650 - DEBUG - ULTA: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:10,656 - DEBUG - ULTA: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:10,656 - DEBUG -   Exiting history()
2025-01-09 02:20:10,656 - DEBUG -  Exiting history()
2025-01-09 02:20:10,659 - DEBUG - Exiting download()
2025-01-09 02:20:10,766 - ERROR - Error writing data for ULTA to DB: schema "np" does not exist
LINE 4:             VALUES ('ULTA','2020-01-01'::date,np.float64(254...
                                                      ^

2025-01-09 02:20:10,767 - DEBUG - Entering download()
2025-01-09 02:20:10,767 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:10,767 - DEBUG -  Entering history()
2025-01-09 02:20:10,767 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['UNP', 1, 0])
2025-01-09 02:20:10,768 - DEBUG -   Entering history()
2025-01-09 02:20:10,768 - DEBUG - UNP: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:10,769 - DEBUG -    Entering get()
2025-01-09 02:20:10,769 - DEBUG -     Entering _make_request()
2025-01-09 02:20:10,769 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/UNP
2025-01-09 02:20:10,769 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:10,769 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:10,769 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:10,769 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:10,769 - DEBUG - reusing cookie
2025-01-09 02:20:10,769 - DEBUG - reusing crumb
2025-01-09 02:20:10,769 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:10,769 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:10,976 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/UNP?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1214
2025-01-09 02:20:10,976 - DEBUG - response code=200
2025-01-09 02:20:10,976 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:10,976 - DEBUG -    Exiting get()
2025-01-09 02:20:10,977 - DEBUG - UNP: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:10,978 - DEBUG - UNP: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:10,981 - DEBUG - UNP: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:10,985 - DEBUG - UNP: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:10,986 - DEBUG -   Exiting history()
2025-01-09 02:20:10,986 - DEBUG -  Exiting history()
2025-01-09 02:20:10,988 - DEBUG - Exiting download()
2025-01-09 02:20:11,092 - ERROR - Error writing data for UNP to DB: schema "np" does not exist
LINE 4:             VALUES ('UNP','2020-01-01'::date,np.float64(162....
                                                     ^

2025-01-09 02:20:11,092 - DEBUG - Entering download()
2025-01-09 02:20:11,092 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:11,093 - DEBUG -  Entering history()
2025-01-09 02:20:11,093 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['UAL', 1, 0])
2025-01-09 02:20:11,093 - DEBUG -   Entering history()
2025-01-09 02:20:11,094 - DEBUG - UAL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:11,094 - DEBUG -    Entering get()
2025-01-09 02:20:11,094 - DEBUG -     Entering _make_request()
2025-01-09 02:20:11,094 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/UAL
2025-01-09 02:20:11,094 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:11,094 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:11,094 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:11,094 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:11,094 - DEBUG - reusing cookie
2025-01-09 02:20:11,094 - DEBUG - reusing crumb
2025-01-09 02:20:11,094 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:11,094 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:11,253 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/UAL?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1222
2025-01-09 02:20:11,253 - DEBUG - response code=200
2025-01-09 02:20:11,253 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:11,253 - DEBUG -    Exiting get()
2025-01-09 02:20:11,254 - DEBUG - UAL: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:11,255 - DEBUG - UAL: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:11,258 - DEBUG - UAL: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:11,262 - DEBUG - UAL: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:11,262 - DEBUG -   Exiting history()
2025-01-09 02:20:11,263 - DEBUG -  Exiting history()
2025-01-09 02:20:11,264 - DEBUG - Exiting download()
2025-01-09 02:20:11,307 - DEBUG - Entering download()
2025-01-09 02:20:11,307 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:11,308 - DEBUG -  Entering history()
2025-01-09 02:20:11,308 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['UPS', 1, 0])
2025-01-09 02:20:11,308 - DEBUG -   Entering history()
2025-01-09 02:20:11,309 - DEBUG - UPS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:11,309 - DEBUG -    Entering get()
2025-01-09 02:20:11,309 - DEBUG -     Entering _make_request()
2025-01-09 02:20:11,309 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/UPS
2025-01-09 02:20:11,309 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:11,309 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:11,309 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:11,309 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:11,309 - DEBUG - reusing cookie
2025-01-09 02:20:11,309 - DEBUG - reusing crumb
2025-01-09 02:20:11,309 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:11,309 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:11,491 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/UPS?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1218
2025-01-09 02:20:11,492 - DEBUG - response code=200
2025-01-09 02:20:11,492 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:11,492 - DEBUG -    Exiting get()
2025-01-09 02:20:11,493 - DEBUG - UPS: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:11,494 - DEBUG - UPS: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:11,498 - DEBUG - UPS: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:11,504 - DEBUG - UPS: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:11,504 - DEBUG -   Exiting history()
2025-01-09 02:20:11,504 - DEBUG -  Exiting history()
2025-01-09 02:20:11,507 - DEBUG - Exiting download()
2025-01-09 02:20:11,551 - DEBUG - Entering download()
2025-01-09 02:20:11,551 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:11,551 - DEBUG -  Entering history()
2025-01-09 02:20:11,552 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['URI', 1, 0])
2025-01-09 02:20:11,552 - DEBUG -   Entering history()
2025-01-09 02:20:11,552 - DEBUG - URI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:11,553 - DEBUG -    Entering get()
2025-01-09 02:20:11,553 - DEBUG -     Entering _make_request()
2025-01-09 02:20:11,553 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/URI
2025-01-09 02:20:11,553 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:11,553 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:11,553 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:11,553 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:11,553 - DEBUG - reusing cookie
2025-01-09 02:20:11,553 - DEBUG - reusing crumb
2025-01-09 02:20:11,553 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:11,553 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:11,706 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/URI?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1202
2025-01-09 02:20:11,707 - DEBUG - response code=200
2025-01-09 02:20:11,707 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:11,707 - DEBUG -    Exiting get()
2025-01-09 02:20:11,708 - DEBUG - URI: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:11,708 - DEBUG - URI: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:11,712 - DEBUG - URI: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:11,716 - DEBUG - URI: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:11,716 - DEBUG -   Exiting history()
2025-01-09 02:20:11,716 - DEBUG -  Exiting history()
2025-01-09 02:20:11,717 - DEBUG - Exiting download()
2025-01-09 02:20:11,936 - ERROR - Error writing data for URI to DB: schema "np" does not exist
LINE 4:             VALUES ('URI','2020-01-01'::date,np.float64(164....
                                                     ^

2025-01-09 02:20:11,936 - DEBUG - Entering download()
2025-01-09 02:20:11,936 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:11,937 - DEBUG -  Entering history()
2025-01-09 02:20:11,937 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['UNH', 1, 0])
2025-01-09 02:20:11,937 - DEBUG -   Entering history()
2025-01-09 02:20:11,938 - DEBUG - UNH: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:11,938 - DEBUG -    Entering get()
2025-01-09 02:20:11,938 - DEBUG -     Entering _make_request()
2025-01-09 02:20:11,938 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/UNH
2025-01-09 02:20:11,938 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:11,938 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:11,938 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:11,938 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:11,938 - DEBUG - reusing cookie
2025-01-09 02:20:11,938 - DEBUG - reusing crumb
2025-01-09 02:20:11,938 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:11,938 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:12,121 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/UNH?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1214
2025-01-09 02:20:12,122 - DEBUG - response code=200
2025-01-09 02:20:12,122 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:12,122 - DEBUG -    Exiting get()
2025-01-09 02:20:12,123 - DEBUG - UNH: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:12,124 - DEBUG - UNH: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:12,127 - DEBUG - UNH: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:12,132 - DEBUG - UNH: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:12,132 - DEBUG -   Exiting history()
2025-01-09 02:20:12,132 - DEBUG -  Exiting history()
2025-01-09 02:20:12,134 - DEBUG - Exiting download()
2025-01-09 02:20:12,178 - DEBUG - Entering download()
2025-01-09 02:20:12,178 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:12,178 - DEBUG -  Entering history()
2025-01-09 02:20:12,178 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['UHS', 1, 0])
2025-01-09 02:20:12,178 - DEBUG -   Entering history()
2025-01-09 02:20:12,179 - DEBUG - UHS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:12,179 - DEBUG -    Entering get()
2025-01-09 02:20:12,179 - DEBUG -     Entering _make_request()
2025-01-09 02:20:12,179 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/UHS
2025-01-09 02:20:12,179 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:12,179 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:12,179 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:12,180 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:12,180 - DEBUG - reusing cookie
2025-01-09 02:20:12,180 - DEBUG - reusing crumb
2025-01-09 02:20:12,180 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:12,180 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:12,381 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/UHS?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1227
2025-01-09 02:20:12,381 - DEBUG - response code=200
2025-01-09 02:20:12,381 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:12,381 - DEBUG -    Exiting get()
2025-01-09 02:20:12,382 - DEBUG - UHS: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:12,383 - DEBUG - UHS: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:12,386 - DEBUG - UHS: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:12,390 - DEBUG - UHS: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:12,390 - DEBUG -   Exiting history()
2025-01-09 02:20:12,391 - DEBUG -  Exiting history()
2025-01-09 02:20:12,392 - DEBUG - Exiting download()
2025-01-09 02:20:12,504 - ERROR - Error writing data for UHS to DB: schema "np" does not exist
LINE 4:             VALUES ('UHS','2020-01-01'::date,np.float64(140....
                                                     ^

2025-01-09 02:20:12,504 - DEBUG - Entering download()
2025-01-09 02:20:12,504 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:12,504 - DEBUG -  Entering history()
2025-01-09 02:20:12,505 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['VLO', 1, 0])
2025-01-09 02:20:12,505 - DEBUG -   Entering history()
2025-01-09 02:20:12,506 - DEBUG - VLO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:12,506 - DEBUG -    Entering get()
2025-01-09 02:20:12,506 - DEBUG -     Entering _make_request()
2025-01-09 02:20:12,506 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/VLO
2025-01-09 02:20:12,506 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:12,506 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:12,506 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:12,506 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:12,506 - DEBUG - reusing cookie
2025-01-09 02:20:12,506 - DEBUG - reusing crumb
2025-01-09 02:20:12,506 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:12,506 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:12,731 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/VLO?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1211
2025-01-09 02:20:12,731 - DEBUG - response code=200
2025-01-09 02:20:12,731 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:12,731 - DEBUG -    Exiting get()
2025-01-09 02:20:12,732 - DEBUG - VLO: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:12,733 - DEBUG - VLO: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:12,736 - DEBUG - VLO: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:12,741 - DEBUG - VLO: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:12,741 - DEBUG -   Exiting history()
2025-01-09 02:20:12,741 - DEBUG -  Exiting history()
2025-01-09 02:20:12,743 - DEBUG - Exiting download()
2025-01-09 02:20:12,787 - DEBUG - Entering download()
2025-01-09 02:20:12,787 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:12,787 - DEBUG -  Entering history()
2025-01-09 02:20:12,787 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['VTR', 1, 0])
2025-01-09 02:20:12,787 - DEBUG -   Entering history()
2025-01-09 02:20:12,788 - DEBUG - VTR: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:12,788 - DEBUG -    Entering get()
2025-01-09 02:20:12,788 - DEBUG -     Entering _make_request()
2025-01-09 02:20:12,788 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/VTR
2025-01-09 02:20:12,788 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:12,788 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:12,788 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:12,788 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:12,788 - DEBUG - reusing cookie
2025-01-09 02:20:12,788 - DEBUG - reusing crumb
2025-01-09 02:20:12,789 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:12,789 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:12,986 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/VTR?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1155
2025-01-09 02:20:12,986 - DEBUG - response code=200
2025-01-09 02:20:12,986 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:12,986 - DEBUG -    Exiting get()
2025-01-09 02:20:12,987 - DEBUG - VTR: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:12,988 - DEBUG - VTR: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:12,991 - DEBUG - VTR: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:12,995 - DEBUG - VTR: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:12,995 - DEBUG -   Exiting history()
2025-01-09 02:20:12,995 - DEBUG -  Exiting history()
2025-01-09 02:20:12,997 - DEBUG - Exiting download()
2025-01-09 02:20:13,131 - ERROR - Error writing data for VTR to DB: schema "np" does not exist
LINE 4:             VALUES ('VTR','2020-01-01'::date,np.float64(47.3...
                                                     ^

2025-01-09 02:20:13,132 - DEBUG - Entering download()
2025-01-09 02:20:13,132 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:13,132 - DEBUG -  Entering history()
2025-01-09 02:20:13,132 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['VLTO', 1, 0])
2025-01-09 02:20:13,133 - DEBUG -   Entering history()
2025-01-09 02:20:13,133 - DEBUG - VLTO: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:13,134 - DEBUG -    Entering get()
2025-01-09 02:20:13,134 - DEBUG -     Entering _make_request()
2025-01-09 02:20:13,134 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/VLTO
2025-01-09 02:20:13,134 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:13,134 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:13,134 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:13,134 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:13,134 - DEBUG - reusing cookie
2025-01-09 02:20:13,134 - DEBUG - reusing crumb
2025-01-09 02:20:13,134 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:13,134 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:13,289 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/VLTO?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:20:13,289 - DEBUG - response code=400
2025-01-09 02:20:13,289 - DEBUG - toggling cookie strategy basic -> csrf
2025-01-09 02:20:13,289 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:13,289 - DEBUG - cookie_mode = 'csrf'
2025-01-09 02:20:13,289 - DEBUG -       Entering _get_crumb_csrf()
2025-01-09 02:20:13,290 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['csrf', 1, 0])
2025-01-09 02:20:13,424 - DEBUG - https://guce.yahoo.com:443 "GET /consent HTTP/1.1" 302 0
2025-01-09 02:20:13,812 - DEBUG - https://www.yahoo.com:443 "GET /?guccounter=1 HTTP/1.1" 200 None
2025-01-09 02:20:14,334 - DEBUG - Failed to find "csrfToken" in response
2025-01-09 02:20:14,335 - DEBUG -       Exiting _get_crumb_csrf()
2025-01-09 02:20:14,335 - DEBUG - toggling cookie strategy csrf -> basic
2025-01-09 02:20:14,335 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:14,335 - DEBUG - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['basic', 1, 0])
2025-01-09 02:20:14,335 - DEBUG - loaded persistent cookie
2025-01-09 02:20:14,335 - DEBUG - reusing cookie
2025-01-09 02:20:14,478 - DEBUG - https://query1.finance.yahoo.com:443 "GET /v1/test/getcrumb HTTP/1.1" 200 11
2025-01-09 02:20:14,479 - DEBUG - crumb = 'mbrlfmeSllh'
2025-01-09 02:20:14,479 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:14,479 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:14,621 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/VLTO?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 400 140
2025-01-09 02:20:14,621 - DEBUG - response code=400
2025-01-09 02:20:14,621 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:14,621 - DEBUG -    Exiting get()
2025-01-09 02:20:14,624 - ERROR - 
1 Failed download:
2025-01-09 02:20:14,624 - ERROR - ['VLTO']: YFPricesMissingError('$%ticker%: possibly delisted; no price data found  (1wk 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn\'t exist for startDate = 1577854800, endDate = 1577941200")')
2025-01-09 02:20:14,624 - DEBUG - ['VLTO']: Traceback (most recent call last):
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\multi.py", line 272, in _download_one
    data = Ticker(ticker).history(
            period=period, interval=interval,
    ...<4 lines>...
            raise_errors=True
    )
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\base.py", line 81, in history
    return self._lazy_load_price_history().history(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\utils.py", line 103, in wrapper
    result = func(*args, **kwargs)
  File "C:\Users\haman\AppData\Local\Programs\Python\Python313\Lib\site-packages\yfinance\scrapers\history.py", line 243, in history
    raise _exception
yfinance.exceptions.YFPricesMissingError: $%ticker%: possibly delisted; no price data found  (1wk 2020-01-01 00:00:00 -> 2020-01-02 00:00:00) (Yahoo error = "Data doesn't exist for startDate = 1577854800, endDate = 1577941200")

2025-01-09 02:20:14,627 - DEBUG - Exiting download()
2025-01-09 02:20:14,793 - ERROR - Error writing data for VLTO to DB: schema "np" does not exist
LINE 4:             VALUES ('VLTO','2023-10-04'::date,np.float64(76....
                                                      ^

2025-01-09 02:20:14,793 - DEBUG - Entering download()
2025-01-09 02:20:14,793 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:14,793 - DEBUG -  Entering history()
2025-01-09 02:20:14,794 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['VRSN', 1, 0])
2025-01-09 02:20:14,794 - DEBUG -   Entering history()
2025-01-09 02:20:14,794 - DEBUG - VRSN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:14,795 - DEBUG -    Entering get()
2025-01-09 02:20:14,795 - DEBUG -     Entering _make_request()
2025-01-09 02:20:14,795 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/VRSN
2025-01-09 02:20:14,795 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:14,795 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:14,795 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:14,795 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:14,795 - DEBUG - reusing cookie
2025-01-09 02:20:14,795 - DEBUG - reusing crumb
2025-01-09 02:20:14,795 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:14,795 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:14,946 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/VRSN?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1194
2025-01-09 02:20:14,947 - DEBUG - response code=200
2025-01-09 02:20:14,947 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:14,947 - DEBUG -    Exiting get()
2025-01-09 02:20:14,948 - DEBUG - VRSN: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:14,949 - DEBUG - VRSN: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:14,952 - DEBUG - VRSN: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:14,956 - DEBUG - VRSN: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:14,956 - DEBUG -   Exiting history()
2025-01-09 02:20:14,956 - DEBUG -  Exiting history()
2025-01-09 02:20:14,958 - DEBUG - Exiting download()
2025-01-09 02:20:15,067 - ERROR - Error writing data for VRSN to DB: schema "np" does not exist
LINE 4:             VALUES ('VRSN','2020-01-01'::date,np.float64(194...
                                                      ^

2025-01-09 02:20:15,068 - DEBUG - Entering download()
2025-01-09 02:20:15,068 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:15,068 - DEBUG -  Entering history()
2025-01-09 02:20:15,069 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['VRSK', 1, 0])
2025-01-09 02:20:15,069 - DEBUG -   Entering history()
2025-01-09 02:20:15,069 - DEBUG - VRSK: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:15,070 - DEBUG -    Entering get()
2025-01-09 02:20:15,070 - DEBUG -     Entering _make_request()
2025-01-09 02:20:15,070 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/VRSK
2025-01-09 02:20:15,070 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:15,070 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:15,070 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:15,070 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:15,070 - DEBUG - reusing cookie
2025-01-09 02:20:15,070 - DEBUG - reusing crumb
2025-01-09 02:20:15,070 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:15,070 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:15,241 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/VRSK?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1211
2025-01-09 02:20:15,241 - DEBUG - response code=200
2025-01-09 02:20:15,241 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:15,241 - DEBUG -    Exiting get()
2025-01-09 02:20:15,242 - DEBUG - VRSK: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:15,243 - DEBUG - VRSK: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:15,246 - DEBUG - VRSK: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:15,251 - DEBUG - VRSK: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:15,251 - DEBUG -   Exiting history()
2025-01-09 02:20:15,251 - DEBUG -  Exiting history()
2025-01-09 02:20:15,253 - DEBUG - Exiting download()
2025-01-09 02:20:15,460 - ERROR - Error writing data for VRSK to DB: schema "np" does not exist
LINE 4:             VALUES ('VRSK','2020-01-01'::date,np.float64(144...
                                                      ^

2025-01-09 02:20:15,460 - DEBUG - Entering download()
2025-01-09 02:20:15,460 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:15,461 - DEBUG -  Entering history()
2025-01-09 02:20:15,461 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['VZ', 1, 0])
2025-01-09 02:20:15,461 - DEBUG -   Entering history()
2025-01-09 02:20:15,462 - DEBUG - VZ: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:15,462 - DEBUG -    Entering get()
2025-01-09 02:20:15,462 - DEBUG -     Entering _make_request()
2025-01-09 02:20:15,462 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/VZ
2025-01-09 02:20:15,462 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:15,462 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:15,462 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:15,462 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:15,462 - DEBUG - reusing cookie
2025-01-09 02:20:15,462 - DEBUG - reusing crumb
2025-01-09 02:20:15,462 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:15,462 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:15,687 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/VZ?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1212
2025-01-09 02:20:15,687 - DEBUG - response code=200
2025-01-09 02:20:15,688 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:15,688 - DEBUG -    Exiting get()
2025-01-09 02:20:15,689 - DEBUG - VZ: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:15,689 - DEBUG - VZ: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:15,692 - DEBUG - VZ: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:15,697 - DEBUG - VZ: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:15,697 - DEBUG -   Exiting history()
2025-01-09 02:20:15,697 - DEBUG -  Exiting history()
2025-01-09 02:20:15,699 - DEBUG - Exiting download()
2025-01-09 02:20:15,814 - ERROR - Error writing data for VZ to DB: schema "np" does not exist
LINE 4:             VALUES ('VZ','2020-01-01'::date,np.float64(46.58...
                                                    ^

2025-01-09 02:20:15,814 - DEBUG - Entering download()
2025-01-09 02:20:15,814 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:15,814 - DEBUG -  Entering history()
2025-01-09 02:20:15,815 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['VRTX', 1, 0])
2025-01-09 02:20:15,815 - DEBUG -   Entering history()
2025-01-09 02:20:15,815 - DEBUG - VRTX: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:15,816 - DEBUG -    Entering get()
2025-01-09 02:20:15,816 - DEBUG -     Entering _make_request()
2025-01-09 02:20:15,816 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/VRTX
2025-01-09 02:20:15,816 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:15,816 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:15,816 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:15,816 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:15,816 - DEBUG - reusing cookie
2025-01-09 02:20:15,816 - DEBUG - reusing crumb
2025-01-09 02:20:15,816 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:15,816 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:15,966 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/VRTX?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1234
2025-01-09 02:20:15,966 - DEBUG - response code=200
2025-01-09 02:20:15,966 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:15,966 - DEBUG -    Exiting get()
2025-01-09 02:20:15,967 - DEBUG - VRTX: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:15,968 - DEBUG - VRTX: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:15,971 - DEBUG - VRTX: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:15,975 - DEBUG - VRTX: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:15,976 - DEBUG -   Exiting history()
2025-01-09 02:20:15,976 - DEBUG -  Exiting history()
2025-01-09 02:20:15,978 - DEBUG - Exiting download()
2025-01-09 02:20:16,187 - ERROR - Error writing data for VRTX to DB: schema "np" does not exist
LINE 4:             VALUES ('VRTX','2020-01-01'::date,np.float64(220...
                                                      ^

2025-01-09 02:20:16,188 - DEBUG - Entering download()
2025-01-09 02:20:16,188 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:16,188 - DEBUG -  Entering history()
2025-01-09 02:20:16,188 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['VTRS', 1, 0])
2025-01-09 02:20:16,189 - DEBUG -   Entering history()
2025-01-09 02:20:16,189 - DEBUG - VTRS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:16,189 - DEBUG -    Entering get()
2025-01-09 02:20:16,189 - DEBUG -     Entering _make_request()
2025-01-09 02:20:16,189 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/VTRS
2025-01-09 02:20:16,189 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:16,190 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:16,190 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:16,190 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:16,190 - DEBUG - reusing cookie
2025-01-09 02:20:16,190 - DEBUG - reusing crumb
2025-01-09 02:20:16,190 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:16,190 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:16,421 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/VTRS?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1186
2025-01-09 02:20:16,422 - DEBUG - response code=200
2025-01-09 02:20:16,422 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:16,422 - DEBUG -    Exiting get()
2025-01-09 02:20:16,423 - DEBUG - VTRS: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:16,424 - DEBUG - VTRS: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:16,426 - DEBUG - VTRS: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:16,431 - DEBUG - VTRS: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:16,431 - DEBUG -   Exiting history()
2025-01-09 02:20:16,431 - DEBUG -  Exiting history()
2025-01-09 02:20:16,433 - DEBUG - Exiting download()
2025-01-09 02:20:16,540 - ERROR - Error writing data for VTRS to DB: schema "np" does not exist
LINE 4:             VALUES ('VTRS','2020-01-01'::date,np.float64(17....
                                                      ^

2025-01-09 02:20:16,540 - DEBUG - Entering download()
2025-01-09 02:20:16,540 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:16,540 - DEBUG -  Entering history()
2025-01-09 02:20:16,541 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['VICI', 1, 0])
2025-01-09 02:20:16,541 - DEBUG -   Entering history()
2025-01-09 02:20:16,541 - DEBUG - VICI: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:16,541 - DEBUG -    Entering get()
2025-01-09 02:20:16,541 - DEBUG -     Entering _make_request()
2025-01-09 02:20:16,541 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/VICI
2025-01-09 02:20:16,542 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:16,542 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:16,542 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:16,542 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:16,542 - DEBUG - reusing cookie
2025-01-09 02:20:16,542 - DEBUG - reusing crumb
2025-01-09 02:20:16,542 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:16,542 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:16,737 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/VICI?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1199
2025-01-09 02:20:16,738 - DEBUG - response code=200
2025-01-09 02:20:16,738 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:16,738 - DEBUG -    Exiting get()
2025-01-09 02:20:16,739 - DEBUG - VICI: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:16,740 - DEBUG - VICI: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:16,744 - DEBUG - VICI: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:16,750 - DEBUG - VICI: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:16,750 - DEBUG -   Exiting history()
2025-01-09 02:20:16,751 - DEBUG -  Exiting history()
2025-01-09 02:20:16,753 - DEBUG - Exiting download()
2025-01-09 02:20:16,797 - DEBUG - Entering download()
2025-01-09 02:20:16,797 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:16,797 - DEBUG -  Entering history()
2025-01-09 02:20:16,797 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['V', 1, 0])
2025-01-09 02:20:16,798 - DEBUG -   Entering history()
2025-01-09 02:20:16,798 - DEBUG - V: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:16,798 - DEBUG -    Entering get()
2025-01-09 02:20:16,799 - DEBUG -     Entering _make_request()
2025-01-09 02:20:16,799 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/V
2025-01-09 02:20:16,799 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:16,799 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:16,799 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:16,799 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:16,799 - DEBUG - reusing cookie
2025-01-09 02:20:16,799 - DEBUG - reusing crumb
2025-01-09 02:20:16,799 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:16,799 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:16,987 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/V?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1167
2025-01-09 02:20:16,987 - DEBUG - response code=200
2025-01-09 02:20:16,987 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:16,987 - DEBUG -    Exiting get()
2025-01-09 02:20:16,989 - DEBUG - V: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:16,990 - DEBUG - V: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:16,996 - DEBUG - V: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:17,005 - DEBUG - V: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:17,005 - DEBUG -   Exiting history()
2025-01-09 02:20:17,005 - DEBUG -  Exiting history()
2025-01-09 02:20:17,008 - DEBUG - Exiting download()
2025-01-09 02:20:17,125 - ERROR - Error writing data for V to DB: schema "np" does not exist
LINE 4:             VALUES ('V','2020-01-01'::date,np.float64(182.44...
                                                   ^

2025-01-09 02:20:17,125 - DEBUG - Entering download()
2025-01-09 02:20:17,125 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:17,126 - DEBUG -  Entering history()
2025-01-09 02:20:17,126 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['VST', 1, 0])
2025-01-09 02:20:17,126 - DEBUG -   Entering history()
2025-01-09 02:20:17,127 - DEBUG - VST: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:17,127 - DEBUG -    Entering get()
2025-01-09 02:20:17,127 - DEBUG -     Entering _make_request()
2025-01-09 02:20:17,127 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/VST
2025-01-09 02:20:17,127 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:17,127 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:17,127 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:17,127 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:17,127 - DEBUG - reusing cookie
2025-01-09 02:20:17,127 - DEBUG - reusing crumb
2025-01-09 02:20:17,127 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:17,127 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:17,295 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/VST?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1176
2025-01-09 02:20:17,296 - DEBUG - response code=200
2025-01-09 02:20:17,296 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:17,296 - DEBUG -    Exiting get()
2025-01-09 02:20:17,297 - DEBUG - VST: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:17,298 - DEBUG - VST: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:17,301 - DEBUG - VST: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:17,306 - DEBUG - VST: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:17,306 - DEBUG -   Exiting history()
2025-01-09 02:20:17,306 - DEBUG -  Exiting history()
2025-01-09 02:20:17,308 - DEBUG - Exiting download()
2025-01-09 02:20:17,416 - ERROR - Error writing data for VST to DB: schema "np" does not exist
LINE 4:             VALUES ('VST','2020-01-01'::date,np.float64(20.2...
                                                     ^

2025-01-09 02:20:17,416 - DEBUG - Entering download()
2025-01-09 02:20:17,416 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:17,417 - DEBUG -  Entering history()
2025-01-09 02:20:17,417 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['VMC', 1, 0])
2025-01-09 02:20:17,417 - DEBUG -   Entering history()
2025-01-09 02:20:17,418 - DEBUG - VMC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:17,418 - DEBUG -    Entering get()
2025-01-09 02:20:17,418 - DEBUG -     Entering _make_request()
2025-01-09 02:20:17,418 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/VMC
2025-01-09 02:20:17,418 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:17,418 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:17,418 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:17,418 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:17,418 - DEBUG - reusing cookie
2025-01-09 02:20:17,418 - DEBUG - reusing crumb
2025-01-09 02:20:17,418 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:17,418 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:17,661 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/VMC?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1204
2025-01-09 02:20:17,662 - DEBUG - response code=200
2025-01-09 02:20:17,662 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:17,662 - DEBUG -    Exiting get()
2025-01-09 02:20:17,663 - DEBUG - VMC: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:17,664 - DEBUG - VMC: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:17,669 - DEBUG - VMC: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:17,676 - DEBUG - VMC: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:17,676 - DEBUG -   Exiting history()
2025-01-09 02:20:17,676 - DEBUG -  Exiting history()
2025-01-09 02:20:17,679 - DEBUG - Exiting download()
2025-01-09 02:20:17,786 - ERROR - Error writing data for VMC to DB: schema "np" does not exist
LINE 4:             VALUES ('VMC','2020-01-01'::date,np.float64(138....
                                                     ^

2025-01-09 02:20:17,787 - DEBUG - Entering download()
2025-01-09 02:20:17,787 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:17,787 - DEBUG -  Entering history()
2025-01-09 02:20:17,787 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WRB', 1, 0])
2025-01-09 02:20:17,787 - DEBUG -   Entering history()
2025-01-09 02:20:17,788 - DEBUG - WRB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:17,788 - DEBUG -    Entering get()
2025-01-09 02:20:17,788 - DEBUG -     Entering _make_request()
2025-01-09 02:20:17,788 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WRB
2025-01-09 02:20:17,788 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:17,788 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:17,788 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:17,788 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:17,788 - DEBUG - reusing cookie
2025-01-09 02:20:17,788 - DEBUG - reusing crumb
2025-01-09 02:20:17,788 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:17,788 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:17,994 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WRB?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1212
2025-01-09 02:20:17,994 - DEBUG - response code=200
2025-01-09 02:20:17,994 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:17,994 - DEBUG -    Exiting get()
2025-01-09 02:20:17,995 - DEBUG - WRB: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:17,996 - DEBUG - WRB: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:17,999 - DEBUG - WRB: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:18,004 - DEBUG - WRB: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:18,004 - DEBUG -   Exiting history()
2025-01-09 02:20:18,004 - DEBUG -  Exiting history()
2025-01-09 02:20:18,006 - DEBUG - Exiting download()
2025-01-09 02:20:18,149 - DEBUG - Entering download()
2025-01-09 02:20:18,149 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:18,149 - DEBUG -  Entering history()
2025-01-09 02:20:18,149 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['GWW', 1, 0])
2025-01-09 02:20:18,149 - DEBUG -   Entering history()
2025-01-09 02:20:18,150 - DEBUG - GWW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:18,150 - DEBUG -    Entering get()
2025-01-09 02:20:18,150 - DEBUG -     Entering _make_request()
2025-01-09 02:20:18,150 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/GWW
2025-01-09 02:20:18,151 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:18,151 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:18,151 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:18,151 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:18,151 - DEBUG - reusing cookie
2025-01-09 02:20:18,151 - DEBUG - reusing crumb
2025-01-09 02:20:18,151 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:18,151 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:18,371 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/GWW?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1189
2025-01-09 02:20:18,372 - DEBUG - response code=200
2025-01-09 02:20:18,372 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:18,372 - DEBUG -    Exiting get()
2025-01-09 02:20:18,374 - DEBUG - GWW: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:18,375 - DEBUG - GWW: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:18,380 - DEBUG - GWW: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:18,387 - DEBUG - GWW: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:18,387 - DEBUG -   Exiting history()
2025-01-09 02:20:18,387 - DEBUG -  Exiting history()
2025-01-09 02:20:18,390 - DEBUG - Exiting download()
2025-01-09 02:20:18,435 - DEBUG - Entering download()
2025-01-09 02:20:18,435 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:18,435 - DEBUG -  Entering history()
2025-01-09 02:20:18,436 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WAB', 1, 0])
2025-01-09 02:20:18,436 - DEBUG -   Entering history()
2025-01-09 02:20:18,437 - DEBUG - WAB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:18,437 - DEBUG -    Entering get()
2025-01-09 02:20:18,437 - DEBUG -     Entering _make_request()
2025-01-09 02:20:18,437 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WAB
2025-01-09 02:20:18,437 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:18,437 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:18,437 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:18,437 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:18,437 - DEBUG - reusing cookie
2025-01-09 02:20:18,437 - DEBUG - reusing crumb
2025-01-09 02:20:18,437 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:18,437 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:18,638 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WAB?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1235
2025-01-09 02:20:18,639 - DEBUG - response code=200
2025-01-09 02:20:18,639 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:18,639 - DEBUG -    Exiting get()
2025-01-09 02:20:18,640 - DEBUG - WAB: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:18,641 - DEBUG - WAB: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:18,643 - DEBUG - WAB: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:18,648 - DEBUG - WAB: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:18,648 - DEBUG -   Exiting history()
2025-01-09 02:20:18,648 - DEBUG -  Exiting history()
2025-01-09 02:20:18,650 - DEBUG - Exiting download()
2025-01-09 02:20:18,693 - DEBUG - Entering download()
2025-01-09 02:20:18,693 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:18,694 - DEBUG -  Entering history()
2025-01-09 02:20:18,694 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WBA', 1, 0])
2025-01-09 02:20:18,694 - DEBUG -   Entering history()
2025-01-09 02:20:18,695 - DEBUG - WBA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:18,695 - DEBUG -    Entering get()
2025-01-09 02:20:18,695 - DEBUG -     Entering _make_request()
2025-01-09 02:20:18,695 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WBA
2025-01-09 02:20:18,695 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:18,695 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:18,695 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:18,695 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:18,695 - DEBUG - reusing cookie
2025-01-09 02:20:18,695 - DEBUG - reusing crumb
2025-01-09 02:20:18,695 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:18,695 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:18,922 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WBA?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1216
2025-01-09 02:20:18,922 - DEBUG - response code=200
2025-01-09 02:20:18,923 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:18,923 - DEBUG -    Exiting get()
2025-01-09 02:20:18,924 - DEBUG - WBA: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:18,925 - DEBUG - WBA: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:18,928 - DEBUG - WBA: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:18,933 - DEBUG - WBA: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:18,933 - DEBUG -   Exiting history()
2025-01-09 02:20:18,933 - DEBUG -  Exiting history()
2025-01-09 02:20:18,936 - DEBUG - Exiting download()
2025-01-09 02:20:19,079 - DEBUG - Entering download()
2025-01-09 02:20:19,079 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:19,079 - DEBUG -  Entering history()
2025-01-09 02:20:19,080 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WMT', 1, 0])
2025-01-09 02:20:19,080 - DEBUG -   Entering history()
2025-01-09 02:20:19,080 - DEBUG - WMT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:19,081 - DEBUG -    Entering get()
2025-01-09 02:20:19,081 - DEBUG -     Entering _make_request()
2025-01-09 02:20:19,081 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WMT
2025-01-09 02:20:19,081 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:19,081 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:19,081 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:19,081 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:19,081 - DEBUG - reusing cookie
2025-01-09 02:20:19,081 - DEBUG - reusing crumb
2025-01-09 02:20:19,081 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:19,081 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:19,294 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WMT?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1181
2025-01-09 02:20:19,294 - DEBUG - response code=200
2025-01-09 02:20:19,294 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:19,294 - DEBUG -    Exiting get()
2025-01-09 02:20:19,295 - DEBUG - WMT: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:19,296 - DEBUG - WMT: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:19,299 - DEBUG - WMT: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:19,304 - DEBUG - WMT: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:19,304 - DEBUG -   Exiting history()
2025-01-09 02:20:19,304 - DEBUG -  Exiting history()
2025-01-09 02:20:19,306 - DEBUG - Exiting download()
2025-01-09 02:20:19,349 - DEBUG - Entering download()
2025-01-09 02:20:19,349 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:19,349 - DEBUG -  Entering history()
2025-01-09 02:20:19,349 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['DIS', 1, 0])
2025-01-09 02:20:19,349 - DEBUG -   Entering history()
2025-01-09 02:20:19,350 - DEBUG - DIS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:19,350 - DEBUG -    Entering get()
2025-01-09 02:20:19,350 - DEBUG -     Entering _make_request()
2025-01-09 02:20:19,350 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/DIS
2025-01-09 02:20:19,350 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:19,350 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:19,350 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:19,350 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:19,351 - DEBUG - reusing cookie
2025-01-09 02:20:19,351 - DEBUG - reusing crumb
2025-01-09 02:20:19,351 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:19,351 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:19,632 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/DIS?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1212
2025-01-09 02:20:19,633 - DEBUG - response code=200
2025-01-09 02:20:19,634 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:19,634 - DEBUG -    Exiting get()
2025-01-09 02:20:19,635 - DEBUG - DIS: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:19,635 - DEBUG - DIS: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:19,638 - DEBUG - DIS: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:19,642 - DEBUG - DIS: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:19,642 - DEBUG -   Exiting history()
2025-01-09 02:20:19,642 - DEBUG -  Exiting history()
2025-01-09 02:20:19,644 - DEBUG - Exiting download()
2025-01-09 02:20:19,687 - DEBUG - Entering download()
2025-01-09 02:20:19,687 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:19,687 - DEBUG -  Entering history()
2025-01-09 02:20:19,688 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WBD', 1, 0])
2025-01-09 02:20:19,688 - DEBUG -   Entering history()
2025-01-09 02:20:19,689 - DEBUG - WBD: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:19,689 - DEBUG -    Entering get()
2025-01-09 02:20:19,689 - DEBUG -     Entering _make_request()
2025-01-09 02:20:19,689 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WBD
2025-01-09 02:20:19,689 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:19,689 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:19,689 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:19,689 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:19,689 - DEBUG - reusing cookie
2025-01-09 02:20:19,689 - DEBUG - reusing crumb
2025-01-09 02:20:19,689 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:19,689 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:19,846 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WBD?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1218
2025-01-09 02:20:19,847 - DEBUG - response code=200
2025-01-09 02:20:19,847 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:19,847 - DEBUG -    Exiting get()
2025-01-09 02:20:19,848 - DEBUG - WBD: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:19,849 - DEBUG - WBD: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:19,852 - DEBUG - WBD: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:19,856 - DEBUG - WBD: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:19,856 - DEBUG -   Exiting history()
2025-01-09 02:20:19,857 - DEBUG -  Exiting history()
2025-01-09 02:20:19,858 - DEBUG - Exiting download()
2025-01-09 02:20:19,963 - ERROR - Error writing data for WBD to DB: schema "np" does not exist
LINE 4:             VALUES ('WBD','2020-01-01'::date,np.float64(32.8...
                                                     ^

2025-01-09 02:20:19,963 - DEBUG - Entering download()
2025-01-09 02:20:19,963 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:19,963 - DEBUG -  Entering history()
2025-01-09 02:20:19,964 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WM', 1, 0])
2025-01-09 02:20:19,964 - DEBUG -   Entering history()
2025-01-09 02:20:19,964 - DEBUG - WM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:19,965 - DEBUG -    Entering get()
2025-01-09 02:20:19,965 - DEBUG -     Entering _make_request()
2025-01-09 02:20:19,965 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WM
2025-01-09 02:20:19,965 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:19,965 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:19,965 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:19,965 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:19,965 - DEBUG - reusing cookie
2025-01-09 02:20:19,965 - DEBUG - reusing crumb
2025-01-09 02:20:19,965 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:19,965 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:20,166 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WM?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1195
2025-01-09 02:20:20,166 - DEBUG - response code=200
2025-01-09 02:20:20,166 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:20,166 - DEBUG -    Exiting get()
2025-01-09 02:20:20,167 - DEBUG - WM: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:20,168 - DEBUG - WM: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:20,171 - DEBUG - WM: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:20,177 - DEBUG - WM: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:20,177 - DEBUG -   Exiting history()
2025-01-09 02:20:20,177 - DEBUG -  Exiting history()
2025-01-09 02:20:20,179 - DEBUG - Exiting download()
2025-01-09 02:20:20,389 - ERROR - Error writing data for WM to DB: schema "np" does not exist
LINE 4:             VALUES ('WM','2020-01-01'::date,np.float64(105.0...
                                                    ^

2025-01-09 02:20:20,390 - DEBUG - Entering download()
2025-01-09 02:20:20,390 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:20,390 - DEBUG -  Entering history()
2025-01-09 02:20:20,390 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WAT', 1, 0])
2025-01-09 02:20:20,391 - DEBUG -   Entering history()
2025-01-09 02:20:20,391 - DEBUG - WAT: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:20,391 - DEBUG -    Entering get()
2025-01-09 02:20:20,391 - DEBUG -     Entering _make_request()
2025-01-09 02:20:20,391 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WAT
2025-01-09 02:20:20,391 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:20,392 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:20,392 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:20,392 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:20,392 - DEBUG - reusing cookie
2025-01-09 02:20:20,392 - DEBUG - reusing crumb
2025-01-09 02:20:20,392 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:20,392 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:20,546 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WAT?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1198
2025-01-09 02:20:20,546 - DEBUG - response code=200
2025-01-09 02:20:20,546 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:20,546 - DEBUG -    Exiting get()
2025-01-09 02:20:20,547 - DEBUG - WAT: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:20,548 - DEBUG - WAT: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:20,551 - DEBUG - WAT: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:20,556 - DEBUG - WAT: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:20,556 - DEBUG -   Exiting history()
2025-01-09 02:20:20,556 - DEBUG -  Exiting history()
2025-01-09 02:20:20,558 - DEBUG - Exiting download()
2025-01-09 02:20:20,663 - ERROR - Error writing data for WAT to DB: schema "np" does not exist
LINE 4:             VALUES ('WAT','2020-01-01'::date,np.float64(234....
                                                     ^

2025-01-09 02:20:20,664 - DEBUG - Entering download()
2025-01-09 02:20:20,664 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:20,664 - DEBUG -  Entering history()
2025-01-09 02:20:20,664 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WEC', 1, 0])
2025-01-09 02:20:20,665 - DEBUG -   Entering history()
2025-01-09 02:20:20,665 - DEBUG - WEC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:20,665 - DEBUG -    Entering get()
2025-01-09 02:20:20,665 - DEBUG -     Entering _make_request()
2025-01-09 02:20:20,666 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WEC
2025-01-09 02:20:20,666 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:20,666 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:20,666 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:20,666 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:20,666 - DEBUG - reusing cookie
2025-01-09 02:20:20,666 - DEBUG - reusing crumb
2025-01-09 02:20:20,666 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:20,666 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:20,887 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WEC?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1198
2025-01-09 02:20:20,888 - DEBUG - response code=200
2025-01-09 02:20:20,888 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:20,888 - DEBUG -    Exiting get()
2025-01-09 02:20:20,889 - DEBUG - WEC: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:20,890 - DEBUG - WEC: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:20,893 - DEBUG - WEC: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:20,897 - DEBUG - WEC: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:20,897 - DEBUG -   Exiting history()
2025-01-09 02:20:20,897 - DEBUG -  Exiting history()
2025-01-09 02:20:20,899 - DEBUG - Exiting download()
2025-01-09 02:20:21,119 - ERROR - Error writing data for WEC to DB: schema "np" does not exist
LINE 4:             VALUES ('WEC','2020-01-01'::date,np.float64(78.6...
                                                     ^

2025-01-09 02:20:21,119 - DEBUG - Entering download()
2025-01-09 02:20:21,120 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:21,120 - DEBUG -  Entering history()
2025-01-09 02:20:21,120 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WFC', 1, 0])
2025-01-09 02:20:21,120 - DEBUG -   Entering history()
2025-01-09 02:20:21,121 - DEBUG - WFC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:21,121 - DEBUG -    Entering get()
2025-01-09 02:20:21,121 - DEBUG -     Entering _make_request()
2025-01-09 02:20:21,121 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WFC
2025-01-09 02:20:21,121 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:21,121 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:21,121 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:21,121 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:21,121 - DEBUG - reusing cookie
2025-01-09 02:20:21,121 - DEBUG - reusing crumb
2025-01-09 02:20:21,122 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:21,122 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:21,333 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WFC?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1187
2025-01-09 02:20:21,333 - DEBUG - response code=200
2025-01-09 02:20:21,333 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:21,333 - DEBUG -    Exiting get()
2025-01-09 02:20:21,334 - DEBUG - WFC: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:21,336 - DEBUG - WFC: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:21,340 - DEBUG - WFC: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:21,347 - DEBUG - WFC: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:21,348 - DEBUG -   Exiting history()
2025-01-09 02:20:21,348 - DEBUG -  Exiting history()
2025-01-09 02:20:21,351 - DEBUG - Exiting download()
2025-01-09 02:20:21,484 - ERROR - Error writing data for WFC to DB: schema "np" does not exist
LINE 4:             VALUES ('WFC','2020-01-01'::date,np.float64(47.1...
                                                     ^

2025-01-09 02:20:21,484 - DEBUG - Entering download()
2025-01-09 02:20:21,484 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:21,484 - DEBUG -  Entering history()
2025-01-09 02:20:21,485 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WELL', 1, 0])
2025-01-09 02:20:21,485 - DEBUG -   Entering history()
2025-01-09 02:20:21,486 - DEBUG - WELL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:21,486 - DEBUG -    Entering get()
2025-01-09 02:20:21,486 - DEBUG -     Entering _make_request()
2025-01-09 02:20:21,486 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WELL
2025-01-09 02:20:21,486 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:21,486 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:21,486 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:21,486 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:21,486 - DEBUG - reusing cookie
2025-01-09 02:20:21,486 - DEBUG - reusing crumb
2025-01-09 02:20:21,486 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:21,486 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:21,709 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WELL?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1187
2025-01-09 02:20:21,709 - DEBUG - response code=200
2025-01-09 02:20:21,709 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:21,709 - DEBUG -    Exiting get()
2025-01-09 02:20:21,710 - DEBUG - WELL: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:21,711 - DEBUG - WELL: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:21,714 - DEBUG - WELL: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:21,719 - DEBUG - WELL: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:21,719 - DEBUG -   Exiting history()
2025-01-09 02:20:21,719 - DEBUG -  Exiting history()
2025-01-09 02:20:21,721 - DEBUG - Exiting download()
2025-01-09 02:20:21,874 - DEBUG - Entering download()
2025-01-09 02:20:21,874 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:21,874 - DEBUG -  Entering history()
2025-01-09 02:20:21,874 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WST', 1, 0])
2025-01-09 02:20:21,875 - DEBUG -   Entering history()
2025-01-09 02:20:21,875 - DEBUG - WST: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:21,875 - DEBUG -    Entering get()
2025-01-09 02:20:21,875 - DEBUG -     Entering _make_request()
2025-01-09 02:20:21,875 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WST
2025-01-09 02:20:21,875 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:21,876 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:21,876 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:21,876 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:21,876 - DEBUG - reusing cookie
2025-01-09 02:20:21,876 - DEBUG - reusing crumb
2025-01-09 02:20:21,876 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:21,876 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:22,068 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WST?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1203
2025-01-09 02:20:22,068 - DEBUG - response code=200
2025-01-09 02:20:22,069 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:22,069 - DEBUG -    Exiting get()
2025-01-09 02:20:22,071 - DEBUG - WST: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:22,072 - DEBUG - WST: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:22,078 - DEBUG - WST: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:22,088 - DEBUG - WST: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:22,088 - DEBUG -   Exiting history()
2025-01-09 02:20:22,088 - DEBUG -  Exiting history()
2025-01-09 02:20:22,092 - DEBUG - Exiting download()
2025-01-09 02:20:22,205 - ERROR - Error writing data for WST to DB: schema "np" does not exist
LINE 4:             VALUES ('WST','2020-01-01'::date,np.float64(148....
                                                     ^

2025-01-09 02:20:22,205 - DEBUG - Entering download()
2025-01-09 02:20:22,205 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:22,206 - DEBUG -  Entering history()
2025-01-09 02:20:22,206 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WDC', 1, 0])
2025-01-09 02:20:22,206 - DEBUG -   Entering history()
2025-01-09 02:20:22,207 - DEBUG - WDC: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:22,207 - DEBUG -    Entering get()
2025-01-09 02:20:22,207 - DEBUG -     Entering _make_request()
2025-01-09 02:20:22,207 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WDC
2025-01-09 02:20:22,207 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:22,207 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:22,207 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:22,207 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:22,207 - DEBUG - reusing cookie
2025-01-09 02:20:22,207 - DEBUG - reusing crumb
2025-01-09 02:20:22,207 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:22,207 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:22,377 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WDC?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1283
2025-01-09 02:20:22,377 - DEBUG - response code=200
2025-01-09 02:20:22,378 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:22,378 - DEBUG -    Exiting get()
2025-01-09 02:20:22,379 - DEBUG - WDC: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:22,380 - DEBUG - WDC: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:22,384 - DEBUG - WDC: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:22,390 - DEBUG - WDC: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:22,390 - DEBUG -   Exiting history()
2025-01-09 02:20:22,390 - DEBUG -  Exiting history()
2025-01-09 02:20:22,392 - DEBUG - Exiting download()
2025-01-09 02:20:22,547 - DEBUG - Entering download()
2025-01-09 02:20:22,548 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:22,548 - DEBUG -  Entering history()
2025-01-09 02:20:22,548 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WY', 1, 0])
2025-01-09 02:20:22,548 - DEBUG -   Entering history()
2025-01-09 02:20:22,549 - DEBUG - WY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:22,549 - DEBUG -    Entering get()
2025-01-09 02:20:22,549 - DEBUG -     Entering _make_request()
2025-01-09 02:20:22,549 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WY
2025-01-09 02:20:22,549 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:22,549 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:22,550 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:22,550 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:22,550 - DEBUG - reusing cookie
2025-01-09 02:20:22,550 - DEBUG - reusing crumb
2025-01-09 02:20:22,550 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:22,550 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:22,756 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WY?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1199
2025-01-09 02:20:22,757 - DEBUG - response code=200
2025-01-09 02:20:22,757 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:22,757 - DEBUG -    Exiting get()
2025-01-09 02:20:22,758 - DEBUG - WY: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:22,759 - DEBUG - WY: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:22,763 - DEBUG - WY: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:22,769 - DEBUG - WY: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:22,769 - DEBUG -   Exiting history()
2025-01-09 02:20:22,769 - DEBUG -  Exiting history()
2025-01-09 02:20:22,771 - DEBUG - Exiting download()
2025-01-09 02:20:22,881 - ERROR - Error writing data for WY to DB: schema "np" does not exist
LINE 4:             VALUES ('WY','2020-01-01'::date,np.float64(25.06...
                                                    ^

2025-01-09 02:20:22,881 - DEBUG - Entering download()
2025-01-09 02:20:22,881 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:22,882 - DEBUG -  Entering history()
2025-01-09 02:20:22,882 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WMB', 1, 0])
2025-01-09 02:20:22,882 - DEBUG -   Entering history()
2025-01-09 02:20:22,883 - DEBUG - WMB: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:22,883 - DEBUG -    Entering get()
2025-01-09 02:20:22,883 - DEBUG -     Entering _make_request()
2025-01-09 02:20:22,883 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WMB
2025-01-09 02:20:22,883 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:22,883 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:22,883 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:22,883 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:22,883 - DEBUG - reusing cookie
2025-01-09 02:20:22,883 - DEBUG - reusing crumb
2025-01-09 02:20:22,883 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:22,883 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:23,118 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WMB?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1218
2025-01-09 02:20:23,119 - DEBUG - response code=200
2025-01-09 02:20:23,119 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:23,119 - DEBUG -    Exiting get()
2025-01-09 02:20:23,120 - DEBUG - WMB: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:23,120 - DEBUG - WMB: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:23,123 - DEBUG - WMB: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:23,128 - DEBUG - WMB: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:23,128 - DEBUG -   Exiting history()
2025-01-09 02:20:23,128 - DEBUG -  Exiting history()
2025-01-09 02:20:23,130 - DEBUG - Exiting download()
2025-01-09 02:20:23,237 - ERROR - Error writing data for WMB to DB: schema "np" does not exist
LINE 4:             VALUES ('WMB','2020-01-01'::date,np.float64(17.8...
                                                     ^

2025-01-09 02:20:23,237 - DEBUG - Entering download()
2025-01-09 02:20:23,237 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:23,238 - DEBUG -  Entering history()
2025-01-09 02:20:23,238 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WTW', 1, 0])
2025-01-09 02:20:23,238 - DEBUG -   Entering history()
2025-01-09 02:20:23,239 - DEBUG - WTW: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:23,239 - DEBUG -    Entering get()
2025-01-09 02:20:23,239 - DEBUG -     Entering _make_request()
2025-01-09 02:20:23,239 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WTW
2025-01-09 02:20:23,239 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:23,239 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:23,239 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:23,239 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:23,239 - DEBUG - reusing cookie
2025-01-09 02:20:23,239 - DEBUG - reusing crumb
2025-01-09 02:20:23,239 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:23,239 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:23,446 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WTW?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1240
2025-01-09 02:20:23,446 - DEBUG - response code=200
2025-01-09 02:20:23,447 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:23,447 - DEBUG -    Exiting get()
2025-01-09 02:20:23,448 - DEBUG - WTW: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:23,448 - DEBUG - WTW: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:23,451 - DEBUG - WTW: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:23,456 - DEBUG - WTW: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:23,456 - DEBUG -   Exiting history()
2025-01-09 02:20:23,456 - DEBUG -  Exiting history()
2025-01-09 02:20:23,458 - DEBUG - Exiting download()
2025-01-09 02:20:23,505 - DEBUG - Entering download()
2025-01-09 02:20:23,505 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:23,505 - DEBUG -  Entering history()
2025-01-09 02:20:23,506 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WDAY', 1, 0])
2025-01-09 02:20:23,506 - DEBUG -   Entering history()
2025-01-09 02:20:23,507 - DEBUG - WDAY: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:23,507 - DEBUG -    Entering get()
2025-01-09 02:20:23,507 - DEBUG -     Entering _make_request()
2025-01-09 02:20:23,507 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WDAY
2025-01-09 02:20:23,507 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:23,507 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:23,507 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:23,507 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:23,507 - DEBUG - reusing cookie
2025-01-09 02:20:23,507 - DEBUG - reusing crumb
2025-01-09 02:20:23,507 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:23,507 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:23,657 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WDAY?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1195
2025-01-09 02:20:23,657 - DEBUG - response code=200
2025-01-09 02:20:23,657 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:23,657 - DEBUG -    Exiting get()
2025-01-09 02:20:23,658 - DEBUG - WDAY: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:23,659 - DEBUG - WDAY: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:23,662 - DEBUG - WDAY: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:23,666 - DEBUG - WDAY: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:23,666 - DEBUG -   Exiting history()
2025-01-09 02:20:23,666 - DEBUG -  Exiting history()
2025-01-09 02:20:23,668 - DEBUG - Exiting download()
2025-01-09 02:20:23,714 - DEBUG - Entering download()
2025-01-09 02:20:23,714 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:23,714 - DEBUG -  Entering history()
2025-01-09 02:20:23,714 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['WYNN', 1, 0])
2025-01-09 02:20:23,715 - DEBUG -   Entering history()
2025-01-09 02:20:23,715 - DEBUG - WYNN: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:23,715 - DEBUG -    Entering get()
2025-01-09 02:20:23,715 - DEBUG -     Entering _make_request()
2025-01-09 02:20:23,715 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/WYNN
2025-01-09 02:20:23,715 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:23,715 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:23,715 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:23,715 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:23,716 - DEBUG - reusing cookie
2025-01-09 02:20:23,716 - DEBUG - reusing crumb
2025-01-09 02:20:23,716 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:23,716 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:23,960 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/WYNN?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1197
2025-01-09 02:20:23,961 - DEBUG - response code=200
2025-01-09 02:20:23,961 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:23,961 - DEBUG -    Exiting get()
2025-01-09 02:20:23,962 - DEBUG - WYNN: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:23,963 - DEBUG - WYNN: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:23,966 - DEBUG - WYNN: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:23,971 - DEBUG - WYNN: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:23,971 - DEBUG -   Exiting history()
2025-01-09 02:20:23,971 - DEBUG -  Exiting history()
2025-01-09 02:20:23,974 - DEBUG - Exiting download()
2025-01-09 02:20:24,019 - DEBUG - Entering download()
2025-01-09 02:20:24,019 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:24,019 - DEBUG -  Entering history()
2025-01-09 02:20:24,020 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['XEL', 1, 0])
2025-01-09 02:20:24,020 - DEBUG -   Entering history()
2025-01-09 02:20:24,020 - DEBUG - XEL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:24,021 - DEBUG -    Entering get()
2025-01-09 02:20:24,021 - DEBUG -     Entering _make_request()
2025-01-09 02:20:24,021 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/XEL
2025-01-09 02:20:24,021 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:24,021 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:24,021 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:24,021 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:24,021 - DEBUG - reusing cookie
2025-01-09 02:20:24,021 - DEBUG - reusing crumb
2025-01-09 02:20:24,021 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:24,021 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:24,235 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/XEL?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1191
2025-01-09 02:20:24,236 - DEBUG - response code=200
2025-01-09 02:20:24,236 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:24,236 - DEBUG -    Exiting get()
2025-01-09 02:20:24,237 - DEBUG - XEL: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:24,238 - DEBUG - XEL: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:24,241 - DEBUG - XEL: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:24,245 - DEBUG - XEL: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:24,245 - DEBUG -   Exiting history()
2025-01-09 02:20:24,246 - DEBUG -  Exiting history()
2025-01-09 02:20:24,248 - DEBUG - Exiting download()
2025-01-09 02:20:24,353 - ERROR - Error writing data for XEL to DB: schema "np" does not exist
LINE 4:             VALUES ('XEL','2020-01-01'::date,np.float64(54.5...
                                                     ^

2025-01-09 02:20:24,353 - DEBUG - Entering download()
2025-01-09 02:20:24,353 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:24,354 - DEBUG -  Entering history()
2025-01-09 02:20:24,354 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['XYL', 1, 0])
2025-01-09 02:20:24,354 - DEBUG -   Entering history()
2025-01-09 02:20:24,355 - DEBUG - XYL: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:24,355 - DEBUG -    Entering get()
2025-01-09 02:20:24,355 - DEBUG -     Entering _make_request()
2025-01-09 02:20:24,355 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/XYL
2025-01-09 02:20:24,355 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:24,355 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:24,355 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:24,355 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:24,355 - DEBUG - reusing cookie
2025-01-09 02:20:24,355 - DEBUG - reusing crumb
2025-01-09 02:20:24,355 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:24,355 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:24,554 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/XYL?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1180
2025-01-09 02:20:24,554 - DEBUG - response code=200
2025-01-09 02:20:24,554 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:24,554 - DEBUG -    Exiting get()
2025-01-09 02:20:24,555 - DEBUG - XYL: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:24,556 - DEBUG - XYL: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:24,559 - DEBUG - XYL: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:24,565 - DEBUG - XYL: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:24,565 - DEBUG -   Exiting history()
2025-01-09 02:20:24,565 - DEBUG -  Exiting history()
2025-01-09 02:20:24,567 - DEBUG - Exiting download()
2025-01-09 02:20:24,680 - ERROR - Error writing data for XYL to DB: schema "np" does not exist
LINE 4:             VALUES ('XYL','2020-01-01'::date,np.float64(74.5...
                                                     ^

2025-01-09 02:20:24,680 - DEBUG - Entering download()
2025-01-09 02:20:24,680 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:24,680 - DEBUG -  Entering history()
2025-01-09 02:20:24,681 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['YUM', 1, 0])
2025-01-09 02:20:24,681 - DEBUG -   Entering history()
2025-01-09 02:20:24,681 - DEBUG - YUM: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:24,682 - DEBUG -    Entering get()
2025-01-09 02:20:24,682 - DEBUG -     Entering _make_request()
2025-01-09 02:20:24,682 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/YUM
2025-01-09 02:20:24,682 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:24,682 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:24,682 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:24,682 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:24,682 - DEBUG - reusing cookie
2025-01-09 02:20:24,682 - DEBUG - reusing crumb
2025-01-09 02:20:24,682 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:24,682 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:24,928 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/YUM?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1198
2025-01-09 02:20:24,928 - DEBUG - response code=200
2025-01-09 02:20:24,928 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:24,928 - DEBUG -    Exiting get()
2025-01-09 02:20:24,929 - DEBUG - YUM: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:24,930 - DEBUG - YUM: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:24,933 - DEBUG - YUM: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:24,937 - DEBUG - YUM: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:24,937 - DEBUG -   Exiting history()
2025-01-09 02:20:24,937 - DEBUG -  Exiting history()
2025-01-09 02:20:24,939 - DEBUG - Exiting download()
2025-01-09 02:20:25,049 - ERROR - Error writing data for YUM to DB: schema "np" does not exist
LINE 4:             VALUES ('YUM','2020-01-01'::date,np.float64(91.9...
                                                     ^

2025-01-09 02:20:25,050 - DEBUG - Entering download()
2025-01-09 02:20:25,050 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:25,050 - DEBUG -  Entering history()
2025-01-09 02:20:25,051 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ZBRA', 1, 0])
2025-01-09 02:20:25,051 - DEBUG -   Entering history()
2025-01-09 02:20:25,052 - DEBUG - ZBRA: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:25,052 - DEBUG -    Entering get()
2025-01-09 02:20:25,052 - DEBUG -     Entering _make_request()
2025-01-09 02:20:25,052 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ZBRA
2025-01-09 02:20:25,052 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:25,052 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:25,052 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:25,052 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:25,052 - DEBUG - reusing cookie
2025-01-09 02:20:25,052 - DEBUG - reusing crumb
2025-01-09 02:20:25,052 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:25,052 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:25,210 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ZBRA?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1223
2025-01-09 02:20:25,211 - DEBUG - response code=200
2025-01-09 02:20:25,211 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:25,211 - DEBUG -    Exiting get()
2025-01-09 02:20:25,212 - DEBUG - ZBRA: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:25,213 - DEBUG - ZBRA: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:25,216 - DEBUG - ZBRA: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:25,221 - DEBUG - ZBRA: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:25,221 - DEBUG -   Exiting history()
2025-01-09 02:20:25,222 - DEBUG -  Exiting history()
2025-01-09 02:20:25,224 - DEBUG - Exiting download()
2025-01-09 02:20:25,271 - DEBUG - Entering download()
2025-01-09 02:20:25,271 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:25,271 - DEBUG -  Entering history()
2025-01-09 02:20:25,271 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ZBH', 1, 0])
2025-01-09 02:20:25,271 - DEBUG -   Entering history()
2025-01-09 02:20:25,272 - DEBUG - ZBH: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:25,272 - DEBUG -    Entering get()
2025-01-09 02:20:25,272 - DEBUG -     Entering _make_request()
2025-01-09 02:20:25,272 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ZBH
2025-01-09 02:20:25,272 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:25,272 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:25,272 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:25,272 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:25,272 - DEBUG - reusing cookie
2025-01-09 02:20:25,272 - DEBUG - reusing crumb
2025-01-09 02:20:25,273 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:25,273 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:25,438 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ZBH?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1220
2025-01-09 02:20:25,438 - DEBUG - response code=200
2025-01-09 02:20:25,438 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:25,438 - DEBUG -    Exiting get()
2025-01-09 02:20:25,439 - DEBUG - ZBH: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:25,440 - DEBUG - ZBH: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:25,443 - DEBUG - ZBH: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:25,447 - DEBUG - ZBH: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:25,447 - DEBUG -   Exiting history()
2025-01-09 02:20:25,447 - DEBUG -  Exiting history()
2025-01-09 02:20:25,449 - DEBUG - Exiting download()
2025-01-09 02:20:25,493 - DEBUG - Entering download()
2025-01-09 02:20:25,493 - DEBUG - Disabling multithreading because DEBUG logging enabled
2025-01-09 02:20:25,494 - DEBUG -  Entering history()
2025-01-09 02:20:25,494 - DEBUG - ('SELECT "t1"."key", "t1"."value" FROM "_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['ZTS', 1, 0])
2025-01-09 02:20:25,494 - DEBUG -   Entering history()
2025-01-09 02:20:25,495 - DEBUG - ZTS: Yahoo GET parameters: {'period1': '2020-01-01 00:00:00-05:00', 'period2': '2020-01-02 00:00:00-05:00', 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
2025-01-09 02:20:25,495 - DEBUG -    Entering get()
2025-01-09 02:20:25,495 - DEBUG -     Entering _make_request()
2025-01-09 02:20:25,495 - DEBUG - url=https://query2.finance.yahoo.com/v8/finance/chart/ZTS
2025-01-09 02:20:25,495 - DEBUG - params=frozendict.frozendict({'period1': 1577854800, 'period2': 1577941200, 'interval': '1wk', 'includePrePost': False, 'events': 'div,splits,capitalGains'})
2025-01-09 02:20:25,495 - DEBUG -      Entering _get_cookie_and_crumb()
2025-01-09 02:20:25,495 - DEBUG - cookie_mode = 'basic'
2025-01-09 02:20:25,496 - DEBUG -       Entering _get_cookie_and_crumb_basic()
2025-01-09 02:20:25,496 - DEBUG - reusing cookie
2025-01-09 02:20:25,496 - DEBUG - reusing crumb
2025-01-09 02:20:25,496 - DEBUG -       Exiting _get_cookie_and_crumb_basic()
2025-01-09 02:20:25,496 - DEBUG -      Exiting _get_cookie_and_crumb()
2025-01-09 02:20:25,678 - DEBUG - https://query2.finance.yahoo.com:443 "GET /v8/finance/chart/ZTS?period1=1577854800&period2=1577941200&interval=1wk&includePrePost=False&events=div%2Csplits%2CcapitalGains&crumb=mbrlfmeSllh HTTP/1.1" 200 1187
2025-01-09 02:20:25,679 - DEBUG - response code=200
2025-01-09 02:20:25,679 - DEBUG -     Exiting _make_request()
2025-01-09 02:20:25,679 - DEBUG -    Exiting get()
2025-01-09 02:20:25,680 - DEBUG - ZTS: yfinance received OHLC data: 2020-01-01 05:00:00 only
2025-01-09 02:20:25,681 - DEBUG - ZTS: OHLC after cleaning: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:25,684 - DEBUG - ZTS: OHLC after combining events: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:25,690 - DEBUG - ZTS: yfinance returning OHLC: 2020-01-01 00:00:00-05:00 only
2025-01-09 02:20:25,690 - DEBUG -   Exiting history()
2025-01-09 02:20:25,690 - DEBUG -  Exiting history()
2025-01-09 02:20:25,692 - DEBUG - Exiting download()
2025-01-09 02:20:25,743 - DEBUG - DEBUG: MMM 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,745 - DEBUG - DEBUG: AOS 'Close' is Series of shape (1,)
2025-01-09 02:20:25,746 - DEBUG - DEBUG: ABT 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,747 - DEBUG - DEBUG: ABBV 'Close' is Series of shape (1,)
2025-01-09 02:20:25,748 - DEBUG - DEBUG: ACN 'Close' is Series of shape (1,)
2025-01-09 02:20:25,749 - DEBUG - DEBUG: ADBE 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,749 - DEBUG - DEBUG: AMD 'Close' is Series of shape (1,)
2025-01-09 02:20:25,750 - DEBUG - DEBUG: AES 'Close' is Series of shape (1,)
2025-01-09 02:20:25,751 - DEBUG - DEBUG: AFL 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,752 - DEBUG - DEBUG: A 'Close' is Series of shape (1,)
2025-01-09 02:20:25,753 - DEBUG - DEBUG: APD 'Close' is Series of shape (1,)
2025-01-09 02:20:25,754 - DEBUG - DEBUG: ABNB 'Close' is Series of shape (1025,)
2025-01-09 02:20:25,755 - DEBUG - DEBUG: AKAM 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,756 - DEBUG - DEBUG: ALB 'Close' is Series of shape (1,)
2025-01-09 02:20:25,757 - DEBUG - DEBUG: ARE 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,758 - DEBUG - DEBUG: ALGN 'Close' is Series of shape (1,)
2025-01-09 02:20:25,759 - DEBUG - DEBUG: ALLE 'Close' is Series of shape (1,)
2025-01-09 02:20:25,760 - DEBUG - DEBUG: LNT 'Close' is Series of shape (1,)
2025-01-09 02:20:25,761 - DEBUG - DEBUG: ALL 'Close' is Series of shape (1,)
2025-01-09 02:20:25,762 - DEBUG - DEBUG: GOOGL 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,764 - DEBUG - DEBUG: GOOG 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,765 - DEBUG - DEBUG: MO 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,766 - DEBUG - DEBUG: AMZN 'Close' is Series of shape (1,)
2025-01-09 02:20:25,767 - DEBUG - DEBUG: AMCR 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,768 - DEBUG - DEBUG: AEE 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,769 - DEBUG - DEBUG: AEP 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,770 - DEBUG - DEBUG: AXP 'Close' is Series of shape (1,)
2025-01-09 02:20:25,771 - DEBUG - DEBUG: AIG 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,772 - DEBUG - DEBUG: AMT 'Close' is Series of shape (1,)
2025-01-09 02:20:25,772 - DEBUG - DEBUG: AWK 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,773 - DEBUG - DEBUG: AMP 'Close' is Series of shape (1,)
2025-01-09 02:20:25,774 - DEBUG - DEBUG: AME 'Close' is Series of shape (1,)
2025-01-09 02:20:25,775 - DEBUG - DEBUG: AMGN 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,776 - DEBUG - DEBUG: APH 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,777 - DEBUG - DEBUG: ADI 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,778 - DEBUG - DEBUG: ANSS 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,779 - DEBUG - DEBUG: AON 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,780 - DEBUG - DEBUG: APA 'Close' is Series of shape (1,)
2025-01-09 02:20:25,781 - DEBUG - DEBUG: APO 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,782 - DEBUG - DEBUG: AAPL 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,783 - DEBUG - DEBUG: AMAT 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,784 - DEBUG - DEBUG: APTV 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,785 - DEBUG - DEBUG: ACGL 'Close' is Series of shape (1,)
2025-01-09 02:20:25,786 - DEBUG - DEBUG: ADM 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,787 - DEBUG - DEBUG: ANET 'Close' is Series of shape (1,)
2025-01-09 02:20:25,788 - DEBUG - DEBUG: AJG 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,789 - DEBUG - DEBUG: AIZ 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,790 - DEBUG - DEBUG: T 'Close' is Series of shape (1,)
2025-01-09 02:20:25,791 - DEBUG - DEBUG: ATO 'Close' is Series of shape (1,)
2025-01-09 02:20:25,792 - DEBUG - DEBUG: ADSK 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,793 - DEBUG - DEBUG: ADP 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,794 - DEBUG - DEBUG: AZO 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,795 - DEBUG - DEBUG: AVB 'Close' is Series of shape (1,)
2025-01-09 02:20:25,796 - DEBUG - DEBUG: AVY 'Close' is Series of shape (1,)
2025-01-09 02:20:25,797 - DEBUG - DEBUG: AXON 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,798 - DEBUG - DEBUG: BKR 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,799 - DEBUG - DEBUG: BALL 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,800 - DEBUG - DEBUG: BAC 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,801 - DEBUG - DEBUG: BAX 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,802 - DEBUG - DEBUG: BDX 'Close' is Series of shape (1,)
2025-01-09 02:20:25,803 - DEBUG - DEBUG: BRK-B 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,804 - DEBUG - DEBUG: BBY 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,805 - DEBUG - DEBUG: TECH 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,806 - DEBUG - DEBUG: BIIB 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,807 - DEBUG - DEBUG: BLK 'Close' is Series of shape (1,)
2025-01-09 02:20:25,807 - DEBUG - DEBUG: BX 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,808 - DEBUG - DEBUG: BK 'Close' is Series of shape (1,)
2025-01-09 02:20:25,809 - DEBUG - DEBUG: BA 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,810 - DEBUG - DEBUG: BKNG 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,811 - DEBUG - DEBUG: BWA 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,812 - DEBUG - DEBUG: BSX 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,813 - DEBUG - DEBUG: BMY 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,814 - DEBUG - DEBUG: AVGO 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,815 - DEBUG - DEBUG: BR 'Close' is Series of shape (1,)
2025-01-09 02:20:25,816 - DEBUG - DEBUG: BRO 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,817 - DEBUG - DEBUG: BF-B 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,818 - DEBUG - DEBUG: BLDR 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,819 - DEBUG - DEBUG: BG 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,820 - DEBUG - DEBUG: BXP 'Close' is Series of shape (1,)
2025-01-09 02:20:25,820 - DEBUG - DEBUG: CHRW 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,821 - DEBUG - DEBUG: CDNS 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,822 - DEBUG - DEBUG: CZR 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,823 - DEBUG - DEBUG: CPT 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,824 - DEBUG - DEBUG: CPB 'Close' is Series of shape (1,)
2025-01-09 02:20:25,826 - DEBUG - DEBUG: COF 'Close' is Series of shape (1,)
2025-01-09 02:20:25,828 - DEBUG - DEBUG: CAH 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,829 - DEBUG - DEBUG: KMX 'Close' is Series of shape (1,)
2025-01-09 02:20:25,830 - DEBUG - DEBUG: CCL 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,831 - DEBUG - DEBUG: CARR 'Close' is Series of shape (1210,)
2025-01-09 02:20:25,833 - DEBUG - DEBUG: CAT 'Close' is Series of shape (1,)
2025-01-09 02:20:25,834 - DEBUG - DEBUG: CBOE 'Close' is Series of shape (1,)
2025-01-09 02:20:25,835 - DEBUG - DEBUG: CBRE 'Close' is Series of shape (1,)
2025-01-09 02:20:25,836 - DEBUG - DEBUG: CDW 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,837 - DEBUG - DEBUG: CE 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,838 - DEBUG - DEBUG: COR 'Close' is Series of shape (1,)
2025-01-09 02:20:25,839 - DEBUG - DEBUG: CNC 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,840 - DEBUG - DEBUG: CNP 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,841 - DEBUG - DEBUG: CF 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,843 - DEBUG - DEBUG: CRL 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,844 - DEBUG - DEBUG: SCHW 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,845 - DEBUG - DEBUG: CHTR 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,846 - DEBUG - DEBUG: CVX 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,847 - DEBUG - DEBUG: CMG 'Close' is Series of shape (1,)
2025-01-09 02:20:25,848 - DEBUG - DEBUG: CB 'Close' is Series of shape (1,)
2025-01-09 02:20:25,849 - DEBUG - DEBUG: CHD 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,850 - DEBUG - DEBUG: CI 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,851 - DEBUG - DEBUG: CINF 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,852 - DEBUG - DEBUG: CTAS 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,854 - DEBUG - DEBUG: CSCO 'Close' is Series of shape (1,)
2025-01-09 02:20:25,855 - DEBUG - DEBUG: C 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,856 - DEBUG - DEBUG: CFG 'Close' is Series of shape (1,)
2025-01-09 02:20:25,857 - DEBUG - DEBUG: CLX 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,858 - DEBUG - DEBUG: CME 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,859 - DEBUG - DEBUG: CMS 'Close' is Series of shape (1,)
2025-01-09 02:20:25,860 - DEBUG - DEBUG: KO 'Close' is Series of shape (1,)
2025-01-09 02:20:25,861 - DEBUG - DEBUG: CTSH 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,863 - DEBUG - DEBUG: CL 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,864 - DEBUG - DEBUG: CMCSA 'Close' is Series of shape (1,)
2025-01-09 02:20:25,865 - DEBUG - DEBUG: CAG 'Close' is Series of shape (1,)
2025-01-09 02:20:25,866 - DEBUG - DEBUG: COP 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,867 - DEBUG - DEBUG: ED 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,868 - DEBUG - DEBUG: STZ 'Close' is Series of shape (1,)
2025-01-09 02:20:25,869 - DEBUG - DEBUG: CEG 'Close' is Series of shape (747,)
2025-01-09 02:20:25,870 - DEBUG - DEBUG: COO 'Close' is Series of shape (1,)
2025-01-09 02:20:25,871 - DEBUG - DEBUG: CPRT 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,872 - DEBUG - DEBUG: GLW 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,874 - DEBUG - DEBUG: CPAY 'Close' is Series of shape (1,)
2025-01-09 02:20:25,875 - DEBUG - DEBUG: CTVA 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,876 - DEBUG - DEBUG: CSGP 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,877 - DEBUG - DEBUG: COST 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,878 - DEBUG - DEBUG: CTRA 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,879 - DEBUG - DEBUG: CRWD 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,880 - DEBUG - DEBUG: CCI 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,882 - DEBUG - DEBUG: CSX 'Close' is Series of shape (1,)
2025-01-09 02:20:25,883 - DEBUG - DEBUG: CMI 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,884 - DEBUG - DEBUG: CVS 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,885 - DEBUG - DEBUG: DHR 'Close' is Series of shape (1,)
2025-01-09 02:20:25,886 - DEBUG - DEBUG: DRI 'Close' is Series of shape (1,)
2025-01-09 02:20:25,887 - DEBUG - DEBUG: DVA 'Close' is Series of shape (1,)
2025-01-09 02:20:25,888 - DEBUG - DEBUG: DAY 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,889 - DEBUG - DEBUG: DECK 'Close' is Series of shape (1,)
2025-01-09 02:20:25,890 - DEBUG - DEBUG: DE 'Close' is Series of shape (1,)
2025-01-09 02:20:25,891 - DEBUG - DEBUG: DELL 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,892 - DEBUG - DEBUG: DAL 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,894 - DEBUG - DEBUG: DVN 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,895 - DEBUG - DEBUG: DXCM 'Close' is Series of shape (1,)
2025-01-09 02:20:25,896 - DEBUG - DEBUG: FANG 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,897 - DEBUG - DEBUG: DLR 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,898 - DEBUG - DEBUG: DFS 'Close' is Series of shape (1,)
2025-01-09 02:20:25,899 - DEBUG - DEBUG: DG 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,900 - DEBUG - DEBUG: DLTR 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,901 - DEBUG - DEBUG: D 'Close' is Series of shape (1,)
2025-01-09 02:20:25,903 - DEBUG - DEBUG: DPZ 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,904 - DEBUG - DEBUG: DOV 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,905 - DEBUG - DEBUG: DOW 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,906 - DEBUG - DEBUG: DHI 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,907 - DEBUG - DEBUG: DTE 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,908 - DEBUG - DEBUG: DUK 'Close' is Series of shape (1,)
2025-01-09 02:20:25,909 - DEBUG - DEBUG: DD 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,910 - DEBUG - DEBUG: EMN 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,912 - DEBUG - DEBUG: ETN 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,913 - DEBUG - DEBUG: EBAY 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,914 - DEBUG - DEBUG: ECL 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,915 - DEBUG - DEBUG: EIX 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,916 - DEBUG - DEBUG: EW 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,917 - DEBUG - DEBUG: EA 'Close' is Series of shape (1,)
2025-01-09 02:20:25,918 - DEBUG - DEBUG: ELV 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,919 - DEBUG - DEBUG: EMR 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,921 - DEBUG - DEBUG: ENPH 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,922 - DEBUG - DEBUG: ETR 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,923 - DEBUG - DEBUG: EOG 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,924 - DEBUG - DEBUG: EPAM 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,925 - DEBUG - DEBUG: EQT 'Close' is Series of shape (1,)
2025-01-09 02:20:25,927 - DEBUG - DEBUG: EFX 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,928 - DEBUG - DEBUG: EQIX 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,929 - DEBUG - DEBUG: EQR 'Close' is Series of shape (1,)
2025-01-09 02:20:25,930 - DEBUG - DEBUG: ERIE 'Close' is Series of shape (1,)
2025-01-09 02:20:25,931 - DEBUG - DEBUG: ESS 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,932 - DEBUG - DEBUG: EL 'Close' is Series of shape (1,)
2025-01-09 02:20:25,933 - DEBUG - DEBUG: EG 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,934 - DEBUG - DEBUG: EVRG 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,935 - DEBUG - DEBUG: ES 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,936 - DEBUG - DEBUG: EXC 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,938 - DEBUG - DEBUG: EXPE 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,939 - DEBUG - DEBUG: EXPD 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,940 - DEBUG - DEBUG: EXR 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,941 - DEBUG - DEBUG: XOM 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,942 - DEBUG - DEBUG: FFIV 'Close' is Series of shape (1,)
2025-01-09 02:20:25,944 - DEBUG - DEBUG: FDS 'Close' is Series of shape (1,)
2025-01-09 02:20:25,945 - DEBUG - DEBUG: FICO 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,946 - DEBUG - DEBUG: FAST 'Close' is Series of shape (1,)
2025-01-09 02:20:25,948 - DEBUG - DEBUG: FRT 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,949 - DEBUG - DEBUG: FDX 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,950 - DEBUG - DEBUG: FIS 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,952 - DEBUG - DEBUG: FITB 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,953 - DEBUG - DEBUG: FSLR 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,955 - DEBUG - DEBUG: FE 'Close' is Series of shape (1,)
2025-01-09 02:20:25,956 - DEBUG - DEBUG: FI 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,957 - DEBUG - DEBUG: FMC 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,958 - DEBUG - DEBUG: F 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,959 - DEBUG - DEBUG: FTNT 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,961 - DEBUG - DEBUG: FTV 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,962 - DEBUG - DEBUG: FOXA 'Close' is Series of shape (1,)
2025-01-09 02:20:25,963 - DEBUG - DEBUG: FOX 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,964 - DEBUG - DEBUG: BEN 'Close' is Series of shape (1,)
2025-01-09 02:20:25,965 - DEBUG - DEBUG: FCX 'Close' is Series of shape (1,)
2025-01-09 02:20:25,966 - DEBUG - DEBUG: GRMN 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,967 - DEBUG - DEBUG: IT 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,969 - DEBUG - DEBUG: GE 'Close' is Series of shape (1,)
2025-01-09 02:20:25,970 - DEBUG - DEBUG: GEV 'Close' is Series of shape (196,)
2025-01-09 02:20:25,971 - DEBUG - DEBUG: GEN 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,972 - DEBUG - DEBUG: GNRC 'Close' is Series of shape (1,)
2025-01-09 02:20:25,973 - DEBUG - DEBUG: GD 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,974 - DEBUG - DEBUG: GIS 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,975 - DEBUG - DEBUG: GM 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,976 - DEBUG - DEBUG: GPC 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,978 - DEBUG - DEBUG: GILD 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,979 - DEBUG - DEBUG: GPN 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,980 - DEBUG - DEBUG: GL 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,981 - DEBUG - DEBUG: GDDY 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,982 - DEBUG - DEBUG: GS 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,984 - DEBUG - DEBUG: HAL 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,985 - DEBUG - DEBUG: HIG 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,986 - DEBUG - DEBUG: HAS 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,987 - DEBUG - DEBUG: HCA 'Close' is Series of shape (1,)
2025-01-09 02:20:25,989 - DEBUG - DEBUG: DOC 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,990 - DEBUG - DEBUG: HSIC 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,991 - DEBUG - DEBUG: HSY 'Close' is Series of shape (1,)
2025-01-09 02:20:25,993 - DEBUG - DEBUG: HES 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,994 - DEBUG - DEBUG: HPE 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,995 - DEBUG - DEBUG: HLT 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,996 - DEBUG - DEBUG: HOLX 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,997 - DEBUG - DEBUG: HD 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,998 - DEBUG - DEBUG: HON 'Close' is Series of shape (1264,)
2025-01-09 02:20:25,999 - DEBUG - DEBUG: HRL 'Close' is Series of shape (1,)
2025-01-09 02:20:26,000 - DEBUG - DEBUG: HST 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,001 - DEBUG - DEBUG: HWM 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,002 - DEBUG - DEBUG: HPQ 'Close' is Series of shape (1,)
2025-01-09 02:20:26,003 - DEBUG - DEBUG: HUBB 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,004 - DEBUG - DEBUG: HUM 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,005 - DEBUG - DEBUG: HBAN 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,006 - DEBUG - DEBUG: HII 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,007 - DEBUG - DEBUG: IBM 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,008 - DEBUG - DEBUG: IEX 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,009 - DEBUG - DEBUG: IDXX 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,010 - DEBUG - DEBUG: ITW 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,011 - DEBUG - DEBUG: INCY 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,012 - DEBUG - DEBUG: IR 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,013 - DEBUG - DEBUG: PODD 'Close' is Series of shape (1,)
2025-01-09 02:20:26,014 - DEBUG - DEBUG: INTC 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,015 - DEBUG - DEBUG: ICE 'Close' is Series of shape (1,)
2025-01-09 02:20:26,016 - DEBUG - DEBUG: IFF 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,017 - DEBUG - DEBUG: IP 'Close' is Series of shape (1,)
2025-01-09 02:20:26,018 - DEBUG - DEBUG: IPG 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,019 - DEBUG - DEBUG: INTU 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,020 - DEBUG - DEBUG: ISRG 'Close' is Series of shape (1,)
2025-01-09 02:20:26,021 - DEBUG - DEBUG: IVZ 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,022 - DEBUG - DEBUG: INVH 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,023 - DEBUG - DEBUG: IQV 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,024 - DEBUG - DEBUG: IRM 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,025 - DEBUG - DEBUG: JBHT 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,026 - DEBUG - DEBUG: JBL 'Close' is Series of shape (1,)
2025-01-09 02:20:26,027 - DEBUG - DEBUG: JKHY 'Close' is Series of shape (1,)
2025-01-09 02:20:26,028 - DEBUG - DEBUG: J 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,029 - DEBUG - DEBUG: JNJ 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,030 - DEBUG - DEBUG: JCI 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,031 - DEBUG - DEBUG: JPM 'Close' is Series of shape (1,)
2025-01-09 02:20:26,032 - DEBUG - DEBUG: JNPR 'Close' is Series of shape (1,)
2025-01-09 02:20:26,033 - DEBUG - DEBUG: K 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,034 - DEBUG - DEBUG: KVUE 'Close' is Series of shape (423,)
2025-01-09 02:20:26,036 - DEBUG - DEBUG: KDP 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,037 - DEBUG - DEBUG: KEY 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,038 - DEBUG - DEBUG: KEYS 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,039 - DEBUG - DEBUG: KMB 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,039 - DEBUG - DEBUG: KIM 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,040 - DEBUG - DEBUG: KMI 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,041 - DEBUG - DEBUG: KKR 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,042 - DEBUG - DEBUG: KLAC 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,043 - DEBUG - DEBUG: KHC 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,044 - DEBUG - DEBUG: KR 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,045 - DEBUG - DEBUG: LHX 'Close' is Series of shape (1,)
2025-01-09 02:20:26,046 - DEBUG - DEBUG: LH 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,047 - DEBUG - DEBUG: LRCX 'Close' is Series of shape (1,)
2025-01-09 02:20:26,048 - DEBUG - DEBUG: LW 'Close' is Series of shape (1,)
2025-01-09 02:20:26,050 - DEBUG - DEBUG: LVS 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,051 - DEBUG - DEBUG: LDOS 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,052 - DEBUG - DEBUG: LEN 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,053 - DEBUG - DEBUG: LII 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,054 - DEBUG - DEBUG: LLY 'Close' is Series of shape (1,)
2025-01-09 02:20:26,055 - DEBUG - DEBUG: LIN 'Close' is Series of shape (1,)
2025-01-09 02:20:26,055 - DEBUG - DEBUG: LYV 'Close' is Series of shape (1,)
2025-01-09 02:20:26,056 - DEBUG - DEBUG: LKQ 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,057 - DEBUG - DEBUG: LMT 'Close' is Series of shape (1,)
2025-01-09 02:20:26,058 - DEBUG - DEBUG: L 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,059 - DEBUG - DEBUG: LOW 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,060 - DEBUG - DEBUG: LULU 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,061 - DEBUG - DEBUG: LYB 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,062 - DEBUG - DEBUG: MTB 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,063 - DEBUG - DEBUG: MPC 'Close' is Series of shape (1,)
2025-01-09 02:20:26,064 - DEBUG - DEBUG: MKTX 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,065 - DEBUG - DEBUG: MAR 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,066 - DEBUG - DEBUG: MMC 'Close' is Series of shape (1,)
2025-01-09 02:20:26,067 - DEBUG - DEBUG: MLM 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,067 - DEBUG - DEBUG: MAS 'Close' is Series of shape (1,)
2025-01-09 02:20:26,068 - DEBUG - DEBUG: MA 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,069 - DEBUG - DEBUG: MTCH 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,070 - DEBUG - DEBUG: MKC 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,071 - DEBUG - DEBUG: MCD 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,072 - DEBUG - DEBUG: MCK 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,073 - DEBUG - DEBUG: MDT 'Close' is Series of shape (1,)
2025-01-09 02:20:26,074 - DEBUG - DEBUG: MRK 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,075 - DEBUG - DEBUG: META 'Close' is Series of shape (1,)
2025-01-09 02:20:26,075 - DEBUG - DEBUG: MET 'Close' is Series of shape (1,)
2025-01-09 02:20:26,076 - DEBUG - DEBUG: MTD 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,077 - DEBUG - DEBUG: MGM 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,078 - DEBUG - DEBUG: MCHP 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,079 - DEBUG - DEBUG: MU 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,080 - DEBUG - DEBUG: MSFT 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,082 - DEBUG - DEBUG: MAA 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,083 - DEBUG - DEBUG: MRNA 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,084 - DEBUG - DEBUG: MHK 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,085 - DEBUG - DEBUG: MOH 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,086 - DEBUG - DEBUG: TAP 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,087 - DEBUG - DEBUG: MDLZ 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,088 - DEBUG - DEBUG: MPWR 'Close' is Series of shape (1,)
2025-01-09 02:20:26,089 - DEBUG - DEBUG: MNST 'Close' is Series of shape (1,)
2025-01-09 02:20:26,090 - DEBUG - DEBUG: MCO 'Close' is Series of shape (1,)
2025-01-09 02:20:26,091 - DEBUG - DEBUG: MS 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,092 - DEBUG - DEBUG: MOS 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,093 - DEBUG - DEBUG: MSI 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,094 - DEBUG - DEBUG: MSCI 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,095 - DEBUG - DEBUG: NDAQ 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,096 - DEBUG - DEBUG: NTAP 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,097 - DEBUG - DEBUG: NFLX 'Close' is Series of shape (1,)
2025-01-09 02:20:26,098 - DEBUG - DEBUG: NEM 'Close' is Series of shape (1,)
2025-01-09 02:20:26,099 - DEBUG - DEBUG: NWSA 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,100 - DEBUG - DEBUG: NWS 'Close' is Series of shape (1,)
2025-01-09 02:20:26,101 - DEBUG - DEBUG: NEE 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,102 - DEBUG - DEBUG: NKE 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,103 - DEBUG - DEBUG: NI 'Close' is Series of shape (1,)
2025-01-09 02:20:26,104 - DEBUG - DEBUG: NDSN 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,105 - DEBUG - DEBUG: NSC 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,106 - DEBUG - DEBUG: NTRS 'Close' is Series of shape (1,)
2025-01-09 02:20:26,107 - DEBUG - DEBUG: NOC 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,108 - DEBUG - DEBUG: NCLH 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,109 - DEBUG - DEBUG: NRG 'Close' is Series of shape (1,)
2025-01-09 02:20:26,110 - DEBUG - DEBUG: NUE 'Close' is Series of shape (1,)
2025-01-09 02:20:26,111 - DEBUG - DEBUG: NVDA 'Close' is Series of shape (1,)
2025-01-09 02:20:26,112 - DEBUG - DEBUG: NVR 'Close' is Series of shape (1,)
2025-01-09 02:20:26,113 - DEBUG - DEBUG: NXPI 'Close' is Series of shape (1,)
2025-01-09 02:20:26,114 - DEBUG - DEBUG: ORLY 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,115 - DEBUG - DEBUG: OXY 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,116 - DEBUG - DEBUG: ODFL 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,117 - DEBUG - DEBUG: OMC 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,118 - DEBUG - DEBUG: ON 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,119 - DEBUG - DEBUG: OKE 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,120 - DEBUG - DEBUG: ORCL 'Close' is Series of shape (1,)
2025-01-09 02:20:26,121 - DEBUG - DEBUG: OTIS 'Close' is Series of shape (1210,)
2025-01-09 02:20:26,122 - DEBUG - DEBUG: PCAR 'Close' is Series of shape (1,)
2025-01-09 02:20:26,123 - DEBUG - DEBUG: PKG 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,124 - DEBUG - DEBUG: PLTR 'Close' is Series of shape (1075,)
2025-01-09 02:20:26,125 - DEBUG - DEBUG: PANW 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,126 - DEBUG - DEBUG: PARA 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,127 - DEBUG - DEBUG: PH 'Close' is Series of shape (1,)
2025-01-09 02:20:26,127 - DEBUG - DEBUG: PAYX 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,128 - DEBUG - DEBUG: PAYC 'Close' is Series of shape (1,)
2025-01-09 02:20:26,129 - DEBUG - DEBUG: PYPL 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,130 - DEBUG - DEBUG: PNR 'Close' is Series of shape (1,)
2025-01-09 02:20:26,131 - DEBUG - DEBUG: PEP 'Close' is Series of shape (1,)
2025-01-09 02:20:26,132 - DEBUG - DEBUG: PFE 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,133 - DEBUG - DEBUG: PCG 'Close' is Series of shape (1,)
2025-01-09 02:20:26,134 - DEBUG - DEBUG: PM 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,135 - DEBUG - DEBUG: PSX 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,136 - DEBUG - DEBUG: PNW 'Close' is Series of shape (1,)
2025-01-09 02:20:26,137 - DEBUG - DEBUG: PNC 'Close' is Series of shape (1,)
2025-01-09 02:20:26,137 - DEBUG - DEBUG: POOL 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,138 - DEBUG - DEBUG: PPG 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,139 - DEBUG - DEBUG: PPL 'Close' is Series of shape (1,)
2025-01-09 02:20:26,140 - DEBUG - DEBUG: PFG 'Close' is Series of shape (1,)
2025-01-09 02:20:26,141 - DEBUG - DEBUG: PG 'Close' is Series of shape (1,)
2025-01-09 02:20:26,142 - DEBUG - DEBUG: PGR 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,143 - DEBUG - DEBUG: PLD 'Close' is Series of shape (1,)
2025-01-09 02:20:26,144 - DEBUG - DEBUG: PRU 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,145 - DEBUG - DEBUG: PEG 'Close' is Series of shape (1,)
2025-01-09 02:20:26,146 - DEBUG - DEBUG: PTC 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,147 - DEBUG - DEBUG: PSA 'Close' is Series of shape (1,)
2025-01-09 02:20:26,148 - DEBUG - DEBUG: PHM 'Close' is Series of shape (1,)
2025-01-09 02:20:26,148 - DEBUG - DEBUG: PWR 'Close' is Series of shape (1,)
2025-01-09 02:20:26,149 - DEBUG - DEBUG: QCOM 'Close' is Series of shape (1,)
2025-01-09 02:20:26,150 - DEBUG - DEBUG: DGX 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,151 - DEBUG - DEBUG: RL 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,152 - DEBUG - DEBUG: RJF 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,153 - DEBUG - DEBUG: RTX 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,154 - DEBUG - DEBUG: O 'Close' is Series of shape (1,)
2025-01-09 02:20:26,155 - DEBUG - DEBUG: REG 'Close' is Series of shape (1,)
2025-01-09 02:20:26,156 - DEBUG - DEBUG: REGN 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,156 - DEBUG - DEBUG: RF 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,157 - DEBUG - DEBUG: RSG 'Close' is Series of shape (1,)
2025-01-09 02:20:26,158 - DEBUG - DEBUG: RMD 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,159 - DEBUG - DEBUG: RVTY 'Close' is Series of shape (1,)
2025-01-09 02:20:26,160 - DEBUG - DEBUG: ROK 'Close' is Series of shape (1,)
2025-01-09 02:20:26,161 - DEBUG - DEBUG: ROL 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,162 - DEBUG - DEBUG: ROP 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,163 - DEBUG - DEBUG: ROST 'Close' is Series of shape (1,)
2025-01-09 02:20:26,164 - DEBUG - DEBUG: RCL 'Close' is Series of shape (1,)
2025-01-09 02:20:26,164 - DEBUG - DEBUG: SPGI 'Close' is Series of shape (1,)
2025-01-09 02:20:26,165 - DEBUG - DEBUG: CRM 'Close' is Series of shape (1,)
2025-01-09 02:20:26,166 - DEBUG - DEBUG: SBAC 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,167 - DEBUG - DEBUG: SLB 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,168 - DEBUG - DEBUG: STX 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,169 - DEBUG - DEBUG: SRE 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,170 - DEBUG - DEBUG: NOW 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,171 - DEBUG - DEBUG: SHW 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,172 - DEBUG - DEBUG: SPG 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,173 - DEBUG - DEBUG: SWKS 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,174 - DEBUG - DEBUG: SJM 'Close' is Series of shape (1,)
2025-01-09 02:20:26,174 - DEBUG - DEBUG: SNA 'Close' is Series of shape (1,)
2025-01-09 02:20:26,175 - DEBUG - DEBUG: SOLV 'Close' is Series of shape (196,)
2025-01-09 02:20:26,176 - DEBUG - DEBUG: SO 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,177 - DEBUG - DEBUG: LUV 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,178 - DEBUG - DEBUG: SWK 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,179 - DEBUG - DEBUG: SBUX 'Close' is Series of shape (1,)
2025-01-09 02:20:26,180 - DEBUG - DEBUG: STT 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,181 - DEBUG - DEBUG: STLD 'Close' is Series of shape (1,)
2025-01-09 02:20:26,182 - DEBUG - DEBUG: STE 'Close' is Series of shape (1,)
2025-01-09 02:20:26,183 - DEBUG - DEBUG: SYK 'Close' is Series of shape (1,)
2025-01-09 02:20:26,184 - DEBUG - DEBUG: SMCI 'Close' is Series of shape (1,)
2025-01-09 02:20:26,185 - DEBUG - DEBUG: SYF 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,186 - DEBUG - DEBUG: SNPS 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,187 - DEBUG - DEBUG: SYY 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,188 - DEBUG - DEBUG: TMUS 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,189 - DEBUG - DEBUG: TROW 'Close' is Series of shape (1,)
2025-01-09 02:20:26,190 - DEBUG - DEBUG: TTWO 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,191 - DEBUG - DEBUG: TPR 'Close' is Series of shape (1,)
2025-01-09 02:20:26,192 - DEBUG - DEBUG: TRGP 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,193 - DEBUG - DEBUG: TGT 'Close' is Series of shape (1,)
2025-01-09 02:20:26,194 - DEBUG - DEBUG: TEL 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,195 - DEBUG - DEBUG: TDY 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,196 - DEBUG - DEBUG: TFX 'Close' is Series of shape (1,)
2025-01-09 02:20:26,197 - DEBUG - DEBUG: TER 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,198 - DEBUG - DEBUG: TSLA 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,199 - DEBUG - DEBUG: TXN 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,200 - DEBUG - DEBUG: TPL 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,201 - DEBUG - DEBUG: TXT 'Close' is Series of shape (1,)
2025-01-09 02:20:26,202 - DEBUG - DEBUG: TMO 'Close' is Series of shape (1,)
2025-01-09 02:20:26,208 - DEBUG - DEBUG: TJX 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,209 - DEBUG - DEBUG: TSCO 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,210 - DEBUG - DEBUG: TT 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,211 - DEBUG - DEBUG: TDG 'Close' is Series of shape (1,)
2025-01-09 02:20:26,212 - DEBUG - DEBUG: TRV 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,213 - DEBUG - DEBUG: TRMB 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,214 - DEBUG - DEBUG: TFC 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,215 - DEBUG - DEBUG: TYL 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,216 - DEBUG - DEBUG: TSN 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,217 - DEBUG - DEBUG: USB 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,218 - DEBUG - DEBUG: UBER 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,219 - DEBUG - DEBUG: UDR 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,220 - DEBUG - DEBUG: ULTA 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,221 - DEBUG - DEBUG: UNP 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,222 - DEBUG - DEBUG: UAL 'Close' is Series of shape (1,)
2025-01-09 02:20:26,223 - DEBUG - DEBUG: UPS 'Close' is Series of shape (1,)
2025-01-09 02:20:26,225 - DEBUG - DEBUG: URI 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,226 - DEBUG - DEBUG: UNH 'Close' is Series of shape (1,)
2025-01-09 02:20:26,227 - DEBUG - DEBUG: UHS 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,228 - DEBUG - DEBUG: VLO 'Close' is Series of shape (1,)
2025-01-09 02:20:26,229 - DEBUG - DEBUG: VTR 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,230 - DEBUG - DEBUG: VLTO 'Close' is Series of shape (318,)
2025-01-09 02:20:26,230 - DEBUG - DEBUG: VRSN 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,231 - DEBUG - DEBUG: VRSK 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,232 - DEBUG - DEBUG: VZ 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,233 - DEBUG - DEBUG: VRTX 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,234 - DEBUG - DEBUG: VTRS 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,236 - DEBUG - DEBUG: VICI 'Close' is Series of shape (1,)
2025-01-09 02:20:26,236 - DEBUG - DEBUG: V 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,237 - DEBUG - DEBUG: VST 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,238 - DEBUG - DEBUG: VMC 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,240 - DEBUG - DEBUG: WRB 'Close' is Series of shape (1,)
2025-01-09 02:20:26,241 - DEBUG - DEBUG: GWW 'Close' is Series of shape (1,)
2025-01-09 02:20:26,242 - DEBUG - DEBUG: WAB 'Close' is Series of shape (1,)
2025-01-09 02:20:26,243 - DEBUG - DEBUG: WBA 'Close' is Series of shape (1,)
2025-01-09 02:20:26,244 - DEBUG - DEBUG: WMT 'Close' is Series of shape (1,)
2025-01-09 02:20:26,245 - DEBUG - DEBUG: DIS 'Close' is Series of shape (1,)
2025-01-09 02:20:26,246 - DEBUG - DEBUG: WBD 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,247 - DEBUG - DEBUG: WM 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,248 - DEBUG - DEBUG: WAT 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,249 - DEBUG - DEBUG: WEC 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,250 - DEBUG - DEBUG: WFC 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,252 - DEBUG - DEBUG: WELL 'Close' is Series of shape (1,)
2025-01-09 02:20:26,253 - DEBUG - DEBUG: WST 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,254 - DEBUG - DEBUG: WDC 'Close' is Series of shape (1,)
2025-01-09 02:20:26,255 - DEBUG - DEBUG: WY 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,256 - DEBUG - DEBUG: WMB 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,257 - DEBUG - DEBUG: WTW 'Close' is Series of shape (1,)
2025-01-09 02:20:26,258 - DEBUG - DEBUG: WDAY 'Close' is Series of shape (1,)
2025-01-09 02:20:26,259 - DEBUG - DEBUG: WYNN 'Close' is Series of shape (1,)
2025-01-09 02:20:26,260 - DEBUG - DEBUG: XEL 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,261 - DEBUG - DEBUG: XYL 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,263 - DEBUG - DEBUG: YUM 'Close' is Series of shape (1264,)
2025-01-09 02:20:26,264 - DEBUG - DEBUG: ZBRA 'Close' is Series of shape (1,)
2025-01-09 02:20:26,265 - DEBUG - DEBUG: ZBH 'Close' is Series of shape (1,)
2025-01-09 02:20:26,266 - DEBUG - DEBUG: ZTS 'Close' is Series of shape (1,)
2025-01-09 02:20:34,303 - DEBUG - Loaded backend Agg version v2.2.
2025-01-09 02:20:34,306 - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-01-09 02:20:34,306 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,306 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-01-09 02:20:34,306 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,306 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,306 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,306 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,306 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-01-09 02:20:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-01-09 02:20:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-01-09 02:20:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamCLM-Book.ttf', name='Miriam CLM', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:20:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:20:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:20:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2025-01-09 02:20:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:20:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msuighur.ttf', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuehlCLM-BoldOblique.ttf', name='Frank Ruehl CLM', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:20:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-LightIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:20:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawb.ttf', name='Glasgow', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-It.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 0.5349999999999999
2025-01-09 02:20:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:20:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:20:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Medium.ttf', name='Source Code Pro', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NachlieliCLM-Bold.otf', name='Nachlieli CLM', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:20:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Scheherazade-Bold.ttf', name='Scheherazade', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidLibre-Regular.ttf', name='David Libre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RBI_G.ttf', name='Linux Libertine G', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifLao-Bold.ttf', name='Noto Serif Lao', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trado.ttf', name='Traditional Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2025-01-09 02:20:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawli.ttf', name='Glasgow', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:20:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-09 02:20:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamMonoCLM-Bold.ttf', name='Miriam Mono CLM', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-It.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamLibre-Regular.otf', name='Miriam Libre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Regular.ttf', name='Source Code Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasB.ttf', name='Gentium Basic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-01-09 02:20:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:20:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamMonoCLM-BoldOblique.ttf', name='Miriam Mono CLM', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuhlHofshi-Bold.otf', name='Frank Ruhl Hofshi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 0.25
2025-01-09 02:20:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tradbdo.ttf', name='Traditional Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:20:34,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:20:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2025-01-09 02:20:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RB_G.ttf', name='Linux Libertine G', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-BlackIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:20:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawl.ttf', name='Glasgow', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansGeorgian-Bold.ttf', name='Noto Sans Georgian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinBiolinum_R_G.ttf', name='Linux Biolinum G', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\toleb.ttf', name='Toledo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-01-09 02:20:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:20:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Regular.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2025-01-09 02:20:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Semibold.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:20:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:20:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-01-09 02:20:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Amiri-Regular.ttf', name='Amiri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 1.25
2025-01-09 02:20:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:20:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-ExtraLightIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=200, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:20:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:20:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansLao-Regular.ttf', name='Noto Sans Lao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Alef-Bold.ttf', name='Alef', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansHebrew-Regular.ttf', name='Noto Sans Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:20:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:20:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tolel.ttf', name='Toledo', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\toleli.ttf', name='Toledo', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:20:34,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RZ_G.ttf', name='Linux Libertine G', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:20:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoNaskhArabic-Bold.ttf', name='Noto Naskh Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpbdo.ttf', name='Simplified Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Amiri-BoldSlanted.ttf', name='Amiri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasBI.ttf', name='Gentium Basic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:20:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:20:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-01-09 02:20:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-BoldIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpfxo.ttf', name='Simplified Arabic Fixed', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Microsoft\\Windows\\Fonts\\OpenDyslexic3-Regular.ttf', name='OpenDyslexic3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamCLM-Bold.ttf', name='Miriam CLM', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Condensed.ttf', name='Noto Sans', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:20:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RI_G.ttf', name='Linux Libertine G', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-ExtraLightIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=200, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:20:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Light.ttf', name='Noto Serif', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-01-09 02:20:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Light.ttf', name='Noto Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasR.ttf', name='Gentium Book Basic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-Italic.ttf', name='Caladea', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:20:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinBiolinum_RI_G.ttf', name='Linux Biolinum G', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Regular.ttf', name='Noto Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-CondensedBoldItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-09 02:20:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Bold.ttf', name='Noto Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-01-09 02:20:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tolebi.ttf', name='Toledo', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasI.ttf', name='Gentium Book Basic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-Regular.ttf', name='Carlito', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Black.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:20:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:20:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-LightItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:20:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-01-09 02:20:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasB.ttf', name='Gentium Book Basic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansGeorgian-Regular.ttf', name='Noto Sans Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Regular.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifGeorgian-Bold.ttf', name='Noto Serif Georgian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_R_G.ttf', name='Linux Libertine G', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seagi.ttf', name='Seagull', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-09 02:20:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tolehi.ttf', name='Toledo', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:20:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 1.535
2025-01-09 02:20:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawh.ttf', name='Glasgow', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:20:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawhi.ttf', name='Glasgow', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:20:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seag.ttf', name='Seagull', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arabtype.ttf', name='Arabic Typesetting', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:20:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:20:34,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoNaskhArabicUI-Bold.ttf', name='Noto Naskh Arabic UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:20:34,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Semibold.ttf', name='Source Code Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:20:34,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-CondensedItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-09 02:20:34,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:20:34,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NachlieliCLM-Light.otf', name='Nachlieli CLM', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micrbi.ttf', name='MicroSquare', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-CondensedBold.ttf', name='Noto Sans', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:20:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Bold.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-Bold.ttf', name='Caladea', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UrdType.ttf', name='Urdu Typesetting', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-ExtraLight.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 0.24
2025-01-09 02:20:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RZI_G.ttf', name='Linux Libertine G', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:20:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoKufiArabic-Bold.ttf', name='Noto Kufi Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawbi.ttf', name='Glasgow', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidCLM-MediumItalic.ttf', name='David CLM', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:20:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-01-09 02:20:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tole.ttf', name='Toledo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Bold.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifArmenian-Regular.ttf', name='Noto Serif Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-01-09 02:20:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:20:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifHebrew-Regular.ttf', name='Noto Serif Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-MediumIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:20:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamLibre-Bold.otf', name='Miriam Libre', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-01-09 02:20:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AmiriQuran.ttf', name='Amiri Quran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArabic-Regular.ttf', name='Noto Sans Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasI.ttf', name='Gentium Basic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Black.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:20:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-BoldIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaI.ttc', name='Sitka Small', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-01-09 02:20:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidCLM-BoldItalic.ttf', name='David CLM', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidCLM-Bold.ttf', name='David CLM', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:20:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\andlso.ttf', name='Andalus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArabicUI-Regular.ttf', name='Noto Sans Arabic UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Light.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-Italic.ttf', name='Carlito', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-BoldItalic.ttf', name='Caladea', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-It.ttf', name='Source Code Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ReemKufi-Regular.ttf', name='Reem Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:20:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UrdTypeb.ttf', name='Urdu Typesetting', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-BoldItalic.ttf', name='Carlito', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-BoldItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msuighub.ttf', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Amiri-Bold.ttf', name='Amiri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NachlieliCLM-BoldOblique.otf', name='Nachlieli CLM', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:20:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuhlHofshi-Regular.otf', name='Frank Ruhl Hofshi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaZ.ttc', name='Sitka Small', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-01-09 02:20:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-ExtraLightIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=200, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:20:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidLibre-Bold.ttf', name='David Libre', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-SemiboldIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:20:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROGFonts-Regular.otf', name='ROG Fonts', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:20:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaB.ttc', name='Sitka Small', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifLao-Regular.ttf', name='Noto Serif Lao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Bold.ttf', name='Noto Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Condensed.ttf', name='Noto Serif', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:20:34,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Bold.ttf', name='Source Code Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-01-09 02:20:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoKufiArabic-Regular.ttf', name='Noto Kufi Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifArmenian-Bold.ttf', name='Noto Serif Armenian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\aldhabi.ttf', name='Aldhabi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Rubik-Bold.ttf', name='Rubik', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArmenian-Regular.ttf', name='Noto Sans Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-ExtraLight.ttf', name='Source Code Pro', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:20:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArabic-Bold.ttf', name='Noto Sans Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-01-09 02:20:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-LightItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:20:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Regular.ttf', name='Noto Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-01-09 02:20:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\toleh.ttf', name='Toledo', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:20:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-ExtraLight.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:20:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micr.ttf', name='MicroSquare', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Black.ttf', name='Source Code Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:20:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Alef-Regular.ttf', name='Alef', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasBI.ttf', name='Gentium Book Basic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-01-09 02:20:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoNaskhArabicUI-Regular.ttf', name='Noto Naskh Arabic UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansLao-Bold.ttf', name='Noto Sans Lao', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-09 02:20:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:20:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArmenian-Bold.ttf', name='Noto Sans Armenian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-01-09 02:20:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-01-09 02:20:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-01-09 02:20:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Amiri-Slanted.ttf', name='Amiri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinBiolinum_RB_G.ttf', name='Linux Biolinum G', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-09 02:20:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_DR_G.ttf', name='Linux Libertine Display G', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-CondensedItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-09 02:20:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-CondensedBold.ttf', name='Noto Serif', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:20:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuehlCLM-MediumOblique.ttf', name='Frank Ruehl CLM', style='oblique', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:20:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansHebrew-Bold.ttf', name='Noto Sans Hebrew', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seagb.ttf', name='Seagull', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-BlackIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:20:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:20:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\EmojiOneColor-SVGinOT.ttf', name='EmojiOne Color', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:20:34,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-LightIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:20:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-CondensedBoldItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-09 02:20:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-01-09 02:20:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpo.ttf', name='Simplified Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-Regular.ttf', name='Caladea', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamMonoCLM-Book.ttf', name='Miriam Mono CLM', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Rubik-BoldItalic.ttf', name='Rubik', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArabicUI-Bold.ttf', name='Noto Sans Arabic UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-SemiboldIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:20:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\majallab.ttf', name='Sakkal Majalla', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Italic.ttf', name='Noto Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seagbi.ttf', name='Seagull', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Light.ttf', name='Source Code Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:20:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasR.ttf', name='Gentium Basic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-01-09 02:20:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoNaskhArabic-Regular.ttf', name='Noto Naskh Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Semibold.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:20:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-Bold.ttf', name='Carlito', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\majalla.ttf', name='Sakkal Majalla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,335 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:20:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micri.ttf', name='MicroSquare', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifHebrew-Bold.ttf', name='Noto Serif Hebrew', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-BoldItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamMonoCLM-BookOblique.ttf', name='Miriam Mono CLM', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NachlieliCLM-LightOblique.otf', name='Nachlieli CLM', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:20:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-BlackIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:20:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:20:34,336 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Light.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,337 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-09 02:20:34,337 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,337 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,337 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,337 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,337 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,337 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,337 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,337 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,337 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,337 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,337 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:20:34,337 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,337 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,337 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,337 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,337 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuehlCLM-Bold.ttf', name='Frank Ruehl CLM', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,337 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:20:34,338 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:20:34,338 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Sitka.ttc', name='Sitka Small', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,338 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawi.ttf', name='Glasgow', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,338 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidCLM-Medium.ttf', name='David CLM', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,338 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,338 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,338 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,338 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,338 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-BoldIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,338 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,338 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,338 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-09 02:20:34,338 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,338 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,338 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-LightIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:20:34,338 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifGeorgian-Regular.ttf', name='Noto Serif Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,338 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,338 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,339 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,339 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micrb.ttf', name='MicroSquare', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,339 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,339 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-SemiboldIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:20:34,339 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,339 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,339 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Rubik-Regular.ttf', name='Rubik', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,339 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,339 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Rubik-Italic.ttf', name='Rubik', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,339 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-01-09 02:20:34,339 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,339 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Scheherazade-Regular.ttf', name='Scheherazade', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,339 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuehlCLM-Medium.ttf', name='Frank Ruehl CLM', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,339 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,339 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tolei.ttf', name='Toledo', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,339 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glaw.ttf', name='Glasgow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,339 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:20:34,339 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-ExtraLight.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:20:34,339 - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-01-09 02:20:34,360 - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2025-01-09 02:20:34,360 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,361 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-01-09 02:20:34,361 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,361 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,361 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,361 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,361 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,361 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-01-09 02:20:34,361 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,361 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,361 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,361 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,361 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,361 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,361 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,361 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,361 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-01-09 02:20:34,361 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,361 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,361 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-01-09 02:20:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamCLM-Book.ttf', name='Miriam CLM', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,362 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:20:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:20:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:20:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2025-01-09 02:20:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:20:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msuighur.ttf', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuehlCLM-BoldOblique.ttf', name='Frank Ruehl CLM', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:20:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-LightIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:20:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawb.ttf', name='Glasgow', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-It.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 0.5349999999999999
2025-01-09 02:20:34,363 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:20:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:20:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Medium.ttf', name='Source Code Pro', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NachlieliCLM-Bold.otf', name='Nachlieli CLM', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:20:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Scheherazade-Bold.ttf', name='Scheherazade', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidLibre-Regular.ttf', name='David Libre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RBI_G.ttf', name='Linux Libertine G', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifLao-Bold.ttf', name='Noto Serif Lao', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trado.ttf', name='Traditional Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2025-01-09 02:20:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,364 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawli.ttf', name='Glasgow', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:20:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-09 02:20:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamMonoCLM-Bold.ttf', name='Miriam Mono CLM', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-It.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamLibre-Regular.otf', name='Miriam Libre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Regular.ttf', name='Source Code Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasB.ttf', name='Gentium Basic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-01-09 02:20:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:20:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamMonoCLM-BoldOblique.ttf', name='Miriam Mono CLM', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,365 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuhlHofshi-Bold.otf', name='Frank Ruhl Hofshi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 0.25
2025-01-09 02:20:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tradbdo.ttf', name='Traditional Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:20:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:20:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2025-01-09 02:20:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,366 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RB_G.ttf', name='Linux Libertine G', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-BlackIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:20:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawl.ttf', name='Glasgow', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansGeorgian-Bold.ttf', name='Noto Sans Georgian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinBiolinum_R_G.ttf', name='Linux Biolinum G', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\toleb.ttf', name='Toledo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-01-09 02:20:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:20:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Regular.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2025-01-09 02:20:34,367 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Semibold.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:20:34,368 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:20:34,368 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-01-09 02:20:34,368 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Amiri-Regular.ttf', name='Amiri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,368 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 1.25
2025-01-09 02:20:34,368 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,368 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,368 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,368 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,368 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:20:34,369 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,369 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-ExtraLightIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=200, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:20:34,369 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:20:34,369 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,369 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,369 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansLao-Regular.ttf', name='Noto Sans Lao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,369 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Alef-Bold.ttf', name='Alef', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,369 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansHebrew-Regular.ttf', name='Noto Sans Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,369 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,369 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:20:34,369 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,369 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:20:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tolel.ttf', name='Toledo', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\toleli.ttf', name='Toledo', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:20:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RZ_G.ttf', name='Linux Libertine G', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:20:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoNaskhArabic-Bold.ttf', name='Noto Naskh Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpbdo.ttf', name='Simplified Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Amiri-BoldSlanted.ttf', name='Amiri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasBI.ttf', name='Gentium Basic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:20:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:20:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-01-09 02:20:34,370 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-BoldIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpfxo.ttf', name='Simplified Arabic Fixed', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Microsoft\\Windows\\Fonts\\OpenDyslexic3-Regular.ttf', name='OpenDyslexic3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamCLM-Bold.ttf', name='Miriam CLM', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Condensed.ttf', name='Noto Sans', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:20:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RI_G.ttf', name='Linux Libertine G', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-ExtraLightIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=200, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:20:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Light.ttf', name='Noto Serif', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-01-09 02:20:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Light.ttf', name='Noto Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,371 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasR.ttf', name='Gentium Book Basic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-Italic.ttf', name='Caladea', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:20:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinBiolinum_RI_G.ttf', name='Linux Biolinum G', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Regular.ttf', name='Noto Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-CondensedBoldItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-09 02:20:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Bold.ttf', name='Noto Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-01-09 02:20:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tolebi.ttf', name='Toledo', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasI.ttf', name='Gentium Book Basic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-Regular.ttf', name='Carlito', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,372 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Black.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:20:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:20:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-LightItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:20:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-01-09 02:20:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasB.ttf', name='Gentium Book Basic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansGeorgian-Regular.ttf', name='Noto Sans Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Regular.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifGeorgian-Bold.ttf', name='Noto Serif Georgian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_R_G.ttf', name='Linux Libertine G', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,373 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seagi.ttf', name='Seagull', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-09 02:20:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tolehi.ttf', name='Toledo', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:20:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 1.535
2025-01-09 02:20:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawh.ttf', name='Glasgow', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:20:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawhi.ttf', name='Glasgow', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:20:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seag.ttf', name='Seagull', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arabtype.ttf', name='Arabic Typesetting', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:20:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,374 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:20:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoNaskhArabicUI-Bold.ttf', name='Noto Naskh Arabic UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:20:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Semibold.ttf', name='Source Code Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:20:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-CondensedItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-09 02:20:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:20:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NachlieliCLM-Light.otf', name='Nachlieli CLM', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micrbi.ttf', name='MicroSquare', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-CondensedBold.ttf', name='Noto Sans', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:20:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,375 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Bold.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-Bold.ttf', name='Caladea', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UrdType.ttf', name='Urdu Typesetting', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-ExtraLight.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 0.24
2025-01-09 02:20:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RZI_G.ttf', name='Linux Libertine G', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:20:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoKufiArabic-Bold.ttf', name='Noto Kufi Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawbi.ttf', name='Glasgow', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidCLM-MediumItalic.ttf', name='David CLM', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:20:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-01-09 02:20:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tole.ttf', name='Toledo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Bold.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifArmenian-Regular.ttf', name='Noto Serif Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,376 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-01-09 02:20:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:20:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifHebrew-Regular.ttf', name='Noto Serif Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-MediumIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:20:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamLibre-Bold.otf', name='Miriam Libre', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-01-09 02:20:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AmiriQuran.ttf', name='Amiri Quran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,377 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArabic-Regular.ttf', name='Noto Sans Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasI.ttf', name='Gentium Basic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Black.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:20:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-BoldIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaI.ttc', name='Sitka Small', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-01-09 02:20:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidCLM-BoldItalic.ttf', name='David CLM', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidCLM-Bold.ttf', name='David CLM', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:20:34,378 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\andlso.ttf', name='Andalus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArabicUI-Regular.ttf', name='Noto Sans Arabic UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Light.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-Italic.ttf', name='Carlito', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-BoldItalic.ttf', name='Caladea', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,379 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-It.ttf', name='Source Code Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ReemKufi-Regular.ttf', name='Reem Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:20:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UrdTypeb.ttf', name='Urdu Typesetting', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-BoldItalic.ttf', name='Carlito', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-BoldItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msuighub.ttf', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Amiri-Bold.ttf', name='Amiri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,380 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NachlieliCLM-BoldOblique.otf', name='Nachlieli CLM', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:20:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuhlHofshi-Regular.otf', name='Frank Ruhl Hofshi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaZ.ttc', name='Sitka Small', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-01-09 02:20:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-ExtraLightIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=200, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:20:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidLibre-Bold.ttf', name='David Libre', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-SemiboldIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:20:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROGFonts-Regular.otf', name='ROG Fonts', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:20:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaB.ttc', name='Sitka Small', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifLao-Regular.ttf', name='Noto Serif Lao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Bold.ttf', name='Noto Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Condensed.ttf', name='Noto Serif', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:20:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Bold.ttf', name='Source Code Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,381 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-01-09 02:20:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoKufiArabic-Regular.ttf', name='Noto Kufi Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifArmenian-Bold.ttf', name='Noto Serif Armenian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\aldhabi.ttf', name='Aldhabi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Rubik-Bold.ttf', name='Rubik', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArmenian-Regular.ttf', name='Noto Sans Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-ExtraLight.ttf', name='Source Code Pro', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:20:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArabic-Bold.ttf', name='Noto Sans Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-01-09 02:20:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-LightItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:20:34,382 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Regular.ttf', name='Noto Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-01-09 02:20:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\toleh.ttf', name='Toledo', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:20:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-ExtraLight.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:20:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micr.ttf', name='MicroSquare', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Black.ttf', name='Source Code Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:20:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Alef-Regular.ttf', name='Alef', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasBI.ttf', name='Gentium Book Basic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-01-09 02:20:34,383 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoNaskhArabicUI-Regular.ttf', name='Noto Naskh Arabic UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansLao-Bold.ttf', name='Noto Sans Lao', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-09 02:20:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:20:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArmenian-Bold.ttf', name='Noto Sans Armenian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-01-09 02:20:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-01-09 02:20:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-01-09 02:20:34,384 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Amiri-Slanted.ttf', name='Amiri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinBiolinum_RB_G.ttf', name='Linux Biolinum G', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-09 02:20:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_DR_G.ttf', name='Linux Libertine Display G', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-CondensedItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-09 02:20:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-CondensedBold.ttf', name='Noto Serif', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:20:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuehlCLM-MediumOblique.ttf', name='Frank Ruehl CLM', style='oblique', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:20:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansHebrew-Bold.ttf', name='Noto Sans Hebrew', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seagb.ttf', name='Seagull', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-BlackIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:20:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:20:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\EmojiOneColor-SVGinOT.ttf', name='EmojiOne Color', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:20:34,385 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-LightIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:20:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-CondensedBoldItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-09 02:20:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-01-09 02:20:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpo.ttf', name='Simplified Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-Regular.ttf', name='Caladea', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamMonoCLM-Book.ttf', name='Miriam Mono CLM', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Rubik-BoldItalic.ttf', name='Rubik', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArabicUI-Bold.ttf', name='Noto Sans Arabic UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,386 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-SemiboldIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:20:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\majallab.ttf', name='Sakkal Majalla', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Italic.ttf', name='Noto Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seagbi.ttf', name='Seagull', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Light.ttf', name='Source Code Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:20:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasR.ttf', name='Gentium Basic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-01-09 02:20:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoNaskhArabic-Regular.ttf', name='Noto Naskh Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Semibold.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:20:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-Bold.ttf', name='Carlito', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\majalla.ttf', name='Sakkal Majalla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:20:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micri.ttf', name='MicroSquare', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifHebrew-Bold.ttf', name='Noto Serif Hebrew', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,387 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-BoldItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamMonoCLM-BookOblique.ttf', name='Miriam Mono CLM', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NachlieliCLM-LightOblique.otf', name='Nachlieli CLM', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:20:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-BlackIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:20:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:20:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Light.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-09 02:20:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,388 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:20:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuehlCLM-Bold.ttf', name='Frank Ruehl CLM', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:20:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:20:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Sitka.ttc', name='Sitka Small', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawi.ttf', name='Glasgow', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidCLM-Medium.ttf', name='David CLM', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-BoldIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-09 02:20:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,389 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-LightIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:20:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifGeorgian-Regular.ttf', name='Noto Serif Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micrb.ttf', name='MicroSquare', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-SemiboldIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:20:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:20:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Rubik-Regular.ttf', name='Rubik', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Rubik-Italic.ttf', name='Rubik', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-01-09 02:20:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Scheherazade-Regular.ttf', name='Scheherazade', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuehlCLM-Medium.ttf', name='Frank Ruehl CLM', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:20:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:20:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tolei.ttf', name='Toledo', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:20:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glaw.ttf', name='Glasgow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:20:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:20:34,390 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-ExtraLight.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:20:34,391 - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-01-09 02:25:50,391 - DEBUG - Starting new HTTPS connection (1): en.wikipedia.org:443
2025-01-09 02:25:50,777 - DEBUG - https://en.wikipedia.org:443 "GET /wiki/List_of_S%26P_500_companies HTTP/1.1" 200 100530
2025-01-09 02:25:51,907 - INFO - Database covers the entire date range; skipping Yahoo Finance fetch.
2025-01-09 02:26:01,033 - DEBUG - DEBUG: MMM 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,035 - DEBUG - DEBUG: AOS 'Close' is Series of shape (1,)
2025-01-09 02:26:01,036 - DEBUG - DEBUG: ABT 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,037 - DEBUG - DEBUG: ABBV 'Close' is Series of shape (1,)
2025-01-09 02:26:01,038 - DEBUG - DEBUG: ACN 'Close' is Series of shape (1,)
2025-01-09 02:26:01,040 - DEBUG - DEBUG: ADBE 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,041 - DEBUG - DEBUG: AMD 'Close' is Series of shape (1,)
2025-01-09 02:26:01,042 - DEBUG - DEBUG: AES 'Close' is Series of shape (1,)
2025-01-09 02:26:01,043 - DEBUG - DEBUG: AFL 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,044 - DEBUG - DEBUG: A 'Close' is Series of shape (1,)
2025-01-09 02:26:01,045 - DEBUG - DEBUG: APD 'Close' is Series of shape (1,)
2025-01-09 02:26:01,046 - DEBUG - DEBUG: ABNB 'Close' is Series of shape (1025,)
2025-01-09 02:26:01,047 - DEBUG - DEBUG: AKAM 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,048 - DEBUG - DEBUG: ALB 'Close' is Series of shape (1,)
2025-01-09 02:26:01,049 - DEBUG - DEBUG: ARE 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,050 - DEBUG - DEBUG: ALGN 'Close' is Series of shape (1,)
2025-01-09 02:26:01,051 - DEBUG - DEBUG: ALLE 'Close' is Series of shape (1,)
2025-01-09 02:26:01,052 - DEBUG - DEBUG: LNT 'Close' is Series of shape (1,)
2025-01-09 02:26:01,053 - DEBUG - DEBUG: ALL 'Close' is Series of shape (1,)
2025-01-09 02:26:01,054 - DEBUG - DEBUG: GOOGL 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,055 - DEBUG - DEBUG: GOOG 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,057 - DEBUG - DEBUG: MO 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,058 - DEBUG - DEBUG: AMZN 'Close' is Series of shape (1,)
2025-01-09 02:26:01,059 - DEBUG - DEBUG: AMCR 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,060 - DEBUG - DEBUG: AEE 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,061 - DEBUG - DEBUG: AEP 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,062 - DEBUG - DEBUG: AXP 'Close' is Series of shape (1,)
2025-01-09 02:26:01,063 - DEBUG - DEBUG: AIG 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,064 - DEBUG - DEBUG: AMT 'Close' is Series of shape (1,)
2025-01-09 02:26:01,065 - DEBUG - DEBUG: AWK 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,066 - DEBUG - DEBUG: AMP 'Close' is Series of shape (1,)
2025-01-09 02:26:01,067 - DEBUG - DEBUG: AME 'Close' is Series of shape (1,)
2025-01-09 02:26:01,068 - DEBUG - DEBUG: AMGN 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,069 - DEBUG - DEBUG: APH 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,070 - DEBUG - DEBUG: ADI 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,071 - DEBUG - DEBUG: ANSS 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,072 - DEBUG - DEBUG: AON 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,073 - DEBUG - DEBUG: APA 'Close' is Series of shape (1,)
2025-01-09 02:26:01,074 - DEBUG - DEBUG: APO 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,075 - DEBUG - DEBUG: AAPL 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,076 - DEBUG - DEBUG: AMAT 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,077 - DEBUG - DEBUG: APTV 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,078 - DEBUG - DEBUG: ACGL 'Close' is Series of shape (1,)
2025-01-09 02:26:01,079 - DEBUG - DEBUG: ADM 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,080 - DEBUG - DEBUG: ANET 'Close' is Series of shape (1,)
2025-01-09 02:26:01,081 - DEBUG - DEBUG: AJG 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,081 - DEBUG - DEBUG: AIZ 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,082 - DEBUG - DEBUG: T 'Close' is Series of shape (1,)
2025-01-09 02:26:01,083 - DEBUG - DEBUG: ATO 'Close' is Series of shape (1,)
2025-01-09 02:26:01,084 - DEBUG - DEBUG: ADSK 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,085 - DEBUG - DEBUG: ADP 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,086 - DEBUG - DEBUG: AZO 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,087 - DEBUG - DEBUG: AVB 'Close' is Series of shape (1,)
2025-01-09 02:26:01,088 - DEBUG - DEBUG: AVY 'Close' is Series of shape (1,)
2025-01-09 02:26:01,089 - DEBUG - DEBUG: AXON 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,090 - DEBUG - DEBUG: BKR 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,091 - DEBUG - DEBUG: BALL 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,092 - DEBUG - DEBUG: BAC 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,093 - DEBUG - DEBUG: BAX 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,094 - DEBUG - DEBUG: BDX 'Close' is Series of shape (1,)
2025-01-09 02:26:01,094 - DEBUG - DEBUG: BRK-B 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,095 - DEBUG - DEBUG: BBY 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,096 - DEBUG - DEBUG: TECH 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,097 - DEBUG - DEBUG: BIIB 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,098 - DEBUG - DEBUG: BLK 'Close' is Series of shape (1,)
2025-01-09 02:26:01,099 - DEBUG - DEBUG: BX 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,100 - DEBUG - DEBUG: BK 'Close' is Series of shape (1,)
2025-01-09 02:26:01,102 - DEBUG - DEBUG: BA 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,103 - DEBUG - DEBUG: BKNG 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,104 - DEBUG - DEBUG: BWA 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,105 - DEBUG - DEBUG: BSX 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,106 - DEBUG - DEBUG: BMY 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,107 - DEBUG - DEBUG: AVGO 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,108 - DEBUG - DEBUG: BR 'Close' is Series of shape (1,)
2025-01-09 02:26:01,109 - DEBUG - DEBUG: BRO 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,110 - DEBUG - DEBUG: BF-B 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,111 - DEBUG - DEBUG: BLDR 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,112 - DEBUG - DEBUG: BG 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,113 - DEBUG - DEBUG: BXP 'Close' is Series of shape (1,)
2025-01-09 02:26:01,114 - DEBUG - DEBUG: CHRW 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,116 - DEBUG - DEBUG: CDNS 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,117 - DEBUG - DEBUG: CZR 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,118 - DEBUG - DEBUG: CPT 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,118 - DEBUG - DEBUG: CPB 'Close' is Series of shape (1,)
2025-01-09 02:26:01,119 - DEBUG - DEBUG: COF 'Close' is Series of shape (1,)
2025-01-09 02:26:01,120 - DEBUG - DEBUG: CAH 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,121 - DEBUG - DEBUG: KMX 'Close' is Series of shape (1,)
2025-01-09 02:26:01,122 - DEBUG - DEBUG: CCL 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,123 - DEBUG - DEBUG: CARR 'Close' is Series of shape (1210,)
2025-01-09 02:26:01,124 - DEBUG - DEBUG: CAT 'Close' is Series of shape (1,)
2025-01-09 02:26:01,125 - DEBUG - DEBUG: CBOE 'Close' is Series of shape (1,)
2025-01-09 02:26:01,126 - DEBUG - DEBUG: CBRE 'Close' is Series of shape (1,)
2025-01-09 02:26:01,127 - DEBUG - DEBUG: CDW 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,128 - DEBUG - DEBUG: CE 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,129 - DEBUG - DEBUG: COR 'Close' is Series of shape (1,)
2025-01-09 02:26:01,130 - DEBUG - DEBUG: CNC 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,131 - DEBUG - DEBUG: CNP 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,132 - DEBUG - DEBUG: CF 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,133 - DEBUG - DEBUG: CRL 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,134 - DEBUG - DEBUG: SCHW 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,135 - DEBUG - DEBUG: CHTR 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,136 - DEBUG - DEBUG: CVX 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,137 - DEBUG - DEBUG: CMG 'Close' is Series of shape (1,)
2025-01-09 02:26:01,138 - DEBUG - DEBUG: CB 'Close' is Series of shape (1,)
2025-01-09 02:26:01,139 - DEBUG - DEBUG: CHD 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,140 - DEBUG - DEBUG: CI 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,141 - DEBUG - DEBUG: CINF 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,142 - DEBUG - DEBUG: CTAS 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,143 - DEBUG - DEBUG: CSCO 'Close' is Series of shape (1,)
2025-01-09 02:26:01,144 - DEBUG - DEBUG: C 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,145 - DEBUG - DEBUG: CFG 'Close' is Series of shape (1,)
2025-01-09 02:26:01,146 - DEBUG - DEBUG: CLX 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,147 - DEBUG - DEBUG: CME 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,148 - DEBUG - DEBUG: CMS 'Close' is Series of shape (1,)
2025-01-09 02:26:01,149 - DEBUG - DEBUG: KO 'Close' is Series of shape (1,)
2025-01-09 02:26:01,150 - DEBUG - DEBUG: CTSH 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,151 - DEBUG - DEBUG: CL 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,152 - DEBUG - DEBUG: CMCSA 'Close' is Series of shape (1,)
2025-01-09 02:26:01,153 - DEBUG - DEBUG: CAG 'Close' is Series of shape (1,)
2025-01-09 02:26:01,154 - DEBUG - DEBUG: COP 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,155 - DEBUG - DEBUG: ED 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,156 - DEBUG - DEBUG: STZ 'Close' is Series of shape (1,)
2025-01-09 02:26:01,157 - DEBUG - DEBUG: CEG 'Close' is Series of shape (747,)
2025-01-09 02:26:01,158 - DEBUG - DEBUG: COO 'Close' is Series of shape (1,)
2025-01-09 02:26:01,159 - DEBUG - DEBUG: CPRT 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,160 - DEBUG - DEBUG: GLW 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,161 - DEBUG - DEBUG: CPAY 'Close' is Series of shape (1,)
2025-01-09 02:26:01,162 - DEBUG - DEBUG: CTVA 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,163 - DEBUG - DEBUG: CSGP 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,164 - DEBUG - DEBUG: COST 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,165 - DEBUG - DEBUG: CTRA 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,166 - DEBUG - DEBUG: CRWD 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,167 - DEBUG - DEBUG: CCI 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,168 - DEBUG - DEBUG: CSX 'Close' is Series of shape (1,)
2025-01-09 02:26:01,169 - DEBUG - DEBUG: CMI 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,170 - DEBUG - DEBUG: CVS 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,171 - DEBUG - DEBUG: DHR 'Close' is Series of shape (1,)
2025-01-09 02:26:01,172 - DEBUG - DEBUG: DRI 'Close' is Series of shape (1,)
2025-01-09 02:26:01,173 - DEBUG - DEBUG: DVA 'Close' is Series of shape (1,)
2025-01-09 02:26:01,174 - DEBUG - DEBUG: DAY 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,175 - DEBUG - DEBUG: DECK 'Close' is Series of shape (1,)
2025-01-09 02:26:01,176 - DEBUG - DEBUG: DE 'Close' is Series of shape (1,)
2025-01-09 02:26:01,177 - DEBUG - DEBUG: DELL 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,178 - DEBUG - DEBUG: DAL 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,179 - DEBUG - DEBUG: DVN 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,180 - DEBUG - DEBUG: DXCM 'Close' is Series of shape (1,)
2025-01-09 02:26:01,181 - DEBUG - DEBUG: FANG 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,182 - DEBUG - DEBUG: DLR 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,183 - DEBUG - DEBUG: DFS 'Close' is Series of shape (1,)
2025-01-09 02:26:01,184 - DEBUG - DEBUG: DG 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,185 - DEBUG - DEBUG: DLTR 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,186 - DEBUG - DEBUG: D 'Close' is Series of shape (1,)
2025-01-09 02:26:01,187 - DEBUG - DEBUG: DPZ 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,188 - DEBUG - DEBUG: DOV 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,189 - DEBUG - DEBUG: DOW 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,190 - DEBUG - DEBUG: DHI 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,191 - DEBUG - DEBUG: DTE 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,192 - DEBUG - DEBUG: DUK 'Close' is Series of shape (1,)
2025-01-09 02:26:01,193 - DEBUG - DEBUG: DD 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,194 - DEBUG - DEBUG: EMN 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,196 - DEBUG - DEBUG: ETN 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,197 - DEBUG - DEBUG: EBAY 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,198 - DEBUG - DEBUG: ECL 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,199 - DEBUG - DEBUG: EIX 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,200 - DEBUG - DEBUG: EW 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,201 - DEBUG - DEBUG: EA 'Close' is Series of shape (1,)
2025-01-09 02:26:01,202 - DEBUG - DEBUG: ELV 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,203 - DEBUG - DEBUG: EMR 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,204 - DEBUG - DEBUG: ENPH 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,205 - DEBUG - DEBUG: ETR 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,206 - DEBUG - DEBUG: EOG 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,207 - DEBUG - DEBUG: EPAM 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,208 - DEBUG - DEBUG: EQT 'Close' is Series of shape (1,)
2025-01-09 02:26:01,209 - DEBUG - DEBUG: EFX 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,210 - DEBUG - DEBUG: EQIX 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,211 - DEBUG - DEBUG: EQR 'Close' is Series of shape (1,)
2025-01-09 02:26:01,212 - DEBUG - DEBUG: ERIE 'Close' is Series of shape (1,)
2025-01-09 02:26:01,213 - DEBUG - DEBUG: ESS 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,214 - DEBUG - DEBUG: EL 'Close' is Series of shape (1,)
2025-01-09 02:26:01,215 - DEBUG - DEBUG: EG 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,216 - DEBUG - DEBUG: EVRG 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,217 - DEBUG - DEBUG: ES 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,218 - DEBUG - DEBUG: EXC 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,219 - DEBUG - DEBUG: EXPE 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,220 - DEBUG - DEBUG: EXPD 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,221 - DEBUG - DEBUG: EXR 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,222 - DEBUG - DEBUG: XOM 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,223 - DEBUG - DEBUG: FFIV 'Close' is Series of shape (1,)
2025-01-09 02:26:01,224 - DEBUG - DEBUG: FDS 'Close' is Series of shape (1,)
2025-01-09 02:26:01,225 - DEBUG - DEBUG: FICO 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,226 - DEBUG - DEBUG: FAST 'Close' is Series of shape (1,)
2025-01-09 02:26:01,227 - DEBUG - DEBUG: FRT 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,228 - DEBUG - DEBUG: FDX 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,229 - DEBUG - DEBUG: FIS 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,230 - DEBUG - DEBUG: FITB 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,232 - DEBUG - DEBUG: FSLR 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,233 - DEBUG - DEBUG: FE 'Close' is Series of shape (1,)
2025-01-09 02:26:01,233 - DEBUG - DEBUG: FI 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,235 - DEBUG - DEBUG: FMC 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,236 - DEBUG - DEBUG: F 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,237 - DEBUG - DEBUG: FTNT 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,238 - DEBUG - DEBUG: FTV 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,239 - DEBUG - DEBUG: FOXA 'Close' is Series of shape (1,)
2025-01-09 02:26:01,240 - DEBUG - DEBUG: FOX 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,241 - DEBUG - DEBUG: BEN 'Close' is Series of shape (1,)
2025-01-09 02:26:01,242 - DEBUG - DEBUG: FCX 'Close' is Series of shape (1,)
2025-01-09 02:26:01,243 - DEBUG - DEBUG: GRMN 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,244 - DEBUG - DEBUG: IT 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,245 - DEBUG - DEBUG: GE 'Close' is Series of shape (1,)
2025-01-09 02:26:01,246 - WARNING - Ticker GEHC is missing 'Close' column. Skipping.
2025-01-09 02:26:01,246 - DEBUG - DEBUG: GEV 'Close' is Series of shape (196,)
2025-01-09 02:26:01,247 - DEBUG - DEBUG: GEN 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,248 - DEBUG - DEBUG: GNRC 'Close' is Series of shape (1,)
2025-01-09 02:26:01,249 - DEBUG - DEBUG: GD 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,250 - DEBUG - DEBUG: GIS 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,251 - DEBUG - DEBUG: GM 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,252 - DEBUG - DEBUG: GPC 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,253 - DEBUG - DEBUG: GILD 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,254 - DEBUG - DEBUG: GPN 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,255 - DEBUG - DEBUG: GL 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,256 - DEBUG - DEBUG: GDDY 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,257 - DEBUG - DEBUG: GS 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,258 - DEBUG - DEBUG: HAL 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,259 - DEBUG - DEBUG: HIG 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,260 - DEBUG - DEBUG: HAS 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,261 - DEBUG - DEBUG: HCA 'Close' is Series of shape (1,)
2025-01-09 02:26:01,262 - DEBUG - DEBUG: DOC 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,263 - DEBUG - DEBUG: HSIC 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,264 - DEBUG - DEBUG: HSY 'Close' is Series of shape (1,)
2025-01-09 02:26:01,265 - DEBUG - DEBUG: HES 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,266 - DEBUG - DEBUG: HPE 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,267 - DEBUG - DEBUG: HLT 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,268 - DEBUG - DEBUG: HOLX 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,269 - DEBUG - DEBUG: HD 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,270 - DEBUG - DEBUG: HON 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,271 - DEBUG - DEBUG: HRL 'Close' is Series of shape (1,)
2025-01-09 02:26:01,272 - DEBUG - DEBUG: HST 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,273 - DEBUG - DEBUG: HWM 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,274 - DEBUG - DEBUG: HPQ 'Close' is Series of shape (1,)
2025-01-09 02:26:01,274 - DEBUG - DEBUG: HUBB 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,275 - DEBUG - DEBUG: HUM 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,276 - DEBUG - DEBUG: HBAN 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,277 - DEBUG - DEBUG: HII 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,278 - DEBUG - DEBUG: IBM 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,279 - DEBUG - DEBUG: IEX 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,280 - DEBUG - DEBUG: IDXX 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,281 - DEBUG - DEBUG: ITW 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,282 - DEBUG - DEBUG: INCY 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,283 - DEBUG - DEBUG: IR 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,284 - DEBUG - DEBUG: PODD 'Close' is Series of shape (1,)
2025-01-09 02:26:01,284 - DEBUG - DEBUG: INTC 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,285 - DEBUG - DEBUG: ICE 'Close' is Series of shape (1,)
2025-01-09 02:26:01,286 - DEBUG - DEBUG: IFF 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,287 - DEBUG - DEBUG: IP 'Close' is Series of shape (1,)
2025-01-09 02:26:01,288 - DEBUG - DEBUG: IPG 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,289 - DEBUG - DEBUG: INTU 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,290 - DEBUG - DEBUG: ISRG 'Close' is Series of shape (1,)
2025-01-09 02:26:01,290 - DEBUG - DEBUG: IVZ 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,291 - DEBUG - DEBUG: INVH 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,292 - DEBUG - DEBUG: IQV 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,293 - DEBUG - DEBUG: IRM 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,294 - DEBUG - DEBUG: JBHT 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,295 - DEBUG - DEBUG: JBL 'Close' is Series of shape (1,)
2025-01-09 02:26:01,296 - DEBUG - DEBUG: JKHY 'Close' is Series of shape (1,)
2025-01-09 02:26:01,296 - DEBUG - DEBUG: J 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,297 - DEBUG - DEBUG: JNJ 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,298 - DEBUG - DEBUG: JCI 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,299 - DEBUG - DEBUG: JPM 'Close' is Series of shape (1,)
2025-01-09 02:26:01,300 - DEBUG - DEBUG: JNPR 'Close' is Series of shape (1,)
2025-01-09 02:26:01,300 - DEBUG - DEBUG: K 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,301 - DEBUG - DEBUG: KVUE 'Close' is Series of shape (423,)
2025-01-09 02:26:01,302 - DEBUG - DEBUG: KDP 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,303 - DEBUG - DEBUG: KEY 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,304 - DEBUG - DEBUG: KEYS 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,305 - DEBUG - DEBUG: KMB 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,306 - DEBUG - DEBUG: KIM 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,307 - DEBUG - DEBUG: KMI 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,309 - DEBUG - DEBUG: KKR 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,310 - DEBUG - DEBUG: KLAC 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,311 - DEBUG - DEBUG: KHC 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,312 - DEBUG - DEBUG: KR 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,313 - DEBUG - DEBUG: LHX 'Close' is Series of shape (1,)
2025-01-09 02:26:01,314 - DEBUG - DEBUG: LH 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,315 - DEBUG - DEBUG: LRCX 'Close' is Series of shape (1,)
2025-01-09 02:26:01,316 - DEBUG - DEBUG: LW 'Close' is Series of shape (1,)
2025-01-09 02:26:01,317 - DEBUG - DEBUG: LVS 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,318 - DEBUG - DEBUG: LDOS 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,319 - DEBUG - DEBUG: LEN 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,320 - DEBUG - DEBUG: LII 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,322 - DEBUG - DEBUG: LLY 'Close' is Series of shape (1,)
2025-01-09 02:26:01,323 - DEBUG - DEBUG: LIN 'Close' is Series of shape (1,)
2025-01-09 02:26:01,324 - DEBUG - DEBUG: LYV 'Close' is Series of shape (1,)
2025-01-09 02:26:01,326 - DEBUG - DEBUG: LKQ 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,328 - DEBUG - DEBUG: LMT 'Close' is Series of shape (1,)
2025-01-09 02:26:01,329 - DEBUG - DEBUG: L 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,330 - DEBUG - DEBUG: LOW 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,331 - DEBUG - DEBUG: LULU 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,332 - DEBUG - DEBUG: LYB 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,333 - DEBUG - DEBUG: MTB 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,334 - DEBUG - DEBUG: MPC 'Close' is Series of shape (1,)
2025-01-09 02:26:01,335 - DEBUG - DEBUG: MKTX 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,336 - DEBUG - DEBUG: MAR 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,337 - DEBUG - DEBUG: MMC 'Close' is Series of shape (1,)
2025-01-09 02:26:01,338 - DEBUG - DEBUG: MLM 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,339 - DEBUG - DEBUG: MAS 'Close' is Series of shape (1,)
2025-01-09 02:26:01,340 - DEBUG - DEBUG: MA 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,341 - DEBUG - DEBUG: MTCH 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,342 - DEBUG - DEBUG: MKC 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,343 - DEBUG - DEBUG: MCD 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,344 - DEBUG - DEBUG: MCK 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,345 - DEBUG - DEBUG: MDT 'Close' is Series of shape (1,)
2025-01-09 02:26:01,346 - DEBUG - DEBUG: MRK 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,347 - DEBUG - DEBUG: META 'Close' is Series of shape (1,)
2025-01-09 02:26:01,348 - DEBUG - DEBUG: MET 'Close' is Series of shape (1,)
2025-01-09 02:26:01,349 - DEBUG - DEBUG: MTD 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,350 - DEBUG - DEBUG: MGM 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,351 - DEBUG - DEBUG: MCHP 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,352 - DEBUG - DEBUG: MU 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,353 - DEBUG - DEBUG: MSFT 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,354 - DEBUG - DEBUG: MAA 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,355 - DEBUG - DEBUG: MRNA 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,356 - DEBUG - DEBUG: MHK 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,357 - DEBUG - DEBUG: MOH 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,358 - DEBUG - DEBUG: TAP 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,359 - DEBUG - DEBUG: MDLZ 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,360 - DEBUG - DEBUG: MPWR 'Close' is Series of shape (1,)
2025-01-09 02:26:01,361 - DEBUG - DEBUG: MNST 'Close' is Series of shape (1,)
2025-01-09 02:26:01,362 - DEBUG - DEBUG: MCO 'Close' is Series of shape (1,)
2025-01-09 02:26:01,363 - DEBUG - DEBUG: MS 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,364 - DEBUG - DEBUG: MOS 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,365 - DEBUG - DEBUG: MSI 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,366 - DEBUG - DEBUG: MSCI 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,367 - DEBUG - DEBUG: NDAQ 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,368 - DEBUG - DEBUG: NTAP 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,369 - DEBUG - DEBUG: NFLX 'Close' is Series of shape (1,)
2025-01-09 02:26:01,370 - DEBUG - DEBUG: NEM 'Close' is Series of shape (1,)
2025-01-09 02:26:01,371 - DEBUG - DEBUG: NWSA 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,372 - DEBUG - DEBUG: NWS 'Close' is Series of shape (1,)
2025-01-09 02:26:01,373 - DEBUG - DEBUG: NEE 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,374 - DEBUG - DEBUG: NKE 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,375 - DEBUG - DEBUG: NI 'Close' is Series of shape (1,)
2025-01-09 02:26:01,376 - DEBUG - DEBUG: NDSN 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,377 - DEBUG - DEBUG: NSC 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,378 - DEBUG - DEBUG: NTRS 'Close' is Series of shape (1,)
2025-01-09 02:26:01,379 - DEBUG - DEBUG: NOC 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,380 - DEBUG - DEBUG: NCLH 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,381 - DEBUG - DEBUG: NRG 'Close' is Series of shape (1,)
2025-01-09 02:26:01,382 - DEBUG - DEBUG: NUE 'Close' is Series of shape (1,)
2025-01-09 02:26:01,383 - DEBUG - DEBUG: NVDA 'Close' is Series of shape (1,)
2025-01-09 02:26:01,384 - DEBUG - DEBUG: NVR 'Close' is Series of shape (1,)
2025-01-09 02:26:01,385 - DEBUG - DEBUG: NXPI 'Close' is Series of shape (1,)
2025-01-09 02:26:01,386 - DEBUG - DEBUG: ORLY 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,387 - DEBUG - DEBUG: OXY 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,388 - DEBUG - DEBUG: ODFL 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,389 - DEBUG - DEBUG: OMC 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,390 - DEBUG - DEBUG: ON 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,391 - DEBUG - DEBUG: OKE 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,392 - DEBUG - DEBUG: ORCL 'Close' is Series of shape (1,)
2025-01-09 02:26:01,393 - DEBUG - DEBUG: OTIS 'Close' is Series of shape (1210,)
2025-01-09 02:26:01,394 - DEBUG - DEBUG: PCAR 'Close' is Series of shape (1,)
2025-01-09 02:26:01,394 - DEBUG - DEBUG: PKG 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,395 - DEBUG - DEBUG: PLTR 'Close' is Series of shape (1075,)
2025-01-09 02:26:01,396 - DEBUG - DEBUG: PANW 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,397 - DEBUG - DEBUG: PARA 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,398 - DEBUG - DEBUG: PH 'Close' is Series of shape (1,)
2025-01-09 02:26:01,399 - DEBUG - DEBUG: PAYX 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,400 - DEBUG - DEBUG: PAYC 'Close' is Series of shape (1,)
2025-01-09 02:26:01,401 - DEBUG - DEBUG: PYPL 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,401 - DEBUG - DEBUG: PNR 'Close' is Series of shape (1,)
2025-01-09 02:26:01,402 - DEBUG - DEBUG: PEP 'Close' is Series of shape (1,)
2025-01-09 02:26:01,403 - DEBUG - DEBUG: PFE 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,404 - DEBUG - DEBUG: PCG 'Close' is Series of shape (1,)
2025-01-09 02:26:01,405 - DEBUG - DEBUG: PM 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,406 - DEBUG - DEBUG: PSX 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,407 - DEBUG - DEBUG: PNW 'Close' is Series of shape (1,)
2025-01-09 02:26:01,407 - DEBUG - DEBUG: PNC 'Close' is Series of shape (1,)
2025-01-09 02:26:01,408 - DEBUG - DEBUG: POOL 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,409 - DEBUG - DEBUG: PPG 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,410 - DEBUG - DEBUG: PPL 'Close' is Series of shape (1,)
2025-01-09 02:26:01,411 - DEBUG - DEBUG: PFG 'Close' is Series of shape (1,)
2025-01-09 02:26:01,411 - DEBUG - DEBUG: PG 'Close' is Series of shape (1,)
2025-01-09 02:26:01,412 - DEBUG - DEBUG: PGR 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,413 - DEBUG - DEBUG: PLD 'Close' is Series of shape (1,)
2025-01-09 02:26:01,414 - DEBUG - DEBUG: PRU 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,415 - DEBUG - DEBUG: PEG 'Close' is Series of shape (1,)
2025-01-09 02:26:01,416 - DEBUG - DEBUG: PTC 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,416 - DEBUG - DEBUG: PSA 'Close' is Series of shape (1,)
2025-01-09 02:26:01,417 - DEBUG - DEBUG: PHM 'Close' is Series of shape (1,)
2025-01-09 02:26:01,418 - DEBUG - DEBUG: PWR 'Close' is Series of shape (1,)
2025-01-09 02:26:01,419 - DEBUG - DEBUG: QCOM 'Close' is Series of shape (1,)
2025-01-09 02:26:01,420 - DEBUG - DEBUG: DGX 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,420 - DEBUG - DEBUG: RL 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,421 - DEBUG - DEBUG: RJF 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,422 - DEBUG - DEBUG: RTX 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,423 - DEBUG - DEBUG: O 'Close' is Series of shape (1,)
2025-01-09 02:26:01,424 - DEBUG - DEBUG: REG 'Close' is Series of shape (1,)
2025-01-09 02:26:01,425 - DEBUG - DEBUG: REGN 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,425 - DEBUG - DEBUG: RF 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,426 - DEBUG - DEBUG: RSG 'Close' is Series of shape (1,)
2025-01-09 02:26:01,427 - DEBUG - DEBUG: RMD 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,428 - DEBUG - DEBUG: RVTY 'Close' is Series of shape (1,)
2025-01-09 02:26:01,429 - DEBUG - DEBUG: ROK 'Close' is Series of shape (1,)
2025-01-09 02:26:01,429 - DEBUG - DEBUG: ROL 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,430 - DEBUG - DEBUG: ROP 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,431 - DEBUG - DEBUG: ROST 'Close' is Series of shape (1,)
2025-01-09 02:26:01,432 - DEBUG - DEBUG: RCL 'Close' is Series of shape (1,)
2025-01-09 02:26:01,433 - DEBUG - DEBUG: SPGI 'Close' is Series of shape (1,)
2025-01-09 02:26:01,434 - DEBUG - DEBUG: CRM 'Close' is Series of shape (1,)
2025-01-09 02:26:01,434 - DEBUG - DEBUG: SBAC 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,435 - DEBUG - DEBUG: SLB 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,436 - DEBUG - DEBUG: STX 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,437 - DEBUG - DEBUG: SRE 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,438 - DEBUG - DEBUG: NOW 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,439 - DEBUG - DEBUG: SHW 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,439 - DEBUG - DEBUG: SPG 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,440 - DEBUG - DEBUG: SWKS 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,441 - DEBUG - DEBUG: SJM 'Close' is Series of shape (1,)
2025-01-09 02:26:01,442 - WARNING - Ticker SW is missing 'Close' column. Skipping.
2025-01-09 02:26:01,442 - DEBUG - DEBUG: SNA 'Close' is Series of shape (1,)
2025-01-09 02:26:01,443 - DEBUG - DEBUG: SOLV 'Close' is Series of shape (196,)
2025-01-09 02:26:01,444 - DEBUG - DEBUG: SO 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,444 - DEBUG - DEBUG: LUV 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,445 - DEBUG - DEBUG: SWK 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,446 - DEBUG - DEBUG: SBUX 'Close' is Series of shape (1,)
2025-01-09 02:26:01,447 - DEBUG - DEBUG: STT 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,448 - DEBUG - DEBUG: STLD 'Close' is Series of shape (1,)
2025-01-09 02:26:01,449 - DEBUG - DEBUG: STE 'Close' is Series of shape (1,)
2025-01-09 02:26:01,449 - DEBUG - DEBUG: SYK 'Close' is Series of shape (1,)
2025-01-09 02:26:01,450 - DEBUG - DEBUG: SMCI 'Close' is Series of shape (1,)
2025-01-09 02:26:01,451 - DEBUG - DEBUG: SYF 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,452 - DEBUG - DEBUG: SNPS 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,453 - DEBUG - DEBUG: SYY 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,454 - DEBUG - DEBUG: TMUS 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,454 - DEBUG - DEBUG: TROW 'Close' is Series of shape (1,)
2025-01-09 02:26:01,455 - DEBUG - DEBUG: TTWO 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,456 - DEBUG - DEBUG: TPR 'Close' is Series of shape (1,)
2025-01-09 02:26:01,457 - DEBUG - DEBUG: TRGP 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,458 - DEBUG - DEBUG: TGT 'Close' is Series of shape (1,)
2025-01-09 02:26:01,458 - DEBUG - DEBUG: TEL 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,459 - DEBUG - DEBUG: TDY 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,460 - DEBUG - DEBUG: TFX 'Close' is Series of shape (1,)
2025-01-09 02:26:01,461 - DEBUG - DEBUG: TER 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,462 - DEBUG - DEBUG: TSLA 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,463 - DEBUG - DEBUG: TXN 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,464 - DEBUG - DEBUG: TPL 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,465 - DEBUG - DEBUG: TXT 'Close' is Series of shape (1,)
2025-01-09 02:26:01,466 - DEBUG - DEBUG: TMO 'Close' is Series of shape (1,)
2025-01-09 02:26:01,466 - DEBUG - DEBUG: TJX 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,467 - DEBUG - DEBUG: TSCO 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,468 - DEBUG - DEBUG: TT 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,469 - DEBUG - DEBUG: TDG 'Close' is Series of shape (1,)
2025-01-09 02:26:01,470 - DEBUG - DEBUG: TRV 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,471 - DEBUG - DEBUG: TRMB 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,471 - DEBUG - DEBUG: TFC 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,472 - DEBUG - DEBUG: TYL 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,473 - DEBUG - DEBUG: TSN 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,474 - DEBUG - DEBUG: USB 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,475 - DEBUG - DEBUG: UBER 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,476 - DEBUG - DEBUG: UDR 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,477 - DEBUG - DEBUG: ULTA 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,477 - DEBUG - DEBUG: UNP 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,478 - DEBUG - DEBUG: UAL 'Close' is Series of shape (1,)
2025-01-09 02:26:01,479 - DEBUG - DEBUG: UPS 'Close' is Series of shape (1,)
2025-01-09 02:26:01,480 - DEBUG - DEBUG: URI 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,481 - DEBUG - DEBUG: UNH 'Close' is Series of shape (1,)
2025-01-09 02:26:01,482 - DEBUG - DEBUG: UHS 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,483 - DEBUG - DEBUG: VLO 'Close' is Series of shape (1,)
2025-01-09 02:26:01,484 - DEBUG - DEBUG: VTR 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,485 - DEBUG - DEBUG: VLTO 'Close' is Series of shape (318,)
2025-01-09 02:26:01,485 - DEBUG - DEBUG: VRSN 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,486 - DEBUG - DEBUG: VRSK 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,487 - DEBUG - DEBUG: VZ 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,488 - DEBUG - DEBUG: VRTX 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,489 - DEBUG - DEBUG: VTRS 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,490 - DEBUG - DEBUG: VICI 'Close' is Series of shape (1,)
2025-01-09 02:26:01,490 - DEBUG - DEBUG: V 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,491 - DEBUG - DEBUG: VST 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,492 - DEBUG - DEBUG: VMC 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,493 - DEBUG - DEBUG: WRB 'Close' is Series of shape (1,)
2025-01-09 02:26:01,494 - DEBUG - DEBUG: GWW 'Close' is Series of shape (1,)
2025-01-09 02:26:01,494 - DEBUG - DEBUG: WAB 'Close' is Series of shape (1,)
2025-01-09 02:26:01,495 - DEBUG - DEBUG: WBA 'Close' is Series of shape (1,)
2025-01-09 02:26:01,496 - DEBUG - DEBUG: WMT 'Close' is Series of shape (1,)
2025-01-09 02:26:01,497 - DEBUG - DEBUG: DIS 'Close' is Series of shape (1,)
2025-01-09 02:26:01,498 - DEBUG - DEBUG: WBD 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,499 - DEBUG - DEBUG: WM 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,499 - DEBUG - DEBUG: WAT 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,500 - DEBUG - DEBUG: WEC 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,501 - DEBUG - DEBUG: WFC 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,502 - DEBUG - DEBUG: WELL 'Close' is Series of shape (1,)
2025-01-09 02:26:01,503 - DEBUG - DEBUG: WST 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,504 - DEBUG - DEBUG: WDC 'Close' is Series of shape (1,)
2025-01-09 02:26:01,504 - DEBUG - DEBUG: WY 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,505 - DEBUG - DEBUG: WMB 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,506 - DEBUG - DEBUG: WTW 'Close' is Series of shape (1,)
2025-01-09 02:26:01,507 - DEBUG - DEBUG: WDAY 'Close' is Series of shape (1,)
2025-01-09 02:26:01,508 - DEBUG - DEBUG: WYNN 'Close' is Series of shape (1,)
2025-01-09 02:26:01,508 - DEBUG - DEBUG: XEL 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,509 - DEBUG - DEBUG: XYL 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,510 - DEBUG - DEBUG: YUM 'Close' is Series of shape (1263,)
2025-01-09 02:26:01,511 - DEBUG - DEBUG: ZBRA 'Close' is Series of shape (1,)
2025-01-09 02:26:01,512 - DEBUG - DEBUG: ZBH 'Close' is Series of shape (1,)
2025-01-09 02:26:01,513 - DEBUG - DEBUG: ZTS 'Close' is Series of shape (1,)
2025-01-09 02:26:09,235 - INFO - No new data was fetched. Creating missing plots (if any) then exiting.
2025-01-09 02:26:09,235 - INFO - Creating missing plot for phase: Bullish
2025-01-09 02:26:09,238 - DEBUG - Loaded backend Agg version v2.2.
2025-01-09 02:26:09,240 - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-01-09 02:26:09,241 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,241 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-01-09 02:26:09,241 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,241 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,241 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,241 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,241 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,241 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-01-09 02:26:09,241 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,241 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,241 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,241 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,242 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,242 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,242 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,242 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,242 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-01-09 02:26:09,242 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,242 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,242 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,242 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,242 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,242 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,242 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,242 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,242 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,242 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,242 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,242 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,243 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,243 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,243 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,243 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,243 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,243 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,243 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-01-09 02:26:09,243 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,243 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,243 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamCLM-Book.ttf', name='Miriam CLM', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,243 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,243 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:26:09,243 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,243 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,243 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,243 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:26:09,244 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:26:09,244 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,244 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2025-01-09 02:26:09,244 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,244 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:26:09,244 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msuighur.ttf', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,244 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,244 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuehlCLM-BoldOblique.ttf', name='Frank Ruehl CLM', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,244 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,244 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:26:09,244 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,244 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-LightIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:26:09,244 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawb.ttf', name='Glasgow', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,244 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-It.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,244 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,244 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,245 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 0.5349999999999999
2025-01-09 02:26:09,245 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,245 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:26:09,245 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,245 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:26:09,245 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Medium.ttf', name='Source Code Pro', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,245 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NachlieliCLM-Bold.otf', name='Nachlieli CLM', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:26:09,245 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,245 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Scheherazade-Bold.ttf', name='Scheherazade', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,245 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,245 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidLibre-Regular.ttf', name='David Libre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,245 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,245 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,245 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RBI_G.ttf', name='Linux Libertine G', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,245 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,245 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,245 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifLao-Bold.ttf', name='Noto Serif Lao', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,246 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,246 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trado.ttf', name='Traditional Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,246 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2025-01-09 02:26:09,246 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,246 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,246 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawli.ttf', name='Glasgow', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:26:09,246 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-09 02:26:09,246 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamMonoCLM-Bold.ttf', name='Miriam Mono CLM', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,246 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,246 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,246 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-It.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,246 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,246 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamLibre-Regular.otf', name='Miriam Libre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,246 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,246 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Regular.ttf', name='Source Code Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,246 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,246 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,247 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,247 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,247 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasB.ttf', name='Gentium Basic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,247 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-01-09 02:26:09,247 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,247 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:26:09,247 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,247 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,247 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,247 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamMonoCLM-BoldOblique.ttf', name='Miriam Mono CLM', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,247 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,247 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuhlHofshi-Bold.otf', name='Frank Ruhl Hofshi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,247 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,247 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,247 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,247 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 0.25
2025-01-09 02:26:09,247 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,248 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tradbdo.ttf', name='Traditional Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,248 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,248 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,248 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:26:09,248 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,248 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,248 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,248 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,248 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:26:09,248 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,248 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2025-01-09 02:26:09,248 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,248 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RB_G.ttf', name='Linux Libertine G', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,248 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,248 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,248 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,248 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,249 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-BlackIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:26:09,249 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawl.ttf', name='Glasgow', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,249 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,249 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,249 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,249 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,249 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,249 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansGeorgian-Bold.ttf', name='Noto Sans Georgian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,249 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinBiolinum_R_G.ttf', name='Linux Biolinum G', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,249 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\toleb.ttf', name='Toledo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,249 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,249 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-01-09 02:26:09,249 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:26:09,249 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Regular.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,249 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,249 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2025-01-09 02:26:09,249 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Semibold.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:26:09,249 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:26:09,250 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-01-09 02:26:09,250 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Amiri-Regular.ttf', name='Amiri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,250 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 1.25
2025-01-09 02:26:09,250 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,250 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,250 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,250 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,250 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:26:09,250 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,250 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-ExtraLightIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=200, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:26:09,250 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:26:09,250 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,250 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,250 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansLao-Regular.ttf', name='Noto Sans Lao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,250 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Alef-Bold.ttf', name='Alef', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,250 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansHebrew-Regular.ttf', name='Noto Sans Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,250 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,251 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:26:09,251 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,251 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:26:09,251 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,251 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tolel.ttf', name='Toledo', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,251 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\toleli.ttf', name='Toledo', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:26:09,251 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,251 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,251 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,251 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RZ_G.ttf', name='Linux Libertine G', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:26:09,251 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,251 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoNaskhArabic-Bold.ttf', name='Noto Naskh Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,251 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,251 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,251 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpbdo.ttf', name='Simplified Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,251 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Amiri-BoldSlanted.ttf', name='Amiri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,251 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasBI.ttf', name='Gentium Basic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,251 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,252 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:26:09,252 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:26:09,252 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-01-09 02:26:09,252 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-BoldIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,252 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpfxo.ttf', name='Simplified Arabic Fixed', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,252 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,252 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Microsoft\\Windows\\Fonts\\OpenDyslexic3-Regular.ttf', name='OpenDyslexic3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,252 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamCLM-Bold.ttf', name='Miriam CLM', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,252 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,252 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,252 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,252 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,252 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Condensed.ttf', name='Noto Sans', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:26:09,252 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RI_G.ttf', name='Linux Libertine G', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,252 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-ExtraLightIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=200, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:26:09,252 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Light.ttf', name='Noto Serif', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,252 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,252 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,253 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,253 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,253 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-01-09 02:26:09,253 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Light.ttf', name='Noto Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,253 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,253 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasR.ttf', name='Gentium Book Basic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,253 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-Italic.ttf', name='Caladea', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,253 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:26:09,253 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,253 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,253 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinBiolinum_RI_G.ttf', name='Linux Biolinum G', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,253 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,253 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Regular.ttf', name='Noto Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,253 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,254 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-CondensedBoldItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-09 02:26:09,254 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Bold.ttf', name='Noto Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,254 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,254 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-01-09 02:26:09,254 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tolebi.ttf', name='Toledo', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,254 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,254 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasI.ttf', name='Gentium Book Basic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,254 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-Regular.ttf', name='Carlito', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,254 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,254 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,254 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,254 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,254 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,254 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Black.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:26:09,254 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:26:09,254 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,254 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,254 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-LightItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:26:09,255 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,255 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-01-09 02:26:09,255 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasB.ttf', name='Gentium Book Basic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,255 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,255 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,255 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,255 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansGeorgian-Regular.ttf', name='Noto Sans Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,255 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,255 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Regular.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,255 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,255 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,255 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifGeorgian-Bold.ttf', name='Noto Serif Georgian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,255 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_R_G.ttf', name='Linux Libertine G', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,255 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,255 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,255 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,255 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seagi.ttf', name='Seagull', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,256 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,256 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-09 02:26:09,256 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,256 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tolehi.ttf', name='Toledo', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:26:09,256 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 1.535
2025-01-09 02:26:09,256 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,256 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawh.ttf', name='Glasgow', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:26:09,256 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,256 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawhi.ttf', name='Glasgow', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:26:09,256 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seag.ttf', name='Seagull', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,256 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,256 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arabtype.ttf', name='Arabic Typesetting', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,256 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,256 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:26:09,256 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,256 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,256 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:26:09,256 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoNaskhArabicUI-Bold.ttf', name='Noto Naskh Arabic UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,257 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:26:09,257 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,257 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,257 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Semibold.ttf', name='Source Code Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:26:09,257 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,257 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-CondensedItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-09 02:26:09,257 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:26:09,257 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,257 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NachlieliCLM-Light.otf', name='Nachlieli CLM', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,257 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,257 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,257 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,257 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,257 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,257 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,257 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micrbi.ttf', name='MicroSquare', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,257 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-CondensedBold.ttf', name='Noto Sans', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:26:09,257 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,258 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,258 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Bold.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,258 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,258 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-Bold.ttf', name='Caladea', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,258 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UrdType.ttf', name='Urdu Typesetting', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,258 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,258 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-ExtraLight.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 0.24
2025-01-09 02:26:09,258 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RZI_G.ttf', name='Linux Libertine G', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:26:09,258 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,258 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoKufiArabic-Bold.ttf', name='Noto Kufi Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,258 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,258 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawbi.ttf', name='Glasgow', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,258 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,258 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidCLM-MediumItalic.ttf', name='David CLM', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:26:09,258 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-01-09 02:26:09,258 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tole.ttf', name='Toledo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,258 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,259 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Bold.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,259 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,259 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,259 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,259 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifArmenian-Regular.ttf', name='Noto Serif Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,259 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,259 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,259 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-01-09 02:26:09,259 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:26:09,259 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,259 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,259 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,259 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,259 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,259 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifHebrew-Regular.ttf', name='Noto Serif Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,259 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,259 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,259 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,260 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-MediumIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:26:09,260 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,260 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,260 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamLibre-Bold.otf', name='Miriam Libre', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,260 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,260 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-01-09 02:26:09,260 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,260 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AmiriQuran.ttf', name='Amiri Quran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,260 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,260 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,260 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,260 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,260 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArabic-Regular.ttf', name='Noto Sans Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,260 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,260 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,260 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,261 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,261 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,261 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasI.ttf', name='Gentium Basic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,261 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Black.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:26:09,261 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-BoldIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,261 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,261 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaI.ttc', name='Sitka Small', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,261 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-01-09 02:26:09,261 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidCLM-BoldItalic.ttf', name='David CLM', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,261 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,261 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidCLM-Bold.ttf', name='David CLM', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,261 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,261 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:26:09,261 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,261 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,261 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,261 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,261 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,262 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\andlso.ttf', name='Andalus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,262 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,262 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArabicUI-Regular.ttf', name='Noto Sans Arabic UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,262 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Light.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,262 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,262 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,262 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,262 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-Italic.ttf', name='Carlito', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,262 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,262 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,262 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,262 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,262 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-BoldItalic.ttf', name='Caladea', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,262 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,262 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,262 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,262 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,263 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-It.ttf', name='Source Code Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,263 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ReemKufi-Regular.ttf', name='Reem Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,263 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,263 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:26:09,263 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,263 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,263 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,263 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,263 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,263 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UrdTypeb.ttf', name='Urdu Typesetting', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,263 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,263 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,263 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-BoldItalic.ttf', name='Carlito', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,263 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-BoldItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,263 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msuighub.ttf', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,263 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,263 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Amiri-Bold.ttf', name='Amiri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,263 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,264 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,264 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,264 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NachlieliCLM-BoldOblique.otf', name='Nachlieli CLM', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:26:09,264 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,264 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,264 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuhlHofshi-Regular.otf', name='Frank Ruhl Hofshi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,264 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaZ.ttc', name='Sitka Small', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,264 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,264 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-01-09 02:26:09,264 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-ExtraLightIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=200, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:26:09,264 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidLibre-Bold.ttf', name='David Libre', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,264 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,264 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,264 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-SemiboldIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:26:09,264 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROGFonts-Regular.otf', name='ROG Fonts', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,264 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:26:09,264 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaB.ttc', name='Sitka Small', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,265 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifLao-Regular.ttf', name='Noto Serif Lao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,265 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Bold.ttf', name='Noto Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,265 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Condensed.ttf', name='Noto Serif', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:26:09,265 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,265 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,265 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,265 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Bold.ttf', name='Source Code Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,265 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,265 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,265 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,265 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,265 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-01-09 02:26:09,265 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoKufiArabic-Regular.ttf', name='Noto Kufi Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,265 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,265 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifArmenian-Bold.ttf', name='Noto Serif Armenian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,265 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,265 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,265 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\aldhabi.ttf', name='Aldhabi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,266 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,266 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Rubik-Bold.ttf', name='Rubik', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,266 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArmenian-Regular.ttf', name='Noto Sans Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,266 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,266 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-ExtraLight.ttf', name='Source Code Pro', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:26:09,266 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,266 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArabic-Bold.ttf', name='Noto Sans Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,266 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-01-09 02:26:09,266 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,266 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-LightItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:26:09,266 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Regular.ttf', name='Noto Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,266 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-01-09 02:26:09,266 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,266 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,266 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\toleh.ttf', name='Toledo', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:26:09,266 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,266 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,267 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,267 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,267 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,267 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-ExtraLight.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:26:09,267 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micr.ttf', name='MicroSquare', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,267 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Black.ttf', name='Source Code Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:26:09,267 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,267 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,267 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,267 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,267 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,267 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,267 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Alef-Regular.ttf', name='Alef', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,267 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasBI.ttf', name='Gentium Book Basic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,267 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-01-09 02:26:09,267 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoNaskhArabicUI-Regular.ttf', name='Noto Naskh Arabic UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,267 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansLao-Bold.ttf', name='Noto Sans Lao', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,267 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,268 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,268 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,268 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-09 02:26:09,268 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:26:09,268 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,268 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,268 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,268 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArmenian-Bold.ttf', name='Noto Sans Armenian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,268 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-01-09 02:26:09,268 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-01-09 02:26:09,268 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,268 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,268 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,268 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,268 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-01-09 02:26:09,268 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Amiri-Slanted.ttf', name='Amiri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,268 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinBiolinum_RB_G.ttf', name='Linux Biolinum G', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,268 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,269 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,269 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,269 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-09 02:26:09,269 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,269 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_DR_G.ttf', name='Linux Libertine Display G', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,269 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-CondensedItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-09 02:26:09,269 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,269 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-CondensedBold.ttf', name='Noto Serif', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:26:09,269 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuehlCLM-MediumOblique.ttf', name='Frank Ruehl CLM', style='oblique', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:26:09,269 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansHebrew-Bold.ttf', name='Noto Sans Hebrew', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,269 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,269 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seagb.ttf', name='Seagull', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,269 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-BlackIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:26:09,269 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,269 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:26:09,269 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,269 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,270 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\EmojiOneColor-SVGinOT.ttf', name='EmojiOne Color', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,270 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:26:09,270 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-LightIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:26:09,270 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-CondensedBoldItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-09 02:26:09,270 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,270 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-01-09 02:26:09,270 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,270 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpo.ttf', name='Simplified Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,270 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,270 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,270 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,270 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,270 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,270 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,270 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-Regular.ttf', name='Caladea', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,270 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,271 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamMonoCLM-Book.ttf', name='Miriam Mono CLM', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,271 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,271 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,271 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Rubik-BoldItalic.ttf', name='Rubik', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,271 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArabicUI-Bold.ttf', name='Noto Sans Arabic UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,271 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,271 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-SemiboldIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:26:09,271 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,271 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\majallab.ttf', name='Sakkal Majalla', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,271 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Italic.ttf', name='Noto Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,271 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seagbi.ttf', name='Seagull', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,271 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Light.ttf', name='Source Code Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,271 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:26:09,271 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasR.ttf', name='Gentium Basic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,271 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-01-09 02:26:09,271 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoNaskhArabic-Regular.ttf', name='Noto Naskh Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,271 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,272 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Semibold.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:26:09,272 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,272 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-Bold.ttf', name='Carlito', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,272 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\majalla.ttf', name='Sakkal Majalla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,272 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,272 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:26:09,272 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micri.ttf', name='MicroSquare', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,272 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,272 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,272 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,272 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifHebrew-Bold.ttf', name='Noto Serif Hebrew', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,272 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,272 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-BoldItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,272 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamMonoCLM-BookOblique.ttf', name='Miriam Mono CLM', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,272 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,272 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,272 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,272 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NachlieliCLM-LightOblique.otf', name='Nachlieli CLM', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:26:09,273 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,273 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,273 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-BlackIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:26:09,273 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:26:09,273 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Light.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,273 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-09 02:26:09,273 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,273 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,273 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,273 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,273 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,273 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,273 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,273 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,273 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,273 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,273 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:26:09,273 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,274 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,274 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,274 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,274 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuehlCLM-Bold.ttf', name='Frank Ruehl CLM', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,274 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:26:09,274 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:26:09,274 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Sitka.ttc', name='Sitka Small', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,274 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawi.ttf', name='Glasgow', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,274 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidCLM-Medium.ttf', name='David CLM', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,274 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,274 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,274 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,274 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,274 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-BoldIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,274 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,274 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,274 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-09 02:26:09,275 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,275 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,275 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-LightIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:26:09,275 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifGeorgian-Regular.ttf', name='Noto Serif Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,275 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,275 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,275 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,275 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micrb.ttf', name='MicroSquare', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,275 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,275 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-SemiboldIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:26:09,275 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,275 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,275 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Rubik-Regular.ttf', name='Rubik', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,275 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,275 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Rubik-Italic.ttf', name='Rubik', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,275 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-01-09 02:26:09,275 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,275 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Scheherazade-Regular.ttf', name='Scheherazade', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,276 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuehlCLM-Medium.ttf', name='Frank Ruehl CLM', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,276 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,276 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tolei.ttf', name='Toledo', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,276 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glaw.ttf', name='Glasgow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,276 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:26:09,276 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-ExtraLight.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:26:09,276 - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-01-09 02:26:09,300 - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2025-01-09 02:26:09,300 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,300 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-01-09 02:26:09,300 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,300 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,301 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,301 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,301 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,301 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-01-09 02:26:09,301 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,301 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,301 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,301 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,301 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,301 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,301 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,301 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,301 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-01-09 02:26:09,301 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,301 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,301 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,301 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,302 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,302 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,302 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,302 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,302 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,302 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,302 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,302 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,302 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,302 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,302 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,302 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,302 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,302 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,302 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-01-09 02:26:09,302 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,302 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,303 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamCLM-Book.ttf', name='Miriam CLM', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,303 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,303 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:26:09,303 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,303 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,303 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,303 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:26:09,303 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:26:09,303 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,303 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2025-01-09 02:26:09,303 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,303 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:26:09,303 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msuighur.ttf', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,303 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,303 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuehlCLM-BoldOblique.ttf', name='Frank Ruehl CLM', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,303 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,303 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:26:09,304 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,304 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-LightIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:26:09,304 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawb.ttf', name='Glasgow', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,304 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-It.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,304 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,304 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,304 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 0.5349999999999999
2025-01-09 02:26:09,304 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,304 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:26:09,304 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,304 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:26:09,304 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Medium.ttf', name='Source Code Pro', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,304 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NachlieliCLM-Bold.otf', name='Nachlieli CLM', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:26:09,304 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,304 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Scheherazade-Bold.ttf', name='Scheherazade', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,304 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,304 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidLibre-Regular.ttf', name='David Libre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,304 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,305 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,305 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RBI_G.ttf', name='Linux Libertine G', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,305 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,305 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,305 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifLao-Bold.ttf', name='Noto Serif Lao', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,305 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,305 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trado.ttf', name='Traditional Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,305 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2025-01-09 02:26:09,305 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,305 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,305 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawli.ttf', name='Glasgow', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:26:09,305 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-09 02:26:09,305 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamMonoCLM-Bold.ttf', name='Miriam Mono CLM', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,305 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,305 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,305 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-It.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,305 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,306 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamLibre-Regular.otf', name='Miriam Libre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,306 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,306 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Regular.ttf', name='Source Code Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,306 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,306 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,306 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,306 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,306 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasB.ttf', name='Gentium Basic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,306 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-01-09 02:26:09,306 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,306 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:26:09,306 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,306 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,306 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,306 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamMonoCLM-BoldOblique.ttf', name='Miriam Mono CLM', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,306 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,306 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuhlHofshi-Bold.otf', name='Frank Ruhl Hofshi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,306 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 0.25
2025-01-09 02:26:09,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tradbdo.ttf', name='Traditional Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:26:09,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:26:09,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2025-01-09 02:26:09,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RB_G.ttf', name='Linux Libertine G', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,307 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-BlackIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:26:09,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawl.ttf', name='Glasgow', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansGeorgian-Bold.ttf', name='Noto Sans Georgian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinBiolinum_R_G.ttf', name='Linux Biolinum G', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\toleb.ttf', name='Toledo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-01-09 02:26:09,308 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:26:09,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Regular.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2025-01-09 02:26:09,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Semibold.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:26:09,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:26:09,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-01-09 02:26:09,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Amiri-Regular.ttf', name='Amiri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 1.25
2025-01-09 02:26:09,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:26:09,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-ExtraLightIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=200, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:26:09,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:26:09,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,309 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansLao-Regular.ttf', name='Noto Sans Lao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Alef-Bold.ttf', name='Alef', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansHebrew-Regular.ttf', name='Noto Sans Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:26:09,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:26:09,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tolel.ttf', name='Toledo', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\toleli.ttf', name='Toledo', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:26:09,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RZ_G.ttf', name='Linux Libertine G', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:26:09,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoNaskhArabic-Bold.ttf', name='Noto Naskh Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,310 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpbdo.ttf', name='Simplified Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Amiri-BoldSlanted.ttf', name='Amiri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasBI.ttf', name='Gentium Basic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:26:09,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:26:09,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-01-09 02:26:09,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-BoldIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpfxo.ttf', name='Simplified Arabic Fixed', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\haman\\AppData\\Local\\Microsoft\\Windows\\Fonts\\OpenDyslexic3-Regular.ttf', name='OpenDyslexic3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamCLM-Bold.ttf', name='Miriam CLM', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Condensed.ttf', name='Noto Sans', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:26:09,311 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RI_G.ttf', name='Linux Libertine G', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-ExtraLightIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=200, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:26:09,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Light.ttf', name='Noto Serif', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-01-09 02:26:09,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Light.ttf', name='Noto Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasR.ttf', name='Gentium Book Basic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-Italic.ttf', name='Caladea', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:26:09,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinBiolinum_RI_G.ttf', name='Linux Biolinum G', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,312 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Regular.ttf', name='Noto Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-CondensedBoldItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-09 02:26:09,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Bold.ttf', name='Noto Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-01-09 02:26:09,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tolebi.ttf', name='Toledo', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasI.ttf', name='Gentium Book Basic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-Regular.ttf', name='Carlito', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Black.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:26:09,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:26:09,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,313 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-LightItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:26:09,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-01-09 02:26:09,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasB.ttf', name='Gentium Book Basic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansGeorgian-Regular.ttf', name='Noto Sans Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Regular.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifGeorgian-Bold.ttf', name='Noto Serif Georgian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_R_G.ttf', name='Linux Libertine G', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,314 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seagi.ttf', name='Seagull', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-09 02:26:09,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tolehi.ttf', name='Toledo', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:26:09,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 1.535
2025-01-09 02:26:09,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawh.ttf', name='Glasgow', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:26:09,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawhi.ttf', name='Glasgow', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:26:09,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seag.ttf', name='Seagull', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arabtype.ttf', name='Arabic Typesetting', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:26:09,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:26:09,315 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoNaskhArabicUI-Bold.ttf', name='Noto Naskh Arabic UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:26:09,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Semibold.ttf', name='Source Code Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:26:09,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-CondensedItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-09 02:26:09,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:26:09,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NachlieliCLM-Light.otf', name='Nachlieli CLM', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micrbi.ttf', name='MicroSquare', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,316 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-CondensedBold.ttf', name='Noto Sans', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:26:09,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Bold.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-Bold.ttf', name='Caladea', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UrdType.ttf', name='Urdu Typesetting', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-ExtraLight.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 0.24
2025-01-09 02:26:09,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RZI_G.ttf', name='Linux Libertine G', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:26:09,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoKufiArabic-Bold.ttf', name='Noto Kufi Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawbi.ttf', name='Glasgow', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidCLM-MediumItalic.ttf', name='David CLM', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:26:09,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-01-09 02:26:09,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tole.ttf', name='Toledo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,317 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Bold.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifArmenian-Regular.ttf', name='Noto Serif Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-01-09 02:26:09,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:26:09,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifHebrew-Regular.ttf', name='Noto Serif Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,318 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-MediumIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:26:09,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamLibre-Bold.otf', name='Miriam Libre', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-01-09 02:26:09,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AmiriQuran.ttf', name='Amiri Quran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArabic-Regular.ttf', name='Noto Sans Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,319 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasI.ttf', name='Gentium Basic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Black.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:26:09,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-BoldIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaI.ttc', name='Sitka Small', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-01-09 02:26:09,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidCLM-BoldItalic.ttf', name='David CLM', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidCLM-Bold.ttf', name='David CLM', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:26:09,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\andlso.ttf', name='Andalus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,320 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArabicUI-Regular.ttf', name='Noto Sans Arabic UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Light.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-Italic.ttf', name='Carlito', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-BoldItalic.ttf', name='Caladea', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-It.ttf', name='Source Code Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ReemKufi-Regular.ttf', name='Reem Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,321 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:26:09,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\UrdTypeb.ttf', name='Urdu Typesetting', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-BoldItalic.ttf', name='Carlito', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-BoldItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msuighub.ttf', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Amiri-Bold.ttf', name='Amiri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NachlieliCLM-BoldOblique.otf', name='Nachlieli CLM', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:26:09,322 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuhlHofshi-Regular.otf', name='Frank Ruhl Hofshi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaZ.ttc', name='Sitka Small', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-01-09 02:26:09,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-ExtraLightIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=200, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:26:09,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidLibre-Bold.ttf', name='David Libre', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-SemiboldIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:26:09,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROGFonts-Regular.otf', name='ROG Fonts', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:26:09,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaB.ttc', name='Sitka Small', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifLao-Regular.ttf', name='Noto Serif Lao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Bold.ttf', name='Noto Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Condensed.ttf', name='Noto Serif', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:26:09,323 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Bold.ttf', name='Source Code Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-01-09 02:26:09,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoKufiArabic-Regular.ttf', name='Noto Kufi Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifArmenian-Bold.ttf', name='Noto Serif Armenian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\aldhabi.ttf', name='Aldhabi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Rubik-Bold.ttf', name='Rubik', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArmenian-Regular.ttf', name='Noto Sans Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,324 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-ExtraLight.ttf', name='Source Code Pro', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:26:09,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArabic-Bold.ttf', name='Noto Sans Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-01-09 02:26:09,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-LightItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:26:09,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Regular.ttf', name='Noto Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-01-09 02:26:09,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\toleh.ttf', name='Toledo', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:26:09,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-ExtraLight.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:26:09,325 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micr.ttf', name='MicroSquare', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Black.ttf', name='Source Code Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-01-09 02:26:09,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Alef-Regular.ttf', name='Alef', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasBI.ttf', name='Gentium Book Basic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-01-09 02:26:09,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoNaskhArabicUI-Regular.ttf', name='Noto Naskh Arabic UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansLao-Bold.ttf', name='Noto Sans Lao', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-09 02:26:09,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:26:09,326 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArmenian-Bold.ttf', name='Noto Sans Armenian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-01-09 02:26:09,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-01-09 02:26:09,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-01-09 02:26:09,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Amiri-Slanted.ttf', name='Amiri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinBiolinum_RB_G.ttf', name='Linux Biolinum G', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-09 02:26:09,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,327 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_DR_G.ttf', name='Linux Libertine Display G', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-CondensedItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-09 02:26:09,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-CondensedBold.ttf', name='Noto Serif', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-01-09 02:26:09,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuehlCLM-MediumOblique.ttf', name='Frank Ruehl CLM', style='oblique', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:26:09,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansHebrew-Bold.ttf', name='Noto Sans Hebrew', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seagb.ttf', name='Seagull', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-BlackIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:26:09,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:26:09,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\EmojiOneColor-SVGinOT.ttf', name='EmojiOne Color', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:26:09,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-LightIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:26:09,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-CondensedBoldItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-09 02:26:09,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,328 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-01-09 02:26:09,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simpo.ttf', name='Simplified Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-Regular.ttf', name='Caladea', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamMonoCLM-Book.ttf', name='Miriam Mono CLM', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Rubik-BoldItalic.ttf', name='Rubik', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArabicUI-Bold.ttf', name='Noto Sans Arabic UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-SemiboldIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:26:09,329 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\majallab.ttf', name='Sakkal Majalla', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Italic.ttf', name='Noto Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seagbi.ttf', name='Seagull', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Light.ttf', name='Source Code Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:26:09,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasR.ttf', name='Gentium Basic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-01-09 02:26:09,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoNaskhArabic-Regular.ttf', name='Noto Naskh Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Semibold.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:26:09,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-Bold.ttf', name='Carlito', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\majalla.ttf', name='Sakkal Majalla', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:26:09,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micri.ttf', name='MicroSquare', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,330 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifHebrew-Bold.ttf', name='Noto Serif Hebrew', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-BoldItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamMonoCLM-BookOblique.ttf', name='Miriam Mono CLM', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NachlieliCLM-LightOblique.otf', name='Nachlieli CLM', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:26:09,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-BlackIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-01-09 02:26:09,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:26:09,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Light.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-01-09 02:26:09,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,331 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:26:09,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuehlCLM-Bold.ttf', name='Frank Ruehl CLM', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:26:09,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-01-09 02:26:09,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Sitka.ttc', name='Sitka Small', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glawi.ttf', name='Glasgow', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidCLM-Medium.ttf', name='David CLM', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,332 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-BoldIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-01-09 02:26:09,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-LightIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:26:09,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifGeorgian-Regular.ttf', name='Noto Serif Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micrb.ttf', name='MicroSquare', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-SemiboldIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-01-09 02:26:09,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,333 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-01-09 02:26:09,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Rubik-Regular.ttf', name='Rubik', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Rubik-Italic.ttf', name='Rubik', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-01-09 02:26:09,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Scheherazade-Regular.ttf', name='Scheherazade', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuehlCLM-Medium.ttf', name='Frank Ruehl CLM', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-01-09 02:26:09,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-01-09 02:26:09,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tolei.ttf', name='Toledo', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-01-09 02:26:09,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\glaw.ttf', name='Glasgow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-01-09 02:26:09,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-01-09 02:26:09,334 - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-ExtraLight.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-01-09 02:26:09,334 - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to DejaVu Sans ('C:\\Users\\haman\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-01-09 02:26:09,453 - INFO - Saved plot for phase: Bullish at results\phase_bullish.png
2025-01-09 02:26:09,453 - INFO - Missing plots created. Exiting.
